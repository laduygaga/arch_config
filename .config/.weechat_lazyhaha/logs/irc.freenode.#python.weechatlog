2019-12-08 06:35:15	-->	laduyhaha (~duy@42.112.108.198) has joined #python
2019-12-08 06:35:15	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 06:35:15	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:58
2019-12-08 06:35:16	--	Channel #python: 1810 nicks (0 ops, 0 voices, 1810 normals)
2019-12-08 06:35:18	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 06:35:37	<--	laduyhaha99 (2a706cc6@42.112.108.198) has quit (Remote host closed the connection)
2019-12-08 06:36:04	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 252 seconds)
2019-12-08 06:36:04	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 252 seconds)
2019-12-08 06:36:27	<--	Jantz (~IceChat9@2407:7000:8d04:100:8cc4:6197:974f:3676) has quit (Read error: Connection reset by peer)
2019-12-08 06:36:53	--	irc: disconnected from server
2019-12-08 06:37:11	-->	duy (~duy@42.112.108.198) has joined #python
2019-12-08 06:37:11	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 06:37:11	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 06:37:11	--	Channel #python: 1806 nicks (0 ops, 0 voices, 1806 normals)
2019-12-08 06:37:30	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2019-12-08 06:37:34	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 06:38:09	-->	rkkk (41bf0bfc@cpe-65-191-11-252.nc.res.rr.com) has joined #python
2019-12-08 06:38:21	rkkk	http://dpaste.com/2SGP02T, how do I get my helper function to update the result in my numpaths function?
2019-12-08 06:38:36	rkkk	I return 0 in my numpaths function always
2019-12-08 06:39:56	energizer	rkkk: return the new value?
2019-12-08 06:40:06	rkkk	energizer where
2019-12-08 06:40:22	--	You are now known as laduyhaha
2019-12-08 06:42:24	<--	somazero (~somazero@wsip-24-248-178-34.ph.ph.cox.net) has quit (Quit: Leaving)
2019-12-08 06:43:06	<--	cecep (~weechat@x4e364a6c.dyn.telefonica.de) has quit (Quit: WeeChat 2.6)
2019-12-08 06:43:13	birkoff	can I somehow customize the 'cmake' command arguments the 'pyarrow' pip installation runs ?
2019-12-08 06:43:20	<--	dudek (~dudek@185.150.236.150) has quit (Quit: Leaving)
2019-12-08 06:43:35	--	irc: disconnected from server
2019-12-08 06:44:15	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 06:44:15	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 06:44:15	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 06:44:15	--	Channel #python: 1804 nicks (0 ops, 0 voices, 1804 normals)
2019-12-08 06:44:32	birkoff	can I instruct pip to not remove or only grab the source ?
2019-12-08 06:44:37	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 06:44:57	grym	birkoff: almost certainly easier to clone locally
2019-12-08 06:45:04	-->	fflori (~fflori@194.230.155.243) has joined #python
2019-12-08 06:45:30	rkkk	energizer im tryin to find all the paths with at most k turns and everytime I do find one i want to update the main result value
2019-12-08 06:45:41	--	You are now known as laduyhaha
2019-12-08 06:48:04	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 06:48:46	<--	treefrob (~treefrob@pD9E2DAAD.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-08 06:49:03	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 06:49:17	<--	ExoUNX (~ExoUNX@unaffiliated/exounx) has quit (Ping timeout: 240 seconds)
2019-12-08 06:49:43	birkoff	grym, as in how ?
2019-12-08 06:50:24	<--	Exit42 (~textual@157-131-100-58.fiber.dynamic.sonic.net) has quit (Ping timeout: 246 seconds)
2019-12-08 06:50:24	-->	renlol (lhoward@gateway/vpn/privateinternetaccess/renlo) has joined #python
2019-12-08 06:51:15	[Tritium]	birkoff: as in clone the repo, edit the files, then "pip install ."
2019-12-08 06:51:17	<--	Leonarbro (~Leonarbro@S01067824af93741c.cg.shawcable.net) has quit (Ping timeout: 240 seconds)
2019-12-08 06:51:52	-->	flighteng (~flighteng@c-66-235-25-210.sea.wa.customer.broadstripe.net) has joined #python
2019-12-08 06:52:28	<--	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 268 seconds)
2019-12-08 06:52:53	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 276 seconds)
2019-12-08 06:53:45	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2019-12-08 06:53:53	-->	Leonarbro (~Leonarbro@S01067824af93741c.cg.shawcable.net) has joined #python
2019-12-08 06:53:55	<--	CookieM (~tomek@afay19.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2019-12-08 06:54:34	--	irc: disconnected from server
2019-12-08 06:55:05	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 06:55:05	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 06:55:05	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:58
2019-12-08 06:55:05	--	Channel #python: 1802 nicks (0 ops, 0 voices, 1802 normals)
2019-12-08 06:55:07	--	You are now known as laduyhaha
2019-12-08 06:55:15	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 06:56:15	<--	i9zO5AP (~BQcdf9eiZ@41.248.163.183) has quit (Quit: WeeChat 2.5)
2019-12-08 06:57:12	<--	AhmedAmerican (c52b5fcb@gateway/web/cgi-irc/kiwiirc.com/ip.197.43.95.203) has quit (Remote host closed the connection)
2019-12-08 06:57:59	<--	snackoverflow (~audioburn@unaffiliated/theology) has quit (Remote host closed the connection)
2019-12-08 06:58:05	<--	lxer (~lx@ip5f5bd659.dynamic.kabel-deutschland.de) has quit (Ping timeout: 250 seconds)
2019-12-08 06:58:06	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 06:58:13	-->	haryv (400714dc@ip-64-7-20-220.sea.megapath.net) has joined #python
2019-12-08 06:58:17	<--	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has quit (Ping timeout: 240 seconds)
2019-12-08 06:58:26	-->	snackoverflow (~audioburn@unaffiliated/theology) has joined #python
2019-12-08 06:58:39	<--	s3nd1v0g1us (patr0clus@gateway/vpn/protonvpn/patr0clus) has quit (Quit: WeeChat 2.6)
2019-12-08 06:58:47	-->	melatonina (uid317528@gateway/web/irccloud.com/x-hytyifcndleyqtrd) has joined #python
2019-12-08 06:59:41	haryv	hi all. I am having some issues with Pycharm 19.2 community version. I need to change the path where python is located and the path field cannot be erased or it cannot search for the folder where python is located. I is running in windows 10. ITs a great IDE just cannot fix this issue.
2019-12-08 07:00:20	haryv	Just how active is this channel?
2019-12-08 07:00:23	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 07:00:30	-->	TanukiNoKintama (~TanukiNoK@c-68-44-98-8.hsd1.in.comcast.net) has joined #python
2019-12-08 07:00:58	[Tritium]	pretty active most of the time, but its supper hour for many of the members
2019-12-08 07:01:13	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-08 07:01:33	<--	iam730 (~iam730@c-24-5-242-254.hsd1.ca.comcast.net) has quit (Ping timeout: 250 seconds)
2019-12-08 07:02:14	flighteng	haryv:  ctrl+alt+s, type 'interpreter' int he search box, you can update the paths for your environment there.  Is that where you're running into the issue?
2019-12-08 07:02:17	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-08 07:02:20	[Tritium]	I'm active, but i cant really help you - i use vscode and vs2019...
2019-12-08 07:02:54	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-08 07:02:57	<--	JTa (~Thunderbi@unaffiliated/jta) has quit (Ping timeout: 268 seconds)
2019-12-08 07:03:09	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 07:03:17	-->	IRCNew (~Elrick@76-10-173-219.dsl.teksavvy.com) has joined #python
2019-12-08 07:03:43	<--	trens (~trens@cpe-184-54-204-115.swo.res.rr.com) has quit (Quit: WeeChat 1.9.1)
2019-12-08 07:04:05	<--	enoch85 (~enoch85@unaffiliated/enoch85) has quit (Quit: Tech And Me - ZNC server 1.6.3 - https://www.techandme.se)
2019-12-08 07:04:34	-->	iam730 (~iam730@c-24-5-242-254.hsd1.ca.comcast.net) has joined #python
2019-12-08 07:04:53	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2019-12-08 07:05:05	-->	enoch85 (~enoch85@unaffiliated/enoch85) has joined #python
2019-12-08 07:05:29	flighteng	haryv: ?
2019-12-08 07:05:40	-->	raulp (~textual@unaffiliated/raulp) has joined #python
2019-12-08 07:05:59	-->	iKarus987 (~ikarus807@85-220-22-204.dsl.dynamic.simnet.is) has joined #python
2019-12-08 07:06:12	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2019-12-08 07:06:16	iKarus987	hi i am new to python wondering, how do i clear up my python shell
2019-12-08 07:06:20	IRCNew	So I have a json file. I loaded it which a bit since the file is 800MB. It has a lot of extra information that I'm not using. I created a postgres db to store the information I want.
2019-12-08 07:06:37	[Tritium]	iKarus987: exit() and relaunch typically.
2019-12-08 07:06:41	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 265 seconds)
2019-12-08 07:06:52	IRCNew	I have just finished a loop to go through the JSON array of json objects which is what is in the file
2019-12-08 07:07:10	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Ping timeout: 265 seconds)
2019-12-08 07:07:11	IRCNew	I'm wondering how I can speed the process up
2019-12-08 07:07:12	-->	yelof (~yelof@2601:283:8003:a920:2123:115f:2ef1:a86a) has joined #python
2019-12-08 07:07:25	-->	daz (root@gateway/vpn/privateinternetaccess/daz) has joined #python
2019-12-08 07:07:41	<--	govbotdotnet (~govbotdot@2605:a601:adff:fa00:45c2:c6d0:fd76:7180) has quit (Read error: Connection reset by peer)
2019-12-08 07:07:53	<--	d42 (root@gateway/vpn/privateinternetaccess/daz) has quit (Ping timeout: 268 seconds)
2019-12-08 07:08:16	--	irc: disconnected from server
2019-12-08 07:09:02	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 07:09:02	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 07:09:02	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 07:09:02	--	Channel #python: 1801 nicks (0 ops, 0 voices, 1801 normals)
2019-12-08 07:09:10	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 07:09:16	--	You are now known as laduyhaha
2019-12-08 07:09:37	energizer	iKarus987: which operating system?
2019-12-08 07:10:02	iKarus987	hi guys i did this after the >>>> fred = "pizza is food" then i pressed enter now it doesnt let me enter another command  i dont get ">>>>" this line
2019-12-08 07:10:33	<--	zerotech1 (~zerotech@BSN-182-125-49.dynamic.siol.net) has quit (Ping timeout: 265 seconds)
2019-12-08 07:10:39	iKarus987	i am reading python for kids, that my material i am studying from
2019-12-08 07:10:58	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-08 07:11:01	<--	TanukiNoKintama (~TanukiNoK@c-68-44-98-8.hsd1.in.comcast.net) has left #python
2019-12-08 07:11:01	energizer	that is weird
2019-12-08 07:11:13	iKarus987	what is weird?
2019-12-08 07:11:14	energizer	how did you run python?
2019-12-08 07:11:18	desu	forgot the closing "?
2019-12-08 07:11:33	[Tritium]	desu: that would be a syntax error
2019-12-08 07:11:41	<--	jil (~user@2001:41d0:52:cff::f2a) has quit (Read error: Connection reset by peer)
2019-12-08 07:11:45	rkkk	how do I get a function to update a value outside
2019-12-08 07:11:47	energizer	iKarus987: which operating system are you on?
2019-12-08 07:12:03	desu	depending on the repl used
2019-12-08 07:12:08	iKarus987	i shortcut the "python IDLE (Python 3.8 32-bit)" to desktop
2019-12-08 07:12:10	energizer	rkkk: `foo = func()`
2019-12-08 07:12:12	iKarus987	i am running from that
2019-12-08 07:12:19	<--	fflori (~fflori@194.230.155.243) has quit (Remote host closed the connection)
2019-12-08 07:12:20	iKarus987	windows 8
2019-12-08 07:12:23	[Tritium]	iKarus987: never, ever use idle
2019-12-08 07:12:25	iKarus987	sorry windows 10
2019-12-08 07:12:41	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-08 07:12:51	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 07:12:54	energizer	iKarus987: hmm. IDLE isn't really used by developers, it's mostly a first-day-of-python thing
2019-12-08 07:13:08	iKarus987	hmm there is "python 3.8 32bit" but it gives me black screen
2019-12-08 07:13:18	iKarus987	i dont like black screen
2019-12-08 07:13:25	[Tritium]	the black screen is what you should use
2019-12-08 07:13:33	-->	jil (~user@2001:41d0:52:cff::f2a) has joined #python
2019-12-08 07:13:34	[Tritium]	thats what developers use
2019-12-08 07:13:37	iKarus987	cant i change the color?
2019-12-08 07:13:41	iKarus987	background
2019-12-08 07:13:43	<--	palasso (~palasso@unaffiliated/palasso) has quit (Read error: Connection reset by peer)
2019-12-08 07:13:53	[Tritium]	yeah, you can, but thats a windows setting, that has nothing to do with python
2019-12-08 07:13:53	energizer	probably there is a menu for that
2019-12-08 07:14:10	-->	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has joined #python
2019-12-08 07:14:13	iKarus987	ah i see
2019-12-08 07:14:21	[Tritium]	I use conemu and a semi-transparent background
2019-12-08 07:14:48	-->	tiwula (~lane@174-23-77-118.slkc.qwest.net) has joined #python
2019-12-08 07:16:17	iKarus987	k thx done
2019-12-08 07:16:44	-->	fstd_ (~fstd@unaffiliated/fisted) has joined #python
2019-12-08 07:16:46	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 07:16:56	<--	Samian (~s@65.127.236.102) has quit (Ping timeout: 276 seconds)
2019-12-08 07:17:09	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 250 seconds)
2019-12-08 07:17:22	iKarus987	ehh
2019-12-08 07:17:30	-->	Hanii (~Hanii@2a00:23c5:c587:a800:f82c:93e8:4685:f2a6) has joined #python
2019-12-08 07:17:31	<--	haryv (400714dc@ip-64-7-20-220.sea.megapath.net) has quit (Remote host closed the connection)
2019-12-08 07:17:36	iKarus987	now i dont get special color for thing like a strings
2019-12-08 07:18:34	[Tritium]	If you need syntax highlighting, experiment in a module with something like vscode or pycharm
2019-12-08 07:18:36	iKarus987	everything is black text now, no special color for builtin codes
2019-12-08 07:18:51	--	irc: disconnected from server
2019-12-08 07:20:47	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 07:20:47	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 07:20:47	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 07:20:47	--	Channel #python: 1798 nicks (0 ops, 0 voices, 1798 normals)
2019-12-08 07:20:48	desu	should install 64bit python too then
2019-12-08 07:20:56	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 07:21:03	iKarus987	i only got offered windows installer
2019-12-08 07:21:07	iKarus987	and it started downloading
2019-12-08 07:21:10	[Tritium]	the bitedness doesn't REALLY matter for a beginner
2019-12-08 07:21:26	--	You are now known as laduyhaha
2019-12-08 07:21:49	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 07:21:54	-->	Wulf4 (~Wulf@unaffiliated/wulf) has joined #python
2019-12-08 07:22:31	desu	iKarus987: the one named "windows x86-64 * installer" is 64bit
2019-12-08 07:22:36	<--	Ignacy (~Ignacy@188.113.68.31) has quit (Remote host closed the connection)
2019-12-08 07:23:17	<--	rkkk (41bf0bfc@cpe-65-191-11-252.nc.res.rr.com) has quit (Remote host closed the connection)
2019-12-08 07:24:16	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 07:25:06	-->	xrogaan (~xrogaan@unaffiliated/xrogaan) has joined #python
2019-12-08 07:25:23	<--	Wulf (~Wulf@unaffiliated/wulf) has quit (Ping timeout: 276 seconds)
2019-12-08 07:25:24	--	Wulf4 is now known as Wulf
2019-12-08 07:25:37	<--	gar (~textual@pdpc/supporter/professional/gar) has quit (Quit: gar)
2019-12-08 07:25:49	-->	killvenom (~killvenom@2a01:4b00:8631:8800:d928:5d44:e5e6:c9bd) has joined #python
2019-12-08 07:26:39	iKarus987	i see
2019-12-08 07:26:42	iKarus987	i feel so dumb
2019-12-08 07:26:51	iKarus987	i am network engineer for a data center company
2019-12-08 07:27:07	iKarus987	my boss told me, i should get my feet wet in this
2019-12-08 07:27:10	-->	snowmanbamm (~snowmanba@2600:1700:abf0:1990:296b:7246:ff0a:653a) has joined #python
2019-12-08 07:27:13	iKarus987	because i have to start writing scripts
2019-12-08 07:28:47	<--	Gnexally (~Gnexally@dockerhost.aes.pm) has quit (Read error: Connection reset by peer)
2019-12-08 07:28:55	-->	courrier (~yoan@2pl44-h01-176-136-159-243.dsl.sta.abo.bbox.fr) has joined #python
2019-12-08 07:28:57	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Ping timeout: 240 seconds)
2019-12-08 07:30:39	iKarus987	so with vscode, you will have to type everything?
2019-12-08 07:30:52	iKarus987	it doesn't give you new line like >>>> ?
2019-12-08 07:31:01	<--	akk (~akk@75-161-90-59.albq.qwest.net) has quit (Quit: +++)
2019-12-08 07:31:10	<--	snackoverflow (~audioburn@unaffiliated/theology) has quit (Read error: Connection reset by peer)
2019-12-08 07:31:14	<--	tsaka__ (~torstein@94.66.73.249) has quit (Ping timeout: 276 seconds)
2019-12-08 07:31:26	[Tritium]	there is a way to run a repl in vscode, but you should be making modules anyways
2019-12-08 07:31:49	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 265 seconds)
2019-12-08 07:32:34	<--	cURT (~Faux_Pseu@46.182.18.128) has quit (Ping timeout: 268 seconds)
2019-12-08 07:32:37	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-08 07:32:38	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-08 07:32:46	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 07:33:29	iKarus987	why people are saying python is easy to learn..? i mean the intellisense is very important for a student and that's exactly "IDLE (Python 3.8 32-bit)" offers, but you guys are saying it's not ment for software engineers
2019-12-08 07:34:11	nedbat	iKarus987: lots of IDEs can give you autocompletion.
2019-12-08 07:34:24	nedbat	iKarus987: vscode will do autocompletion
2019-12-08 07:34:36	iKarus987	vscode does that i know
2019-12-08 07:34:41	iKarus987	just like notepad++
2019-12-08 07:34:44	[Tritium]	iKarus987: use pretty much any ide, except idle.  Vs code will even do intelisense brand autocompletion
2019-12-08 07:34:53	nedbat	iKarus987: right, so you don't need IDLE
2019-12-08 07:35:05	iKarus987	i want this >>>>
2019-12-08 07:35:07	[Tritium]	idle is actively bad
2019-12-08 07:35:26	nedbat	iKarus987: vscode probably has a Python Console window like that.
2019-12-08 07:36:02	iKarus987	k thx will try find out
2019-12-08 07:37:08	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 265 seconds)
2019-12-08 07:37:24	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 07:37:37	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 265 seconds)
2019-12-08 07:37:43	-->	tsaka__ (~torstein@94.66.73.249) has joined #python
2019-12-08 07:38:18	-->	cURT (~Faux_Pseu@46.182.18.128) has joined #python
2019-12-08 07:38:28	-->	wymillerlinux (~wymillerl@97-84-4-94.dhcp.aldl.mi.charter.com) has joined #python
2019-12-08 07:39:27	-->	nabil_ (~nabil@105.99.49.5) has joined #python
2019-12-08 07:39:50	<--	anotheryou (uid257186@gateway/web/irccloud.com/x-uhkpjqcgkatujisa) has quit (Quit: Connection closed for inactivity)
2019-12-08 07:42:10	<--	dijitol (~Thunderbi@p200300D477217400DC239EC6C01C8D9F.dip0.t-ipconnect.de) has quit (Quit: dijitol)
2019-12-08 07:42:25	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-08 07:43:02	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 07:45:29	<--	offbyone (~offbyone@c-67-160-47-66.hsd1.wa.comcast.net) has quit (Quit: ZNC 1.7.4+deb0+bionic0 - https://znc.in)
2019-12-08 07:50:22	<--	jay-m_ (~jay-m@129.0.205.241) has quit (Read error: Connection reset by peer)
2019-12-08 07:52:48	<--	tiwula (~lane@174-23-77-118.slkc.qwest.net) has quit (Quit: Leaving)
2019-12-08 07:53:33	<--	snowmanbamm (~snowmanba@2600:1700:abf0:1990:296b:7246:ff0a:653a) has quit (Quit: snowmanbamm)
2019-12-08 07:53:57	-->	gar (~textual@pdpc/supporter/professional/gar) has joined #python
2019-12-08 07:54:57	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 240 seconds)
2019-12-08 07:55:23	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-08 07:55:51	-->	Beam_Inn (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has joined #python
2019-12-08 07:55:59	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 265 seconds)
2019-12-08 07:56:39	-->	c0ns (~c0ns@dslb-084-059-178-135.084.059.pools.vodafone-ip.de) has joined #python
2019-12-08 07:58:07	nedbat	on Windows, does the "py" launcher have a -m switch?  "py -m modulename" ?
2019-12-08 07:58:21	[Tritium]	nedbat: yup.  use it all the time
2019-12-08 07:58:28	[Tritium]	well... use it all the time to run venv
2019-12-08 07:58:49	nedbat	[Tritium]: thanks
2019-12-08 07:59:13	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 07:59:19	[Tritium]	py -m venv, py -3.7 -m venv ...etc.  after the python version specifier, all arguments are blindly passed to python
2019-12-08 08:00:20	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2019-12-08 08:00:46	-->	blackleitus (~blackleit@200.92.30.11) has joined #python
2019-12-08 08:01:07	<--	de-facto (~de-facto@gateway/tor-sasl/de-facto) has quit (Quit: See you around.)
2019-12-08 08:01:09	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 08:02:05	blackleitus	I Had to change of parser, but how can I say if I tell max_results = 10 , then download 10 beside of content length https://dpaste.org/s9Ks ?
2019-12-08 08:03:17	-->	dcypher (~textual@ool-18bf1199.dyn.optonline.net) has joined #python
2019-12-08 08:03:22	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined #python
2019-12-08 08:03:35	-->	howyoubeen (~factotum@2600:6c4a:727f:e6b8:2187:fd1b:f7c2:3e55) has joined #python
2019-12-08 08:03:48	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 08:03:57	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2019-12-08 08:04:23	<--	tm (~sinnlos@unaffiliated/tm) has quit (Ping timeout: 276 seconds)
2019-12-08 08:04:37	ammar2	blackleitus: btw you can use requests.get(url, params={'num': ..., 'q': ...})
2019-12-08 08:04:52	-->	czer0 (~toaster@170.199.140.20) has joined #python
2019-12-08 08:05:38	<--	wildlander (~wildlande@unaffiliated/wildlander) has quit (Quit: Konversation terminated!)
2019-12-08 08:06:13	-->	bpalmer (~user@unaffiliated/bpalmer) has joined #python
2019-12-08 08:06:17	blackleitus	sure, but it is dynamic
2019-12-08 08:06:21	<--	^Zer0^ (~toaster@170.199.140.20) has quit (Ping timeout: 246 seconds)
2019-12-08 08:07:01	<--	AlexPortable (uid7568@gateway/web/irccloud.com/x-pkjhygrbgcojarzi) has quit (Quit: Connection closed for inactivity)
2019-12-08 08:07:13	blackleitus	'q'means?
2019-12-08 08:07:46	-->	tm (~sinnlos@unaffiliated/tm) has joined #python
2019-12-08 08:08:01	ammar2	it just corresponds to the url params you want. e.g passing params={'hello': 'world', 'param2': 'value'} will turn into http://...?hello=world&param2=value
2019-12-08 08:08:30	-->	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has joined #python
2019-12-08 08:08:37	<--	pacbard (~pacbard@68.237.202.35.bc.googleusercontent.com) has quit (Read error: Connection reset by peer)
2019-12-08 08:08:43	<--	framend (~framend@unaffiliated/framend) has quit (Ping timeout: 250 seconds)
2019-12-08 08:08:49	ammar2	blackleitus: so you want it to download 10 even if it skips over some because the content length is too big?
2019-12-08 08:08:56	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 268 seconds)
2019-12-08 08:08:59	blackleitus	yeah
2019-12-08 08:09:31	blackleitus	it skips 4 based on size , but how can I say my counter downloads 10 from max size?
2019-12-08 08:10:09	-->	framend (~framend@unaffiliated/framend) has joined #python
2019-12-08 08:10:30	-->	pacbard (~pacbard@68.237.202.35.bc.googleusercontent.com) has joined #python
2019-12-08 08:12:04	-->	sand_dull (~theuser@ill.ductinmedi.com) has joined #python
2019-12-08 08:12:33	ammar2	blackleitus: one solution would be to pass num=20 or something and then stop once you've downloaded 10
2019-12-08 08:13:23	<--	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has quit (Ping timeout: 265 seconds)
2019-12-08 08:13:35	<--	s2013 (~textual@cpe-24-243-145-239.rgv.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2019-12-08 08:14:26	-->	wordsToLiveBy (~wordsToLi@unaffiliated/wordstoliveby) has joined #python
2019-12-08 08:14:39	<--	lemoldu_ (~lemoldu@arennes-654-1-210-193.w90-32.abo.wanadoo.fr) has quit (Remote host closed the connection)
2019-12-08 08:16:41	-->	xall (~xall@mx-ll-14.207.145-52.dynamic.3bb.co.th) has joined #python
2019-12-08 08:17:38	-->	Kaedenn (~kaedenn@unaffiliated/kaedenn) has joined #python
2019-12-08 08:18:02	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 276 seconds)
2019-12-08 08:18:23	<--	killvenom (~killvenom@2a01:4b00:8631:8800:d928:5d44:e5e6:c9bd) has quit (Quit: This computer has gone to sleep)
2019-12-08 08:18:27	blackleitus	in this case how in code?
2019-12-08 08:18:43	<--	Iolo (~iolo@dsl-tkubng22-50de93-232.dhcp.inet.fi) has quit (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
2019-12-08 08:19:00	ammar2	downloaded += 1; if downloaded >= 10: break
2019-12-08 08:19:28	<--	Forsaken87 (~quassel@2a02:908:1860:bec0:c179:63c7:fe6c:8293) has quit (Ping timeout: 252 seconds)
2019-12-08 08:20:20	nedbat	blackleitus: btw, lines 62-63 are going to hide information from you if things go wrong.
2019-12-08 08:20:23	-->	karmabeach24 (~ircap@pc-49-8-120-200.cm.vtr.net) has joined #python
2019-12-08 08:20:30	<--	contingo (~textual@213.205.240.171) has quit (Quit: My supercomputing cluster has gone to sleep. ZZZzzz…)
2019-12-08 08:20:39	<--	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has quit (Quit: Leaving)
2019-12-08 08:20:42	-->	Iolo (~iolo@dsl-tkubng22-50de93-232.dhcp.inet.fi) has joined #python
2019-12-08 08:21:00	<--	spiette (~spiette@216.98.60.148) has quit (Quit: ZNC 1.7.5 - https://znc.in)
2019-12-08 08:21:04	<--	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has quit (Remote host closed the connection)
2019-12-08 08:21:15	<--	dctrud_ (~dctrud@2001:19f0:6401:16c7:5400:2ff:fe71:41c3) has quit (Quit: ZNC 1.7.4 - https://znc.in)
2019-12-08 08:21:25	-->	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has joined #python
2019-12-08 08:22:06	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 08:22:26	-->	snackoverflow (~audioburn@unaffiliated/theology) has joined #python
2019-12-08 08:22:29	-->	jaziz1 (~jaziz@unaffiliated/jaziz) has joined #python
2019-12-08 08:22:32	-->	LabMonkey (~LabMonkey@2602:306:cf62:e270:e451:10df:83fb:f9ee) has joined #python
2019-12-08 08:22:34	<--	TDT (~user@108.160.234.134) has quit (Ping timeout: 265 seconds)
2019-12-08 08:23:02	<--	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has quit (Remote host closed the connection)
2019-12-08 08:23:23	-->	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2019-12-08 08:23:27	<--	Jerrynicki (~niklas@p200300F573DA4800BB293BCAD95EF881.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2019-12-08 08:23:55	<--	milkt_ (~debian@gateway/tor-sasl/milkt) has quit (Quit: leaving)
2019-12-08 08:25:09	-->	milkt (~debian@gateway/tor-sasl/milkt) has joined #python
2019-12-08 08:25:37	<--	jaziz (~jaziz@unaffiliated/jaziz) has quit (Ping timeout: 250 seconds)
2019-12-08 08:25:38	<--	Mechanismus (~LabMonkey@2602:306:cf62:e270:dc18:32e:15fe:cd5e) has quit (Ping timeout: 250 seconds)
2019-12-08 08:25:42	<--	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has quit (Remote host closed the connection)
2019-12-08 08:25:59	-->	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has joined #python
2019-12-08 08:26:04	<--	theWhisper_ (~quassel@unaffiliated/thewhisper/x-7482734) has quit (Ping timeout: 250 seconds)
2019-12-08 08:26:07	<--	[itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) has quit (Remote host closed the connection)
2019-12-08 08:26:29	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 250 seconds)
2019-12-08 08:28:53	-->	cow[moo] (~asanger@c-69-244-155-110.hsd1.mi.comcast.net) has joined #python
2019-12-08 08:29:17	<--	x35b35 (~x35b35@71.19.250.216) has quit (Quit: leaving)
2019-12-08 08:29:34	-->	Helenah (~s98259@unaffiliated/iveeee) has joined #python
2019-12-08 08:29:42	<--	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has quit (Remote host closed the connection)
2019-12-08 08:30:08	<--	muflon_ (~muflon@89-76-0-98.dynamic.chello.pl) has quit (Quit: WeeChat 2.6)
2019-12-08 08:30:51	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 08:31:26	-->	spacewook (~spacewook@ip24-253-130-175.hr.hr.cox.net) has joined #python
2019-12-08 08:32:38	-->	Mat63 (ba8de35f@186.141.227.95) has joined #python
2019-12-08 08:32:59	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-08 08:33:08	-->	offbyone (~offbyone@c-67-160-47-66.hsd1.wa.comcast.net) has joined #python
2019-12-08 08:33:28	-->	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has joined #python
2019-12-08 08:33:33	<--	caterfxo (caterfxo@gateway/vpn/privateinternetaccess/caterfxo) has quit (Remote host closed the connection)
2019-12-08 08:34:21	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 08:34:29	Mat63	hi ThiefMaster
2019-12-08 08:34:36	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-08 08:34:37	<--	sand_dull (~theuser@ill.ductinmedi.com) has quit (Ping timeout: 240 seconds)
2019-12-08 08:35:45	nedbat	Mat63: what's up?
2019-12-08 08:36:58	Mat63	i want to install
2019-12-08 08:37:19	Mat63	pycharm
2019-12-08 08:37:23	<--	MikeDebian (~none@bl12-167-178.dsl.telepac.pt) has quit (Ping timeout: 245 seconds)
2019-12-08 08:37:58	-->	audioburn (~audioburn@unaffiliated/theology) has joined #python
2019-12-08 08:38:02	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 265 seconds)
2019-12-08 08:38:27	Mat63	I already have the program, but I wanted to know where I keep it in what location so that it is not messy
2019-12-08 08:39:25	-->	oragadam (7aae3633@122.174.54.51) has joined #python
2019-12-08 08:39:29	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 265 seconds)
2019-12-08 08:39:57	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-08 08:40:18	<--	snackoverflow (~audioburn@unaffiliated/theology) has quit (Ping timeout: 245 seconds)
2019-12-08 08:41:32	Mat63	it sounds a bit childish mine but I want to know
2019-12-08 08:41:42	--	milkt is now known as milkt_
2019-12-08 08:42:04	<--	milkt_ (~debian@gateway/tor-sasl/milkt) has quit (Quit: leaving)
2019-12-08 08:42:27	-->	milkt (~debian@gateway/tor-sasl/milkt) has joined #python
2019-12-08 08:42:32	-->	milkt_ (~debian@gateway/tor-sasl/milkt) has joined #python
2019-12-08 08:42:45	<--	milkt (~debian@gateway/tor-sasl/milkt) has quit (Disconnected by services)
2019-12-08 08:42:59	-->	pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) has joined #python
2019-12-08 08:43:03	--	milkt_ is now known as milkt
2019-12-08 08:43:06	<--	milkt (~debian@gateway/tor-sasl/milkt) has quit (Client Quit)
2019-12-08 08:43:27	-->	milkt (~debian@gateway/tor-sasl/milkt) has joined #python
2019-12-08 08:44:02	-->	teksimian (~teksimian@172-97-139-243.cpe.distributel.net) has joined #python
2019-12-08 08:44:25	teksimian	hoping someone can help me with a 2 dimensional list
2019-12-08 08:45:26	teksimian	i'm using grid = [["." for x in range(20)] for y in range(20)] to create a 2 dimensional grid... but anytime i try to assign something to it via grid[x][y] the x and y dimension seems mixed up
2019-12-08 08:46:13	-->	silverjam (~ubuntu@c-24-5-219-83.hsd1.ca.comcast.net) has joined #python
2019-12-08 08:46:21	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 08:46:44	offby1	what does "mixed up" mean?
2019-12-08 08:46:45	[Tritium]	teksimian: you are making an outer list of y's and inner lists of x's
2019-12-08 08:47:03	[Tritium]	teksimian: so you would do grid[y][x]
2019-12-08 08:47:07	offby1	[Tritium]: does the variable in the list comprehension matter?
2019-12-08 08:47:17	<--	audioburn (~audioburn@unaffiliated/theology) has quit (Ping timeout: 250 seconds)
2019-12-08 08:47:19	energizer	no
2019-12-08 08:47:26	offby1	didn't think so
2019-12-08 08:47:26	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-08 08:47:26	[Tritium]	offby1: it is showing intent
2019-12-08 08:47:38	offby1	🤔
2019-12-08 08:47:43	offby1	ok I'll buy that
2019-12-08 08:47:50	teksimian	[Tritium]: my intent was grid[x][y]
2019-12-08 08:48:24	teksimian	how would i reverse swap them when creating the array
2019-12-08 08:48:50	<--	prepend (~textual@99-1-32-197.lightspeed.tukrga.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-08 08:48:53	-->	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:a817:fa96:48cd:fc14) has joined #python
2019-12-08 08:49:00	[Tritium]	teksimian: the outer listcomp is the grid object, the inner list comp are the items of the grid object.  so make the small listcomp your "y" listcomp, and the bigger one the "x"
2019-12-08 08:49:18	[Tritium]	teksimian: or use numpy which has 2d arrays
2019-12-08 08:49:47	teksimian	thank you for your help, much appreciated.
2019-12-08 08:50:52	grym	teksimian: this is very, very much what numpy is for
2019-12-08 08:50:52	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-08 08:50:58	grym	teksimian: so if this isn't homework, use that
2019-12-08 08:51:12	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 08:51:21	teksimian	checking it out, thanks!
2019-12-08 08:51:24	Mat63	It is a square matrix, where each position can be a variable or a constant?
2019-12-08 08:51:32	teksimian	playing with this advent of code thing to learn python.
2019-12-08 08:51:53	[Tritium]	Ah, games
2019-12-08 08:52:04	<--	nitram_ (5457a39d@ip5457a39d.direct-adsl.nl) has quit (Remote host closed the connection)
2019-12-08 08:52:04	<--	mr_paz (~mr_paz@24.14.251.223) has quit (Read error: Connection reset by peer)
2019-12-08 08:52:13	grym	teksimian: ah, perfect!
2019-12-08 08:52:16	grym	yeah, numpy is <3
2019-12-08 08:52:24	<--	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:a817:fa96:48cd:fc14) has quit (Client Quit)
2019-12-08 08:52:46	stealth_	Mat63, there is no constant in python
2019-12-08 08:53:01	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 08:53:08	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Ping timeout: 276 seconds)
2019-12-08 08:53:09	Mat63	?
2019-12-08 08:53:15	offby1	!
2019-12-08 08:53:23	-->	Lord_of_Life_ (~Lord@unaffiliated/lord-of-life/x-0885362) has joined #python
2019-12-08 08:53:35	offby1	Mat63: well, python doesn't really have constants; but sure.
2019-12-08 08:53:36	Mat63	no?
2019-12-08 08:53:38	-->	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:a817:fa96:48cd:fc14) has joined #python
2019-12-08 08:53:50	ammar2	depends on what you mean by constant
2019-12-08 08:53:52	stealth_	Mat63, you just write is like `MY_CON = "something"`
2019-12-08 08:54:05	ammar2	a name you can't reassign? then no
2019-12-08 08:54:08	<--	blackleitus (~blackleit@200.92.30.11) has quit (Quit: Leaving)
2019-12-08 08:54:20	-->	clarjon1 (~clarjon1@unaffiliated/clarjon1) has joined #python
2019-12-08 08:54:44	--	Lord_of_Life_ is now known as Lord_of_Life
2019-12-08 08:54:46	Mat63	an invariable independent fixed value
2019-12-08 08:54:49	energizer	5 is a constant
2019-12-08 08:54:56	stealth_	Mat63, https://stackoverflow.com/questions/2682745/how-do-i-create-a-constant-in-python
2019-12-08 08:55:03	Mat63	like pi
2019-12-08 08:55:11	[Tritium]	energizer: thats a literal for an immutable object.
2019-12-08 08:55:11	bpalmer	a name you can't reassign? True.
2019-12-08 08:55:15	bpalmer	(insert quibble about what a name is)
2019-12-08 08:55:57	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 250 seconds)
2019-12-08 08:56:42	grym	bpalmer: something disjoint to the sweetness of flowers
2019-12-08 08:56:49	-->	NeUx (~neux@gateway/tor-sasl/neux) has joined #python
2019-12-08 08:56:54	energizer	https://docs.python.org/3/library/typing.html#typing.Final
2019-12-08 08:57:17	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-08 08:57:37	<--	dasher00 (~dasher00@2.221.109.249) has quit (Ping timeout: 240 seconds)
2019-12-08 08:57:48	silverjam	Anyone using PyScaffold?  Any idea how you'd add a dependency that uses git as source?
2019-12-08 08:58:05	ammar2	energizer: your python static typing-fu is impressive
2019-12-08 08:58:14	<--	Ariakenom (~Ariakenom@h-158-174-186-131.NA.cust.bahnhof.se) has quit (Quit: Leaving)
2019-12-08 08:58:23	energizer	ammar2: :)
2019-12-08 08:59:15	stealth_	its for mypy
2019-12-08 08:59:26	<--	ksft (~ksft@wikipedia/KSFT) has quit (Ping timeout: 252 seconds)
2019-12-08 08:59:31	<--	holgersson (~quassel@unaffiliated/holgersson) has quit (Quit: “Format C:........[Done]“)
2019-12-08 08:59:50	<--	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:a817:fa96:48cd:fc14) has quit (Quit: snowmanbamm)
2019-12-08 08:59:54	offby1	silverjam: never heard of it, but perhaps PyScaffold uses the same syntax that pip does -- and if I recall correctly, pip indeed has a way to specify git repos
2019-12-08 08:59:58	Mat63	Sorry, I'm new to Python and I only knew some java
2019-12-08 09:00:14	grym	Mat63: lots of surprises await you
2019-12-08 09:00:16	<--	pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) has quit (Ping timeout: 265 seconds)
2019-12-08 09:00:17	<--	tsaka__ (~torstein@94.66.73.249) has quit (Ping timeout: 240 seconds)
2019-12-08 09:00:32	grym	Mat63: like first class functions and modules not classes as namespaces
2019-12-08 09:00:47	-->	holgersson (~quassel@unaffiliated/holgersson) has joined #python
2019-12-08 09:00:51	-->	dasher00 (~dasher00@2.221.109.249) has joined #python
2019-12-08 09:01:57	silverjam	offby1: pyscaffold recommends using setup.cfg, so the syntax is a little different
2019-12-08 09:03:29	ammar2	java8 has first class functions
2019-12-08 09:03:55	grym	ammar2: you see c#9's attrs?
2019-12-08 09:03:56	grym	:D
2019-12-08 09:03:57	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 09:04:03	<--	n3wborn (n3wborn@gateway/vpn/privateinternetaccess/n3wborn) has quit (Ping timeout: 245 seconds)
2019-12-08 09:04:19	-->	MICROburst1 (~Thunderbi@x590e7f88.dyn.telefonica.de) has joined #python
2019-12-08 09:04:32	-->	edlinde (~edlinde@183.83.146.106) has joined #python
2019-12-08 09:04:33	ammar2	no, they do something interesting?
2019-12-08 09:04:52	grym	ammar2: https://www.c-sharpcorner.com/article/deev-dive-into-c-sharp-9/  records
2019-12-08 09:04:57	<--	br0lly (~doctor@ip-111-164.ip4.balmont.pl) has quit (Ping timeout: 240 seconds)
2019-12-08 09:05:37	<--	mluser-home (~mluser-ho@cpe-107-11-253-108.columbus.res.rr.com) has quit (Quit: Yikes!)
2019-12-08 09:05:40	grym	`with` instead of `attr.evolve`
2019-12-08 09:05:49	grym	but it's very much in the same kind of headspace
2019-12-08 09:05:56	grym	of which i wholeheartedly approve
2019-12-08 09:06:04	<--	MICROburst (~Thunderbi@x590e21dd.dyn.telefonica.de) has quit (Ping timeout: 265 seconds)
2019-12-08 09:06:04	--	MICROburst1 is now known as MICROburst
2019-12-08 09:06:12	grym	(for the $0.05 that that's worth, heh)
2019-12-08 09:06:52	-->	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:a817:fa96:48cd:fc14) has joined #python
2019-12-08 09:07:18	-->	haryv (400714dc@ip-64-7-20-220.sea.megapath.net) has joined #python
2019-12-08 09:07:39	<--	sameerynho (~lxsameer@unaffiliated/lxsameer) has quit (Ping timeout: 250 seconds)
2019-12-08 09:08:03	haryv	Who here know how arguments are entered from file names and are processed? Trying to understand some sample code and execute some external files?
2019-12-08 09:08:35	grym	haryv: post the code that's troubling you to bpaste.net/+python3
2019-12-08 20:36:22	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 20:36:22	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 20:36:22	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 20:36:23	--	Channel #python: 1794 nicks (0 ops, 0 voices, 1794 normals)
2019-12-08 20:36:28	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 20:36:31	[Tritium]	and my answer is "use a model so it doesn't matter"
2019-12-08 20:37:28	locsmif	[Tritium]: I don't care about the Qt part as much as I care about the actual 2D array I'm working on
2019-12-08 20:37:40	[Tritium]	If you use a model, philisophical questions go away, and you can just build the code to return what you need to consume
2019-12-08 20:37:55	-->	greatgatsby (~greatgats@xplr-104-249-240-116.xplornet.com) has joined #python
2019-12-08 20:37:56	<--	dethos (~dethos@83.223.169.117) has quit (Ping timeout: 252 seconds)
2019-12-08 20:38:13	locsmif	Okay, will I use '' or None in the model?
2019-12-08 20:38:15	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-08 20:38:37	[Tritium]	locsmif: doesn't matter.
2019-12-08 20:39:01	<--	nicolasnicolas (~nicolasni@167.99.80.52) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-08 20:39:02	locsmif	Why not? The entire code changes
2019-12-08 20:39:23	locsmif	The if checks, the behaviour of what would be displayed, etc. etc.
2019-12-08 20:40:01	locsmif	From is None to == '' .. I don't want "None" displayed in table cells. So what do you mean it doesn't matter?
2019-12-08 20:40:45	locsmif	A string conversion of None is 'None' as well, so
2019-12-08 20:40:50	[Tritium]	the entire point of using the model is you can disconnect what the display portion needs, datastructure wise, to what the rest of your code cares about.  Don't bother caring about the internals of the model, just return a datastructure the rest of your code can use.  It doesn't matter what your internal representation is.
2019-12-08 20:40:51	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-08 20:40:57	<--	Anthaas_ (~Anthaas@unaffiliated/anthaas) has quit (Read error: Connection reset by peer)
2019-12-08 20:41:41	locsmif	[Tritium]: I'm working on a 2D array to solve a puzzle so whether I'm iterating over None or '' matters, I keep trying to tell you I don't care about the widget
2019-12-08 20:41:46	locsmif	Well not as much, at least
2019-12-08 20:41:57	-->	Anthaas (~Anthaas@unaffiliated/anthaas) has joined #python
2019-12-08 20:42:11	-->	PantelicGR (~PantelicG@unaffiliated/pantelicgr) has joined #python
2019-12-08 20:42:27	locsmif	But never mind, I supppose the answer is: there is no difference between None and '' and it doesn't matter
2019-12-08 20:42:28	[Tritium]	use the type the rest of your code cares about, why is this a hard decision?
2019-12-08 20:42:39	-->	BeerLover (~BeerBuddy@103.72.10.227) has joined #python
2019-12-08 20:43:12	<--	llua (~llua@zsh/developer/llua) has quit (Quit: <Rudolph> shell code is what greycat reads to kids when he tucks them in)
2019-12-08 20:44:10	locsmif	It's hard decision because the code isn't a living, breathing thing that makes its own decisions somehow - I make the decision, right now, and the code will reflect that decision
2019-12-08 20:44:18	-->	rwb (~Thunderbi@65.183.138.202) has joined #python
2019-12-08 20:44:28	<--	lankanmon (~LKNnet@CPEb4fbe4e331bd-CM64777d632380.cpe.net.cable.rogers.com) has quit (Ping timeout: 245 seconds)
2019-12-08 20:44:47	[Tritium]	whoa...whoawhoawhoa.... you spent 2 weeks massaging the gui...before you even had proof of concept on the logic code?
2019-12-08 20:44:54	locsmif	Then, subsequently, all the other code that iterates in all directions over the 2D array will be forced to reckon with that decision
2019-12-08 20:45:19	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2019-12-08 20:45:27	-->	llua (~llua@zsh/developer/llua) has joined #python
2019-12-08 20:45:32	locsmif	[Tritium]: I needed an interface to input Sudoku puzzle examples, I can't just keep typing 9x9 arrays into an IDE can I? Well, I could, but it would be quite idiotic.
2019-12-08 20:46:00	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 252 seconds)
2019-12-08 20:46:13	-->	lankanmon (~LKNnet@CPEb4fbe4e331bd-CM64777d632380.cpe.net.cable.rogers.com) has joined #python
2019-12-08 20:46:26	locsmif	And I didn't solve entire the problem on pen and paper before going to code, no.
2019-12-08 20:46:49	[Tritium]	locsmif: ...yes you can, until you know what the program actually does and have a rough idea of what the data's shape should be... you don't have to polish that code before you start the gui, but you need AN idea of what the code will look like so you dont have choices like this to make after the gui is already written
2019-12-08 20:46:50	locsmif	Anyways, forget my question, I've lost more time on this than it's been productive
2019-12-08 20:47:31	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 20:47:51	<--	lxbarbosa (~user@2804:1b2:81:c7f6:ae43:1fee:5f96:4bf6) has left #python ("ERC (IRC client for Emacs 27.0.50)")
2019-12-08 20:47:52	emerent	sudokus are often serialized as just an 81 character line
2019-12-08 20:47:55	-->	evil_gordita (robert@ip24-254-23-39.rn.hr.cox.net) has joined #python
2019-12-08 20:48:46	<--	jdloft (~jdloft@wikimedia/Negative24) has quit (Read error: Connection reset by peer)
2019-12-08 20:49:18	[Tritium]	you can get it down to 41 bytes pretty easily
2019-12-08 20:49:30	-->	jdloft (~jdloft@wikimedia/Negative24) has joined #python
2019-12-08 20:49:39	<--	moonshine_ (~moonshine@185.203.122.29) has quit (Quit: Leaving)
2019-12-08 20:50:04	emerent	sure you can compress it more, but there are many datasets in line format which you could test your solver against
2019-12-08 20:50:04	<--	BeerLover (~BeerBuddy@103.72.10.227) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-08 20:50:05	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-08 20:51:12	emerent	why 41 bytes btw?
2019-12-08 20:51:55	[Tritium]	emerent: you only need 4 bits per number, which would be 40.5 bytes for 81 numbers... and since you cant really have half a byte...
2019-12-08 20:52:08	-->	Lord_of_Life_ (~Lord@unaffiliated/lord-of-life/x-0885362) has joined #python
2019-12-08 20:52:14	emerent	you can represent all grids including invalid ones in 34 bytes
2019-12-08 20:52:15	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2019-12-08 20:52:31	[Tritium]	oh nice
2019-12-08 20:52:50	-->	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has joined #python
2019-12-08 20:53:13	<--	triad (~triad@unaffiliated/triad) has quit (Quit: Leaving)
2019-12-08 20:53:37	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Ping timeout: 240 seconds)
2019-12-08 20:54:12	-->	X20Hunter (~X20Hunter@149.129.104.12) has joined #python
2019-12-08 20:54:51	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 268 seconds)
2019-12-08 20:55:00	--	Lord_of_Life_ is now known as Lord_of_Life
2019-12-08 20:55:25	<--	slivera (slivera@gateway/vpn/privateinternetaccess/slivera) has quit (Remote host closed the connection)
2019-12-08 20:56:10	-->	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has joined #python
2019-12-08 20:56:21	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-08 20:56:25	<--	sec^nd (~second@gateway/tor-sasl/sec0nd) has quit (Remote host closed the connection)
2019-12-08 20:56:41	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 20:58:42	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 20:59:11	-->	sec^nd (~second@gateway/tor-sasl/sec0nd) has joined #python
2019-12-08 20:59:37	<--	cisco (~cisco@a109-49-68-156.cpe.netcabo.pt) has quit (Ping timeout: 250 seconds)
2019-12-08 21:00:07	CoolerX	OSError: Unable to open file (file signature not found)
2019-12-08 21:00:30	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 250 seconds)
2019-12-08 21:00:41	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2019-12-08 21:01:00	<--	llorllale (~llorllale@CPEac202e24ff83-CMac202e24ff80.cpe.net.fido.ca) has quit (Quit: WeeChat 1.9.1)
2019-12-08 21:01:12	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 21:01:17	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2019-12-08 21:01:29	CoolerX	nvm
2019-12-08 21:01:34	CoolerX	filename was wrong
2019-12-08 21:01:51	nedbat	CoolerX: when you do have an error you need help with, linking to a full traceback will always make it easier to help
2019-12-08 21:02:57	-->	llorllale (~llorllale@CPEac202e24ff83-CMac202e24ff80.cpe.net.fido.ca) has joined #python
2019-12-08 21:03:06	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 250 seconds)
2019-12-08 21:03:22	-->	lucasb (uid333435@gateway/web/irccloud.com/x-nxzbwrwywlkqjxfk) has joined #python
2019-12-08 21:03:28	CoolerX	ok
2019-12-08 21:04:07	-->	Exit42 (~textual@157-131-100-58.fiber.dynamic.sonic.net) has joined #python
2019-12-08 21:05:06	-->	Mat63 (ba8de523@186.141.229.35) has joined #python
2019-12-08 21:06:07	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 250 seconds)
2019-12-08 21:07:03	-->	indeedwatson (~yama@181.164.182.59) has joined #python
2019-12-08 21:07:30	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 21:07:47	<--	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 268 seconds)
2019-12-08 21:09:07	<--	Exit42 (~textual@157-131-100-58.fiber.dynamic.sonic.net) has quit (Quit: ZzZz)
2019-12-08 21:09:08	-->	mat001 (~mat001@c-71-202-208-146.hsd1.ca.comcast.net) has joined #python
2019-12-08 21:09:22	-->	drymer_ (~drymer@unaffiliated/drymer) has joined #python
2019-12-08 21:09:37	<--	drymer (~drymer@unaffiliated/drymer) has quit (Ping timeout: 265 seconds)
2019-12-08 21:09:58	-->	lbalhar (~lbalhar@93.185.13.26) has joined #python
2019-12-08 21:10:51	-->	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has joined #python
2019-12-08 21:10:51	<--	jay-m__ (~jay-m@129.0.205.65) has quit (Read error: Connection reset by peer)
2019-12-08 21:11:17	-->	jay-m_ (~jay-m@129.0.205.29) has joined #python
2019-12-08 21:11:39	<--	CtrlC (~CtrlC@unaffiliated/ctrlc) has quit (Quit: WeeChat 2.6)
2019-12-08 21:11:45	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 250 seconds)
2019-12-08 21:12:15	-->	themsay (~themsay@149.254.235.25) has joined #python
2019-12-08 21:12:57	<--	nathias (~nathias@unaffiliated/nathias) has quit (Ping timeout: 240 seconds)
2019-12-08 21:13:06	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-08 21:13:48	-->	zuppa (~zuppa@gateway/tor-sasl/zuppa) has joined #python
2019-12-08 21:15:19	<--	Mat63 (ba8de523@186.141.229.35) has quit (Ping timeout: 260 seconds)
2019-12-08 21:15:26	-->	Diemuzi (~diemuzi@unaffiliated/diemuzi) has joined #python
2019-12-08 21:15:49	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 268 seconds)
2019-12-08 21:15:58	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 21:16:23	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 265 seconds)
2019-12-08 21:17:49	<--	mnemonicj (~mnemonicj@114-32-59-180.HINET-IP.hinet.net) has quit (Ping timeout: 250 seconds)
2019-12-08 21:18:22	<--	Forsaken87 (~quassel@2a02:908:1860:bec0:c179:63c7:fe6c:8293) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2019-12-08 21:18:45	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Remote host closed the connection)
2019-12-08 21:19:13	-->	mnemonicj (~mnemonicj@114-32-59-180.HINET-IP.hinet.net) has joined #python
2019-12-08 21:19:33	<--	lolidunno (~lolidunno@FL1-49-129-77-113.tky.mesh.ad.jp) has quit (Read error: Connection reset by peer)
2019-12-08 21:20:10	-->	Forsaken87 (~quassel@2a02:908:1860:bec0:c179:63c7:fe6c:8293) has joined #python
2019-12-08 21:21:41	<--	jay-m_ (~jay-m@129.0.205.29) has quit (Read error: Connection reset by peer)
2019-12-08 21:21:43	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2019-12-08 21:24:42	<--	B|ack0p (~m@unaffiliated/blackop) has quit (Quit: Lost terminal)
2019-12-08 21:26:37	<--	johnjay (~pi@38.120.10.99) has quit (Ping timeout: 240 seconds)
2019-12-08 21:26:55	<--	funeral (~Funeral@246.109-247-210.customer.lyse.net) has quit (Ping timeout: 250 seconds)
2019-12-08 21:27:51	-->	Lucas_Gray (~Wryhder@197.210.227.148) has joined #python
2019-12-08 21:29:16	-->	funeral (~Funeral@45.12.223.108) has joined #python
2019-12-08 21:29:49	-->	johnjay (~pi@38.120.10.99) has joined #python
2019-12-08 21:29:59	-->	BeerLover (~BeerLover@103.72.10.227) has joined #python
2019-12-08 21:30:17	<--	celphi (sid97751@gateway/web/irccloud.com/x-zbxrqwkwowivwfut) has quit
2019-12-08 21:30:30	<--	Lucas_Gray (~Wryhder@197.210.227.148) has quit (Read error: Connection reset by peer)
2019-12-08 21:30:37	-->	celphi (sid97751@gateway/web/irccloud.com/x-uxdazyobxctgrdwy) has joined #python
2019-12-08 21:35:08	-->	JTa (~Thunderbi@unaffiliated/jta) has joined #python
2019-12-08 21:42:20	--	irc: disconnected from server
2019-12-08 21:45:08	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 21:45:08	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 21:45:08	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 21:45:09	--	Channel #python: 1800 nicks (0 ops, 0 voices, 1800 normals)
2019-12-08 21:45:25	-->	polman (~ananevtem@92.101.36.69) has joined #python
2019-12-08 21:45:28	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 21:45:49	-->	thomasross (~thomasros@CPEbc4dfb93c813-CMbc4dfb93c810.cpe.net.cable.rogers.com) has joined #python
2019-12-08 21:46:38	-->	Lucas_Gray (~Wryhder@197.210.85.188) has joined #python
2019-12-08 21:46:38	<--	X20Hunter (~X20Hunter@149.129.104.12) has quit (Remote host closed the connection)
2019-12-08 21:47:52	<--	gjt343 (~gjt343@45.164.13.6) has quit (Ping timeout: 268 seconds)
2019-12-08 21:48:09	-->	xonox (~x@37.120.107.179) has joined #python
2019-12-08 21:50:17	<--	indeedwatson (~yama@181.164.182.59) has quit (Ping timeout: 240 seconds)
2019-12-08 21:50:42	-->	unlink2 (~unlink2@p200300EBCF2FEF004EA44903F63EB9E2.dip0.t-ipconnect.de) has joined #python
2019-12-08 21:51:03	<--	unlink2 (~unlink2@p200300EBCF2FEF004EA44903F63EB9E2.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-08 21:51:21	-->	unlink2 (~unlink2@p200300EBCF2FEF004EA44903F63EB9E2.dip0.t-ipconnect.de) has joined #python
2019-12-08 21:51:30	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined #python
2019-12-08 21:52:20	-->	Mat63 (ba8de1d1@186.141.225.209) has joined #python
2019-12-08 21:52:25	Mat63	hi
2019-12-08 21:52:37	<--	weedmic (~weedmic@212.68.131.233) has quit (Quit: Konversation terminated!)
2019-12-08 21:52:55	-->	lockywolf (~lockywolf@101.80.182.3) has joined #python
2019-12-08 21:53:51	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-08 21:54:02	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-08 21:55:16	-->	idontneedanick (~idontneed@h-184-105.A189.priv.bahnhof.se) has joined #python
2019-12-08 21:56:08	<--	cow[moo] (~asanger@c-69-244-155-110.hsd1.mi.comcast.net) has quit (Ping timeout: 245 seconds)
2019-12-08 21:56:46	<--	Lucas_Gray (~Wryhder@197.210.85.188) has quit (Read error: Connection reset by peer)
2019-12-08 21:56:54	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-08 21:57:01	<--	lagothrix (~lagothrix@unaffiliated/lagothrix) has quit (Quit: lagothrix)
2019-12-08 21:57:04	<--	vuoto (~vuoto@80.71.142.174) has quit (Quit: vuoto)
2019-12-08 21:57:20	-->	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined #python
2019-12-08 21:58:07	<--	AhmedAmerican (c52b5fcb@gateway/web/cgi-irc/kiwiirc.com/ip.197.43.95.203) has quit (Ping timeout: 250 seconds)
2019-12-08 21:58:40	-->	Lucas_Gray (~Wryhder@197.210.85.188) has joined #python
2019-12-08 22:00:39	-->	dendazen (~dendazen@pool-72-76-93-243.nwrknj.fios.verizon.net) has joined #python
2019-12-08 22:01:39	-->	RoyK (~roy@unaffiliated/royk) has joined #python
2019-12-08 22:01:49	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 265 seconds)
2019-12-08 22:01:54	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 22:02:18	<--	traptrip (trip@brigaid.xs4all.nl) has quit (Quit: maintenance)
2019-12-08 22:03:30	<--	stranac (~stranac@193.14.245.77) has quit (Read error: Connection reset by peer)
2019-12-08 22:03:45	-->	humitos (~humitos@139.47.122.65) has joined #python
2019-12-08 22:03:50	-->	Velgor (~Velgor@HSI-KBW-109-193-081-230.hsi7.kabel-badenwuerttemberg.de) has joined #python
2019-12-08 22:04:09	<--	two_oes (two_oes@nat/redhat/x-etturerhmpbjnmvt) has quit (Quit: Leaving)
2019-12-08 22:04:20	-->	stranac (~stranac@193.14.245.77) has joined #python
2019-12-08 22:04:39	<--	humitos (~humitos@139.47.122.65) has quit (Remote host closed the connection)
2019-12-08 22:04:57	nedbat	Mat63: Welcome. If you have a question, it's always best to jump right in and ask it.
2019-12-08 22:05:13	Mat63	=D
2019-12-08 22:05:57	-->	tiwula (~lane@c-98-202-91-238.hsd1.ut.comcast.net) has joined #python
2019-12-08 22:06:01	Mat63	the habit of greeting kills me
2019-12-08 22:06:59	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 268 seconds)
2019-12-08 22:07:02	-->	nibble_zer0 (~nibble_ze@94.250.187.239) has joined #python
2019-12-08 22:07:11	nedbat	Mat63: IRC is weird that way
2019-12-08 22:07:39	<--	funeral (~Funeral@45.12.223.108) has quit (Ping timeout: 250 seconds)
2019-12-08 22:07:41	CoolerX	so python repl doesn't seem to take keyboard interrupts
2019-12-08 22:07:53	<--	tiwula (~lane@c-98-202-91-238.hsd1.ut.comcast.net) has quit (Client Quit)
2019-12-08 22:08:02	-->	subho (~subho@fedora/subho) has joined #python
2019-12-08 22:08:03	CoolerX	when something is printing it keeps printing even after Ctrl+C, Ctrl+D, Ctrl+Z
2019-12-08 22:08:15	<--	Ruhan (uid76353@gateway/web/irccloud.com/x-zzdcrbsqpeoraedf) has quit (Quit: Connection closed for inactivity)
2019-12-08 22:08:23	<--	Mat63 (ba8de1d1@186.141.225.209) has left #python
2019-12-08 22:08:37	w4|k3r	CoolerX: Your loop is restarting faster than the interrupt is to be handled is my opinion
2019-12-08 22:09:03	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 22:09:27	<--	nibble_zero (~nibble_ze@94.250.187.239) has quit (Ping timeout: 268 seconds)
2019-12-08 22:09:34	-->	funeral (~Funeral@246.109-247-210.customer.lyse.net) has joined #python
2019-12-08 22:10:18	<--	jaziz (~jaziz@unaffiliated/jaziz) has quit (Ping timeout: 245 seconds)
2019-12-08 22:10:31	<--	lbalhar (~lbalhar@93.185.13.26) has quit (Ping timeout: 265 seconds)
2019-12-08 22:10:46	<--	YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) has quit (Quit: YuGiOhJCJ)
2019-12-08 22:11:02	--	daz is now known as d42
2019-12-08 22:12:12	nedbat	CoolerX: or you could be catching the interrupt yourself.  Can you link us to your code?
2019-12-08 22:13:26	-->	multiproc (~mark@unaffiliated/multiproc) has joined #python
2019-12-08 22:13:46	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 268 seconds)
2019-12-08 22:14:51	-->	FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) has joined #python
2019-12-08 22:14:52	-->	mattfly (~matheus@191.55.80.11) has joined #python
2019-12-08 22:15:00	<--	mluser-home (~mluser-ho@cpe-107-11-253-108.columbus.res.rr.com) has quit (Ping timeout: 268 seconds)
2019-12-08 22:15:06	-->	alexsuraphel (~alexsurap@197.156.77.75) has joined #python
2019-12-08 22:15:28	-->	mintograde (~mintograd@47.201.168.46) has joined #python
2019-12-08 22:16:10	<--	dendazen (~dendazen@pool-72-76-93-243.nwrknj.fios.verizon.net) has quit (Remote host closed the connection)
2019-12-08 22:16:10	<--	sdu (~doo@80.107.69.175) has quit (Remote host closed the connection)
2019-12-08 22:16:39	-->	lockywolf_ (~lockywolf@95.85.18.95) has joined #python
2019-12-08 22:17:19	CoolerX	nedbat, it isn't specific
2019-12-08 22:17:36	CoolerX	I just had a long list of list of strings and tried to show it
2019-12-08 22:17:36	nedbat	CoolerX: what does that mean?
2019-12-08 22:17:58	-->	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has joined #python
2019-12-08 22:18:22	<--	lockywolf_ (~lockywolf@95.85.18.95) has quit (Max SendQ exceeded)
2019-12-08 22:18:25	nedbat	CoolerX: I just tried printing a list of 1 million numbers, and Ctrl-C stopped it.
2019-12-08 22:18:27	<--	Beam_Inn (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has quit (Remote host closed the connection)
2019-12-08 22:18:37	CoolerX	and it also happens when you are iterating over a pandas dataframe using iterrows and you are printing the index in each loop iteration           for index, row in self.data.iterrows():
2019-12-08 22:18:37	CoolerX	 print(index)
2019-12-08 22:18:43	<--	sauvin (sauvin@about/linux/staff/sauvin) has quit (K-Lined)
2019-12-08 22:18:43	-->	jokr (~jokr@124.123.72.176) has joined #python
2019-12-08 22:18:52	CoolerX	nedbat, list of list of long string
2019-12-08 22:18:53	CoolerX	s
2019-12-08 22:19:00	CoolerX	also this is over a remote connection
2019-12-08 22:19:02	-->	lockywolf_ (~lockywolf@95.85.18.95) has joined #python
2019-12-08 22:19:02	CoolerX	ssh
2019-12-08 22:19:04	CoolerX	so
2019-12-08 22:19:13	<--	lockywolf (~lockywolf@101.80.182.3) has quit (Ping timeout: 265 seconds)
2019-12-08 22:19:21	CoolerX	lots of strings, long strings
2019-12-08 22:19:33	nedbat	CoolerX: that might have something to do with it. The repl stops printing when you type Ctrl-C
2019-12-08 22:20:29	CoolerX	probably the entire message got buffered by ssh or something
2019-12-08 22:20:41	CoolerX	even before I hit Ctrl+C
2019-12-08 22:21:40	<--	lockywolf_ (~lockywolf@95.85.18.95) has quit (Remote host closed the connection)
2019-12-08 22:22:08	-->	lockywolf_ (~lockywolf@95.85.18.95) has joined #python
2019-12-08 22:22:24	nedbat	CoolerX: yes, that could be
2019-12-08 22:22:26	-->	especial (~especial@cm-84.214.231.176.getinternet.no) has joined #python
2019-12-08 22:24:10	_habnabit	CoolerX, that's one of the problems that mosh fixes
2019-12-08 22:24:10	-->	urodna (~urodna@unaffiliated/urodna) has joined #python
2019-12-08 22:25:03	CoolerX	>>> display: unable to open X server `' @ error/display.c/DisplayImageCommand/407.
2019-12-08 22:25:10	CoolerX	I get that error even with ssh -Y
2019-12-08 22:25:18	-->	drkvogel (569eb68a@86.158.182.138) has joined #python
2019-12-08 22:25:31	_habnabit	CoolerX, that doesn't sound like a python problem
2019-12-08 22:26:26	CoolerX	_habnabit, depends
2019-12-08 22:26:36	CoolerX	the server has X11Forwarding enabled
2019-12-08 22:26:49	<--	Jerrynicki (~niklas@p200300F573E87D002E7240BAFAD315CD.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-08 22:26:50	CoolerX	so if it is doing it properly I should be able to see the plot
2019-12-08 22:26:55	_habnabit	CoolerX, what's that have to do with python?
2019-12-08 22:27:16	-->	Jerrynicki (~niklas@p200300F573E87D002E7240BAFAD315CD.dip0.t-ipconnect.de) has joined #python
2019-12-08 22:27:17	CoolerX	it has something to do with matplotlib
2019-12-08 22:27:42	_habnabit	CoolerX, nope. diagnose the problem with a simpler X application like xman or xeyes
2019-12-08 22:27:48	-->	helderc (~helderc@S010664777d8ff843.cg.shawcable.net) has joined #python
2019-12-08 22:28:27	CoolerX	bash: xman: command not found
2019-12-08 22:28:33	CoolerX	bash: xeyes: command not found
2019-12-08 22:29:04	-->	somazero_ (~somazero@ip98-166-135-190.hr.hr.cox.net) has joined #python
2019-12-08 22:29:08	especial	http://paste.debian.net/1120106  could someone explain how come win10 use only half the memory of ubuntu?
2019-12-08 22:29:27	_habnabit	CoolerX, i don't really care to guess at what you do or don't have installed, but this isn't a python problem. you can install/use a simpler X program
2019-12-08 22:29:46	desu	CoolerX: you can tell matplotlib to render to file/terminal
2019-12-08 22:30:25	_habnabit	especial, sys.getsizeof is entirely useless; you can ignore it
2019-12-08 22:30:25	<--	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has quit (Ping timeout: 268 seconds)
2019-12-08 22:30:37	<--	nibble_zer0 (~nibble_ze@94.250.187.239) has quit (Ping timeout: 240 seconds)
2019-12-08 22:30:51	_habnabit	especial, but, if i were to take a wild guess, it's that one is running in 32-bit mode and the other is running in 64-bit mode
2019-12-08 22:31:34	-->	somazero__ (~somazero@ip98-166-135-190.hr.hr.cox.net) has joined #python
2019-12-08 22:31:39	<--	somazero (~somazero@ip98-166-135-190.hr.hr.cox.net) has quit (Ping timeout: 268 seconds)
2019-12-08 22:31:48	CoolerX	desu, how
2019-12-08 22:31:59	CoolerX	render to file I can do
2019-12-08 22:32:04	CoolerX	how do you render to terminal?
2019-12-08 22:32:09	desu	CoolerX: MPLBACKEND or matplotlib.use(...)
2019-12-08 22:32:27	-->	_salt (~salt@74.197.1.59) has joined #python
2019-12-08 22:32:41	-->	nibble_zero (~nibble_ze@94.250.187.239) has joined #python
2019-12-08 22:32:45	especial	thanks _habnabit win is 32 bits, not sure about ubuntus
2019-12-08 22:32:46	<--	BeerLover (~BeerLover@103.72.10.227) has quit (Remote host closed the connection)
2019-12-08 22:32:58	<--	bhoman (~quassel@pool-108-35-122-201.nwrknj.fios.verizon.net) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2019-12-08 22:33:17	CoolerX	_habnabit, according to this https://stackoverflow.com/questions/37288421/how-to-plot-a-chart-in-the-terminal
2019-12-08 22:33:18	especial	taking a python class and got surprised by that result
2019-12-08 22:33:28	CoolerX	DISPLAY=:0.0 ssh -Y <server ip> should work with matplotlib
2019-12-08 22:33:47	_habnabit	CoolerX, i'm sure it does, iff X is already working
2019-12-08 22:34:00	desu	if you have a local X server
2019-12-08 22:34:03	_habnabit	especial, sure. just remember that sys.getsizeof is entirely useless
2019-12-08 22:34:12	<--	somazero_ (~somazero@ip98-166-135-190.hr.hr.cox.net) has quit (Ping timeout: 265 seconds)
2019-12-08 22:34:13	CoolerX	not sure how to check if it IS working
2019-12-08 22:34:19	especial	is there a bitter way _habnabit ?
2019-12-08 22:34:22	_habnabit	CoolerX, as i said, run a simpler X application
2019-12-08 22:34:26	CoolerX	desu, well I don't since I am on windows 10
2019-12-08 22:34:32	desu	then it won't
2019-12-08 22:34:35	-->	somazero (~somazero@ip98-166-135-190.hr.hr.cox.net) has joined #python
2019-12-08 22:34:41	CoolerX	the server is ubuntu but my local laptop is windows
2019-12-08 22:34:45	_habnabit	especial, for measuring what?
2019-12-08 22:34:48	CoolerX	desu, hmmm
2019-12-08 22:34:49	CoolerX	annoying
2019-12-08 22:34:52	desu	Just render to svg/pdf and view that?
2019-12-08 22:35:00	especial	memory usage
2019-12-08 22:35:18	_habnabit	especial, look at your system's process viewer
2019-12-08 22:35:23	desu	if you have X on the remote, then you could also use vnc
2019-12-08 22:35:24	CoolerX	desu, not really feasible for hacky inspection
2019-12-08 22:35:37	CoolerX	jupyter to the rescue again
2019-12-08 22:35:38	desu	sure it is
2019-12-08 22:35:55	desu	could even export it over https and just point your browser at it
2019-12-08 22:35:57	CoolerX	desu, I don't want to create and open files for every single plot
2019-12-08 22:36:15	desu	CoolerX: don't have to write to disk
2019-12-08 22:36:41	<--	somazero__ (~somazero@ip98-166-135-190.hr.hr.cox.net) has quit (Ping timeout: 276 seconds)
2019-12-08 22:36:47	-->	nibble_zer0 (~nibble_ze@94.250.187.239) has joined #python
2019-12-08 22:37:03	-->	lbalhar (~lbalhar@93.185.13.25) has joined #python
2019-12-08 22:37:33	<--	nibble_zero (~nibble_ze@94.250.187.239) has quit (Ping timeout: 250 seconds)
2019-12-08 22:37:43	<--	drkvogel (569eb68a@86.158.182.138) has quit (Remote host closed the connection)
2019-12-08 22:38:11	-->	greedom (~greedom@2001:16b8:2e2c:8700:82aa:b2cf:9e87:33a0) has joined #python
2019-12-08 22:38:20	-->	nibble_zero (~nibble_ze@94.250.187.239) has joined #python
2019-12-08 22:38:24	<--	polman (~ananevtem@92.101.36.69) has quit (Read error: Connection reset by peer)
2019-12-08 22:38:56	-->	Vornicus (~Vornicus@2605:e000:1218:255d:1971:580d:344:254) has joined #python
2019-12-08 22:39:03	<--	Skripter (~Skripter@unaffiliated/skripter) has quit (Ping timeout: 245 seconds)
2019-12-08 22:39:29	-->	cdown (~cdown@89.32.122.5) has joined #python
2019-12-08 22:39:36	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 22:40:24	<--	edlinde (~edlinde@183.83.146.106) has quit (Quit: edlinde)
2019-12-08 22:41:14	<--	lsyoyom (~liny01@unaffiliated/lsyoyom) has quit (Quit: WeeChat 2.6)
2019-12-08 22:41:17	<--	nibble_zer0 (~nibble_ze@94.250.187.239) has quit (Ping timeout: 240 seconds)
2019-12-08 22:41:33	<--	lagothrix (~lagothrix@unaffiliated/lagothrix) has quit (Quit: lagothrix)
2019-12-08 22:42:13	-->	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined #python
2019-12-08 22:43:10	<--	somazero (~somazero@ip98-166-135-190.hr.hr.cox.net) has quit (Quit: Leaving)
2019-12-08 22:43:46	<--	ignaloidas_ (~ignaloida@158.129.26.113) has quit (Read error: Connection reset by peer)
2019-12-08 22:43:49	CoolerX	say whaaaaaaat? AttributeError: 'iterator' object has no attribute 'next'
2019-12-08 22:43:59	_habnabit	CoolerX, next(your_iterator)
2019-12-08 22:44:16	CoolerX	I know but myiter.next() was working I swear
2019-12-08 22:44:17	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 240 seconds)
2019-12-08 22:44:29	CoolerX	https://stackoverflow.com/questions/1073396/is-generator-next-visible-in-python-3-0
2019-12-08 22:44:29	_habnabit	CoolerX, sometimes it's present for python 2 compatibility
2019-12-08 22:44:44	CoolerX	was I using an old version of python? could have sworn it was 3.6.9
2019-12-08 22:45:01	_habnabit	CoolerX, no, but sometimes it's unconditionally present for compatibility
2019-12-08 22:45:10	<--	Bird|otherbox (~HTT-Bird@unaffiliated/htt-bird) has quit (Ping timeout: 252 seconds)
2019-12-08 22:45:12	CoolerX	then what happened now?
2019-12-08 22:45:20	CoolerX	still using the same python 3.6.9 repl
2019-12-08 22:45:26	_habnabit	CoolerX, you did it on a different object where it isn't present
2019-12-08 22:45:30	<--	dudek (~dudek@185.150.236.150) has quit (Quit: Leaving)
2019-12-08 22:45:38	ssbr_	CoolerX: some _types_ might choose to define next() even on Python 3
2019-12-08 22:45:50	CoolerX	_habnabit, the error message says iterator object
2019-12-08 22:45:52	ssbr_	but you should always use the next() function, even on python 2
2019-12-08 22:45:58	_habnabit	CoolerX, okay
2019-12-08 22:46:00	ssbr_	CoolerX: that means that the name of the class is `iterator`
2019-12-08 22:46:00	CoolerX	it should have it
2019-12-08 22:46:05	ssbr_	CoolerX: no, it shouldn't.
2019-12-08 22:46:17	ssbr_	On Python 3 the `next` method doesn't exist anymore.
2019-12-08 22:46:27	ssbr_	like, some classes might define it, but pretend they don't!
2019-12-08 22:46:52	CoolerX	ah ha testiter = iter(testloader)
2019-12-08 22:46:52	CoolerX	t_xs, t_ys = testiter.next()
2019-12-08 22:47:03	CoolerX	that code works, worked
2019-12-08 22:47:17	CoolerX	and it was working in the repl too (earlier)
2019-12-08 22:47:31	<--	basoares (~basoares@xdsl-188-155-153-246.adslplus.ch) has quit (Ping timeout: 250 seconds)
2019-12-08 22:47:36	CoolerX	oh wait
2019-12-08 22:47:46	ssbr_	CoolerX: it doesn't matter, use next(testiter)
2019-12-08 22:47:48	CoolerX	testloader is a DataLoader instance
2019-12-08 22:47:52	<--	maxwilliamson (~maxwillia@gateway/tor-sasl/maxwilliamson) has quit (Ping timeout: 260 seconds)
2019-12-08 22:47:57	-->	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has joined #python
2019-12-08 22:48:01	CoolerX	I was doing iter(Dataset instance)
2019-12-08 22:48:06	<--	iamNOTadog (~notadog@2804:7f4:c783:6051:564e:8020:d031:c5a4) has quit (Ping timeout: 252 seconds)
2019-12-08 22:48:13	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 265 seconds)
2019-12-08 22:48:26	CoolerX	ssbr_, it is weird that you can't enforce that .next should be there
2019-12-08 22:48:27	<--	fuzzmz (~fuzzmz@2a01:4f8:161:926b::2) has quit (Read error: Connection reset by peer)
2019-12-08 22:48:29	CoolerX	on an iterator
2019-12-08 22:48:34	-->	maxwilliamson (~maxwillia@gateway/tor-sasl/maxwilliamson) has joined #python
2019-12-08 22:48:37	_habnabit	CoolerX, why is that weird?
2019-12-08 22:48:44	-->	Darkhunter (~mmojzis@242.214.broadband18.iol.cz) has joined #python
2019-12-08 22:48:49	ssbr_	CoolerX: why would .next() exist on an iterator? iterators don't define .next() in python 3, they define a different function.
2019-12-08 22:48:52	CoolerX	isn't .next in the class definition of iterator?
2019-12-08 22:48:57	_habnabit	CoolerX, no
2019-12-08 22:48:57	ssbr_	CoolerX: no, that's what we've been saying
2019-12-08 22:49:02	ssbr_	CoolerX: use next(it), not it.next()
2019-12-08 22:49:03	<--	srandon111 (~srandon11@5.102.20.11) has quit (Read error: Connection reset by peer)
2019-12-08 22:49:07	-->	Xaldafax (~Xaldafax@cpe-104-34-193-119.socal.res.rr.com) has joined #python
2019-12-08 22:49:10	ssbr_	it.next() has been deprecated for the better part of a decade at least
2019-12-08 22:49:11	CoolerX	generator?
2019-12-08 22:49:20	ssbr_	CoolerX: not them either
2019-12-08 22:49:24	_habnabit	CoolerX, can you rephrase that as a complete sentence?
2019-12-08 22:49:25	ssbr_	just use the next function.
2019-12-08 22:49:39	ssbr_	there is nothing that will be solved by continuing to even remember that the .next method ever existed
2019-12-08 22:49:41	CoolerX	so what class defined .next
2019-12-08 22:49:46	CoolerX	in python 2
2019-12-08 22:49:48	ssbr_	CoolerX: iterators did. Back in like Python 2.4
2019-12-08 22:49:53	CoolerX	or python 3 older version
2019-12-08 22:49:57	CoolerX	ok
2019-12-08 22:50:01	_habnabit	CoolerX, no class did. it was an implicit protocol
2019-12-08 22:50:01	ssbr_	CoolerX: no, python 3 never did that
2019-12-08 22:50:06	-->	dethos (~dethos@83.223.169.117) has joined #python
2019-12-08 22:50:10	<--	philr (~phil@ppp14-2-90-166.adl-apt-pir-bras31.tpg.internode.on.net) has quit (Ping timeout: 268 seconds)
2019-12-08 22:50:15	-->	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has joined #python
2019-12-08 22:50:36	CoolerX	what exactly does iter() do?
2019-12-08 22:50:56	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-08 22:51:00	-->	iamNOTadog (~notadog@2804:7f4:c783:6051:564e:8020:d031:c5a4) has joined #python
2019-12-08 22:51:33	-->	indeedwatson (~yama@181.164.182.59) has joined #python
2019-12-08 22:51:36	ssbr_	CoolerX: it converts an iterable object into an iterator object.
2019-12-08 22:51:43	ssbr_	or rather, it returns an iterator for that iterable object.
2019-12-08 22:51:45	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 22:52:03	-->	mluser-home (~mluser-ho@cpe-107-11-253-108.columbus.res.rr.com) has joined #python
2019-12-08 22:52:04	ssbr_	(I shouldn't say "convert")
2019-12-08 22:52:20	-->	piperlester (~textual@217.138.200.172) has joined #python
2019-12-08 22:52:39	CoolerX	factory function?
2019-12-08 22:53:04	ssbr_	CoolerX: do you think "factory function" adds meaning to this explanation? I think it takes meaning away.
2019-12-08 22:53:10	ssbr_	A factory could be anything. this is very specific.
2019-12-08 22:53:14	<--	Twipply (~Twipply@unaffiliated/twipply) has quit (Ping timeout: 268 seconds)
2019-12-08 22:53:15	CoolerX	iterator factory
2019-12-08 22:53:26	_habnabit	CoolerX, i can't understand your fragments of sentences
2019-12-08 22:53:34	<--	xonox (~x@37.120.107.179) has quit (Quit: x_x)
2019-12-08 22:53:36	-->	srandon111 (~srandon11@5.102.20.11) has joined #python
2019-12-08 22:53:37	ssbr_	CoolerX: don't forget that the iterator for an iterator is the iterator itself: iter(it) is it.
2019-12-08 22:53:37	CoolerX	iter is an iterator factory
2019-12-08 22:53:39	nedbat	CoolerX: for whatever reason, "factory" seems to be a word that Java people like, and Python people don't like.
2019-12-08 22:53:41	-->	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has joined #python
2019-12-08 22:53:51	CoolerX	nedbat, well I can understand that
2019-12-08 22:53:52	ssbr_	Which makes "factory" a misleading word, as iter() might not create anything _new_ at all.
2019-12-08 22:53:55	<--	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has quit (Remote host closed the connection)
2019-12-08 22:54:07	CoolerX	anyway it makes and returns a object of instance iterator
2019-12-08 22:54:20	nedbat	CoolerX: it might not make a thing, it might just return the thing you gave it.
2019-12-08 22:54:22	ssbr_	CoolerX: it doesn't make anything necessarily. It quite often returns the object it was passed in.
2019-12-08 22:54:26	-->	Twipply (~Twipply@unaffiliated/twipply) has joined #python
2019-12-08 22:54:42	CoolerX	nedbat, well that is a special case
2019-12-08 22:54:44	nedbat	CoolerX: int() makes integers, unless you give it an integer, then it just gives it back to you.
2019-12-08 22:54:51	CoolerX	if you give it an iterator I presume
2019-12-08 22:55:01	nedbat	CoolerX: yes
2019-12-08 22:55:09	ssbr_	well, if you gave it something that wasn't an iterator, and it returned that thing, it would sure be wrong wouldn't it
2019-12-08 22:55:26	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2019-12-08 22:55:27	CoolerX	ssbr_, quite often?
2019-12-08 22:55:27	-->	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has joined #python
2019-12-08 22:55:28	-->	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has joined #python
2019-12-08 22:55:37	piperlester	Hello.  I'm trying to wrap my head around multiple references to the same table with sqlalchemy.  What I am trying to do is have the Team's information available when working with a pick (which relates to a Contest, which has multiple Teams).  In essence, I want to be able to iterate through all users, which makes available all Picks, which allows me to determine the pick and the appropriate results.  I am getting this error:
2019-12-08 22:55:38	piperlester	 sqlalchemy.exc.ArgumentError: Error creating backref 'team_1' on relationship 'Team.contest_id_t1': property of that name exists on mapper 'mapped class Contest->contest'.  My model definitions can be found here: https://pastebin.com/V2V0iYrE. Any help is appreciated!
2019-12-08 22:55:38	<--	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has quit (Remote host closed the connection)
2019-12-08 22:55:39	infobob	https://bpaste.net/show/YMASI (repasted for piperlester)
2019-12-08 22:55:40	CoolerX	are you talking about  for i in range(N):
2019-12-08 22:55:42	CoolerX	?
2019-12-08 22:55:54	ssbr_	CoolerX: it's almost a truism that most iterables are iterators.
2019-12-08 22:56:08	ssbr_	CoolerX: no, range is a sequence, not an iterator.
2019-12-08 22:56:20	CoolerX	range is a generator
2019-12-08 22:56:21	CoolerX	I thought
2019-12-08 22:56:25	ssbr_	CoolerX: it isn't.
2019-12-08 22:56:32	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2019-12-08 22:56:39	CoolerX	range doesn't construct the entire sequence
2019-12-08 22:56:48	ssbr_	CoolerX: that doesn't mean it's a generator.
2019-12-08 22:56:50	nedbat	CoolerX: it's a lazy iterable, like generators are.
2019-12-08 22:56:58	ssbr_	CoolerX: for example, try doing range(5)[2]. You can't do that with generators!
2019-12-08 22:57:03	CoolerX	why make a distinction?
2019-12-08 22:57:24	nedbat	CoolerX: as ssbr_ shows, ranges can do more than generators
2019-12-08 22:57:24	ssbr_	CoolerX: I make a distinction between things that are distinct, and I feel like that is a normal thing to do.
2019-12-08 22:57:34	nedbat	CoolerX: also, "1 in range(10)" works
2019-12-08 22:57:56	CoolerX	oh deep rabbit hole getting deeper
2019-12-08 22:58:02	ssbr_	CoolerX: conversely, generators can do many things that range cannot. For example, they can be sent exceptions, or yielded from
2019-12-08 22:58:10	<--	funeral (~Funeral@246.109-247-210.customer.lyse.net) has quit (Ping timeout: 268 seconds)
2019-12-08 22:58:13	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-08 22:58:27	-->	uksio (~uksio@p200300CB1BD0F18FC44F69A5AA296049.dip0.t-ipconnect.de) has joined #python
2019-12-08 22:58:31	ssbr_	the only things they share in common are a sense of laziness and iterability
2019-12-08 22:59:00	ssbr_	actually wait, you can yield from non-generators, oops
2019-12-08 22:59:10	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-08 22:59:12	ssbr_	(why did I think you couldn't do that?)
2019-12-08 22:59:30	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 22:59:57	-->	funeral (~Funeral@37.120.149.43) has joined #python
2019-12-08 23:00:16	CoolerX	doesn't yield turn the function into a generator?
2019-12-08 23:00:42	nedbat	CoolerX: ssbr_ means:   "yield from something":  something is any iterable
2019-12-08 23:00:46	-->	pcloadltr (~pcloadltr@185.229.59.215) has joined #python
2019-12-08 23:00:52	CoolerX	like https://bpaste.net/raw/32UQS
2019-12-08 23:00:58	CoolerX	taken from https://wiki.python.org/moin/Generators
2019-12-08 23:01:00	ssbr_	the issue is that "yield from x" means a very particular thing if x is a generator.
2019-12-08 23:01:11	ssbr_	and something kinda different if x is a non-generator iterable, I think.
2019-12-08 23:01:23	<--	uks (~uksio@p200300CB1BD0F1C724CBDAEE9CA1B18D.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2019-12-08 23:01:25	nedbat	ssbr_: does it? What's the difference?
2019-12-08 23:01:35	CoolerX	need some code to clarify this
2019-12-08 23:02:08	-->	AhmedAmerican (c488047f@gateway/web/cgi-irc/kiwiirc.com/ip.196.136.4.127) has joined #python
2019-12-08 23:02:35	-->	wikiemol (47c7e366@gateway/web/cgi-irc/kiwiirc.com/ip.71.199.227.102) has joined #python
2019-12-08 23:02:43	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 23:03:06	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 268 seconds)
2019-12-08 23:03:16	-->	glow8 (~mario@85.251.43.99.dyn.user.ono.com) has joined #python
2019-12-08 23:03:26	AhmedAmerican	i would like to only parse `<td align="middle">2.38518</td></tr>` and skip `<td align="middle" colspan="2" nowrap="">`
2019-12-08 23:03:52	AhmedAmerican	`for item in soup.findAll('td', {'align': 'right'}):` will keep getting all
2019-12-08 23:04:07	AhmedAmerican	`for item in soup.findAll('td', {'align': 'middl'}):` will keep getting all
2019-12-08 23:04:12	AhmedAmerican	middle "
2019-12-08 23:04:21	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-08 23:04:29	<--	alexsuraphel (~alexsurap@197.156.77.75) has quit (Remote host closed the connection)
2019-12-08 23:04:38	<--	rappet (~rappet@chizue.rappet.de) has quit (Ping timeout: 276 seconds)
2019-12-08 23:04:58	ssbr_	nedbat: forwarding in .send/.throw
2019-12-08 23:05:11	-->	Wr4i7h (~abcd@a85-139-227-182.cpe.netcabo.pt) has joined #python
2019-12-08 23:05:33	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-08 23:05:41	ssbr_	nedbat: if you wrapped a generator in a forwarding iterator, it'd change the behavior because .send/.throw wouldn't be sent over.
2019-12-08 23:06:00	ssbr_	I think.
2019-12-08 23:06:02	-->	rappet (~rappet@chizue.rappet.de) has joined #python
2019-12-08 23:06:04	nedbat	ssbr_: I see. i've never used send/throw
2019-12-08 23:06:14	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-08 23:06:20	ssbr_	nedbat: there's no reason to anymore. That entire part of Python should be deprecated now that async exists.
2019-12-08 23:06:46	nedbat	ssbr_: i almost did in a recent adventofcode puzzle, but i couldn't quite wrap my head around it
2019-12-08 23:06:57	ssbr_	imagine writing an async generator that used .send/.throw _as well as_ the async send/throw
2019-12-08 23:06:59	<--	stranac (~stranac@193.14.245.77) has quit (Read error: Connection reset by peer)
2019-12-08 23:07:07	ssbr_	if that were possible, which IIRC it isn't
2019-12-08 23:07:23	-->	stranac (~stranac@193.14.245.77) has joined #python
2019-12-08 23:07:31	<--	desu (~Urist@archlinux/op/pdpc.supporter.active.mrelendig) has quit (Quit: building a wall to keep the swedes out)
2019-12-08 23:07:32	ssbr_	where's my async yield from at
2019-12-08 23:07:53	ssbr_	https://stackoverflow.com/questions/47376408/why-cant-i-yield-from-inside-an-async-function
2019-12-08 23:07:57	<--	funeral (~Funeral@37.120.149.43) has quit (Ping timeout: 240 seconds)
2019-12-08 23:08:02	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 265 seconds)
2019-12-08 23:08:26	-->	parabolize (~paraboliz@c-76-25-97-149.hsd1.co.comcast.net) has joined #python
2019-12-08 23:09:24	CoolerX	so how does async work in python?
2019-12-08 23:09:29	CoolerX	is there an event loop?
2019-12-08 23:09:40	-->	htejeda (~Hoo@unaffiliated/htejeda) has joined #python
2019-12-08 23:09:58	-->	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has joined #python
2019-12-08 23:10:10	-->	funeral (~Funeral@246.109-247-210.customer.lyse.net) has joined #python
2019-12-08 23:10:16	-->	MrElendig (~Urist@archlinux/op/pdpc.supporter.active.mrelendig) has joined #python
2019-12-08 23:10:24	ssbr_	CoolerX: it's a fancy way to suspend control flow and resume it later when an event loop says to, yes
2019-12-08 23:10:52	-->	joshisanonymous (joshisanon@gateway/vpn/privateinternetaccess/joshisanonymous) has joined #python
2019-12-08 23:10:58	CoolerX	but only in programs that use async
2019-12-08 23:11:26	<--	AhmedAmerican (c488047f@gateway/web/cgi-irc/kiwiirc.com/ip.196.136.4.127) has quit (Remote host closed the connection)
2019-12-08 23:11:49	ssbr_	CoolerX: what are you asking?
2019-12-08 23:11:54	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-08 23:11:55	ssbr_	CoolerX: yes, async only exists in programs that use async.
2019-12-08 23:12:28	CoolerX	If I don't use the async package and no dependency of mine uses async then there should be no event loop
2019-12-08 23:12:30	-->	polman (~ananevtem@92.101.36.69) has joined #python
2019-12-08 23:12:44	ikanobori	There's no 'async' package and you have to start a loop manually.
2019-12-08 23:12:47	ikanobori	So there isn't.
2019-12-08 23:13:06	-->	alexsuraphel (~alexsurap@197.156.77.75) has joined #python
2019-12-08 23:13:11	-->	john_89 (598e8aee@gateway/web/cgi-irc/kiwiirc.com/ip.89.142.138.238) has joined #python
2019-12-08 23:13:14	ikanobori	Even if a loop were to be implicit it'd only start if you actually awaited something anyways.
2019-12-08 23:13:47	CoolerX	the async keyword
2019-12-08 23:13:55	-->	bhoman (~quassel@pool-108-35-122-201.nwrknj.fios.verizon.net) has joined #python
2019-12-08 23:14:38	ssbr_	CoolerX: the async keyword is just syntax for creating things that suspend control flow and can be resumed later.
2019-12-08 23:14:56	-->	mmfood (~mmfood@81-232-132-159-no64.tbcn.telia.com) has joined #python
2019-12-08 23:15:03	CoolerX	like a generator
2019-12-08 23:15:06	-->	AhmedAmerican (c488047f@gateway/web/cgi-irc/kiwiirc.com/ip.196.136.4.127) has joined #python
2019-12-08 23:15:14	ikanobori	Like a generator.
2019-12-08 23:15:23	AhmedAmerican	someone help pls https://bpaste.net/show/Z5ELI
2019-12-08 23:16:05	Wulf	AhmedAmerican: will the loop run twice?
2019-12-08 23:16:09	ikanobori	CoolerX: The terms are honestly the most confusing part about all of the cooperative multitasking idioms.
2019-12-08 23:16:13	Wulf	AhmedAmerican: or do you get the result during the first iteration?
2019-12-08 23:16:14	nedbat	AhmedAmerican: what is special about the first one? Why do you want it only?
2019-12-08 23:16:15	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2019-12-08 23:16:15	-->	__marco (~marco@2a02:678:588:f800:e6a4:71ff:fef2:bce6) has joined #python
2019-12-08 23:16:44	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2019-12-08 23:16:59	AhmedAmerican	first one hold rate `1.02786`
2019-12-08 23:17:26	-->	soniya29 (~soniya@2409:4042:2684:adcf:316f:ddcd:7c6a:cc9d) has joined #python
2019-12-08 23:17:40	AhmedAmerican	second `usually` hold a text while `strong` is in
2019-12-08 23:17:48	john_89	Hello, did anyone used tensorflow? I would like to know if the tensorflow library uses deep learning methods? Or is it using backpropagation algorithm, or both?
2019-12-08 23:17:51	CoolerX	hmm this different from what I expected https://docs.python.org/3/library/asyncio-task.html#awaitables
2019-12-08 23:17:55	nedbat	AhmedAmerican: i'll guess that you want particular columns from a table?
2019-12-08 23:18:02	ikanobori	Python generators are often called coroutines in other languages and coroutines add some other stuff that makes them do other things.
2019-12-08 23:18:18	AhmedAmerican	nedbat let me get repl on. hold on :P
2019-12-08 23:18:29	CoolerX	# Nothing happens if we just call "nested()".
2019-12-08 23:18:30	CoolerX	    # A coroutine object is created but not awaited,
2019-12-08 23:18:30	CoolerX	    # so it *won't run at all*.
2019-12-08 23:18:37	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-08 23:18:44	ssbr_	CoolerX: just like generators
2019-12-08 23:18:50	CoolerX	so await doesn't just suspend it also causes execution
2019-12-08 23:18:58	ssbr_	CoolerX: no it doesn't.
2019-12-08 23:18:59	ikanobori	Correct, calling an async def will return a coroutine one can await. Same as a generator returning a generator that can be used.
2019-12-08 23:19:09	CoolerX	ssbr_, without await it won't run
2019-12-08 23:19:20	ssbr_	CoolerX: it also won't run with await, _unless someone else runs it_
2019-12-08 23:19:32	-->	nicolasnicolas (~nicolasni@167.99.80.52) has joined #python
2019-12-08 23:19:41	AhmedAmerican	nedbat https://repl.it/@AmericanY/Nedbat
2019-12-08 23:19:47	-->	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-27.dsl.bell.ca) has joined #python
2019-12-08 23:19:48	CoolerX	ssbr_, what?
2019-12-08 23:20:10	CoolerX	are you talking about the first code example here? https://docs.python.org/3/library/asyncio-task.html#awaitables
2019-12-08 23:20:10	ikanobori	CoolerX: Coroutines get executed by an event loop. Awaiting it just schedules it on the loop to be ran at an undertermined time.
2019-12-08 23:20:14	ssbr_	CoolerX: if you do "await nested()", all that does is suspend execution and pass the return value of nested() back up to whatever was calling you.
2019-12-08 23:20:21	<--	sborza (~sborza@fedora/sborza) has quit (Quit: laterz)
2019-12-08 23:20:34	-->	delvian (~delvian@41.13.228.203) has joined #python
2019-12-08 23:20:39	CoolerX	ikanobori, I wasn't talking about synchronous execution
2019-12-08 23:20:40	ssbr_	CoolerX: it's the responsibility of that thing to then do something with nested's return value. await, itself, does not do work.
2019-12-08 23:20:50	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 23:21:12	<--	Lucas_Gray (~Wryhder@197.210.85.188) has quit (Read error: Connection reset by peer)
2019-12-08 23:21:51	CoolerX	ssbr_, pass the return value of nested? it queues up nested and yields
2019-12-08 23:21:57	<--	[itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) has quit (Remote host closed the connection)
2019-12-08 23:21:58	-->	Lucas_Gray (~Wryhder@197.210.57.73) has joined #python
2019-12-08 23:22:03	CoolerX	you don't get the return value until it is executed
2019-12-08 23:22:07	CoolerX	and finishes
2019-12-08 23:22:49	AhmedAmerican	Wulf https://repl.it/@AmericanY/Nedbat
2019-12-08 23:22:54	<--	htejeda (~Hoo@unaffiliated/htejeda) has left #python ("Leaving")
2019-12-08 23:22:55	ssbr_	CoolerX: and how do you think nested is queued up?
2019-12-08 23:23:04	-->	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has joined #python
2019-12-08 23:23:04	<--	wikiemol (47c7e366@gateway/web/cgi-irc/kiwiirc.com/ip.71.199.227.102) has quit (Remote host closed the connection)
2019-12-08 23:23:11	<--	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has quit (Quit: Leaving)
2019-12-08 23:23:16	<--	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has quit (Quit: Leaving.)
2019-12-08 23:23:17	ssbr_	CoolerX: how does anything know to pass its result back when the function is resumed?
2019-12-08 23:23:25	ssbr_	"await" just tells things to the caller.
2019-12-08 23:23:33	nedbat	AhmedAmerican: that doesn't answer my question.
2019-12-08 23:23:48	-->	k0mmo (~k0mmo@unaffiliated/k0mmo) has joined #python
2019-12-08 23:24:07	nedbat	AhmedAmerican: forget about the code for a bit. As a person, looking at that HTML, how did you decide you wanted one table cell, and not another table cell?
2019-12-08 23:24:55	AhmedAmerican	the table cell which I'm looking for it. hold the same shape. while the others usually different
2019-12-08 23:25:13	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 250 seconds)
2019-12-08 23:25:46	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 23:25:58	-->	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined #python
2019-12-08 23:26:46	nedbat	AhmedAmerican: i'm sorry, i don't know what that means
2019-12-08 23:26:57	AhmedAmerican	nedbat https://bpaste.net/show/YNDFY
2019-12-08 23:26:58	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2019-12-08 23:27:36	nedbat	AhmedAmerican: yes. Can you tell me in English why some are interesting to you, and others are not?
2019-12-08 23:27:46	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-08 23:28:17	AhmedAmerican	well @nedbat am taking time to tell you that i want to skip any td hold strong.
2019-12-08 23:28:28	CoolerX	if I do [foo(x) for x in range(N)] is that deterministic?
2019-12-08 23:28:36	CoolerX	it will go in order right?
2019-12-08 23:28:45	AhmedAmerican	alright i will do if condition if <strong is not there, i was wondering if there's different way
2019-12-08 23:28:46	CoolerX	0, 1, 2, ..., N - 1
2019-12-08 23:28:49	-->	Skripter (~Skripter@unaffiliated/skripter) has joined #python
2019-12-08 23:29:20	CoolerX	ssbr_, probably a continuation
2019-12-08 23:29:32	<--	hemstock (~hemstock@46-213-09.internethome.cytanet.com.cy) has quit (Ping timeout: 252 seconds)
2019-12-08 23:30:03	CoolerX	is it ok to have sideeffects in foo? [foo(x) for x in range(N)]
2019-12-08 23:30:05	ssbr_	CoolerX: continuations are a generalization of what happens with generators/awaitable coroutines
2019-12-08 23:30:13	ssbr_	CoolerX: that isn't a good idea no
2019-12-08 23:30:15	CoolerX	will it execute in order?
2019-12-08 23:30:16	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-08 23:30:17	ssbr_	yes
2019-12-08 23:30:33	CoolerX	so it should be fine
2019-12-08 23:30:54	ssbr_	CoolerX: that doesn't make it good taste :)
2019-12-08 23:31:03	ssbr_	CoolerX: are you also using the list?
2019-12-08 23:31:17	<--	framend (~framend@unaffiliated/framend) has quit (Ping timeout: 250 seconds)
2019-12-08 23:31:38	CoolerX	ssbr_, I will refactor it
2019-12-08 23:31:44	ssbr_	CoolerX: what does that even mean?
2019-12-08 23:31:48	ssbr_	are you also using the list?
2019-12-08 23:31:51	offby1	CoolerX: side effects are bad.  Not because they'll make your program crash, but because they'll surprise and confuse most people -- including you -- who read the code
2019-12-08 23:32:01	CoolerX	ssbr_, I mean I will refactor this code later
2019-12-08 23:32:14	-->	framend (~framend@unaffiliated/framend) has joined #python
2019-12-08 23:32:17	ssbr_	whatever, I don't care, don't answer my questions then.
2019-12-08 23:32:30	CoolerX	and yes I am using the list
2019-12-08 23:32:42	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-08 23:33:26	-->	Kelzorz (~Kelzorz@67.6.83.103) has joined #python
2019-12-08 23:33:45	-->	Silmarilion (~Silmarili@87.116.177.1) has joined #python
2019-12-08 23:33:47	blackleitus	why am I getting the error from file sized at the moment to add `while counter < self.max_results:`? when our counter is less than our max results to download  `Discarding file as it's bigger than maximum size (1024 kbs)`
2019-12-08 23:33:47	blackleitus	https://dpaste.org/U9Wd
2019-12-08 23:35:29	<--	john_89 (598e8aee@gateway/web/cgi-irc/kiwiirc.com/ip.89.142.138.238) has quit (Remote host closed the connection)
2019-12-08 23:37:23	InPhase	blackleitus: Insert print(response.headers.get('content-length')) right before line 44 and rerun so you know what's actually happening.
2019-12-08 23:37:57	InPhase	blackleitus: Or better, print('content-length is:', response.headers.get('content-length'))
2019-12-08 23:38:18	nedbat	blackleitus: can we talk about your error handling?
2019-12-08 23:39:11	-->	xcava (~xcava@net-93-151-212-86.cust.vodafonedsl.it) has joined #python
2019-12-08 23:39:27	InPhase	Yeah, there are some broader problems there.  You can't compare to None after you've already done an integer comparison.
2019-12-08 23:39:32	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2019-12-08 23:39:41	CoolerX	how do you do this?
2019-12-08 23:39:45	CoolerX	you have lines
2019-12-08 23:39:57	CoolerX	which is a list of strings
2019-12-08 23:40:12	-->	gloomy (~Gloomy@x4d0bbca5.dyn.telefonica.de) has joined #python
2019-12-08 23:40:12	CoolerX	some of those strings could be entirely whitespace
2019-12-08 23:40:22	CoolerX	need to split those strings into words
2019-12-08 23:40:29	CoolerX	and get rid of empty
2019-12-08 23:40:51	CoolerX	lines = [line.split() for line in lines if len(line) > 0]
2019-12-08 23:40:59	blackleitus	this what I am getting https://dpaste.org/6CrS
2019-12-08 23:41:01	CoolerX	could have some entries which are []
2019-12-08 23:41:25	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 23:41:42	CoolerX	lines = [line.split() for line in lines if len(line) > 0 and len(line.split()) > 0]
2019-12-08 23:42:00	CoolerX	would be nice to store that line.split() and not do it twice
2019-12-08 23:42:02	InPhase	blackleitus: So it is discarding one that are bigger than 1024kB, like it says it should do.
2019-12-08 23:42:03	blackleitus	https://dpaste.org/WKKf
2019-12-08 23:42:55	blackleitus	if you look bytes are given in int , and it is giving me `10` values , but it is only printing max size
2019-12-08 23:44:28	InPhase	blackleitus: It's doing exactly what it says it will do.  What were you expecting?
2019-12-08 23:44:33	<--	teksimian (~teksimian@172-97-139-243.cpe.distributel.net) has quit (Remote host closed the connection)
2019-12-08 23:45:27	ce6	hey does anyone  here know much about the use-it or lose-it recursion concept?
2019-12-08 23:45:36	blackleitus	I am waiting to give me `while counter < self.max_results:
2019-12-08 23:45:36	blackleitus	` the loop conditional from while
2019-12-08 23:46:08	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 245 seconds)
2019-12-08 23:46:26	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-08 23:46:44	-->	ZedHeadTed| (IReticentI@gateway/shell/xshellz/x-fooarmgkwfhgceie) has joined #python
2019-12-08 23:47:27	blackleitus	if I change as someone told me yesterday `len()` I got nothing
2019-12-08 23:47:30	-->	Boko_dbaba (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has joined #python
2019-12-08 23:47:57	-->	LightTate (~LightTate@46.97.169.61) has joined #python
2019-12-08 23:48:04	LightTate	yo
2019-12-08 23:48:10	<--	polman (~ananevtem@92.101.36.69) has quit (Read error: Connection reset by peer)
2019-12-08 23:48:31	LightTate	I come froma a far far place
2019-12-08 23:48:36	<--	Boko_dbaba (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has quit (Read error: Connection reset by peer)
2019-12-08 23:48:45	LightTate	how good is the sec of this network ?
2019-12-08 23:48:57	ce6	lighttate it's freenode
2019-12-08 23:49:30	<--	joshisanonymous (joshisanon@gateway/vpn/privateinternetaccess/joshisanonymous) has quit (Quit: Leaving)
2019-12-08 23:49:54	InPhase	blackleitus: Do me a favor.  Replace that pass after your except with:  import traceback    print(traceback.format_exc())
2019-12-08 23:50:10	<--	greatgatsby (~greatgats@xplr-104-249-240-116.xplornet.com) has quit (Quit: Leaving)
2019-12-08 23:50:15	novum	LightTate, I `/ctcp LightTate ping`d you and you have about 1s delay. you're on relay chat, though, so anything below 200 seconds of lag is good enough :)
2019-12-08 23:50:17	-->	lxbarbosa (~user@2804:1b2:81:c7f6:ae43:1fee:5f96:4bf6) has joined #python
2019-12-08 23:50:28	blackleitus	which one?
2019-12-08 23:50:32	-->	scurfee (~scurfee@broadband-77-37-146-212.ip.moscow.rt.ru) has joined #python
2019-12-08 23:50:34	blackleitus	expect or if ?
2019-12-08 23:50:47	InPhase	blackleitus: The pass after the except.
2019-12-08 23:50:53	blackleitus	okay
2019-12-08 23:50:57	LightTate	:D
2019-12-08 23:51:13	<--	lxbarbosa (~user@2804:1b2:81:c7f6:ae43:1fee:5f96:4bf6) has quit (Remote host closed the connection)
2019-12-08 23:51:15	InPhase	It's okay to catch exception and keep going, but catching and ignoring is just asking to hurt yourself.
2019-12-08 23:51:55	-->	sincorchetes (~sincorche@unaffiliated/sincorchetes) has joined #python
2019-12-08 23:52:16	InPhase	The import can go at the top.
2019-12-08 23:52:35	LightTate	working on an adventure game
2019-12-08 23:52:48	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2019-12-08 23:52:53	LightTate	text based*
2019-12-08 23:52:59	<--	mikami (~scurfee@broadband-77-37-146-212.ip.moscow.rt.ru) has quit (Ping timeout: 265 seconds)
2019-12-08 23:53:19	blackleitus	it doesnt show up the error
2019-12-08 23:53:21	-->	lxbarbosa (~user@2804:1b2:81:c7f6:ae43:1fee:5f96:4bf6) has joined #python
2019-12-08 23:53:23	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-08 23:53:44	LightTate	It's my first complex program so it's going to take a wile
2019-12-08 23:53:47	-->	Boko_edada (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has joined #python
2019-12-08 23:53:49	blackleitus	I also change to raise e
2019-12-08 23:53:57	<--	dougquaid (dougquaid@gateway/vpn/privateinternetaccess/dougquaid) has quit (Ping timeout: 240 seconds)
2019-12-08 23:54:48	LightTate	so many peps
2019-12-08 23:57:00	nedbat	ce6: what is "use-it or lose-it" in this context?
2019-12-08 23:57:11	blackleitus	I found it
2019-12-08 23:57:24	LightTate	ping
2019-12-08 23:57:28	LightTate	pong
2019-12-08 23:57:49	blackleitus	`TypeError: '<' not supported between instances of 'int' and 'str'
2019-12-08 23:57:50	blackleitus	`
2019-12-08 23:58:13	ce6	nedbat it's a change making problem. i have a solution i just dont understand it too well
2019-12-08 23:58:21	ChrisWarrick	blackleitus: You cannot compare strings and numbers.
2019-12-08 23:58:34	blackleitus	how can I compare it?
2019-12-08 23:58:37	<--	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has quit (Ping timeout: 240 seconds)
2019-12-08 23:58:44	<--	Boko_edada (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has quit (Write error: Connection reset by peer)
2019-12-08 23:58:46	ChrisWarrick	blackleitus: what are you trying to compare?
2019-12-08 23:58:47	LightTate	Novum are you an old user of this network ?
2019-12-08 23:58:57	ce6	i posted a stack overflow question about it and it went unanswered so ill paste it here
2019-12-08 23:59:00	blackleitus	I am trying to compare my counter against max results
2019-12-08 23:59:11	ce6	nedbat: https://stackoverflow.com/questions/59232255/i-cant-understand-the-use-it-or-lose-it-concept-change-making-problem
2019-12-08 23:59:20	<--	shady_traveller (~shady_tra@80.169.46.234) has quit (Quit: WeeChat 1.4)
2019-12-08 23:59:21	blackleitus	max results is an argument from command line while counter is the files downloaded
2019-12-08 23:59:32	ChrisWarrick	blackleitus: command-line arguments are strings, you’d need to make them integers
2019-12-08 23:59:48	ChrisWarrick	blackleitus: max_results = int(max_results_from_command_line)
2019-12-09 00:00:02	blackleitus	isnt that like variables ?
2019-12-09 00:00:14	<--	xcava (~xcava@net-93-151-212-86.cust.vodafonedsl.it) has quit (Quit: Leaving)
2019-12-09 00:00:17	ChrisWarrick	blackleitus: huh?
2019-12-09 00:00:52	<--	AhmedAmerican (c488047f@gateway/web/cgi-irc/kiwiirc.com/ip.196.136.4.127) has quit (Remote host closed the connection)
2019-12-09 00:01:11	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 00:02:13	blackleitus	if I declare a = 1 , type(a) = int , and command line string
2019-12-09 00:02:16	<--	Skripter (~Skripter@unaffiliated/skripter) has quit (Quit: Leaving)
2019-12-09 00:02:54	<--	mikekutz_ (~kutz@pool-96-250-117-189.nycmny.fios.verizon.net) has quit (Quit: WeeChat 2.6)
2019-12-09 00:02:56	-->	dougquaid (dougquaid@gateway/vpn/privateinternetaccess/dougquaid) has joined #python
2019-12-09 00:02:59	ChrisWarrick	blackleitus: you get strings from the command line, yes.  you can convert between types.
2019-12-09 00:03:27	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 00:03:29	blackleitus	let me check something
2019-12-09 00:06:06	novum	LightTate, the oldest. no one is older than me on irc. my hands are big. I know people they say my I am great and that I am the oldest irc user. those people are great. they know that I know that I am the best and oldest irc user.
2019-12-09 00:07:02	LightTate	is that a copy pasta ? Novum :D
2019-12-09 00:07:16	-->	joshisanonymous (~joshisano@2600:6c5a:457f:c4b5:49:1f6e:e28:aa9f) has joined #python
2019-12-09 00:07:37	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Ping timeout: 240 seconds)
2019-12-09 00:08:11	nedbat	LightTate: why are you asking about the network? #freebode might be a better channel for questions about Freenode
2019-12-09 00:08:34	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 250 seconds)
2019-12-09 00:08:56	LightTate	thanks NedBat
2019-12-09 00:09:18	-->	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has joined #python
2019-12-09 00:10:20	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-09 00:10:23	-->	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:9463:a896:20b:3ef4) has joined #python
2019-12-09 00:10:30	novum	LightTate, also try #freenode since #freebode may not .. bode well .. since there will probably be no one in there
2019-12-09 00:10:50	LightTate	saw that typo
2019-12-09 00:11:00	nedbat	oops
2019-12-09 00:11:06	novum	bednat, :D
2019-12-09 00:11:17	ce6	i wish there was a recursion channel
2019-12-09 00:11:30	ce6	but i might get an out of range answer so
2019-12-09 00:11:31	LightTate	I wish I was a genius
2019-12-09 00:11:42	blackleitus	some doubt , if I want to pass from aa to zz to my char field . how can I say if its download all pdfs or x extension from given string . in this case `aa` next `ab` etc. https://dpaste.org/h5iX
2019-12-09 00:12:15	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 00:12:25	<--	k0mmo (~k0mmo@unaffiliated/k0mmo) has quit (Quit: Leaving)
2019-12-09 00:12:35	novum	you mean 'jenius'? it's spelled with a 'j' after my middle name. everyone knows that. I know people they say I am a jenius. Your hair smells bad.
2019-12-09 00:13:59	-->	vlad-k (uid269188@gateway/web/irccloud.com/x-fekedgmtcftdkcjd) has joined #python
2019-12-09 00:14:19	<--	Lucas_Gray (~Wryhder@197.210.57.73) has quit (Read error: Connection reset by peer)
2019-12-09 00:14:59	<--	xrogaan (~xrogaan@unaffiliated/xrogaan) has quit (Quit: Leaving)
2019-12-09 00:16:37	-->	audioburn (~audioburn@unaffiliated/theology) has joined #python
2019-12-09 00:17:26	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 276 seconds)
2019-12-09 00:17:34	<--	vlad-k (uid269188@gateway/web/irccloud.com/x-fekedgmtcftdkcjd) has quit (Client Quit)
2019-12-09 00:17:57	<--	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has quit (Remote host closed the connection)
2019-12-09 00:18:06	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-09 00:18:12	-->	Skripter (~Skripter@unaffiliated/skripter) has joined #python
2019-12-09 00:18:25	-->	subho (~subho@fedora/subho) has joined #python
2019-12-09 00:18:44	-->	ap4lmtree (ap4lmtree@unaffiliated/ap4lmtree) has joined #python
2019-12-09 00:19:16	-->	Lucas_Gray (~Wryhder@197.210.52.34) has joined #python
2019-12-09 00:20:31	<--	nicolasnicolas (~nicolasni@167.99.80.52) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 00:20:44	<--	LightTate (~LightTate@46.97.169.61) has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
2019-12-09 00:21:30	-->	mcsippel (~mcsippel@97-93-29-122.dhcp.snlo.ca.charter.com) has joined #python
2019-12-09 00:22:03	<--	alexsuraphel (~alexsurap@197.156.77.75) has quit (Remote host closed the connection)
2019-12-09 00:22:47	-->	BeerLover (~BeerLover@103.72.10.227) has joined #python
2019-12-09 00:23:09	<--	RandomGuyOnIrc (~RandomGuy@159.203.179.249) has quit (Quit: leaving)
2019-12-09 00:24:47	-->	basoares (~basoares@xdsl-188-155-153-246.adslplus.ch) has joined #python
2019-12-09 00:25:28	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-09 00:25:51	ce6	nedbat any ideas lol
2019-12-09 00:27:06	<--	Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) has quit (Quit: AmigaOSv4.1.6+//PowerPC native)
2019-12-09 00:27:36	-->	Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) has joined #python
2019-12-09 00:28:20	altendky	are there good options other than building it yourself to get openssl <1.1 for pyenv installing 3.4 on ubuntu eoan?.
2019-12-09 00:28:44	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined #python
2019-12-09 00:29:53	<--	courrier (~yoan@147.210.204.186) has quit (Ping timeout: 245 seconds)
2019-12-09 00:30:16	<--	basoares (~basoares@xdsl-188-155-153-246.adslplus.ch) has quit (Ping timeout: 250 seconds)
2019-12-09 00:30:52	-->	saint__ (~saint_@unaffiliated/saint-/x-0540772) has joined #python
2019-12-09 00:30:55	<--	Lucas_Gray (~Wryhder@197.210.52.34) has quit (Read error: Connection reset by peer)
2019-12-09 00:30:58	-->	alexsuraphel (~alexsurap@197.156.77.75) has joined #python
2019-12-09 00:31:26	-->	medard (~medard@chello085216234107.chello.sk) has joined #python
2019-12-09 00:32:05	-->	jcarl43 (~jcarl@S01061c1b689d9d2f.vc.shawcable.net) has joined #python
2019-12-09 00:32:33	<--	saint_ (~saint_@unaffiliated/saint-/x-0540772) has quit (Ping timeout: 268 seconds)
2019-12-09 00:33:42	<--	lbalhar (~lbalhar@93.185.13.25) has quit (Ping timeout: 250 seconds)
2019-12-09 00:34:00	altendky	ce6: the addition only happens after you reach amount == 0.  you have `1 + change()` so the `+` can only happen after `change()` has returned which only happens after any call it makes to `change()` has returned, etc.
2019-12-09 00:39:28	--	irc: disconnected from server
2019-12-09 00:40:01	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-09 00:40:01	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-09 00:40:01	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-09 00:40:02	--	Channel #python: 1816 nicks (0 ops, 0 voices, 1816 normals)
2019-12-09 00:40:21	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-09 00:40:29	<--	glow8 (~mario@85.251.43.99.dyn.user.ono.com) has quit (Quit: WeeChat 2.6)
2019-12-09 00:40:41	-->	edlinde (~edlinde@183.83.146.106) has joined #python
2019-12-09 00:40:50	<--	indeedwatson (~yama@181.164.182.59) has quit (Ping timeout: 276 seconds)
2019-12-09 00:41:08	-->	iKON (~iKON@c-73-232-163-154.hsd1.tx.comcast.net) has joined #python
2019-12-09 00:41:17	<--	Lucas_Gray (~Wryhder@197.210.52.48) has quit (Ping timeout: 240 seconds)
2019-12-09 00:41:33	-->	fphilipe_ (~phil@81.6.34.65) has joined #python
2019-12-09 00:43:12	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 00:43:47	ce6	altendky so the + 1 is where we are using it and the statement removing a coin from the list is losing it?
2019-12-09 00:44:47	InPhase	ce6: Looks like you're using a reuse-it-or-lose-it algorithm.  Which is fine, that works for your problem.  handy is the reuse it case, handy2 is the lose it case, because the coin is lost from the list of possible coins.  However you have a second deviation because of your stop-reusing case under if, where you only lose it and don't reuse it.
2019-12-09 00:44:57	-->	BeerLove_ (~BeerBuddy@103.72.10.227) has joined #python
2019-12-09 00:45:26	<--	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has quit (Quit: Leaving)
2019-12-09 00:45:40	ce6	i see
2019-12-09 00:45:47	rendar	Successfully installed youtube-dl-2019.11.28
2019-12-09 00:45:48	rendar	 [rendar@tilt ~]0$  youtube-dl --version
2019-12-09 00:45:48	rendar	2019.01.17
2019-12-09 00:45:52	rendar	why is that?!
2019-12-09 00:46:03	InPhase	ce6: You can't hammer it into the simple case simply because it's a slightly different algorithm.  The real world is like that though, any time a problem doesn't exactly fit the textbook model.
2019-12-09 00:46:11	rendar	with pip i can install and update the package to the latest version, but when i launch the program it's the old version
2019-12-09 00:47:00	<--	therue (~rue@1-162-40-115.dynamic-ip.hinet.net) has quit (Quit: WeeChat 2.6)
2019-12-09 00:47:57	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2019-12-09 00:48:03	-->	flighteng (~flighteng@c-66-235-25-210.sea.wa.customer.broadstripe.net) has joined #python
2019-12-09 00:48:06	<--	jlf (~user@pdpc/supporter/active/jlf) has quit (Ping timeout: 265 seconds)
2019-12-09 00:48:07	_habnabit	rendar, your $PATH contains either both with the old version first or only the old version
2019-12-09 00:48:18	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-12-09 00:48:45	rendar	$  which youtube-dl
2019-12-09 00:48:45	rendar	/usr/bin/youtube-dl
2019-12-09 00:48:47	ce6	inphase, so it runs through the use branch first, then the lose it branch?
2019-12-09 00:48:50	rendar	that's all...
2019-12-09 00:49:05	_habnabit	rendar, which won't list >1 unless you do which -a
2019-12-09 00:49:05	rendar	_habnabit: shouldn't update update the old version?
2019-12-09 00:49:18	_habnabit	rendar, pip doesn't/can't change your $PATH
2019-12-09 00:49:31	altendky	rendar: don't run your system pip
2019-12-09 00:49:32	rendar	uhm
2019-12-09 00:50:15	-->	veevax (~veevax@212-198-32-77.rev.numericable.fr) has joined #python
2019-12-09 00:50:40	-->	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has joined #python
2019-12-09 00:51:33	InPhase	ce6: Recursion goes depth first, so it will use until it has to lose, then use as far as it can with one loss, and so on.
2019-12-09 00:52:20	_habnabit	rendar, ?
2019-12-09 00:52:38	-->	Ai9zO5AP (~BQcdf9eiZ@41.143.216.253) has joined #python
2019-12-09 00:52:47	rendar	_habnabit: yes it was the PATH thing, thanks
2019-12-09 00:52:48	rendar	solved
2019-12-09 00:52:56	InPhase	ce6: Although you could reorder the reuse and lose lines under the else, and the same result will be returned in the same time.  Both have to run eventually.
2019-12-09 00:53:40	-->	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has joined #python
2019-12-09 00:53:49	<--	Cabanossi (~Cabanossi@ppp-88-217-77-71.dynamic.mnet-online.de) has quit (Quit: Bye, bye...)
2019-12-09 00:54:15	-->	con3 (~kvirc@165.255.109.189) has joined #python
2019-12-09 00:54:20	ce6	inphase is the graph i have misleading? does the function actually know the return value yet
2019-12-09 00:54:36	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Ping timeout: 252 seconds)
2019-12-09 00:55:08	-->	Boko_eebaa (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has joined #python
2019-12-09 00:55:30	InPhase	ce6: The graph is fine, you just have to understand it's a depth-first tree traversal of that graph.
2019-12-09 00:55:57	-->	indeedwatson (~yama@181.164.182.59) has joined #python
2019-12-09 00:56:00	ce6	i see the order of execution with the arrows
2019-12-09 00:56:16	InPhase	ce6: The arrows do not show the order of execution.
2019-12-09 00:56:19	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 00:56:45	ce6	does it show what is retunred first and alst?
2019-12-09 00:56:49	ce6	im confused then
2019-12-09 00:56:59	InPhase	ce6: Exceution goes from the leftmost cell to the change(1, [2, 3]) cell to its right, for example.
2019-12-09 00:57:00	ce6	let me look at the docs
2019-12-09 00:57:07	ce6	for rcviz
2019-12-09 00:57:16	<--	stranac (~stranac@193.14.245.77) has quit (Ping timeout: 265 seconds)
2019-12-09 00:57:31	<--	gloomy (~Gloomy@x4d0bbca5.dyn.telefonica.de) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 00:57:33	ce6	order of traversal
2019-12-09 00:57:41	<--	parabolize (~paraboliz@c-76-25-97-149.hsd1.co.comcast.net) has quit (Quit: leaving)
2019-12-09 00:58:23	InPhase	ce6: Technically it returns up through the chain to the parent node and then back down, but for graph representation a shorthand of this is usually done of just showing the "interesting" parts, which is which node is doing work.
2019-12-09 00:59:02	<--	xy2_ (~xy2_@94.239.177.175) has quit (Ping timeout: 276 seconds)
2019-12-09 00:59:12	<--	sincorchetes (~sincorche@unaffiliated/sincorchetes) has quit (Quit: Leaving)
2019-12-09 01:00:07	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-09 01:00:19	<--	pcloadltr (~pcloadltr@185.229.59.215) has left #python ("Leaving")
2019-12-09 01:00:25	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 01:00:46	<--	bill_kid (~bill@8.40.194.20) has quit (Quit: leaving)
2019-12-09 01:00:51	<--	Boko_eebaa (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has quit (Read error: Connection reset by peer)
2019-12-09 01:01:10	<--	con3 (~kvirc@165.255.109.189) has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
2019-12-09 01:01:11	-->	xy2_ (~xy2_@94.239.177.175) has joined #python
2019-12-09 01:01:20	<--	Trashlord (~trash@wikipedia/Sentient-Planet) has quit (Quit: "Tell him: 'the liberator who destroyed my property has realigned my perception.'")
2019-12-09 01:02:00	-->	jolvera (uid366386@gateway/web/irccloud.com/x-prczhlsnzluhfzjp) has joined #python
2019-12-09 01:02:36	InPhase	ce6: Excuse the accidental crossings, but I hope this is sufficient to illustrate the flow.  https://i.imgur.com/3N2tJO8.png
2019-12-09 01:02:40	ce6	you said leftmost first right, so what exactly happens after change(0, [1, 2 3]
2019-12-09 01:02:45	ce6	let me see
2019-12-09 01:02:58	-->	courrier (~yoan@2pl44-h01-176-136-159-243.dsl.sta.abo.bbox.fr) has joined #python
2019-12-09 01:03:26	<--	BeerLove_ (~BeerBuddy@103.72.10.227) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 01:03:34	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 01:03:55	ce6	how does it know to go back up?
2019-12-09 01:04:06	InPhase	ce6: The function returning is going up.
2019-12-09 01:04:24	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 01:04:35	InPhase	ce6: Every function returns to the one that called it.
2019-12-09 01:04:54	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 250 seconds)
2019-12-09 01:04:58	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Ping timeout: 240 seconds)
2019-12-09 01:05:04	-->	tempate (~tempate@unaffiliated/tempate) has joined #python
2019-12-09 01:05:05	-->	Cabanossi (~Cabanossi@ppp-88-217-77-71.dynamic.mnet-online.de) has joined #python
2019-12-09 01:05:12	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-09 01:05:48	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 01:05:56	tempate	I recall there being a way of printing a string substituting zeros for spaces. Is it true or have I dreamt it?
2019-12-09 01:06:46	-->	sauvin (sauvin@about/linux/staff/sauvin) has joined #python
2019-12-09 01:06:50	-->	Ruhan (uid76353@gateway/web/irccloud.com/x-oauektfvfjzahljy) has joined #python
2019-12-09 01:07:01	ce6	when does it call min?
2019-12-09 01:07:03	_habnabit	tempate, you might be thinking of ways to format numbers into strings which does that
2019-12-09 01:07:23	<--	jcarl43 (~jcarl@S01061c1b689d9d2f.vc.shawcable.net) has quit (Ping timeout: 245 seconds)
2019-12-09 01:07:31	InPhase	ce6: Every time it returns from a node that has two branches beneath it.
2019-12-09 01:07:37	tempate	maybe, I honestly don't remember
2019-12-09 01:07:44	-->	keepguessing (~superman@c-73-93-87-220.hsd1.ca.comcast.net) has joined #python
2019-12-09 01:07:57	<--	Mattiaslndstrm (~Mattiasln@c-136be555.018-449-6e6b701.bbcust.telenor.se) has quit (Ping timeout: 240 seconds)
2019-12-09 01:08:03	tempate	I saw it once some years ago and thought to myself: 'Oh, that's neat!'. But that's about it.
2019-12-09 01:08:13	-->	Mrbuck (~Mrbuck@ec2-34-198-47-188.compute-1.amazonaws.com) has joined #python
2019-12-09 01:08:17	<--	Silmarilion (~Silmarili@87.116.177.1) has quit (Read error: Connection reset by peer)
2019-12-09 01:08:21	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 246 seconds)
2019-12-09 01:08:50	ce6	but for change(1, [1, 2 3]), the min between 0 and infinity isnt 1
2019-12-09 01:08:54	ce6	it's 0
2019-12-09 01:08:55	nedbat	tempate: "{:08d}".format(12)  -->  "00000012"
2019-12-09 01:09:17	InPhase	ce6: It's not doing min on the return values.  It's doing min on the left return value +1, and the right return value.
2019-12-09 01:09:31	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 268 seconds)
2019-12-09 01:10:03	ce6	oh i see
2019-12-09 01:10:09	-->	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has joined #python
2019-12-09 01:10:18	<--	medard (~medard@chello085216234107.chello.sk) has quit (Ping timeout: 245 seconds)
2019-12-09 01:10:51	InPhase	ce6: Every left branch is a use, and you're counting the uses.
2019-12-09 01:10:59	ce6	so that would make it between 1 and inf
2019-12-09 01:11:19	InPhase	Right.
2019-12-09 01:11:35	ce6	then it essentially adds up
2019-12-09 01:11:55	<--	delvian (~delvian@41.13.228.203) has quit (Quit: Keep your head low (modesty), eyes high (ambition) and mouth shut (serenity).)
2019-12-09 01:11:55	-->	Boko_eebea (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has joined #python
2019-12-09 01:12:15	<--	indeedwatson (~yama@181.164.182.59) has quit (Ping timeout: 250 seconds)
2019-12-09 01:12:41	tempate	nedbat: that's not it. Never mind. It might have been a dream after all.
2019-12-09 01:13:47	InPhase	ce6: For another way of looking at it, the algorithm returns one less than the least number of left branches in a downward path that eventually terminate in a 0.
2019-12-09 01:13:50	ce6	so if we didnt add one, it would return 0 everytime?
2019-12-09 01:14:21	-->	medard (~medard@chello085216234107.chello.sk) has joined #python
2019-12-09 01:14:25	-->	kitxkat (~kitxkat@2407:7000:8c2f:d00:288f:386b:8a69:8560) has joined #python
2019-12-09 01:14:57	InPhase	ce6: Sorry, not one less.  It returns exactly the number of left branches in that downward path.
2019-12-09 01:15:07	<--	Boko_eebea (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has quit (Write error: Connection reset by peer)
2019-12-09 01:15:13	InPhase	ce6: Each left branch being a use.
2019-12-09 01:15:57	ce6	could you sketch tat hout
2019-12-09 01:16:01	ce6	*sketch that out
2019-12-09 01:16:20	InPhase	ce6: change(0, [3]) is the winning case, third from the right.  Count the uses going up from there.
2019-12-09 01:18:04	InPhase	ce6: For comparison, ignore the return values and count the uses for the leftmost branch.  (You should get 5 coins used.)
2019-12-09 01:18:34	-->	Boko_eeedd (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has joined #python
2019-12-09 01:18:38	-->	Mattiaslndstrm (~Mattiasln@c-136be555.018-449-6e6b701.bbcust.telenor.se) has joined #python
2019-12-09 01:18:38	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 01:21:28	<--	crmaurei (crmaurei@nat/qt/x-jxjttjroyhqlcrms) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2019-12-09 01:22:20	<--	__marco (~marco@2a02:678:588:f800:e6a4:71ff:fef2:bce6) has quit (Quit: Leaving)
2019-12-09 01:22:54	<--	Mrbuck (~Mrbuck@ec2-34-198-47-188.compute-1.amazonaws.com) has quit (Remote host closed the connection)
2019-12-09 01:22:57	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 01:23:05	<--	sagittarian (~kvirc@188.120.155.135) has quit (Ping timeout: 250 seconds)
2019-12-09 01:26:08	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-09 01:27:06	<--	framend (~framend@unaffiliated/framend) has quit (Quit: WeeChat 2.6)
2019-12-09 01:27:24	<--	Boko_eeedd (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has quit (Write error: Connection reset by peer)
2019-12-09 01:27:29	-->	abhixec (~abhixec@73.92.49.6) has joined #python
2019-12-09 01:27:30	-->	dctrud (~dctrud@2001:19f0:6401:16c7:5400:2ff:fe71:41c3) has joined #python
2019-12-09 01:28:01	-->	Bird|otherbox (~HTT-Bird@unaffiliated/htt-bird) has joined #python
2019-12-09 01:28:05	-->	Wetmelon (~wetmelon@66-169-41-35.dhcp.gnvl.sc.charter.com) has joined #python
2019-12-09 01:29:14	-->	sameerynho (~lxsameer@unaffiliated/lxsameer) has joined #python
2019-12-09 01:30:14	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2019-12-09 01:30:20	ce6	inphase: https://i.imgur.com/qbV23gg.gif
2019-12-09 01:34:36	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 01:34:45	<--	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has quit (Quit: Leaving)
2019-12-09 01:35:52	InPhase	ce6: Left +1 at the top node makes that path have value 3.
2019-12-09 01:36:12	-->	Horzagger (~stockthx@gateway/tor-sasl/horzagger) has joined #python
2019-12-09 01:36:29	CrtxReavr	In python3, when you have bytes, but need a string, do you .decode() or .decode('utf-8') ?
2019-12-09 01:36:39	InPhase	ce6: If you trace the coins used, from top down it used 1, 1, 3.
2019-12-09 01:36:49	CrtxReavr	I get utf-8 is the default, but somehow it seems sloppy to not specify.
2019-12-09 01:37:02	cdunklau	CrtxReavr: the latter, usually, modulo whatever encoding you actually expect
2019-12-09 01:37:20	_habnabit	CrtxReavr, it isn't.. always the default
2019-12-09 01:37:48	ce6	inphase but i thought change(0, [3]) was the winning case?
2019-12-09 01:37:51	CrtxReavr	'k
2019-12-09 01:37:53	CrtxReavr	Thanks.
2019-12-09 01:37:55	-->	ferdna (~ferdna@cpe-69-23-148-218.elp.res.rr.com) has joined #python
2019-12-09 01:38:01	ce6	if it goes to 3 that wouldnt be the min right?
2019-12-09 01:38:01	InPhase	ce6: The one third from the right.
2019-12-09 01:38:02	cdunklau	_habnabit: when isn't it?
2019-12-09 01:38:04	<--	alexsuraphel (~alexsurap@197.156.77.75) has quit (Remote host closed the connection)
2019-12-09 01:38:20	-->	traptrip (trip@brigaid.xs4all.nl) has joined #python
2019-12-09 01:38:21	_habnabit	cdunklau, god, i can't remember the specific case. i'd have to dig it up
2019-12-09 01:38:23	cdunklau	_habnabit: https://docs.python.org/3/library/stdtypes.html#bytes.decode doesn't seem to provide room
2019-12-09 01:38:30	InPhase	ce6: I'll let you trace that one third from the right, and you tell me which coins it used.
2019-12-09 01:38:50	<--	ananke (~ananke@about/linux/regular/ananke) has quit (Ping timeout: 265 seconds)
2019-12-09 01:39:13	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 01:39:13	InPhase	ce6: The differences in the amount can help you see which coin was used.
2019-12-09 01:39:20	ce6	well coins 2 and 3
2019-12-09 01:39:22	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined #python
2019-12-09 01:39:35	InPhase	ce6: Right, which by inspection is also the correct answer.
2019-12-09 01:40:37	-->	wingsorc (~wingsorc@unaffiliated/wingsorc) has joined #python
2019-12-09 01:40:37	CrtxReavr	WTF
2019-12-09 01:40:38	<--	Mattiaslndstrm (~Mattiasln@c-136be555.018-449-6e6b701.bbcust.telenor.se) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 01:40:49	<--	Secret-Fire (~Secret-Fi@97.115.222.240) has quit (Remote host closed the connection)
2019-12-09 01:40:58	-->	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has joined #python
2019-12-09 01:40:59	blackleitus	to speed up a bit more , how can I implement asyncio , and beatifulsoup into this simple example? https://dpaste.org/6tDP
2019-12-09 01:41:00	CrtxReavr	I just did a quick port of an old script of mine from 2.7 to 3.x and now it's running a lot slower.
2019-12-09 01:41:11	ce6	so that first node on the right has a difference of 2, then change3, 3 has a difference of 3 right?
2019-12-09 01:41:44	<--	meethoss (~pun84@pool-108-24-164-226.cmdnnj.fios.verizon.net) has quit (Read error: Connection reset by peer)
2019-12-09 01:41:56	<--	cxzxczxcxzc (~cxzxczxcx@unaffiliated/cxzxczxcxzc) has quit (Ping timeout: 276 seconds)
2019-12-09 01:42:10	cdunklau	blackleitus: well, start by breaking that up into individual functions, so that each thing has single, distinct responsibility
2019-12-09 01:42:18	ce6	why doesnt change3, [2, 3]) return a 2?
2019-12-09 01:42:42	ce6	oh youre adding to inf
2019-12-09 01:43:12	-->	pun84 (~pun84@pool-108-24-164-226.cmdnnj.fios.verizon.net) has joined #python
2019-12-09 01:43:16	cdunklau	blackleitus: but really, if you're writing a scraper, just use scrapy
2019-12-09 01:43:44	-->	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has joined #python
2019-12-09 01:44:09	<--	mcsippel (~mcsippel@97-93-29-122.dhcp.snlo.ca.charter.com) has quit (Ping timeout: 265 seconds)
2019-12-09 01:44:18	blackleitus	I did , but a simple ones that downloads in parallel files , but how can I implement asyncio with bs4 /
2019-12-09 01:44:47	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Remote host closed the connection)
2019-12-09 01:45:01	blackleitus	it tooks 7s for 5 pdfs `Asynchronous exec took 7.152557373046875e-07 seconds
2019-12-09 01:45:01	blackleitus	`
2019-12-09 01:45:02	-->	Secret-Fire (~Secret-Fi@97.115.222.240) has joined #python
2019-12-09 01:45:38	InPhase	ce6: My advice is to now go back to the code, and remap your understanding of the tree onto the code.
2019-12-09 01:46:04	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 01:46:23	ce6	maybe i can make it print out the list of coins it used
2019-12-09 01:46:29	InPhase	ce6: The goal is to build an intuition for that sort of recursion approach.
2019-12-09 01:47:31	-->	subho (~subho@fedora/subho) has joined #python
2019-12-09 01:49:37	<--	medard (~medard@chello085216234107.chello.sk) has quit (Ping timeout: 240 seconds)
2019-12-09 01:51:07	<--	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has quit (Quit: WeeChat 2.6)
2019-12-09 01:51:08	ce6	inphase so if i wanted to get the list of coins used, i would have to figure out how to get the differences in the amount right?
2019-12-09 01:51:59	-->	a90c (~androirc@unaffiliated/a90c) has joined #python
2019-12-09 01:52:09	cdunklau	blackleitus: i don't really know what kind of an answer you're expecting
2019-12-09 01:52:23	cdunklau	"how do i do X with Y" is entirely too broad
2019-12-09 01:52:40	-->	sauvin_ (sauvin@about/linux/staff/sauvin) has joined #python
2019-12-09 01:53:10	-->	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has joined #python
2019-12-09 01:53:18	-->	DeadTOm (~deadtom@2001:4b98:dc0:41:216:3eff:fe58:44d0) has joined #python
2019-12-09 01:53:44	InPhase	ce6: Look in your code at how the difference happens.  You did the subtraction.
2019-12-09 01:53:49	ikanobori	Especially when they don't seem related at first glance.
2019-12-09 01:54:31	blackleitus	I am trying to implement asyncio with bs4 , but should I use asyncio in all the code or only where I need to?
2019-12-09 01:54:36	altendky	it's not clear that they want to do concurrent downloads with asyncio (perhaps 'mean' any async library) and presently have code that uses bs4?
2019-12-09 01:54:49	ce6	yeah amount-coin[0]
2019-12-09 01:54:54	a90c	when i wanted to read a long sentence in csv using pandas read, i got that:
2019-12-09 01:54:56	<--	BTRE (~BTRE@unaffiliated/btre) has quit (Ping timeout: 276 seconds)
2019-12-09 01:55:01	ce6	*coins[0]
2019-12-09 01:55:08	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 01:55:09	<--	sauvin (sauvin@about/linux/staff/sauvin) has quit (Ping timeout: 268 seconds)
2019-12-09 01:55:15	a90c	UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 32: invalid continuation byte
2019-12-09 01:55:15	a90c	data = pd.read_csv("example3.csv",low_memory=False)
2019-12-09 01:55:20	--	sauvin_ is now known as sauvin
2019-12-09 01:55:22	<--	h4rd3n3D1 (~weechat@gateway/tor-sasl/h4rd3n3d) has quit (Quit: h4rd3n3D1)
2019-12-09 01:55:29	a90c	How to fix it?
2019-12-09 01:55:33	-->	hussar (hussar@gateway/vpn/protonvpn/hussar) has joined #python
2019-12-09 01:55:38	nedbat	a90c: looks like your csv file isn't utf8
2019-12-09 01:55:47	nedbat	a90c: do you know what language the content is?
2019-12-09 01:55:49	<--	veevax (~veevax@212-198-32-77.rev.numericable.fr) has quit (Quit: Leaving.)
2019-12-09 01:56:30	<--	FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) has quit (Remote host closed the connection)
2019-12-09 01:56:32	a90c	nedbat: that make sense sir. i am going to check it using file example.csv command
2019-12-09 01:56:57	<--	kosh (~kosh@p4FF4B534.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2019-12-09 01:57:22	Wulf	0xf0 might be https://en.wikipedia.org/wiki/Eth which isn't really used
2019-12-09 01:57:41	nedbat	Wulf: it's used a lot in Iceland
2019-12-09 01:57:41	<--	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has quit (Ping timeout: 265 seconds)
2019-12-09 01:57:59	a90c	Yes it is eth
2019-12-09 01:58:09	Wulf	never mind, I misread the wiki page
2019-12-09 01:58:17	CrtxReavr	20x slower. . . .
2019-12-09 01:58:18	ce6	inphase, could i also think of 1 + as the depth of the branch?
2019-12-09 01:58:52	altendky	CrtxReavr: would you like to share your two scripts so we can look at them?  also, what are the actual runtimes?
2019-12-09 01:58:54	ce6	well i dont think i can actually because of the min
2019-12-09 01:59:01	Wulf	a90c: try to open the file with cp1252 encoding
2019-12-09 01:59:23	a90c	Wulf: and then convert to utf8?
2019-12-09 01:59:38	CrtxReavr	altendky, 0m0.491s vs. 0m8.920s
2019-12-09 01:59:44	CrtxReavr	Same task & dataset.
2019-12-09 02:00:05	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 268 seconds)
2019-12-09 02:00:12	<--	oragadam (7aae3633@122.174.54.51) has quit (Remote host closed the connection)
2019-12-09 02:00:28	a90c	Wulf: oh wait sorry, i get it thanks
2019-12-09 02:00:30	Wulf	a90c: no need to "convert"
2019-12-09 02:00:36	<--	mpmc (~mpmc@unaffiliated/mpmc) has quit (Quit: ZNC - https://znc.in)
2019-12-09 02:01:03	<--	tempate (~tempate@unaffiliated/tempate) has left #python
2019-12-09 02:01:25	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-09 02:01:38	a90c	nedbat: thank you too.
2019-12-09 02:02:08	-->	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has joined #python
2019-12-09 02:02:29	cdunklau	CrtxReavr: can you post it?
2019-12-09 02:02:31	<--	soniya29 (~soniya@2409:4042:2684:adcf:316f:ddcd:7c6a:cc9d) has quit (Ping timeout: 250 seconds)
2019-12-09 02:02:38	<--	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has quit (Client Quit)
2019-12-09 02:03:09	<--	rendar (~rendar@unaffiliated/rendar) has quit
2019-12-09 02:03:37	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2019-12-09 02:04:34	ce6	inphase, could i have another hint lol
2019-12-09 02:04:42	-->	causasui (~causasui@wikipedia/causa-sui) has joined #python
2019-12-09 02:04:58	InPhase	ce6: About?
2019-12-09 02:05:03	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-09 02:05:13	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 02:05:19	ce6	how i could get it to display the coins i used
2019-12-09 02:05:20	<--	juanfra (~juanfra@unaffiliated/juanfra) has quit (Quit: juanfra)
2019-12-09 02:05:32	InPhase	ce6: Display it when you use them.
2019-12-09 02:05:37	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 240 seconds)
2019-12-09 02:06:03	-->	mcsippel (~mcsippel@97-93-29-122.dhcp.snlo.ca.charter.com) has joined #python
2019-12-09 02:06:16	-->	veevax (~veevax@212-198-32-77.rev.numericable.fr) has joined #python
2019-12-09 02:06:26	-->	Mr0rris0 (m@gateway/vpn/privateinternetaccess/mr0rris0) has joined #python
2019-12-09 02:06:53	CrtxReavr	cdunklau, I'm gonna troubleshoot further. .. but I think subprocess in python3 is being slower.
2019-12-09 02:07:17	<--	cjt0 (~chris@49.95.187.81.in-addr.arpa) has quit (Ping timeout: 276 seconds)
2019-12-09 02:07:23	InPhase	ce6: I don't know how you're generating your tree plot in the first place.  If you want to pass it into your function you could add a coin_used=None parameter, and pass in coin[0] when you use it, so the left nodes know that a coin was used to get there.
2019-12-09 02:07:38	-->	setham (~textual@unaffiliated/setham) has joined #python
2019-12-09 02:07:43	-->	dennington (~denny@ool-435034b9.dyn.optonline.net) has joined #python
2019-12-09 02:07:45	CrtxReavr	Plus, this is. . . actualy the very 2nd realworld pythong script I ever wrote years, and I don't need everyone's comments.
2019-12-09 02:07:50	ce6	inphase look up rcviz on github
2019-12-09 02:07:56	ce6	it generates a callgraph
2019-12-09 02:08:05	ce6	for a function you give it
2019-12-09 02:08:12	<--	lxbarbosa (~user@2804:1b2:81:c7f6:ae43:1fee:5f96:4bf6) has quit (Ping timeout: 246 seconds)
2019-12-09 02:08:40	-->	cxzxczxcxzc (~cxzxczxcx@unaffiliated/cxzxczxcxzc) has joined #python
2019-12-09 02:08:52	InPhase	ce6: Then a coin_used parameter would work for the call graph, although it serves no purpose for the algorithm.
2019-12-09 02:09:14	<--	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has quit (Ping timeout: 276 seconds)
2019-12-09 02:09:26	-->	cdown (~cdown@89.32.122.5) has joined #python
2019-12-09 02:09:26	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 02:10:19	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 250 seconds)
2019-12-09 02:10:34	ce6	crtxreavr how do you expect your software to get better if you dont allow criticism
2019-12-09 02:10:38	-->	[Solaris] (~AnimatorO@cpc156959-cani4-2-0-cust14.14-2.cable.virginm.net) has joined #python
2019-12-09 02:12:15	CrtxReavr	ce6, it is better. . . this like 7 years ago me.
2019-12-09 02:12:21	<--	setham (~textual@unaffiliated/setham) has quit (Client Quit)
2019-12-09 02:12:43	CrtxReavr	I just did a quick fixup to make it work for python3.
2019-12-09 02:12:50	cdunklau	CrtxReavr: profile it
2019-12-09 02:12:53	-->	__stranac__ (~stranac@193.14.245.77) has joined #python
2019-12-09 02:13:04	--	__stranac__ is now known as stranac
2019-12-09 02:15:51	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined #python
2019-12-09 02:15:54	ce6	inphase im still not getting why +1 works,
2019-12-09 02:16:22	<--	Secret-Fire (~Secret-Fi@97.115.222.240) has quit (Remote host closed the connection)
2019-12-09 02:16:44	<--	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has quit (Ping timeout: 252 seconds)
2019-12-09 02:16:49	-->	Secret-Fire (~Secret-Fi@97.115.222.240) has joined #python
2019-12-09 02:17:21	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-09 02:17:46	ce6	or the purpose
2019-12-09 02:17:58	ce6	i understand that if you dont have it everything returns 0,
2019-12-09 02:18:15	ce6	because the +1 allows you to min, but why +!
2019-12-09 02:18:20	<--	panikovsky (~panikovsk@31.23.16.18) has quit (Ping timeout: 276 seconds)
2019-12-09 02:18:21	ce6	*+1
2019-12-09 02:18:35	<--	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has quit (Ping timeout: 268 seconds)
2019-12-09 02:18:39	-->	subho (~subho@fedora/subho) has joined #python
2019-12-09 02:19:12	<--	CoolerX (~coolerext@14.139.38.136) has quit (Ping timeout: 268 seconds)
2019-12-09 02:20:17	-->	frrs (uid130725@gateway/web/irccloud.com/x-ftfnptsjjukomymb) has joined #python
2019-12-09 02:20:48	ce6	does it allow us to count the number of uses?
2019-12-09 02:21:52	blackleitus	I implemented in a piece of code , and it works as I want to , but I Have an issue it downloads the same file , but if I remove `while couter < max_results` it works as expected https://dpaste.org/d7ho
2019-12-09 02:22:09	-->	led1 (~Thunderbi@217.66.160.14) has joined #python
2019-12-09 02:23:17	InPhase	ce6: That is exactly what it does.
2019-12-09 02:23:31	<--	bdeshi (~bdeshi@103.55.145.99) has quit (Remote host closed the connection)
2019-12-09 02:23:48	<--	edlinde (~edlinde@183.83.146.106) has quit (Quit: edlinde)
2019-12-09 02:23:57	<--	whaley (~whaley@99-96-74-127.lightspeed.gnvlsc.sbcglobal.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-12-09 02:24:05	-->	AcousticDan (~dan@67-198-56-103.static.grandenetworks.net) has joined #python
2019-12-09 02:24:08	-->	ffs (uid158779@gateway/web/irccloud.com/x-puneajfcquqyvjpv) has joined #python
2019-12-09 02:24:32	blackleitus	how can I keep the same as before download the different files?
2019-12-09 02:24:32	kitxkat	what framework you guys use? what should i learn?
2019-12-09 02:25:17	-->	juanfra (~juanfra@unaffiliated/juanfra) has joined #python
2019-12-09 02:25:39	<--	joshisanonymous (~joshisano@2600:6c5a:457f:c4b5:49:1f6e:e28:aa9f) has quit (Quit: Leaving)
2019-12-09 02:25:42	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-09 02:25:48	<--	led1 (~Thunderbi@217.66.160.14) has quit (Client Quit)
2019-12-09 02:25:55	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 02:26:45	<--	AcousticDan (~dan@67-198-56-103.static.grandenetworks.net) has quit (Client Quit)
2019-12-09 02:27:03	nedbat	kitxkat: use for what?
2019-12-09 02:27:16	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-09 02:27:25	royal_screwup21	what's the best way to read in the input for this question? https://www.urionlinejudge.com.br/judge/en/problems/view/2524 I essentially have to read two lines for each test-case. I was thinking, `for line in sys.stdin` but that just gives me the first line. I'd have to manually keep track of line numbers to make sure I'm reading the right line for
2019-12-09 02:27:26	royal_screwup21	a given test -- that seems a bit unwiedly...is there a better way to read the input?
2019-12-09 02:27:30	-->	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has joined #python
2019-12-09 02:28:14	<--	juanfra (~juanfra@unaffiliated/juanfra) has quit (Client Quit)
2019-12-09 02:28:22	kitxkat	nedbat, i'm currently learning django, wanna use it as web interface for some network app, you see networking is my passion.
2019-12-09 02:28:49	-->	juanfra (~juanfra@unaffiliated/juanfra) has joined #python
2019-12-09 02:29:07	-->	IaMnEwHeRe (~IaMnEwHeR@185.246.130.63) has joined #python
2019-12-09 02:29:08	IaMnEwHeRe	#rust
2019-12-09 02:29:30	kitxkat	you forgot a magic /join :D
2019-12-09 02:30:15	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 250 seconds)
2019-12-09 02:30:34	nedbat	kitxkat: django is fine choice for building web apps
2019-12-09 02:30:37	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2019-12-09 02:31:00	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-09 02:31:32	kitxkat	what library(ies) are used to monitor network traffic and network connections ?
2019-12-09 02:31:44	IaMnEwHeRe	kitxkat, no I didn't but my client put the focus on the new window before I could finish that join, it is in another window -.-
2019-12-09 02:32:00	IaMnEwHeRe	kitxkat, what do you mean by monitor?
2019-12-09 02:32:03	<--	piperlester (~textual@217.138.200.172) has quit (Quit: Bye.)
2019-12-09 02:32:08	IaMnEwHeRe	devops or debugging like?
2019-12-09 02:32:30	IaMnEwHeRe	and also do you really want libraries, or applications?
2019-12-09 02:32:37	<--	courrier (~yoan@2pl44-h01-176-136-159-243.dsl.sta.abo.bbox.fr) has quit (Quit: courrier)
2019-12-09 02:32:42	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2019-12-09 02:32:45	-->	dualinity (5248af28@82-72-175-40.cable.dynamic.v4.ziggo.nl) has joined #python
2019-12-09 02:32:50	dualinity	hi there, posted my recent project on hackernews: https://news.ycombinator.com/item?id=21737427
2019-12-09 02:33:02	dualinity	it's about using machine learning for compression :)
2019-12-09 02:33:07	ce6	inphase oh i see now the oins
2019-12-09 02:33:12	IaMnEwHeRe	kitxkat, you could look into scipy(?)
2019-12-09 02:33:17	ce6	with that coin_used parameter
2019-12-09 02:33:18	kitxkat	your quesiton confuses me, im new to coding.
2019-12-09 02:33:22	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-09 02:33:38	kitxkat	i just tought i can build a network monitoring tool running on my pi
2019-12-09 02:33:48	kitxkat	and don't quite know where to start.
2019-12-09 02:33:51	altendky	IaMnEwHeRe: scapy?
2019-12-09 02:33:56	<--	Leonarbro (~Leonarbro@S01067824af93741c.cg.shawcable.net) has quit (Ping timeout: 276 seconds)
2019-12-09 02:34:11	IaMnEwHeRe	altendky, yes, long time since I used that name, thank you
2019-12-09 02:34:22	IaMnEwHeRe	kitxkat, what you want is a tool
2019-12-09 02:34:32	-->	renlolo (~lhoward@2600:1017:b81e:ffa:812:d0ca:ff9:1929) has joined #python
2019-12-09 02:34:35	altendky	unless they want to build a tool using a library
2019-12-09 02:34:46	IaMnEwHeRe	not a library, monitoring network-activity requires interaction with the kernel,
2019-12-09 02:35:10	IaMnEwHeRe	kitxkat, look at intrusion detection-systems IDS
2019-12-09 02:35:12	<--	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has quit (Quit: ZNC 1.7.5 - https://znc.in)
2019-12-09 02:35:16	-->	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has joined #python
2019-12-09 02:35:29	IaMnEwHeRe	btw what is your use-case what exactly do you want to do?
2019-12-09 02:35:39	InPhase	dualinity: Can you clarify "the features of the data (not the data itself) will be added to the python package on the next release"
2019-12-09 02:35:44	altendky	IaMnEwHeRe: 'network monitoring' to 'you can not use a library' seems a bit of a jump
2019-12-09 02:35:46	kitxkat	is python good for what i'm trying to do? should i stop and move on to a lower level language like c?
2019-12-09 02:35:57	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-09 02:36:02	dualinity	InPhase: so I record things like "how many rows, columns, how many string vars etc"
2019-12-09 02:36:05	InPhase	dualinity: Features are pieces of information that reconstruct the data.  This sounds like information leak.
2019-12-09 02:36:25	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-09 02:36:26	dualinity	a unique dataset could be identifiable indeed
2019-12-09 02:36:33	dualinity	if it lives in the public domain
2019-12-09 02:36:37	-->	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has joined #python
2019-12-09 02:36:47	InPhase	dualinity: Perhaps you don't mean "features" in the way it's used in machine learning.
2019-12-09 02:36:51	dualinity	but if you are afraid of sharing your personal CSV, then you wouldn't need to be afraid because it cannot reconstruct the original data
2019-12-09 02:36:54	IaMnEwHeRe	altendky, that is not what I said,  but starting to program and then wanting to monitor network-connections MITM, is sort of a very steep learning-curve, I fear kitxkat is suffering from an XY-problem
2019-12-09 02:36:59	-->	CrowX- (~CrowX-@185.167.46.134) has joined #python
2019-12-09 02:37:08	dualinity	InPhase: it's exactly how i mean it in machine learning :)
2019-12-09 02:37:17	Y0rick	meta-k /input grab_key_command
2019-12-09 02:37:21	IaMnEwHeRe	kitxkat, what exactly do you want to do?
2019-12-09 02:37:25	dualinity	let me show you a link
2019-12-09 02:37:30	altendky	IaMnEwHeRe: i fully support your query for more context (without suggesting you need my support...)
2019-12-09 02:37:42	dualinity	https://github.com/kootenpv/shrynk/blob/master/shrynk/classes/pandas_.py#L203
2019-12-09 02:37:44	kitxkat	o.O i feel so stupid now....
2019-12-09 02:37:54	InPhase	dualinity: Features used in something like a compressed text file might include the words used in my text file.
2019-12-09 02:38:01	altendky	kitxkat: you want to monitor your network.  what about it?
2019-12-09 02:38:17	dualinity	I posted the few lines that show the features I'm capturing :)
2019-12-09 02:38:20	InPhase	dualinity: A feature might even include multi-word pairings in a text file.
2019-12-09 02:38:42	dualinity	you're thinking like text features from a text, but this is more like "meta info"
2019-12-09 02:38:44	kitxkat	like... connected hosts, and the traffic. wanna have a web interface that shows me what host used how much traffic and stuff like top visited sites
2019-12-09 02:38:46	dualinity	still features
2019-12-09 02:39:15	-->	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has joined #python
2019-12-09 02:39:27	InPhase	dualinity: Well, I would recommend clarifying that when you first mention it so you don't scare away a lot of users.
2019-12-09 02:39:37	IaMnEwHeRe	kitxkat, your OS will provide a very coarse overview of that already
2019-12-09 02:39:42	energizer	dualinity: am i getting this right? you try a several compression algorithms on a sample of the data, see which one performs best, and use that one to compress the whole file?
2019-12-09 02:40:23	dualinity	energizer: nope! I compress whole files, that is the sample, i compute features, like let's keep it simple and say only number of rows and number of columns
2019-12-09 02:40:32	altendky	kitxkat: for a network, generally that's something that would be done by a thing the traffic goes through (such as your router)
2019-12-09 02:40:39	<--	renlolo (~lhoward@2600:1017:b81e:ffa:812:d0ca:ff9:1929) has quit (Ping timeout: 250 seconds)
2019-12-09 02:40:46	-->	peter22222 (~peter2222@dslb-188-104-250-048.188.104.pools.vodafone-ip.de) has joined #python
2019-12-09 02:40:47	<--	veevax (~veevax@212-198-32-77.rev.numericable.fr) has quit (Quit: Leaving.)
2019-12-09 02:40:49	dualinity	so then based on number of rows/cols based on benchmarked results, I can predict for your files
2019-12-09 02:40:58	kitxkat	altendky i wanna use a rasberry pi as dns server
2019-12-09 02:41:21	kitxkat	IamnEwHeRe, what tools is my OS offering, wdym
2019-12-09 02:41:22	IaMnEwHeRe	kitxkat, you are all over the place, either you are a troll or you don't know what you are doing
2019-12-09 02:41:24	altendky	kitxkat: that will only get you dns requests, not actual http requests or how much data is transferred
2019-12-09 02:41:33	energizer	dualinity: got it
2019-12-09 02:41:34	altendky	IaMnEwHeRe: i think they said they aren't really sure
2019-12-09 02:41:41	dualinity	InPhase: yea, it's tough to explain really haha
2019-12-09 02:41:58	dualinity	how would you explain "features" that won't scare away the users? I hoped mentioning features instead of the actual data would be enough
2019-12-09 02:42:02	-->	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has joined #python
2019-12-09 02:42:05	IaMnEwHeRe	altendky, was before me joining ;) but good to know I am not alone with my hunch
2019-12-09 02:42:11	kitxkat	idk what im doing i guess...
2019-12-09 02:42:12	IaMnEwHeRe	kitxkat, what os are you using?
2019-12-09 02:42:18	kitxkat	ubuntu
2019-12-09 02:42:24	InPhase	dualinity: In all the machine learning I do, the features are the data.
2019-12-09 02:42:48	InPhase	dualinity: "Features" is just how we break the data down or merge into piles.
2019-12-09 02:43:12	dualinity	ahhhh I see what you mean
2019-12-09 02:43:14	dualinity	my bad
2019-12-09 02:43:23	dualinity	it's really like ehhh
2019-12-09 02:43:31	dualinity	"engineered features"
2019-12-09 02:43:39	InPhase	dualinity: It sounds like you're computing some meta-properties of the file, and using past learning on this to predict the optimal compression algorithm.
2019-12-09 02:43:41	<--	iam730 (~iam730@c-24-5-242-254.hsd1.ca.comcast.net) has quit (Ping timeout: 250 seconds)
2019-12-09 02:43:47	InPhase	dualinity: Meta-properties might be a good term.
2019-12-09 02:43:55	InPhase	dualinity: And then list off examples of them.
2019-12-09 02:44:14	dualinity	on the website I do list them, and somewhere in the story
2019-12-09 02:44:20	IaMnEwHeRe	hmm kitxkat, not using search engines much hmm? https://www.binarytides.com/linux-commands-monitor-network/ https://askubuntu.com/questions/722224/network-activity-monitor; also, note that you need to learn the basics before trying to program s.th. like that so learn the basics and come back
2019-12-09 02:44:27	-->	[itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) has joined #python
2019-12-09 02:44:31	dualinity	at which moment were you concerned, while reading the intro of the blog?
2019-12-09 02:44:32	-->	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has joined #python
2019-12-09 02:44:34	<--	fxrs (~fxrs@192.227.212.130) has quit (Ping timeout: 250 seconds)
2019-12-09 02:44:42	InPhase	dualinity: Possibly, but like most humans I skim.  That's why you want to clarify where you might scare people.  :)
2019-12-09 02:45:18	InPhase	dualinity: When I got to the line I quoted.
2019-12-09 02:45:24	kitxkat	sorry for bothering
2019-12-09 02:45:27	<--	kitxkat (~kitxkat@2407:7000:8c2f:d00:288f:386b:8a69:8560) has left #python ("Leaving")
2019-12-09 02:46:00	-->	Anty0 (~Anty0@2a00:1028:8d19:8bee:4c75:bfeb:7426:9531) has joined #python
2019-12-09 02:46:28	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 02:46:28	-->	fxrs (~fxrs@192.227.212.130) has joined #python
2019-12-09 02:46:56	InPhase	dualinity: Also any data submission should be configurable, which you can clarify right there as well.
2019-12-09 02:47:51	-->	__stranac__ (~stranac@193.14.245.77) has joined #python
2019-12-09 02:47:57	<--	stranac (~stranac@193.14.245.77) has quit (Ping timeout: 240 seconds)
2019-12-09 02:48:51	<--	jnatten (~jn@unaffiliated/jnatten) has quit (Remote host closed the connection)
2019-12-09 02:49:02	<--	__stranac__ (~stranac@193.14.245.77) has quit (Read error: Connection reset by peer)
2019-12-09 02:49:05	ce6	inphase i honestly dont get it
2019-12-09 02:49:28	ce6	recursion is tough to understand
2019-12-09 02:49:28	-->	sandbox1 (~unbanked_@c-67-167-239-14.hsd1.il.comcast.net) has joined #python
2019-12-09 02:50:08	cdunklau	ce6: nah it's easy
2019-12-09 02:50:12	sine0	how do you process a list item when you are in its itteration, e.g for row in rows: how do you delete a row when it is a badboy
2019-12-09 02:50:17	<--	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 02:50:33	cdunklau	ce6: to understand recursion, first you must understand recursion
2019-12-09 02:50:51	cdunklau	sine0: don't. make a new list instead
2019-12-09 02:51:09	-->	BTRE (~BTRE@unaffiliated/btre) has joined #python
2019-12-09 02:51:10	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Quit: WeeChat info:version)
2019-12-09 02:51:16	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 268 seconds)
2019-12-09 02:51:17	<--	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has quit (Ping timeout: 240 seconds)
2019-12-09 02:52:00	sine0	cdunklau: ok then
2019-12-09 02:52:07	altendky	sine0: or, depending, just `if bad(row): continue` if you just want to not handle it rather than actually delete it
2019-12-09 02:52:26	<--	aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) has quit (Quit: The Lounge - https://thelounge.chat)
2019-12-09 02:52:31	dualinity	InPhase: yea could point
2019-12-09 02:52:39	<--	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has quit (Quit: ZNC 1.7.5 - https://znc.in)
2019-12-09 02:52:45	dualinity	someone suggested me also an opt-in for when they run benchmarks that they could post
2019-12-09 02:54:07	nedbat	ce6: have you written other recursive functions? This one is a bit complicated
2019-12-09 02:54:29	ce6	yes i have
2019-12-09 02:54:43	<--	pro_z (~pro_z@178.121.71.153) has quit (Ping timeout: 265 seconds)
2019-12-09 02:54:45	ce6	and i understand those, it's just when it comes to multiple recursive calls it screws me over
2019-12-09 02:54:45	-->	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has joined #python
2019-12-09 02:55:36	InPhase	ce6: To understand multiple recursion, just understand two cases of multiple recursion, and put that understanding together.
2019-12-09 02:55:49	-->	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has joined #python
2019-12-09 02:56:31	InPhase	ce6: Classic jokes aside, I think you have all the pieces and tools you need.  The intuitive comfort comes from working more with it and doing more examples.
2019-12-09 02:56:50	InPhase	ce6: Try some other multiple recursion problems.
2019-12-09 02:56:54	-->	bugZPDX (~bugZPDX@65.75.216.13) has joined #python
2019-12-09 02:56:58	ce6	you could say this is outranging for me
2019-12-09 02:57:14	<--	Horzagger (~stockthx@gateway/tor-sasl/horzagger) has quit (Quit: Жизнь прекрасна)
2019-12-09 02:57:19	ce6	oh wait no that's an iterative joke
2019-12-09 02:57:24	ce6	im not to that point yet
2019-12-09 02:57:37	InPhase	ce6: Presumably from the problem you are working on some coursework?  For good understanding, go beyond it and try some other things that can be done with multiple recursion.
2019-12-09 02:57:42	-->	morenoh11 (~nope@rrcs-172-254-98-154.nyc.biz.rr.com) has joined #python
2019-12-09 02:57:59	<--	Skripter (~Skripter@unaffiliated/skripter) has quit (Ping timeout: 250 seconds)
2019-12-09 02:58:11	Soni	I guess "yield from ()" is the "pass" equivalent for a generator function?
2019-12-09 02:58:12	altendky	for character in people_entering_the_bar():
2019-12-09 02:58:16	ce6	well im not sure of any other problems i could try
2019-12-09 02:58:48	royal_screwup21	what would be the easiest to parse the input for this question? https://www.urionlinejudge.com.br/judge/en/problems/view/2532 (see the end). I  am looping over `sys.stdin` but unsure how to cleanly extract the next lines for a given test-case
2019-12-09 02:58:49	<--	KLOC (jiggawattz@runs.on.ubuntu.crapping.cricket) has quit (Quit: tschüß!)
2019-12-09 02:58:55	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 02:59:24	royal_screwup21	easeist way*
2019-12-09 03:00:00	<--	Anty0 (~Anty0@2a00:1028:8d19:8bee:4c75:bfeb:7426:9531) has left #python
2019-12-09 03:00:25	-->	jiggawattz (jiggawattz@runs.on.ubuntu.crapping.cricket) has joined #python
2019-12-09 03:01:00	<--	scurfee (~scurfee@broadband-77-37-146-212.ip.moscow.rt.ru) has quit
2019-12-09 03:01:36	-->	happycrappy (~mes@c-24-6-149-58.hsd1.ca.comcast.net) has joined #python
2019-12-09 03:01:41	InPhase	ce6: You have a sequence of integers, for example, four 4's.  If you can add, subtract, multiple, or divide the previous result by the next integer, which numbers from 1 through 100 can you produce in this manner, and by what operations?
2019-12-09 03:01:58	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-09 03:01:59	InPhase	ce6: Solve it with multiple recursion.
2019-12-09 03:02:19	-->	lemoldu (~lemoldu@arennes-654-1-210-193.w90-32.abo.wanadoo.fr) has joined #python
2019-12-09 03:02:43	<--	Wr4i7h (~abcd@a85-139-227-182.cpe.netcabo.pt) has quit
2019-12-09 03:03:26	InPhase	ce6: I'll give you a hint.  You'll want to be returning the sequence of operations, or an indication of failure.
2019-12-09 03:03:29	ce6	can you give me an example output
2019-12-09 03:04:04	InPhase	"/*/" produces 1.  4/4 = 1, 1*4 = 4, 4/4 = 1
2019-12-09 03:04:24	<--	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has quit (Quit: Leaving)
2019-12-09 03:04:25	ce6	i see
2019-12-09 03:05:24	dualinity	InPhase: i updated the text in the blog, i think it should be clearer now
2019-12-09 03:05:36	-->	jacks2 (~bc813884@217.29.117.252) has joined #python
2019-12-09 03:05:37	-->	colwem (~colwem@pool-108-49-41-69.bstnma.fios.verizon.net) has joined #python
2019-12-09 03:05:38	InPhase	ce6: And preference operator in the order of add, subtract, multiply, divide, to make the solutions single-valued.
2019-12-09 03:05:54	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 03:06:01	<--	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has quit (Quit: Leaving.)
2019-12-09 03:06:05	energizer	Soni: `return; yield` is a bit of a hack but people sorta know what it means
2019-12-09 03:06:22	Soni	ugh
2019-12-09 03:06:25	cdunklau	energizer: ew
2019-12-09 03:06:31	Soni	I think I prefer "yield from ()"
2019-12-09 03:06:44	InPhase	ce6: I believe the final solution for 1 will probably be "+-/" with that ordering.
2019-12-09 03:06:46	Soni	no offense
2019-12-09 03:06:47	-->	isokee1 (~isokee@unaffiliated/isokee) has joined #python
2019-12-09 03:06:47	_habnabit	yeah, python made a serious mistake giving functions and generator functions the same syntax
2019-12-09 03:06:48	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 265 seconds)
2019-12-09 03:06:50	cdunklau	how about just iter([])
2019-12-09 03:06:51	<--	jacks2 (~bc813884@217.29.117.252) has left #python
2019-12-09 03:06:58	cdunklau	err, return iter([])
2019-12-09 03:07:06	-->	Reverend (~revinard@47-210-6-220.bssrcmtk01.res.dyn.suddenlink.net) has joined #python
2019-12-09 03:07:10	Soni	cdunklau: that's not a generator iterator
2019-12-09 03:07:13	<--	hvxgr (~wl2v_usrn@epjdn.zq3q.org) has quit (Quit: leaving)
2019-12-09 03:07:15	nedbat	Soni: why do you need an empty generator?
2019-12-09 03:07:28	<--	novum (~novumsens@gateway/tor-sasl/novumsensum) has quit (Quit: :xa)
2019-12-09 03:07:32	Soni	(not that it matters, I'm not typechecking like that)
2019-12-09 03:07:47	<--	mcsippel (~mcsippel@97-93-29-122.dhcp.snlo.ca.charter.com) has quit (Quit: WeeChat 2.3)
2019-12-09 03:07:55	Soni	nedbat: I want something that returns an iterator and can have docs
2019-12-09 03:08:18	Soni	https://bpaste.net/show/HBUFQ
2019-12-09 03:08:22	altendky	`yield from ()` creates a tuple pointlessly so even if `return; yield` is 'ugly', it seems tidier and more to the point.  `yield` says 'i am a generator' and `return` says 'i have done nothing and i am done'
2019-12-09 03:08:26	cdunklau	Soni: sounds like that's solve by `return iter([])`
2019-12-09 03:08:31	cdunklau	solved*
2019-12-09 03:08:32	ce6	inphase could i try another question, im not too sure about this one lol
2019-12-09 03:09:09	<--	isokee (~isokee@unaffiliated/isokee) has quit (Ping timeout: 268 seconds)
2019-12-09 03:09:49	-->	tiwula (~lane@c-98-202-91-238.hsd1.ut.comcast.net) has joined #python
2019-12-09 03:10:23	<--	Revinard (revinard@gateway/vpn/privateinternetaccess/revinard) has quit (Ping timeout: 268 seconds)
2019-12-09 03:10:53	Soni	cdunklau: I still prefer "yield from ()"
2019-12-09 03:11:34	Soni	"return; yield" is confusing, "yield from ()" is pretty obvious, "return iter([])" is just no.
2019-12-09 03:11:35	-->	josh (~josh@109.246.246.116) has joined #python
2019-12-09 03:11:38	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 276 seconds)
2019-12-09 03:11:52	Soni	and, sure, "yield from ()" might not be currently optimized, but we can add an optimization for that
2019-12-09 03:11:54	--	josh is now known as Guest97062
2019-12-09 03:11:57	Soni	we just need to define it as good style first
2019-12-09 03:12:28	Soni	so no, "yield from ()" doesn't create a tuple. that's an implementation detail.
2019-12-09 03:12:49	altendky	Soni: i dunno, it says you want to create a thing and yield stuff from it.  doesn't seem like good style to me to express activities you don't want to happen.
2019-12-09 03:13:16	Soni	altendky: would "yield from []" be a better placeholder then?
2019-12-09 03:13:33	Soni	(same thing with the implementation detail)
2019-12-09 03:13:37	altendky	Soni: creating a list rather than a tuple?  the type of the thing being created is unrelated to anything i've said so no
2019-12-09 03:13:40	<--	Guest97062 (~josh@109.246.246.116) has quit (Client Quit)
2019-12-09 03:13:41	cdunklau	Soni: why is `return iter([])` "just no"?
2019-12-09 03:13:53	-->	barmaley (~barmaley@94.228.207.173) has joined #python
2019-12-09 03:14:02	Soni	cdunklau: docs: "Yields things" code: "return iter"
2019-12-09 03:14:23	Soni	did you see the paste I linked?
2019-12-09 03:14:32	-->	stranac (~stranac@193.14.245.77) has joined #python
2019-12-09 03:14:39	energizer	`yield from []` seems like a fine option
2019-12-09 03:14:40	<--	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-12-09 03:14:54	ammar2	yeah, in the context of an abstract class trying to show how stuff is supposed to be done
2019-12-09 03:14:58	energizer	presumably you're doing this to conform to some interface that yields stuff
2019-12-09 03:14:59	ammar2	I'd say Soni's preference is the best
2019-12-09 03:15:02	<--	Ignacy (~Ignacy@188.113.68.31) has quit (Remote host closed the connection)
2019-12-09 03:15:30	<--	afx_ (~afx_@185.51.134.236) has quit (Ping timeout: 265 seconds)
2019-12-09 03:15:36	<--	stranac (~stranac@193.14.245.77) has quit (Read error: Connection reset by peer)
2019-12-09 03:15:46	cdunklau	Soni: 20:07 < Soni> nedbat: I want something that returns an iterator and can have docs
2019-12-09 03:15:50	-->	stranac (~stranac@193.14.245.77) has joined #python
2019-12-09 03:16:11	-->	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has joined #python
2019-12-09 03:16:15	cdunklau	but if that wasn't an accurate description of your need, okay i'll give
2019-12-09 03:16:21	Soni	yeah and then I linked the paste for more clarity
2019-12-09 03:16:30	-->	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has joined #python
2019-12-09 03:16:35	altendky	all ideas fit that description presently?
2019-12-09 03:17:03	<--	jokr (~jokr@124.123.72.176) has quit (Ping timeout: 250 seconds)
2019-12-09 03:17:05	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 03:17:11	dualinity	InPhase: curious to your feedback on my next project... http://nostalgia-dev.github.io/
2019-12-09 03:17:23	-->	slivera (slivera@gateway/vpn/privateinternetaccess/slivera) has joined #python
2019-12-09 03:17:26	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2019-12-09 03:17:56	dualinity	or from others
2019-12-09 03:18:06	-->	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has joined #python
2019-12-09 03:18:14	dualinity	between contracts i will spend 1 month of my personal time working on it
2019-12-09 03:18:17	-->	Silmarilion (~Silmarili@87.116.177.1) has joined #python
2019-12-09 03:18:34	dualinity	starting next week : )
2019-12-09 03:18:35	<--	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has quit (Remote host closed the connection)
2019-12-09 03:18:59	Soni	anyway, ever considered that this might be a good way to do it?
2019-12-09 03:19:22	Soni	you seem to be rejecting it just because it's different from what you're used to
2019-12-09 03:19:37	energizer	dualinity: might be interested in https://perkeep.org/
2019-12-09 03:19:43	_habnabit	Soni, did you miss that people agreed with you?
2019-12-09 03:19:45	altendky	Soni: i never thought about any of these before and i gave reasons (unrelated to optimization even if it was taken that way)
2019-12-09 03:20:00	nedbat	Soni: i'm curious why "return []" wouldn't work?
2019-12-09 03:20:01	altendky	any optimization is a side effect
2019-12-09 03:20:25	dualinity	energizer: adding to my related links
2019-12-09 03:20:29	Soni	_habnabit: no; I'm not addressing the ppl who agreed with me
2019-12-09 03:20:36	altendky	Soni: you also don't show any indication of considering the opinions of the people who you asked
2019-12-09 03:20:38	Soni	nedbat: next([]) does wonders
2019-12-09 03:20:44	<--	stranac (~stranac@193.14.245.77) has quit (Ping timeout: 276 seconds)
2019-12-09 03:20:49	nedbat	Soni: i don't know what that means
2019-12-09 03:20:53	dualinity	the main difference is that I'm not (yet) trying to fight the big corporations... but more working with the idea of "ok... they know everything about me... but what If I want to as well?"
2019-12-09 03:21:21	dualinity	the timeline is a first vision: https://nostalgia-dev.github.io/assets/images/timeline1.jpg
2019-12-09 03:21:41	Vision	a first what
2019-12-09 03:21:56	dualinity	haha sorry xD didn't mean to tag you
2019-12-09 03:22:03	Vision	lolol
2019-12-09 03:22:10	Soni	nedbat: next([]) is a TypeError I think, but raises StopIteration for an empty generator
2019-12-09 03:22:16	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 265 seconds)
2019-12-09 03:22:28	dualinity	what's your vision: ? xD
2019-12-09 03:22:50	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-09 03:22:57	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Remote host closed the connection)
2019-12-09 03:23:02	nedbat	Soni: i would expect functions to produces iterables, not necessarily iterators.  next(iter([])) is fine.
2019-12-09 03:23:34	InPhase	dualinity: I find your proposal a little creepy, but at least you are putting the data in the right person's hands, unlike most such attempts.
2019-12-09 03:23:42	IaMnEwHeRe	dualinity, 2 things regarding your project, since you asked for feedback(which will go off topic rather quickly), the query-language-thing will mean only programmers will use it and regarding freeing your data, it is a misconception, the data is still within google and Facebook and co
2019-12-09 03:23:54	IaMnEwHeRe	for your data to be free you need to actually run your own infrastructure
2019-12-09 03:23:55	Soni	nedbat: I'd expect a function that "yields" (as per docs) would produce iterators, not arbitrary iterables
2019-12-09 03:24:17	nedbat	Soni: i don't use "Yields" in docstrings. it shouldn't matter what kind of iterable it produces.
2019-12-09 03:24:19	dualinity	IaMnEwHeRe: yea, phase 1 is only focus on developers
2019-12-09 03:24:26	nedbat	Soni: why limit yourself?
2019-12-09 03:24:28	ammar2	Soni: yeah, that's kind of a weird contract
2019-12-09 03:24:29	IaMnEwHeRe	and best, not collect data at all :D
2019-12-09 03:24:31	energizer	dualinity: looks good to me, i dont agree with the complaints above
2019-12-09 03:24:39	IaMnEwHeRe	I absolutely don't get this quantify yourself movement
2019-12-09 03:24:57	dualinity	to build the connections and to see what viable use cases there are.... then the next phase will indeed be "how can we make it usable by everyone"
2019-12-09 03:25:19	InPhase	dualinity: Yeah, I'd agree that it doesn't free the data, and the insights aren't unlimited.  But it does put your aggregated data into your own hands, for your own purposes, and can provide deep insights and analyses for your own benefit rather than just those of others.
2019-12-09 03:25:40	dualinity	the unlimited part is about that most people doing quantified self go about doing a single analysis of 1 source
2019-12-09 03:25:44	InPhase	dualinity: So it sounds valuable.  Just state better the things it actually does for you.  :)
2019-12-09 03:25:48	dualinity	the idea here is that it becomes possible to do cross-source analysis
2019-12-09 03:26:00	energizer	dualinity: i'd consider activitywatch as a source
2019-12-09 03:26:20	dualinity	(thanks a lot everyone for the super constructive feedback, I see all your points)
2019-12-09 03:26:35	InPhase	dualinity: Well it's going to be intrinsically limited to what exists in the source data, so it's definitely not unlimited.  :)
2019-12-09 03:26:54	InPhase	dualinity: But deep, yes.
2019-12-09 03:27:05	dualinity	yea... practically unlimited though
2019-12-09 03:27:15	dualinity	I mean - if you have 500 sources connected
2019-12-09 03:27:31	dualinity	you could theoretically do something with 450 out of 500 sources in 1 query
2019-12-09 03:27:39	<--	Wetmelon (~wetmelon@66-169-41-35.dhcp.gnvl.sc.charter.com) has quit (Ping timeout: 268 seconds)
2019-12-09 03:27:52	dualinity	that's more what it refers to...
2019-12-09 03:28:05	energizer	if soni wants to be able to handle iterators, they can declare as precise as they want, consistent with the principle that the caller should handle conversion. otoh putting `it = iter(it)` at the top of a function doesn't have much downside
2019-12-09 03:28:59	energizer	as precise an input type*
2019-12-09 03:29:17	-->	natten (~jn@unaffiliated/jnatten) has joined #python
2019-12-09 03:29:23	dualinity	InPhase: in terms of marketing i'm not trying to be too precise on that lol
2019-12-09 03:29:40	-->	__stranac__ (~stranac@193.14.245.77) has joined #python
2019-12-09 03:29:46	 *	altendky considers 'literally unlimited'
2019-12-09 03:29:47	InPhase	dualinity: Yeah, it's overselling.  It comes across disingenuous.
2019-12-09 03:29:53	dualinity	I do every now and then come across very cool use cases that would be useful if you could query your data e.g. using a chatbot
2019-12-09 03:30:11	Soni	how does google docstring style suggest documenting tuples?
2019-12-09 03:30:12	dualinity	how much did i spend less week in amsterdam in supermarkets when my heartrate was above 80
2019-12-09 03:30:18	dualinity	last week*
2019-12-09 03:30:24	InPhase	dualinity: I think it has enough impressive potential without the oversell, so you benefit more focusing on that in more specifics.
2019-12-09 03:30:34	energizer	Soni: what are you doing with tuples?
2019-12-09 03:30:40	Soni	e.g. function yields (int, str) pairs of run-length encoding
2019-12-09 03:31:03	dualinity	InPhase: yea I think showing the timeline and the example cases that personally helped me so far should be moved to the top
2019-12-09 03:31:27	-->	stranac (~stranac@78-1-49-64.adsl.net.t-com.hr) has joined #python
2019-12-09 03:31:32	energizer	Soni: def f() -> Iterator[Tuple[int, str]]:
2019-12-09 03:31:57	-->	tristianc (~tristianc@pool-72-83-128-193.washdc.fios.verizon.net) has joined #python
2019-12-09 03:32:06	Soni	I don't like annotations
2019-12-09 03:32:11	energizer	they like you
2019-12-09 03:32:18	dualinity	IaMnEwHeRe: i understand that you don't value the QS movement... but in actuality i believe it will help you answer more questions than just "optimizing yourself"
2019-12-09 03:32:55	causasui	sometimes I check out a git branch that has a dependency that's not in the other branch, which breaks my venv. are there any tools for handling this? if I made one for myself should I bother making it publishable (i.e. would anyone else have any interest)?
2019-12-09 03:33:02	energizer	heaven forbid anyone use tools to improve their lives
2019-12-09 03:33:09	<--	a90c (~androirc@unaffiliated/a90c) has quit (Quit: Leaving)
2019-12-09 03:33:24	<--	feodoran (~quassel@98-11-142-46.pool.kielnet.net) has left #python
2019-12-09 03:33:25	dualinity	someone mentioned they had a startup idea and I remember having read an article some time ago... i was only able to find it because i remembered i was on a train station... i used google timeline data to narrow down my web activity and found it immediately :)
2019-12-09 03:33:28	causasui	well the question isn't "should anyone use tools to improve their lives" to be fair
2019-12-09 03:33:44	<--	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has quit (Ping timeout: 276 seconds)
2019-12-09 03:33:44	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 276 seconds)
2019-12-09 03:33:49	dualinity	it really was one of the few cases that I actually couldn't have solved without scrolling through my web history back 3 months LOL
2019-12-09 03:33:50	altendky	causasui: i have an env-builder and syncer that uses pip-tools.  `./boots.py ensure` would update.  not sure how poetry etc handle it
2019-12-09 03:33:57	causasui	it's more like "does this exist already, and if not, would anyone else want it besides me"
2019-12-09 03:34:01	-->	akoana (~ah@213-147-160-255.nat.highway.bob.at) has joined #python
2019-12-09 03:34:09	altendky	causasui: or maybe you mean the git hook part?
2019-12-09 03:34:28	<--	__stranac__ (~stranac@193.14.245.77) has quit (Ping timeout: 252 seconds)
2019-12-09 03:34:29	-->	neoncontrails (~kz@wsip-70-167-74-86.sd.sd.cox.net) has joined #python
2019-12-09 03:34:39	causasui	altendky: I asked in a github issue and I was advised (although not by a maintainer) that with poetry one must remove and recreate the venv... pretty disappointin since I like poetry so much otherwise
2019-12-09 03:34:56	dualinity	causaui: I have not seen the same approach to me. i also realized that the GDPR law made this the perfect moment! companies are now forced to give you your personal data, so if you have a tool to combine it then that'd be pretty sweet
2019-12-09 03:35:11	dualinity	and don't forget that in the early days of google also people said "who needs that" :D
2019-12-09 03:35:18	causasui	altendky: I will look that up though and maybe crib some ideas
2019-12-09 03:35:30	causasui	altendky: or wait, did you open source it anywhere?
2019-12-09 03:35:34	energizer	dualinity: recent article on similar stuff https://news.ycombinator.com/item?id=21659876
2019-12-09 03:35:56	-->	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has joined #python
2019-12-09 03:35:58	altendky	causasui: yeah, the big thing i needed that they didn't have was multi-platform locking.  admittedly mine is just separate locking on each platform (for each 'group' you define) but...  it's something.  github.com/altendky/boots
2019-12-09 03:36:00	energizer	causasui: i was not referring to your question, but to the QS thing
2019-12-09 03:36:01	nedbat	Soni: Google style would be:  "Returns:\n An iterable of tuples, (int, str)" You should also mention what the int and str mean.
2019-12-09 03:36:12	causasui	energizer: ah
2019-12-09 03:36:18	dualinity	energizer: there are a lot of initiatives that talk about "protocols" or talk about philosophy
2019-12-09 03:36:23	Soni	nedbat: I use "Yields:" tho
2019-12-09 03:36:28	altendky	causasui: https://github.com/altendky/pm would be one example project using it.
2019-12-09 03:36:28	causasui	altendky: thanks
2019-12-09 03:36:34	dualinity	I think this approach is super hands on and can provide value along the way while building into something huge
2019-12-09 03:36:36	nedbat	Soni: i think that's a mistake, but ok.
2019-12-09 03:36:51	energizer	dualinity: that post has links to many actual projects
2019-12-09 03:36:53	nedbat	Soni: i think it's describing unnecessary implementation details.
2019-12-09 03:36:54	Soni	nedbat: you say that about basically everything I do so I'm not surprised
2019-12-09 03:37:10	nedbat	Soni: i'm hoping to explain my thinking to you.
2019-12-09 03:37:15	altendky	causasui: it's 2/3 stdlib only so it's about as directly runnable as you get across platforms.  i only did that for the bootstrapper so i could use all the libs i want in everything else.
2019-12-09 03:37:39	energizer	nedbat: if you return an iterator, why not say so?
2019-12-09 03:37:41	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 03:37:48	dualinity	energizer: i'll inspect more closely :)  thanks, keep them coming lol
2019-12-09 03:37:56	nedbat	energizer: because future implementations might not, and why should the caller care?
2019-12-09 03:38:09	Soni	nedbat: I prefer that this is an iterator and not just an iterable
2019-12-09 03:38:16	nedbat	Soni: can you explain why?
2019-12-09 03:38:30	Soni	besides you can just use "yield from" instead of "return"
2019-12-09 03:38:40	energizer	Soni: you want caller to wrap the call in iter()?
2019-12-09 03:38:45	energizer	er
2019-12-09 03:38:48	energizer	nedbat: you want caller to wrap the call in iter()?
2019-12-09 03:38:53	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 03:39:03	nedbat	energizer: usually, the caller will just iterate over it.
2019-12-09 03:39:19	-->	uytguz (~uytguz@67.212.238.148) has joined #python
2019-12-09 03:39:29	altendky	energizer: do you frequently use next()?  i mean sure, i wouldn't call it super uncommon but it's not the 'normal' way to move through a thing i don't think.
2019-12-09 03:40:23	Soni	I use next() in tests
2019-12-09 03:40:30	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined #python
2019-12-09 03:41:20	-->	joshjh (~josh@109.246.246.116) has joined #python
2019-12-09 03:41:20	-->	hostile (~quassel@adsl-185.176.58.194.tellas.gr) has joined #python
2019-12-09 03:41:27	-->	jokr (~jokr@124.123.72.176) has joined #python
2019-12-09 03:41:29	ikanobori	Speaking of not super common, there's a thing where I do `for bla in iter(something.read, "")`. I'd like to do that with `async for`, is there any sort of aiter that also awaits its first argument or do I write my own :)
2019-12-09 03:42:26	energizer	the difference in behavior between iterators and non-iterator iterables is so massive it makes me uncomfortable to be unsure which one i have
2019-12-09 03:42:36	-->	nathias (~nathias@unaffiliated/nathias) has joined #python
2019-12-09 03:43:32	<--	b1tninja (~b1tninja@unaffiliated/b1tninja) has quit (Ping timeout: 265 seconds)
2019-12-09 03:43:34	offby1	I always have to think about this.
2019-12-09 03:43:37	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2019-12-09 03:43:38	<--	JaredSchooley (~Sech@2600:6c42:7400:c86:2112:fd1a:6b56:ea41) has quit (Ping timeout: 245 seconds)
2019-12-09 03:43:41	<--	Jantz (~IceChat9@118-93-130-203.dsl.dyn.ihug.co.nz) has quit (Ping timeout: 268 seconds)
2019-12-09 03:43:57	offby1	iterators get exhausted as soon as you "go through" them once, whereas iterables effectively create a fresh iterator every time ... right?
2019-12-09 03:44:15	cdunklau	ikanobori: doesn't look like it.
2019-12-09 03:44:16	ammar2	what are you people doing that's not just a for loop over your iterable
2019-12-09 03:44:24	-->	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has joined #python
2019-12-09 03:44:30	offby1	sometimes we want to loop -twice-
2019-12-09 03:44:41	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-09 03:44:45	energizer	a function that takes an iterator often mutates its argument, and also often returns data. in any other case we consider that very bad
2019-12-09 03:44:52	Soni	ammar2: handing them to a magical next-using do-it-all datastructure library
2019-12-09 03:44:57	<--	xy2_ (~xy2_@94.239.177.175) has quit (Ping timeout: 240 seconds)
2019-12-09 03:45:22	Soni	... wait, nvm, that one doesn't take iterators
2019-12-09 03:45:32	<--	barmaley (~barmaley@94.228.207.173) has quit (Quit: Leaving)
2019-12-09 03:45:50	Soni	(at all. as in, it's a TypeError if you try to pass them in. it doesn't even take arbitrary iterables.)
2019-12-09 03:46:01	Soni	meh
2019-12-09 03:46:01	neoncontrails	I'm implementing an observer-like pattern and I'm trying to avoid circular memory references. I have some passing familiarity with the weakref module. Is there a substantive difference between stashing those references to other class instances in a weakref.WeakValueDictionary, vs. simply using weakref.Ref to wrap the object before adding to a regular ol' Python dictionary?
2019-12-09 03:46:19	Soni	it does return an iterator tho
2019-12-09 03:46:22	-->	JaredSchooley (~Sech@2600:6c42:7400:c86:2112:fd1a:6b56:ea41) has joined #python
2019-12-09 03:46:36	Soni	(actually a generator, but that's an implementation detail)
2019-12-09 03:47:03	dualinity	btw guys if you're interested.... i'm going to announce nostalgia soon (still preparing the core for exposure)
2019-12-09 03:47:23	<--	CookieM (~tomek@afdl94.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2019-12-09 03:47:23	dualinity	but on http://nostalgia-dev.github.io/ I already mention a discord and slack
2019-12-09 03:47:35	-->	b1tninja (~b1tninja@unaffiliated/b1tninja) has joined #python
2019-12-09 03:47:41	<--	Helenah (~s98259@unaffiliated/iveeee) has quit (Read error: Connection reset by peer)
2019-12-09 03:47:42	neoncontrails	I ask mainly because I'm using OrderedDict to preserve a canonical indexing of my class instances, so weakref.WeakValueDictionary makes the logic a little more cumbersome
2019-12-09 03:48:11	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 03:48:20	IaMnEwHeRe	neoncontrails, circular references will not just be a problem starting the code but running it in the long-run, you should restructure your architecture
2019-12-09 03:49:24	-->	Helenah (~s98259@unaffiliated/iveeee) has joined #python
2019-12-09 03:49:40	neoncontrails	IaMnEwHeRe: thanks but no thanks, oberserver pattern is one of the only ways to accomplish what I'm trying to do within the constraints that I have
2019-12-09 03:50:14	IaMnEwHeRe	I am not saying get rid of publish-and-subscribe, but consider who is watching whom
2019-12-09 03:50:25	IaMnEwHeRe	that is what causes circular references in this instance
2019-12-09 03:50:55	-->	jax (d537e196@unaffiliated/jax) has joined #python
2019-12-09 03:50:58	jax	hello
2019-12-09 03:51:17	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2019-12-09 03:52:17	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 240 seconds)
2019-12-09 03:52:54	neoncontrails	IaMnEwHeRe: actually I'm reading something in the Python Essential Reference that says even non-circular references are problematic for garbage collection so it's possible to have memory leaks even in a nice, acyclic tree
2019-12-09 03:52:56	ammar2	neoncontrails: the difference is that a WeakValueDictionary will automatically remove the stale object from the dict, whereas in a regular dict it will turn into None I believe
2019-12-09 03:52:58	jax	i'm a bit confused. i would like to install about 3 different python3 versions and created a couple venvs for those different python versions. i just found pyenv which can do: pyenv install 3.7.3 and pyenv install 3.6.3 or so. that is great, since i can then just create virtualenvs with pyenv virtualenv 3.7.3 myenv etc. but now i read it is
2019-12-09 03:52:59	jax	deprecated and only python3 -m venv is to be used. can someone help me get the same commands running?
2019-12-09 03:53:45	-->	mandeep (~mandeep@unaffiliated/mandeepb) has joined #python
2019-12-09 03:53:48	ammar2	neoncontrails: but internally WeakValueDictionary probably just uses Ref to achieve this
2019-12-09 03:54:14	Koffa	they deprecate stuff faster than php in early 00's -.-
2019-12-09 03:54:19	<--	keepguessing (~superman@c-73-93-87-220.hsd1.ca.comcast.net) has quit (Ping timeout: 250 seconds)
2019-12-09 03:54:21	-->	AhmedAmerican (c52b5fcb@gateway/web/cgi-irc/kiwiirc.com/ip.197.43.95.203) has joined #python
2019-12-09 03:54:24	-->	Eleanor (~E@h77-53-169-12.cust.a3fiber.se) has joined #python
2019-12-09 03:54:50	IaMnEwHeRe	neoncontrails, premature-optimization, the way you described it earlier I took it that it wasn't running at all, and when You know that you don't need ti anymore, what is wrong with cleaning up manually
2019-12-09 03:54:53	altendky	jax: pyenv isn't deprecated.  virtualenv is fine afaik.  or you can venv from the pyenv installed pythons.  whatever.  who said what exactly was deprecated?
2019-12-09 03:54:54	AhmedAmerican	`print('{:<5}{:>5}'.format('*' * item, '*' * item))` can `5` replaced by variable which will hold the number ?
2019-12-09 03:54:58	-->	Codaraxis (~Codaraxis@ip68-5-175-208.oc.oc.cox.net) has joined #python
2019-12-09 03:55:02	ikanobori	Yes.
2019-12-09 03:55:11	ikanobori	Format strings themselves are variable.
2019-12-09 03:55:13	<--	uytguz (~uytguz@67.212.238.148) has left #python ("Leaving")
2019-12-09 03:55:18	altendky	AhmedAmerican: {variable_name} iirc
2019-12-09 03:55:19	mandeep	i'm having problems saving numpy float32 arrays as images: https://bpaste.net/show/P734Y
2019-12-09 03:55:20	KirkMcDonald	AhmedAmerican: You can nest things e.g. {foo:<{bar}}
2019-12-09 03:55:23	neoncontrails	ammar2: that's the thing, I've always been wary of WeakValueDictionary because I think it would be so much easier to rehydrate a garbage-collected value than to iterate through a dictionary whose keys are unstable
2019-12-09 03:55:29	<--	zampano (~zampano@unaffiliated/zampano) has quit (Quit: leaving)
2019-12-09 03:55:37	<--	ksft (~ksft@wikipedia/KSFT) has quit (Ping timeout: 265 seconds)
2019-12-09 03:55:50	cdunklau	IaMnEwHeRe: i dunno if i'd call being sane about ref cycles premature optimization
2019-12-09 03:55:59	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-09 03:56:01	cdunklau	i mean... maybe. "probably" event
2019-12-09 03:56:03	cdunklau	even*
2019-12-09 03:56:13	mandeep	both cv2.imwrite() or Image.fromarray(A).save() result in oversaturated images
2019-12-09 03:56:36	jax	altendky ah that could be. maybe creating venvs with pyenv is deprecated, but installing python versions with pyenv isn't.
2019-12-09 03:56:56	neoncontrails	If I'm understanding correctly though, it's also valid to put Refs in a dictionary then?  I'm not optimizing prematurely, this is some code that currently works and I'm trying to make it work even better :)
2019-12-09 03:57:03	IaMnEwHeRe	cdunklau, no I know what you mean,but I was refering to his statement about GC
2019-12-09 03:57:13	altendky	jax: i don't use the pyenv virtualenv plugin to create my envs, i just virtualenv or venv directly.  but many people do many different things
2019-12-09 03:57:24	<--	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:9463:a896:20b:3ef4) has quit (Quit: snowmanbamm)
2019-12-09 03:57:25	cdunklau	ah
2019-12-09 03:57:38	jax	i've been using virtualenvwrapper and virtualenv
2019-12-09 03:57:40	altendky	i do wish pyenv did shims for micro/patch versions though
2019-12-09 03:57:46	IaMnEwHeRe	cdunklau, if that solution works and I find I have a memory-leak, I can clean up by hand(which is advisable anyways, verbosity and all) and the take it from there :D
2019-12-09 03:57:48	jax	but wanted to have something that doens't have to  do with my mac os x python version
2019-12-09 03:57:51	jax	that's where pyenv came in
2019-12-09 03:57:58	<--	w1kl4s (~w1kl4s@159.69.34.145) has quit (Quit: Ping timeout (120 seconds))
2019-12-09 03:58:15	energizer	altendky: is there a ticket for that?
2019-12-09 03:58:19	-->	thiras (~thiras@unaffiliated/thiras) has joined #python
2019-12-09 03:58:24	 *	altendky cowers in shame
2019-12-09 03:58:37	-->	w1kl4s (~w1kl4s@159.69.34.145) has joined #python
2019-12-09 03:59:18	Codaraxis	I have a logger I made whose stream handler is set to logging.DEBUG while the base logging facility is set to logging.ERROR. So, as desired, logging.info("foo") doesn't produce any output. However, logger.info("bar") produces two outputs: one with my custom formatter and then the default styled  INFO:Logger:bar  that seems to come from logging. Is there any way to disable the second output unless the base logging level is appropriate?
2019-12-09 03:59:22	altendky	energizer: https://github.com/pyenv/pyenv/issues/633 is related but self-closed with an alternative
2019-12-09 03:59:25	<--	lemoldu (~lemoldu@arennes-654-1-210-193.w90-32.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2019-12-09 03:59:27	<--	Hanii (~Hanii@2a00:23c5:c587:a800:f82c:93e8:4685:f2a6) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-12-09 03:59:30	-->	lemoldu_ (~lemoldu@arennes-654-1-210-193.w90-32.abo.wanadoo.fr) has joined #python
2019-12-09 03:59:30	neoncontrails	IaMnEwHeRe: in a previous iteration of this project I was ensnared by problems I didn't fully comprehend at the time, and recognize now in hindsight are exactly the sort of issues that arise when gcc is unable to deallocate instantiated objects
2019-12-09 03:59:45	-->	zampano (~zampano@unaffiliated/zampano) has joined #python
2019-12-09 04:00:05	 *	IaMnEwHeRe is wondering why the amount of trolls increased over the last couple of months
2019-12-09 04:01:01	-->	lemoldu__ (~lemoldu@arennes-654-1-223-102.w90-32.abo.wanadoo.fr) has joined #python
2019-12-09 04:01:11	energizer	altendky: yeah that self-close was unwarranted
2019-12-09 04:01:12	altendky	IaMnEwHeRe: you not liking their ideas (be they right or wrong) does not make them trolls
2019-12-09 04:01:36	altendky	energizer: separate but another one that i want (not that 2.7 installs latest but some way to install latest without --list)
2019-12-09 04:02:15	<--	jokr (~jokr@124.123.72.176) has quit (Quit: WeeChat 2.6)
2019-12-09 04:02:15	-->	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has joined #python
2019-12-09 04:02:18	altendky	https://github.com/pyenv/pyenv/issues/541
2019-12-09 04:02:49	mandeep	basically i need a python library that will allow me to encode png files in f32
2019-12-09 04:02:51	IaMnEwHeRe	altendky, yes, but them hopping from dicts and circular refs to GC and then to gcc does
2019-12-09 04:03:30	altendky	IaMnEwHeRe: being confusing doesn't make someone a troll
2019-12-09 04:03:39	ammar2	mandeep: what is f32?
2019-12-09 04:03:42	<--	lemoldu_ (~lemoldu@arennes-654-1-210-193.w90-32.abo.wanadoo.fr) has quit (Ping timeout: 246 seconds)
2019-12-09 04:03:46	mandeep	ammar2: float
2019-12-09 04:03:59	ammar2	mandeep: you want to load up a png with the data values represented at 32 bit floats?
2019-12-09 04:04:26	-->	r4v3nd (59b91e1a@gateway/web/cgi-irc/kiwiirc.com/ip.89.185.30.26) has joined #python
2019-12-09 04:04:27	mandeep	ammar2: im already able to do that. problem is i need to save them with their float values
2019-12-09 04:04:40	mandeep	seems like Pillow and opencv write as uint8
2019-12-09 04:05:09	<--	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has quit (Quit: Leaving.)
2019-12-09 04:05:12	ammar2	yes, that's how pngs work
2019-12-09 04:05:22	IaMnEwHeRe	altendky, true, but I have seen this several times now, across boards and channels in IRC and I call him out, because usually being confused is signaled by sticking to the same topic/problemzone and not by jumping through the entire stack
2019-12-09 04:05:25	ammar2	the PNG format itself doesn't support saving the pixel values as floats
2019-12-09 04:05:35	-->	philr (~phil@ppp14-2-90-166.adl-apt-pir-bras31.tpg.internode.on.net) has joined #python
2019-12-09 04:05:49	ammar2	your libraries convert between floats and bytes when loading/saving them
2019-12-09 04:06:06	IaMnEwHeRe	altendky, let me demonstrate
2019-12-09 04:06:15	<--	rippa (~rippa@ppp-vpdn-37.1.85.157.yarnet.ru) has quit (Quit: {#`%${%&`+'${`%&NO CARRIER)
2019-12-09 04:06:28	altendky	IaMnEwHeRe: no, we just shouldn't be calling people trolls.  especially when they aren't.
2019-12-09 04:06:41	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 04:06:52	IaMnEwHeRe	neoncontrails, please having read this please elaborate how you think that gcc is causing reference-problems for your dicts that you use for publish-and-subscribe-implementations
2019-12-09 04:07:02	mandeep	ammar2: hmm
2019-12-09 04:07:32	<--	rindolf (~rindolf@IGLD-84-229-96-151.inter.net.il) has quit (Ping timeout: 276 seconds)
2019-12-09 04:07:36	IaMnEwHeRe	altendky, how do you  know? now let's see what the answer will be
2019-12-09 04:07:47	altendky	neoncontrails: did you mean gcc (gnu compiler collection) or gc (python garbage collection module)?
2019-12-09 04:07:58	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 04:08:05	altendky	(or in general python's handling of cleaning up objects which is more than just the gc module)
2019-12-09 04:08:29	IaMnEwHeRe	neoncontrails, and please be more specific, paint a broader picture and some code highlighting the structure of your problem
2019-12-09 04:08:34	<--	joshjh (~josh@109.246.246.116) has left #python
2019-12-09 04:09:06	-->	pnwise (~pnwise@unaffiliated/pnwise) has joined #python
2019-12-09 04:09:08	nedbat	IaMnEwHeRe: this is the second time today that you accused someone of being a troll
2019-12-09 04:09:20	ChrisWarrick	mandeep: the naïve solution is to multiply by 255 and convert to uint8, should be reasonably cheap if you’re doing it with numpy
2019-12-09 04:09:58	IaMnEwHeRe	nedbat, yes, I have a short fuse currently, but mind you was I wrong the first time?
2019-12-09 04:10:35	nedbat	IaMnEwHeRe: I don't think they were. You told them to learn the basics and then come back, which also seemed a bit brusque.
2019-12-09 04:10:37	IaMnEwHeRe	and I formuated it more as a question, a hunch I had and others were agreeing :D
2019-12-09 04:10:38	mandeep	ammar2: ah yes seems that you're right about the png format
2019-12-09 04:10:42	<--	morenoh11 (~nope@rrcs-172-254-98-154.nyc.biz.rr.com) has quit (Ping timeout: 246 seconds)
2019-12-09 04:10:48	mandeep	ChrisWarrick: yeah true, but i lose some precision here
2019-12-09 04:11:01	mandeep	maybe i need to switch to tiff
2019-12-09 04:11:17	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 240 seconds)
2019-12-09 04:11:27	IaMnEwHeRe	nedbat, what else is there to do, when they are out of their depth? instead of asking big lofty questions starting small and asking questions that can be better answered in settings like these is better IMHO
2019-12-09 04:11:35	altendky	IaMnEwHeRe: a troll is intentionally trying to cause trouble, not causing trouble by lack of knowledge etc.
2019-12-09 04:11:37	<--	happycrappy (~mes@c-24-6-149-58.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2019-12-09 04:11:41	ChrisWarrick	mandeep: well, your screen most likely can just display 8-bit images anyway
2019-12-09 04:11:49	ammar2	mandeep: hmm, I'm assuming these images aren't for displaying? uint8 is the max a screen can display anyway
2019-12-09 04:11:53	ChrisWarrick	mandeep: 24bpp*
2019-12-09 04:11:59	IaMnEwHeRe	altendky, agreed, but to the observer the behave the same
2019-12-09 04:11:59	nedbat	IaMnEwHeRe: well, we can help them by teaching, we can give them some guidance, some resources, etc.
2019-12-09 04:12:11	-->	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has joined #python
2019-12-09 04:12:12	altendky	IaMnEwHeRe: stop calling people things they aren't
2019-12-09 04:12:26	altendky	and even if they are, maybe don't
2019-12-09 04:12:30	ChrisWarrick	(there are fancy screens that can do more)
2019-12-09 04:12:32	IaMnEwHeRe	altendky, ok then I just sit back and watch  :D
2019-12-09 04:12:32	ammar2	IaMnEwHeRe: I'd argue that you're being more of a hinderance to on-topic conversation with your trolling talk
2019-12-09 04:12:36	-->	yagmi96 (~yagmi9666@bzq-79-176-10-132.red.bezeqint.net) has joined #python
2019-12-09 04:12:53	IaMnEwHeRe	ammar2 agreed I could be
2019-12-09 04:12:55	altendky	IaMnEwHeRe: yes, much better than inaccurately accusing people of things
2019-12-09 04:12:59	mandeep	ChrisWarrick: ammar2: no just in case i need the detail that would be the difference between 255 and 254.2
2019-12-09 04:13:08	IaMnEwHeRe	altendky, you don't know that, and that is my point
2019-12-09 04:13:12	energizer	persistently asking about issues far above one's skill level can be frustrating
2019-12-09 04:13:14	<--	Jerrynicki (~niklas@p200300F573E87D002E7240BAFAD315CD.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-09 04:13:19	IaMnEwHeRe	but let's stop this otherwise I have to call myself a troll
2019-12-09 04:13:32	-->	ksft (~ksft@wikipedia/KSFT) has joined #python
2019-12-09 04:14:04	mandeep	and i'm seeing differences in output png between Pillow/cv2 and stb_image
2019-12-09 04:14:11	<--	peter22222 (~peter2222@dslb-188-104-250-048.188.104.pools.vodafone-ip.de) has quit (Quit: Leaving)
2019-12-09 04:14:29	mandeep	im not really sure what's going on here, but i believed it had to do with saving
2019-12-09 04:14:50	-->	Seaninho (~Seaninho@2601:589:4880:6d20:f53c:1653:1718:ac2b) has joined #python
2019-12-09 04:15:49	-->	theWhisper_ (~quassel@unaffiliated/thewhisper/x-7482734) has joined #python
2019-12-09 04:16:11	ammar2	mandeep: might be different rounding
2019-12-09 04:16:25	mandeep	hmm could be
2019-12-09 04:17:26	<--	NeUx (~neux@gateway/tor-sasl/neux) has quit (Quit: come back later)
2019-12-09 04:17:38	-->	Leonarbro (~Leonarbro@S01067824af93741c.cg.shawcable.net) has joined #python
2019-12-09 04:18:42	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 04:19:34	<--	Seaninho (~Seaninho@2601:589:4880:6d20:f53c:1653:1718:ac2b) has quit (Ping timeout: 252 seconds)
2019-12-09 04:19:57	<--	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has quit (Ping timeout: 240 seconds)
2019-12-09 04:19:58	-->	dale (~dale@unaffiliated/dale) has joined #python
2019-12-09 04:20:31	<--	cxzxczxcxzc (~cxzxczxcx@unaffiliated/cxzxczxcxzc) has left #python
2019-12-09 04:20:42	<--	traptrip (trip@brigaid.xs4all.nl) has quit (Remote host closed the connection)
2019-12-09 04:21:07	IaMnEwHeRe	neoncontrails, my apollogies for earlier, please elaborate the problem further
2019-12-09 04:21:09	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 04:21:19	-->	traptrip (trip@brigaid.xs4all.nl) has joined #python
2019-12-09 04:22:08	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2019-12-09 04:22:26	<--	wafflehunter (~wafflehun@149.172.254.130) has quit (Quit: Leaving)
2019-12-09 04:23:19	mandeep	are there any stb_image bindings for python?
2019-12-09 04:23:30	-->	udev_error (~udev_erro@unaffiliated/udev-error/x-2348729) has joined #python
2019-12-09 04:23:36	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 252 seconds)
2019-12-09 04:23:50	<--	djapo (~archie@unaffiliated/djapo) has quit (Remote host closed the connection)
2019-12-09 04:23:56	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-09 04:24:35	<--	sandbox1 (~unbanked_@c-67-167-239-14.hsd1.il.comcast.net) has quit (Quit: WeeChat 1.9.1)
2019-12-09 04:25:05	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Ping timeout: 276 seconds)
2019-12-09 04:26:21	<--	plimeriz (~user@154.57.11.99) has quit (Quit: Leaving)
2019-12-09 04:27:19	<--	udev_error (~udev_erro@unaffiliated/udev-error/x-2348729) has quit (Remote host closed the connection)
2019-12-09 04:28:14	ammar2	mandeep: https://pypi.org/project/Pil-Lite/ not sure how up to date it is
2019-12-09 04:28:23	-->	[SLB] (~slabua@unaffiliated/slabua) has joined #python
2019-12-09 04:28:27	<--	waynew (~wayne@24-35-211-21.fidnet.com) has quit (Quit: WeeChat 1.9.1)
2019-12-09 04:28:52	mandeep	ammar2: looks fairly maintained. ill take a look at the source. thanks :)
2019-12-09 04:28:58	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2019-12-09 04:29:13	-->	nahtnam (uid22411@gateway/web/irccloud.com/x-jsytsdhbgajlkqyb) has joined #python
2019-12-09 04:29:25	-->	canarts (~stranac@78-1-49-64.adsl.net.t-com.hr) has joined #python
2019-12-09 04:29:55	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Quit: WeeChat info:version)
2019-12-09 04:29:56	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 265 seconds)
2019-12-09 04:30:18	-->	sandbox1 (~unbanked_@c-67-167-239-14.hsd1.il.comcast.net) has joined #python
2019-12-09 04:30:37	<--	stranac (~stranac@78-1-49-64.adsl.net.t-com.hr) has quit (Ping timeout: 240 seconds)
2019-12-09 04:32:21	<--	obDC (~ob600@c-67-173-179-222.hsd1.il.comcast.net) has quit (Ping timeout: 265 seconds)
2019-12-09 04:32:24	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 04:33:27	<--	ffs (uid158779@gateway/web/irccloud.com/x-puneajfcquqyvjpv) has quit (Quit: Connection closed for inactivity)
2019-12-09 04:34:03	-->	kingx (~kingx@c-69-181-4-101.hsd1.ca.comcast.net) has joined #python
2019-12-09 04:34:22	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 04:34:55	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 04:35:05	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Client Quit)
2019-12-09 04:35:15	<--	sandbox1 (~unbanked_@c-67-167-239-14.hsd1.il.comcast.net) has quit (Ping timeout: 265 seconds)
2019-12-09 04:36:03	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 04:36:35	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-09 04:36:42	<--	thecoffemaker (~thecoffem@unaffiliated/thecoffemaker) has quit (Ping timeout: 265 seconds)
2019-12-09 04:36:49	<--	jax (d537e196@unaffiliated/jax) has quit (Remote host closed the connection)
2019-12-09 04:36:52	-->	parabolize (~paraboliz@c-76-25-97-149.hsd1.co.comcast.net) has joined #python
2019-12-09 04:37:01	-->	sandbox1 (~unbanked_@2607:fb90:a221:dec0:6da6:9549:c3e7:bc3d) has joined #python
2019-12-09 04:37:59	-->	thecoffemaker (~thecoffem@unaffiliated/thecoffemaker) has joined #python
2019-12-09 04:38:09	<--	stochastix (~quassel@unaffiliated/stochastix) has quit (Ping timeout: 265 seconds)
2019-12-09 04:39:07	-->	stochastix (~quassel@unaffiliated/stochastix) has joined #python
2019-12-09 04:39:44	<--	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has quit (Ping timeout: 252 seconds)
2019-12-09 04:41:50	BeerLover	best way to extract the bitrate from a string: '/tmp/INA090203573_128k.mp4' ?
2019-12-09 04:41:52	iKarus987	anyone knows a good article explaining this "for i in array"
2019-12-09 04:42:01	BeerLover	I want to extract the 128 part
2019-12-09 04:42:26	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-09 04:42:26	altendky	iKarus987: i think http://bit.ly/pyiter might be relevant
2019-12-09 04:42:44	BeerLover	there can be multiple underscores
2019-12-09 04:43:15	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2019-12-09 04:43:32	<--	Ether_Man (~quassel@unaffiliated/ether-man/x-1546665) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2019-12-09 04:43:38	hostile	BeerLover: maybe split the string where the underscores are and get the last if that's where the bit rate is
2019-12-09 04:43:57	<--	Eleanor (~E@h77-53-169-12.cust.a3fiber.se) has quit (Ping timeout: 246 seconds)
2019-12-09 04:43:58	BeerLover	that is not elegant
2019-12-09 04:44:19	hostile	regex maybe?
2019-12-09 04:45:00	-->	ValekoZ (~valekoz@185.228.230.170) has joined #python
2019-12-09 04:45:48	<--	h4rd3n3D_ (~weechat@gateway/tor-sasl/h4rd3n3d) has quit (Ping timeout: 260 seconds)
2019-12-09 04:46:02	-->	obDC (~ob600@2601:249:8100:6f2:76d0:2bff:fec4:75e2) has joined #python
2019-12-09 04:46:13	-->	Ether_Man (~quassel@unaffiliated/ether-man/x-1546665) has joined #python
2019-12-09 04:46:35	-->	DrCuriosity (~drcuriosi@202.6.117.189) has joined #python
2019-12-09 04:46:54	BeerLover	i have currently done: start, end = s.rindex('_'), s.rindex('k.') and then int(s[start+1: end])
2019-12-09 04:47:00	BeerLover	regex would be slower
2019-12-09 04:47:05	BeerLover	hostile
2019-12-09 04:47:45	<--	IaMnEwHeRe (~IaMnEwHeR@185.246.130.63) has quit (Quit: WeeChat 2.6)
2019-12-09 04:48:17	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-09 04:48:32	blackleitus	how can I compare file bytes https://pastebin.com/TUFCVivc while I want to compare max 1mb https://pastebin.com/XKcZWaZn ?
2019-12-09 04:48:33	infobob	https://bpaste.net/show/S2M4M (repasted for blackleitus)
2019-12-09 04:48:41	-->	codebrainz (~codebrain@S010634bdfa9ee795.vc.shawcable.net) has joined #python
2019-12-09 04:49:03	<--	JaredSchooley (~Sech@2600:6c42:7400:c86:2112:fd1a:6b56:ea41) has quit (Ping timeout: 245 seconds)
2019-12-09 04:49:42	hostile	BeerLover: will the bitrate always be on the end?
2019-12-09 04:50:31	BeerLover	yes
2019-12-09 04:50:34	nedbat	BeerLover: why do you think regex would be slower?
2019-12-09 04:50:43	<--	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has quit (Ping timeout: 265 seconds)
2019-12-09 04:50:51	<--	Edico (~fenrir@unaffiliated/edico) has left #python
2019-12-09 04:50:51	-->	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has joined #python
2019-12-09 04:50:54	-->	JaredSchooley (~Sech@24-178-227-107.dhcp.stls.mo.charter.com) has joined #python
2019-12-09 04:50:57	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Quit: WeeChat info:version)
2019-12-09 04:50:59	BeerLover	nedbat isn't it?
2019-12-09 04:51:10	nedbat	BeerLover: it's written in C, it might be faster
2019-12-09 04:51:24	BeerLover	regex matchin is non linear
2019-12-09 04:51:27	BeerLover	right?
2019-12-09 04:51:33	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 04:51:35	BeerLover	rindex is linear
2019-12-09 04:51:58	nedbat	BeerLover: it depends on the regex, and maybe C code would be faster anyway. you'd need to measure, and btw it might not matter at all.
2019-12-09 04:52:01	ammar2	why are you worried about speed in this case?
2019-12-09 04:52:15	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 04:52:20	ammar2	a regex would probably be less fragile and more readable here
2019-12-09 04:52:36	<--	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 04:52:37	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2019-12-09 04:53:08	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 265 seconds)
2019-12-09 04:53:20	nedbat	BeerLover: in any case, I would be surprised if this string matching was the limiting factor in your program's speed.
2019-12-09 04:53:57	energizer	s.partition('k.')[0].rpartition('_')[-1]
2019-12-09 04:54:17	-->	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined #python
2019-12-09 04:54:26	-->	medard (~medard@chello085216234107.chello.sk) has joined #python
2019-12-09 04:54:54	jiggawattz	BeerLover: why would you choose Python if you are concerned about speed
2019-12-09 04:55:01	jiggawattz	go to rust my man
2019-12-09 04:55:21	-->	zeden (~user@unaffiliated/zeden) has joined #python
2019-12-09 04:55:25	altendky	there are so many layers, none can be rejected based on being 'concerned about speed'
2019-12-09 04:55:31	-->	TheFridgeMaster (~TheFridge@180.95.38.150) has joined #python
2019-12-09 04:55:32	nedbat	jiggawattz: it's fine to think about speed when writing Python. but you have to do it realistically. micro-optimizations are silly.
2019-12-09 04:55:34	altendky	too vague
2019-12-09 04:56:17	jiggawattz	nedbat: if speed is a requirement, then Python is just the wrong choice period
2019-12-09 04:56:32	nedbat	jiggawattz: depends on what the limiting factor is.
2019-12-09 04:56:38	<--	yagmi96 (~yagmi9666@bzq-79-176-10-132.red.bezeqint.net) has quit (Quit: Leaving)
2019-12-09 04:56:48	BeerLover	easy guys
2019-12-09 04:56:56	nedbat	jiggawattz: you could have a python program that is fast enough if written well, but too slow if written poorly.
2019-12-09 04:57:01	BeerLover	just looking for elegant way of doing it
2019-12-09 04:57:03	jiggawattz	sure nedbat
2019-12-09 04:57:12	nedbat	jiggawattz: ok, then no "period" about it.
2019-12-09 04:57:16	energizer	BeerLover: s.partition('k.')[0].rpartition('_')[-1] is how i would do it
2019-12-09 04:57:19	nedbat	BeerLover: the regex is elegant.
2019-12-09 04:57:21	jiggawattz	but your RUST program will be faster. period.
2019-12-09 04:57:52	nedbat	jiggawattz: sure. custom asics might be even faster!
2019-12-09 04:58:04	jiggawattz	this guy nedbat he knows
2019-12-09 04:58:07	nedbat	jiggawattz: actually, not "period". not if I/O is the bottleneck.
2019-12-09 04:58:14	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Quit: WeeChat info:version)
2019-12-09 04:58:16	ammar2	yeah, definitely not period
2019-12-09 04:58:19	altendky	also pypy and well written python may well be faster than poorly written rust.
2019-12-09 04:58:27	jiggawattz	I/O is unlimited in the age of nvme my man
2019-12-09 04:58:29	iKarus987	is there a good article thats talks about "for variable in list" i really wanna know how this actually works, i cant comperhand how this line keeps printing items from the start to the last item. I started learning programing yesterday, so i am sorry if this is noob question
2019-12-09 04:58:36	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 04:58:41	energizer	iKarus987: did you see altendky's link?
2019-12-09 04:58:46	iKarus987	yes i did
2019-12-09 04:58:53	iKarus987	he glossed over it
2019-12-09 04:58:58	jiggawattz	I/O will be obsolete in about 5 years anyways
2019-12-09 04:59:05	nedbat	iKarus987: what kind of questions remain for you?
2019-12-09 04:59:11	jiggawattz	persistent block storage will become as fast as RAM
2019-12-09 04:59:30	altendky	jiggawattz: you have an nvme connection to the internet?
2019-12-09 04:59:33	nedbat	jiggawattz: ok, we can pick up this conversation in 5 years then :)
2019-12-09 04:59:39	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined #python
2019-12-09 04:59:57	nedbat	iKarus987: what kinds of things did he gloss over?
2019-12-09 04:59:57	jiggawattz	nedbat: I will probably be a Sr. RUST engineer though
2019-12-09 04:59:58	locsmif	I've got a 2D numpy array, but print(arr[:, 0:9]) and print(arr[0:9, :]) yield the same output. Why don't I get columns instead of rows in the first example?
2019-12-09 04:59:59	jiggawattz	so no more idling in this channel
2019-12-09 05:00:14	BeerLover	altendky maybe he has nvme connection to god himself :P
2019-12-09 05:00:24	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 05:00:32	<--	mrallweather (~ben@sydney.techieman.net) has quit (Remote host closed the connection)
2019-12-09 05:01:07	energizer	him?
2019-12-09 05:01:11	ikanobori	I'd hope we can get a bit faster than RAM but I don't get my hopes up.
2019-12-09 05:01:37	jiggawattz	ikanobori: it's coming
2019-12-09 05:01:51	-->	mrallweather (~ben@sydney.techieman.net) has joined #python
2019-12-09 05:01:51	jiggawattz	in about 15 years we will get bacteria-based storage
2019-12-09 05:01:57	energizer	jiggawattz: we're veering off topic
2019-12-09 05:02:06	jiggawattz	each bacterium can hold state and it will continue to grow
2019-12-09 05:02:13	jiggawattz	energizer: why did you single me out?
2019-12-09 05:02:13	iKarus987	i just wanna know detailed.. step by step whats actually happening "for variable in list" i understand the normal for loop that language like javascript use but this "in" thing is confusing me feels like magic its short and simple to look at
2019-12-09 05:02:50	altendky	iKarus987: other languages have 'for each' if that helps make it feel less weird
2019-12-09 05:02:52	nedbat	iKarus987: "list" is an iterable, which means you can get an iterator from it.  An iterator has one method: .next() to get the next value.
2019-12-09 05:03:08	nedbat	iKarus987: lots of things are iterable: lists, strings, files, your own custom objects.
2019-12-09 05:03:11	<--	dastier (~dastier@178.121.87.84) has quit (Remote host closed the connection)
2019-12-09 05:03:21	nedbat	iKarus987: exactly what they do to implement next() is up to them.
2019-12-09 05:03:46	nedbat	iKarus987: but that kind of description was already in that page, so I'm wondering what part of it seems glossed-over to you?
2019-12-09 05:03:50	energizer	jiggawattz: your personal magnetism seems to pull others off track
2019-12-09 05:04:08	ammar2	locsmif: https://bpaste.net/show/ELSKU
2019-12-09 05:04:24	ikanobori	iKarus987: Javascript has the a similar thing in `for(let key in object) { ... }`.
2019-12-09 05:04:33	ammar2	locsmif: works for me, why do you think you're not getting the columns?
2019-12-09 05:05:05	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-09 05:05:26	-->	keepguessing (~superman@c-73-93-87-220.hsd1.ca.comcast.net) has joined #python
2019-12-09 05:05:32	-->	gloomy (~Gloomy@x4d0bbca5.dyn.telefonica.de) has joined #python
2019-12-09 05:05:57	<--	hostile (~quassel@adsl-185.176.58.194.tellas.gr) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2019-12-09 05:05:58	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 05:06:11	-->	[0x8b30cc] (~x8b30cc@unaffiliated/x8b30cc) has joined #python
2019-12-09 05:06:25	energizer	ikanobori: https://bpaste.net/show/S77XQ
2019-12-09 05:06:51	altendky	iKarus987: ^ (i presume)
2019-12-09 05:06:56	iKarus987	ahh sorry guys i just saw youtube video and i clicked, there isa ctually an article beneath for that i am sorry
2019-12-09 05:07:12	iKarus987	thanks
2019-12-09 05:07:16	nedbat	iKarus987: the text and the video are very very similar
2019-12-09 05:07:28	energizer	iKarus987: https://bpaste.net/show/S77XQ
2019-12-09 05:07:28	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 05:07:31	iKarus987	the video is way too quick
2019-12-09 05:07:35	iKarus987	for my brain :D
2019-12-09 05:08:17	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 240 seconds)
2019-12-09 05:08:19	nedbat	iKarus987: ok, let us know if you still have questions
2019-12-09 05:08:42	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2019-12-09 05:09:21	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 05:09:46	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 05:09:56	<--	TML (~TML-prv@unaffiliated/tml) has quit (Disconnected by services)
2019-12-09 05:10:25	-->	glow8 (~mario@85.251.43.99.dyn.user.ono.com) has joined #python
2019-12-09 05:10:30	-->	TML (~TML-prv@unaffiliated/tml) has joined #python
2019-12-09 05:10:39	-->	esmhammer (~dad@bmtnon3746w-lp130-01-70-49-33-145.dsl.bell.ca) has joined #python
2019-12-09 05:11:53	-->	Whoroo (~user@unaffiliated/whoroo) has joined #python
2019-12-09 05:11:54	mattfly	im using python-docx to read a docx table but im getting the special characters all wrong
2019-12-09 05:11:58	<--	vuoto (~vuoto@80.71.142.174) has quit (Quit: vuoto)
2019-12-09 05:11:59	mattfly	python 3.7
2019-12-09 05:12:07	-->	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has joined #python
2019-12-09 05:12:20	mattfly	        from docx import Document
2019-12-09 05:12:20	mattfly	        document = Document(filepath)
2019-12-09 05:12:21	mattfly	        t=document.tables[0]
2019-12-09 05:12:28	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 265 seconds)
2019-12-09 05:12:53	mattfly	just that to load a document's first table, but when i loop over it the special characters are a mess
2019-12-09 05:12:57	mattfly	is there any way to fix this?
2019-12-09 05:13:13	<--	fflori (~fflori@194.230.155.112) has quit (Remote host closed the connection)
2019-12-09 05:13:15	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Quit: WeeChat info:version)
2019-12-09 05:13:17	<--	medard (~medard@chello085216234107.chello.sk) has quit (Ping timeout: 240 seconds)
2019-12-09 05:13:21	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 05:13:26	offby1	dunno what you're seeing
2019-12-09 05:13:36	offby1	perhaps it's actually working fine, but you're misinterpreting what you're seeing
2019-12-09 05:13:37	<--	jayjo (~jayjo@unaffiliated/jayjo) has quit (Quit: ZNC 1.7.3 - https://znc.in)
2019-12-09 05:13:37	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2019-12-09 05:13:49	mattfly	this is a common encoding problem
2019-12-09 05:13:51	-->	h4rd3n3D_ (~weechat@gateway/tor-sasl/h4rd3n3d) has joined #python
2019-12-09 05:13:53	offby1	what does "a mess" mean?
2019-12-09 05:14:03	mattfly	wrong encoding mess
2019-12-09 05:14:08	<--	glow8 (~mario@85.251.43.99.dyn.user.ono.com) has quit (Client Quit)
2019-12-09 05:14:21	offby1	my gut tells me you're looking at a byte string that hasn't been decoded into Unicode
2019-12-09 05:14:24	locsmif	ammar2: https://bpaste.net/show/GZDCY
2019-12-09 05:14:31	locsmif	I explain in the paste
2019-12-09 05:14:45	mattfly	how do i automatically detect what encoding a string is and convert it to utf8?
2019-12-09 05:14:49	locsmif	I know I'm probably doing something wrong, but maybe you can help explain
2019-12-09 05:14:56	offby1	mattfly: I don't think there's a reliable way
2019-12-09 05:15:34	nedbat	mattfly: can you show us an example of the text you expect, and the mess you get?
2019-12-09 05:15:48	deniska	mattfly: I think you are observing a representation in an escaped form, while underlying text is still fine
2019-12-09 05:16:13	nedbat	mattfly: i think many of us are gussing :)   Can you show us details?
2019-12-09 05:16:15	offby1	deniska: yep, my guess too
2019-12-09 05:16:28	deniska	I don't think "wrong encoding" is a problem possible in docx format, but who knows :)
2019-12-09 05:17:13	-->	humitos (~humitos@139.47.122.65) has joined #python
2019-12-09 05:17:15	<--	mluser-home (~mluser-ho@cpe-107-11-253-108.columbus.res.rr.com) has quit (Quit: Yikes!)
2019-12-09 05:17:17	offby1	docx is Microsoft's format for Office docs, ya?
2019-12-09 05:17:30	nedbat	ya
2019-12-09 05:17:33	mattfly	btw same libraries and same code on linux works just fine
2019-12-09 05:17:45	mattfly	this problem only happens on windows... im testing on a vm so takes a while
2019-12-09 05:17:57	mattfly	(and same file im reading from)
2019-12-09 05:18:06	offby1	perhaps something is implicitly assuming a certain encoding based on locale
2019-12-09 05:18:11	Whoroo	I seem to have issues with this code, but not sure just what, I can make changes and just move the problem to a different part of the code - https://bpaste.net/show/VTV4G
2019-12-09 05:18:11	<--	abhixec (~abhixec@73.92.49.6) has quit (Quit: leaving)
2019-12-09 05:18:13	locsmif	ammar2: my problem is: why would I request all columns and then get them back in a 2D array arranged as rows, when I can request a specific column and it'll work as expected
2019-12-09 05:18:18	offby1	it guesses right on your Linux box, but wrong on your Windows box
2019-12-09 05:18:47	mattfly	Never had this sort of problem on linux actually
2019-12-09 05:18:55	nedbat	Whoroo: what issue are you having with the code?
2019-12-09 05:19:17	deniska	mattfly: hard to say without knowing in what context you are seeing the problem, and the best way to provide context is code
2019-12-09 05:19:36	offby1	Whoroo: "numbers" is, confusingly, a list of _strings_, not of numbers.
2019-12-09 05:19:42	ammar2	locsmif: right, the way slicing works is that you're saying: "give me only these parts of the array", when we do a[:, 0:2], we're saying give us the a array with only columns 0 and 1
2019-12-09 05:19:55	<--	tiwula (~lane@c-98-202-91-238.hsd1.ut.comcast.net) has quit (Quit: Leaving)
2019-12-09 05:19:57	<--	AhmedAmerican (c52b5fcb@gateway/web/cgi-irc/kiwiirc.com/ip.197.43.95.203) has quit (Remote host closed the connection)
2019-12-09 05:20:02	Whoroo	nedbat, well I get str, int issues, but I can convert either one and I just get another issue
2019-12-09 05:20:17	<--	llorllale (~llorllale@CPEac202e24ff83-CMac202e24ff80.cpe.net.fido.ca) has quit (Quit: WeeChat 1.9.1)
2019-12-09 05:20:41	locsmif	ammar2: right.. damn.
2019-12-09 05:20:51	nedbat	Whoroo: let talk specifically about one particular issue
2019-12-09 05:21:10	<--	keepguessing (~superman@c-73-93-87-220.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2019-12-09 05:21:11	ammar2	locsmif: does a.T[0:2] do what you want?
2019-12-09 05:21:17	ammar2	locsmif: i.e transposing the array first
2019-12-09 05:21:22	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 05:21:35	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 05:21:37	offby1	there ought to be an IRC mode where I can say "/ignore everyone except nedbat"
2019-12-09 05:21:38	locsmif	ammar2: yes
2019-12-09 05:21:41	locsmif	ammar2: thanks
2019-12-09 13:55:37	--	irc: disconnected from server
2019-12-09 13:56:05	-->	duy1 (~laduyhaha@42.112.108.198) has joined #python
2019-12-09 13:56:05	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-09 13:56:05	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-09 13:56:05	--	Channel #python: 1781 nicks (0 ops, 0 voices, 1781 normals)
2019-12-09 13:56:17	<--	brinzhang_ (~brinzhang@171.8.76.20) has quit (Ping timeout: 240 seconds)
2019-12-09 13:56:25	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-09 13:56:39	<--	italic (~italic@unaffiliated/italic/x-8958156) has quit (Ping timeout: 250 seconds)
2019-12-09 13:57:07	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2019-12-09 13:58:08	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 13:58:49	<--	JTa (~Thunderbi@unaffiliated/jta) has quit (Ping timeout: 250 seconds)
2019-12-09 14:00:08	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 14:00:24	-->	fphilipe_ (~phil@85-195-241-186.fiber7.init7.net) has joined #python
2019-12-09 14:00:54	-->	joocain2_ (~joocain2@gateway/tor-sasl/joocain2) has joined #python
2019-12-09 14:02:27	-->	Lynxium (~Lynxium@bzq-109-67-226-187.red.bezeqint.net) has joined #python
2019-12-09 14:03:06	-->	snowmanbamm (~snowmanba@2600:1702:4360:6d60:5c4e:a128:a32e:8083) has joined #python
2019-12-09 14:03:10	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2019-12-09 14:03:17	-->	lockywolf_ (~lockywolf@95.85.18.95) has joined #python
2019-12-09 14:03:28	<--	joocain2 (~joocain2@gateway/tor-sasl/joocain2) has quit (Ping timeout: 260 seconds)
2019-12-09 14:05:37	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 240 seconds)
2019-12-09 14:05:57	<--	lockywolf (~lockywolf@114.85.137.46) has quit (Ping timeout: 240 seconds)
2019-12-09 14:06:55	-->	brinzhang_ (~brinzhang@218.29.111.74) has joined #python
2019-12-09 14:06:59	-->	Sxuza (~textual@105.186.99.218) has joined #python
2019-12-09 14:07:01	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 14:07:05	-->	lapoo (~dev4@89-212-52-180.static.t-2.net) has joined #python
2019-12-09 14:07:19	<--	parabolize (~paraboliz@c-76-25-97-149.hsd1.co.comcast.net) has quit (Quit: leaving)
2019-12-09 14:09:05	Ryuuguu	does Python come with some kind of function to count the number of digits in a number?
2019-12-09 14:09:27	Wulf	Ryuuguu: numbers don't have digits. Representations do. len(str(12345))
2019-12-09 14:09:45	Wulf	Ryuuguu: or you can use log10
2019-12-09 14:09:46	KirkMcDonald	Alternatively, math.log10
2019-12-09 14:09:59	<--	Adbray (~Adbray@2600:6c48:6f7f:d764:1998:e98a:86e2:5656) has quit (Quit: Ah! By Brain!)
2019-12-09 14:10:01	Ryuuguu	thank you
2019-12-09 14:10:05	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Ping timeout: 250 seconds)
2019-12-09 14:10:38	<--	causasui (~causasui@wikipedia/causa-sui) has quit (Ping timeout: 252 seconds)
2019-12-09 14:10:55	Wulf	but log10(0) returns an error and I wouldn't be too sure that for some numbers the result will be wrong because of floats
2019-12-09 14:10:56	<--	zuppa_2 (~zuppa@gateway/tor-sasl/zuppa) has quit (Ping timeout: 260 seconds)
2019-12-09 14:11:26	-->	granitosaurus (~granitosa@96.30.102.112) has joined #python
2019-12-09 14:12:00	-->	Boko_dbfecha (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:12:00	<--	Boko_dbfecha (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:12:28	<--	Ryuuguu (~cosmic@gateway/tor-sasl/ryuuguu) has quit (Remote host closed the connection)
2019-12-09 14:13:03	-->	Ryuuguu (~cosmic@gateway/tor-sasl/ryuuguu) has joined #python
2019-12-09 14:13:15	Wulf	log10(999999999999999) == log10(999999999999999 + 1)
2019-12-09 14:14:02	KirkMcDonald	Wulf: Ah, I imagine it's converting its argument to a float first thing.
2019-12-09 14:14:10	Wulf	yes
2019-12-09 14:14:30	KirkMcDonald	Or, no, that wouldn't do it in itself...
2019-12-09 14:14:44	KirkMcDonald	But the fact the result is 15 is telling.
2019-12-09 14:15:42	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2019-12-09 14:15:50	KirkMcDonald	It's within an order of magnitude of a float's maximum precision, in any case.
2019-12-09 14:16:58	KirkMcDonald	Yet a third approach is to repeatedly do x //= 10 and count until you hit less than 10.
2019-12-09 14:17:02	Wulf	log10(999999999999999) ~ 14.9999999999999996 and that isn't representable anymore so is rounded up.
2019-12-09 14:17:05	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 14:17:32	Ryuuguu	x//10 or x//=10 ?
2019-12-09 14:17:40	KirkMcDonald	Ryuuguu: Whatever.
2019-12-09 14:17:50	Wulf	Ryuuguu: len(str(x)) is best solution here.
2019-12-09 14:18:00	Ryuuguu	I'm new to Python, sorry
2019-12-09 14:18:13	KirkMcDonald	Ryuuguu: One is just the in-place version of the other.
2019-12-09 14:18:13	Wulf	Ryuuguu: you don't need to be sorry about that! ;-)
2019-12-09 14:18:57	-->	slivera (slivera@gateway/vpn/privateinternetaccess/slivera) has joined #python
2019-12-09 14:19:11	-->	nathias (~nathias@unaffiliated/nathias) has joined #python
2019-12-09 14:19:17	Wulf	Ryuuguu: how large is your number?
2019-12-09 14:19:28	-->	brinzhang (~brinzhang@171.8.76.20) has joined #python
2019-12-09 14:19:41	-->	rendar (~rendar@unaffiliated/rendar) has joined #python
2019-12-09 14:19:45	Wulf	if too large, my code will be slow
2019-12-09 14:19:57	-->	FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) has joined #python
2019-12-09 14:20:09	<--	fphilipe_ (~phil@85-195-241-186.fiber7.init7.net) has quit (Quit: WeeChat 2.4)
2019-12-09 14:21:15	Ryuuguu	KirkMcDonald: I've actually come up with a recursive method that makes use of the third approach
2019-12-09 14:21:16	Wulf	gmpy2 is a lot faster
2019-12-09 14:21:47	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 14:22:02	Ryuuguu	Wulf: I'm just testing it out on smaller numbers
2019-12-09 14:23:08	<--	snowmanbamm (~snowmanba@2600:1702:4360:6d60:5c4e:a128:a32e:8083) has quit (Quit: snowmanbamm)
2019-12-09 14:23:10	<--	brinzhang_ (~brinzhang@218.29.111.74) has quit (Ping timeout: 268 seconds)
2019-12-09 14:23:11	<--	very_sneaky (~very_snea@49.255.162.98) has quit (Remote host closed the connection)
2019-12-09 14:23:59	-->	levi13 (~levi@p200300E1BF1673C0CE63CEBCA737E83D.dip0.t-ipconnect.de) has joined #python
2019-12-09 14:24:03	-->	Boko_fbbbech (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:24:04	<--	Boko_fbbbech (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:24:05	-->	brandfilt (~juhana@193.66.200.2) has joined #python
2019-12-09 14:24:33	<--	djapo (~archie@unaffiliated/djapo) has quit (Remote host closed the connection)
2019-12-09 14:25:11	-->	nolfie (~nolfie@185.9.141.1) has joined #python
2019-12-09 14:25:15	-->	rmarcand (~rmarcand@2001:420:c0c0:1003::3b1) has joined #python
2019-12-09 14:25:29	Wulf	len(gmpy2.digits(x)) for large x. I wish someone (not I!) would implement faster integers for cpython
2019-12-09 14:25:38	-->	P1ro (~quassel@gentoo/user/p1ro) has joined #python
2019-12-09 14:26:08	-->	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has joined #python
2019-12-09 14:27:19	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 14:27:29	<--	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-27.dsl.bell.ca) has quit (Ping timeout: 268 seconds)
2019-12-09 14:28:55	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 14:29:24	<--	brinzhang (~brinzhang@171.8.76.20) has quit (Read error: Connection reset by peer)
2019-12-09 14:29:26	-->	Boko_ffddgba (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:29:26	<--	Boko_ffddgba (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:30:31	--	irc: disconnected from server
2019-12-09 14:30:49	-->	duy2 (~laduyhaha@42.112.108.198) has joined #python
2019-12-09 14:30:49	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-09 14:30:49	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-09 14:30:49	--	Channel #python: 1787 nicks (0 ops, 0 voices, 1787 normals)
2019-12-09 14:30:59	--	You are now known as laduyhaha
2019-12-09 14:31:11	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-09 14:31:35	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Remote host closed the connection)
2019-12-09 14:31:59	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 14:32:43	-->	jello_pudding (~jello_pud@2601:600:9f80:7780::6a2a) has joined #python
2019-12-09 14:34:02	-->	philr (~phil@ppp14-2-90-166.adl-apt-pir-bras31.tpg.internode.on.net) has joined #python
2019-12-09 14:34:06	<--	duy1 (~laduyhaha@42.112.108.198) has quit (Ping timeout: 265 seconds)
2019-12-09 14:34:48	-->	chele (~chele@business-90-187-8-217.pool2.vodafone-ip.de) has joined #python
2019-12-09 14:35:16	-->	greedom (~greedom@muedsl-82-207-236-042.citykom.de) has joined #python
2019-12-09 14:35:39	<--	jello_pudding (~jello_pud@2601:600:9f80:7780::6a2a) has quit (Client Quit)
2019-12-09 14:35:51	-->	Boko_cagggff (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:35:51	<--	Boko_cagggff (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:36:17	-->	CoolerX (~coolerext@14.139.38.136) has joined #python
2019-12-09 14:36:23	-->	teej (uid154177@gateway/web/irccloud.com/x-crkyhlvtxmvafrlh) has joined #python
2019-12-09 14:36:36	-->	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-27.dsl.bell.ca) has joined #python
2019-12-09 14:37:10	<--	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has quit (Quit: WeeChat 2.4)
2019-12-09 14:37:53	-->	Boko_eghcdba (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:37:54	<--	Boko_eghcdba (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:39:09	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 14:39:18	-->	Boko_hhaeegb (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:39:19	<--	Boko_hhaeegb (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:39:30	-->	brinzhang_ (~brinzhang@218.29.111.74) has joined #python
2019-12-09 14:39:40	-->	Tichodroma (~lutz@fsf/member/Tichodroma) has joined #python
2019-12-09 14:39:56	-->	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has joined #python
2019-12-09 14:39:57	-->	CoolerY (~coolerext@14.139.38.136) has joined #python
2019-12-09 14:40:07	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 14:40:09	<--	therue (~rue@1-162-40-115.dynamic-ip.hinet.net) has quit (Quit: WeeChat 2.6)
2019-12-09 14:40:27	-->	therue (~rue@1-162-40-115.dynamic-ip.hinet.net) has joined #python
2019-12-09 14:40:27	<--	C2_Win (~Thunderbi@103.42.219.75) has quit (Ping timeout: 268 seconds)
2019-12-09 14:40:43	<--	Helenah (~s98259@unaffiliated/iveeee) has quit (Read error: Connection reset by peer)
2019-12-09 14:41:21	<--	Ryuuguu (~cosmic@gateway/tor-sasl/ryuuguu) has quit (Quit: Leaving)
2019-12-09 14:41:48	<--	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has quit (Client Quit)
2019-12-09 14:41:54	-->	n3wborn (n3wborn@gateway/vpn/privateinternetaccess/n3wborn) has joined #python
2019-12-09 14:41:56	-->	amenji (~amenji@unaffiliated/amenji) has joined #python
2019-12-09 14:42:09	riiski	Can someone explain me or give a documentation about init method mechanism for kwargs.pop operation? https://www.irccloud.com/pastebin/AGJb7XeE/
2019-12-09 14:42:14	-->	Helenah (~s98259@unaffiliated/iveeee) has joined #python
2019-12-09 14:42:41	<--	KOR_Solidarity (~Huh@121.134.103.153) has quit (Read error: Connection reset by peer)
2019-12-09 14:42:49	riiski	I spent a few days on it and I still don't get it
2019-12-09 14:42:54	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Ping timeout: 268 seconds)
2019-12-09 14:42:57	<--	CoolerX (~coolerext@14.139.38.136) has quit (Ping timeout: 240 seconds)
2019-12-09 14:43:11	riiski	The code is working, I just need explanation why
2019-12-09 14:43:23	-->	iflema (~ian@unaffiliated/iflema) has joined #python
2019-12-09 14:43:54	Wulf	ammar2: no, it's not inside cpython.
2019-12-09 14:45:01	han-solo	riiski: there's nothing special going on
2019-12-09 14:45:04	emerent	riiski: kwargs is just a dict
2019-12-09 14:45:05	Wulf	riiski: print(kwargs) before and after the pop
2019-12-09 14:45:41	ammar2	riiski: in the end this basically just means that if you do: YourClass(max_hours=2, foo=a, bar=b) then this constructor will get the max_hours and the rest of the kwargs will be passed up to your super class's constructor
2019-12-09 14:45:47	riiski	Yeah, I know what it shows :) I just don't understand why
2019-12-09 14:45:56	Wulf	riiski: a nicer way to do the same:  def __init__(self, *args, max_hours, **kwargs): ...
2019-12-09 14:46:03	-->	Boko_hbcbacg (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:46:03	<--	Boko_hbcbacg (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:46:05	-->	tinarg (~granitosa@2a01:4f8:212:1aae::2:1018) has joined #python
2019-12-09 14:46:28	riiski	Wulf: oh, I will try that to check if this works
2019-12-09 14:46:35	han-solo	riiski: https://rhettinger.wordpress.com/2011/05/26/super-considered-super/
2019-12-09 14:46:36	ammar2	the dict.pop(key) is just an in place operation that will remove the key from the dict and return its value
2019-12-09 14:47:08	riiski	han-solo: thanks for the article, I need it
2019-12-09 14:47:17	riiski	ammar2: but why?
2019-12-09 14:47:36	ammar2	why what?
2019-12-09 14:47:50	ammar2	why is it popping? why is not passing max_hours up to the super class?
2019-12-09 14:47:50	riiski	Why is it needed?
2019-12-09 14:47:57	riiski	yes
2019-12-09 14:48:15	ammar2	because they don't want to propagate the argument up. This depends on what this class's parent is
2019-12-09 14:48:24	<--	granitosaurus (~granitosa@96.30.102.112) has quit (Ping timeout: 246 seconds)
2019-12-09 14:52:02	-->	Boko_ecfgded (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:52:02	<--	Boko_ecfgded (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:52:19	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 14:52:49	-->	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has joined #python
2019-12-09 14:53:13	riiski	I am going to need more articles on this because it is a breaking point for me
2019-12-09 14:53:44	-->	humitos (~humitos@139.47.122.65) has joined #python
2019-12-09 14:54:03	-->	h4rd3n3D (~weechat@gateway/tor-sasl/h4rd3n3d) has joined #python
2019-12-09 14:54:23	-->	Boko_heehead (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:55:15	<--	Boko_heehead (~smokevadi@179-194-36-78.baltnet.ru) has quit (Read error: Connection reset by peer)
2019-12-09 14:55:23	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 14:55:31	ammar2	I mean we've told you the mechanism of what is happening. Now it's up to you to read the rest of the code and figure out why this class wants the max_hours argument for itself and not pass it to the super class
2019-12-09 14:55:33	-->	Deusdeorum (~Deusdeoru@unaffiliated/deusdeorum) has joined #python
2019-12-09 14:56:04	riiski	it is used in a django form, so no point to argue about it
2019-12-09 14:56:20	-->	Boko_hhdgdab (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:56:35	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Remote host closed the connection)
2019-12-09 14:56:35	han-solo	mostly probably because the parent class don't need the max_hours
2019-12-09 14:56:51	riiski	yp
2019-12-09 14:56:53	riiski	yuo
2019-12-09 14:56:56	riiski	yup
2019-12-09 14:56:58	riiski	lol
2019-12-09 14:56:59	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 14:57:03	-->	nicolasnicolas (~nicolasni@167.99.80.52) has joined #python
2019-12-09 14:57:18	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2019-12-09 14:57:27	-->	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2019-12-09 14:58:20	<--	brinzhang_ (~brinzhang@218.29.111.74) has quit (Ping timeout: 268 seconds)
2019-12-09 14:59:01	<--	TML (~TML-prv@unaffiliated/tml) has quit (Read error: Connection reset by peer)
2019-12-09 14:59:40	-->	TML (~TML-prv@unaffiliated/tml) has joined #python
2019-12-09 15:00:08	<--	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has quit (Ping timeout: 276 seconds)
2019-12-09 15:00:17	<--	iKarus987 (~ikarus807@85-220-22-204.dsl.dynamic.simnet.is) has quit (Ping timeout: 240 seconds)
2019-12-09 15:00:47	<--	Boko_hhdgdab (~smokevadi@179-194-36-78.baltnet.ru) has quit (Ping timeout: 250 seconds)
2019-12-09 15:01:03	<--	malSet (~malSet@cpe-173-89-212-155.columbus.res.rr.com) has quit (Read error: Connection reset by peer)
2019-12-09 15:01:29	-->	vpathak (~vpathak@c-73-197-108-42.hsd1.nj.comcast.net) has joined #python
2019-12-09 15:02:01	-->	Serpent7776 (~Serpent77@78-11-8-249.static.ip.netia.com.pl) has joined #python
2019-12-09 15:02:04	<--	yelof (~yelof@2601:283:8003:a920:8578:c1f9:1888:4fda) has quit (Remote host closed the connection)
2019-12-09 15:02:15	-->	Boko_feddggc (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 15:02:51	<--	Boko_feddggc (~smokevadi@179-194-36-78.baltnet.ru) has quit (Read error: Connection reset by peer)
2019-12-09 15:02:58	-->	malSet (~malSet@cpe-173-89-212-155.columbus.res.rr.com) has joined #python
2019-12-09 15:03:49	-->	escanor (uid387784@gateway/web/irccloud.com/x-knsphqhwcocadmma) has joined #python
2019-12-09 15:03:54	-->	Mr_9anu3rq (~Mr.9anu3r@36.91.206.250) has joined #python
2019-12-09 15:05:10	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Remote host closed the connection)
2019-12-09 15:05:33	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 15:06:24	<--	humitos (~humitos@139.47.122.65) has quit (Remote host closed the connection)
2019-12-09 15:06:29	-->	Boko_bebbcea (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 15:06:42	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2019-12-09 15:07:15	-->	humitos (~humitos@139.47.122.65) has joined #python
2019-12-09 15:07:25	<--	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 15:07:29	-->	brinzhang_ (~brinzhang@218.29.111.74) has joined #python
2019-12-09 15:07:46	<--	humitos (~humitos@139.47.122.65) has quit (Remote host closed the connection)
2019-12-09 15:08:08	-->	humitos (~humitos@139.47.122.65) has joined #python
2019-12-09 15:09:20	<--	opsec (opsec@opsec/opsec) has quit (Remote host closed the connection)
2019-12-09 15:09:56	cluelessperson_	yo
2019-12-09 15:09:57	<--	black_13 (44e36799@ip68-227-103-153.ok.ok.cox.net) has quit (Remote host closed the connection)
2019-12-09 15:10:05	Mr_9anu3rq	Hi everyone, I made a python program using pyqt5 on linux and now I want to run this program to windows as an exe file, what should I do? thankyou
2019-12-09 15:10:45	-->	lightman (~lightman@88.147.115.242) has joined #python
2019-12-09 15:10:45	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Ping timeout: 250 seconds)
2019-12-09 15:11:16	<--	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has quit (Ping timeout: 268 seconds)
2019-12-09 15:11:54	-->	mathemancer (~mathemanc@ip1f11fe4c.dynamic.kabel-deutschland.de) has joined #python
2019-12-09 15:11:55	-->	opsec (opsec@opsec/opsec) has joined #python
2019-12-09 15:13:06	-->	airstorm (~belovent@cr-01.anx09.lju.si.anexia-it.com) has joined #python
2019-12-09 15:13:27	<--	hypc (~Thunderbi@60.16.254.148) has quit (Remote host closed the connection)
2019-12-09 15:13:31	han-solo	Mr_9anu3rq: https://www.pyinstaller.org/
2019-12-09 15:13:48	-->	hypc (~Thunderbi@60.16.254.148) has joined #python
2019-12-09 15:14:19	<--	lankanmon (~LKNnet@CPEb4fbe4e331bd-CM64777d632380.cpe.net.cable.rogers.com) has quit (Quit: Left...)
2019-12-09 15:16:20	<--	bonestormii_ (~boneii@c-67-162-87-77.hsd1.il.comcast.net) has quit (Remote host closed the connection)
2019-12-09 15:17:00	Mr_9anu3rq	han-solo: install on windows or linux?
2019-12-09 15:17:46	-->	Andecy (~andecy@bzq-218-29-26.cablep.bezeqint.net) has joined #python
2019-12-09 15:17:50	-->	lockywolf__ (~lockywolf@114.85.174.55) has joined #python
2019-12-09 15:17:50	han-solo	i assumed you only wanted the .exe to be on windows. Yes, in linux
2019-12-09 15:18:15	<--	nolfie (~nolfie@185.9.141.1) has quit (Quit: leaving)
2019-12-09 15:18:58	-->	boxr (~boxr@panopticon.cybergaraget.org) has joined #python
2019-12-09 15:18:59	<--	kriskropd (~kriskropd@unaffiliated/kriskropd) has quit (Quit: kriskropd)
2019-12-09 15:19:32	<--	Boko_bebbcea (~smokevadi@179-194-36-78.baltnet.ru) has quit (Read error: Connection reset by peer)
2019-12-09 15:19:57	<--	lockywolf_ (~lockywolf@95.85.18.95) has quit (Ping timeout: 240 seconds)
2019-12-09 15:20:06	-->	tonythomas (uid25971@wikimedia/-01tonythomas) has joined #python
2019-12-09 15:20:21	-->	lockywolf (~lockywolf@114.85.176.190) has joined #python
2019-12-09 15:20:31	<--	oakridge (~oakridge@157.245.63.122) has quit (Quit: ZNC 1.7.5 - https://znc.in)
2019-12-09 15:20:51	-->	dre_ (~dre_@115-188-135-8-adsl.sparkbb.co.nz) has joined #python
2019-12-09 15:21:25	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 15:21:31	-->	Mrbuck (~Mrbuck@ec2-34-200-164-101.compute-1.amazonaws.com) has joined #python
2019-12-09 15:21:37	han-solo	Mr_9anu3rq: er, wait. It has to be created in windows :/
2019-12-09 15:21:45	-->	oakridge (~oakridge@157.245.63.122) has joined #python
2019-12-09 15:21:48	-->	zeSoup (~jsc@2003:5b:203b:100:3580:c637:f15b:4411) has joined #python
2019-12-09 15:21:49	han-solo	Sorry about that
2019-12-09 15:22:07	han-solo	It is specific to the active operating system and the active version of Python
2019-12-09 15:22:08	<--	lockywolf__ (~lockywolf@114.85.174.55) has quit (Ping timeout: 252 seconds)
2019-12-09 15:22:38	-->	Boko_gghbhgd (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 15:23:18	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined #python
2019-12-09 15:24:32	han-solo	https://pypi.org/project/cx-Freeze/ # is the one that does cross platform
2019-12-09 15:24:47	-->	C2_Win (~Thunderbi@59.153.110.122) has joined #python
2019-12-09 15:24:49	<--	nicolasnicolas (~nicolasni@167.99.80.52) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-12-09 15:25:10	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 15:25:15	<--	Jantz (~IceChat9@2407:7000:8d04:100:edd9:8a1e:edf1:b8e5) has quit (Read error: Connection reset by peer)
2019-12-09 15:25:26	<--	brinzhang_ (~brinzhang@218.29.111.74) has quit (Read error: Connection reset by peer)
2019-12-09 15:25:52	-->	brinzhang_ (~brinzhang@218.29.111.74) has joined #python
2019-12-09 15:26:03	<--	dale (~dale@unaffiliated/dale) has quit (Quit: My computer has gone to sleep)
2019-12-09 15:26:10	-->	zadock (~zadock@gateway/tor-sasl/zadock) has joined #python
2019-12-09 15:26:19	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 15:26:59	-->	Ytteb (~Ytteb@unaffiliated/ytteb) has joined #python
2019-12-09 15:27:01	<--	Boko_gghbhgd (~smokevadi@179-194-36-78.baltnet.ru) has quit (Read error: Connection reset by peer)
2019-12-09 15:27:18	[Tritium]	pyinstaller is multi-platform, and not abandoned like cx-freeze
2019-12-09 15:27:22	-->	Tucky (~Tucky@61.235.17.93.rev.sfr.net) has joined #python
2019-12-09 15:27:52	[Tritium]	oh, wow, they actually had a release!
2019-12-09 15:27:58	-->	oakridge_ (~oakridge@157.245.63.122) has joined #python
2019-12-09 15:27:59	[Tritium]	its been a really long time
2019-12-09 15:28:05	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 250 seconds)
2019-12-09 15:28:31	<--	oakridge (~oakridge@157.245.63.122) has quit (Ping timeout: 250 seconds)
2019-12-09 15:28:44	han-solo	[Tritium]: so you can create an exe in linux using pyinstaller and it will work in windows ?
2019-12-09 15:28:45	ikanobori	Multi platform but not a cross compiler :)
2019-12-09 15:29:10	-->	throsturt (~throstur@unaffiliated/throstur) has joined #python
2019-12-09 15:29:11	han-solo	Ah
2019-12-09 15:29:31	-->	Jantz (~IceChat9@2407:7000:8d04:100:edd9:8a1e:edf1:b8e5) has joined #python
2019-12-09 15:29:33	ikanobori	Honestly this is common, I think even some of the others don't specifically like to be cross platform due to some licensing of vcredist or such.
2019-12-09 15:29:36	ikanobori	If I recall.
2019-12-09 15:29:37	[Tritium]	han-solo: building windows installations on linux, without the use of wine, is unreliable anyways
2019-12-09 15:29:56	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 15:30:03	-->	shredding (~shredding@p200300E9EF0F9A00C0B65DD2F3679101.dip0.t-ipconnect.de) has joined #python
2019-12-09 15:30:04	[Tritium]	but python works fine under wine
2019-12-09 15:30:12	<--	The_Prospector (~The_Prosp@unaffiliated/cornman) has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
2019-12-09 15:30:22	<--	shredding (~shredding@p200300E9EF0F9A00C0B65DD2F3679101.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2019-12-09 15:30:29	-->	shredding (~shredding@p200300E9EF0F9A00C0B65DD2F3679101.dip0.t-ipconnect.de) has joined #python
2019-12-09 15:30:30	han-solo	I only used wine once, i don't remember what i used it for now :)
2019-12-09 15:30:50	Mr_9anu3rq	when compiling on windows (pyinstaller), will it run without installing pyqt5?
2019-12-09 15:30:56	-->	tesseract (~tesseract@49.105.136.77.rev.sfr.net) has joined #python
2019-12-09 15:30:57	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 15:31:23	<--	tesseract (~tesseract@49.105.136.77.rev.sfr.net) has quit (Remote host closed the connection)
2019-12-09 15:31:28	[Tritium]	Mr_9anu3rq: pyinstaller will package pyqt and all other dependencies it can find
2019-12-09 15:31:39	-->	tesseract (~tesseract@49.105.136.77.rev.sfr.net) has joined #python
2019-12-09 15:32:35	-->	The_Prospector (~The_Prosp@unaffiliated/cornman) has joined #python
2019-12-09 15:32:48	-->	schne1der (~schneider@unaffiliated/schneider) has joined #python
2019-12-09 15:32:48	<--	brinzhang_ (~brinzhang@218.29.111.74) has quit (Ping timeout: 245 seconds)
2019-12-09 15:32:52	<--	pxs_0o (~pxs@176.60.138.31) has quit (Read error: Connection reset by peer)
2019-12-09 15:35:52	-->	pxs (~pxs@176.60.138.31) has joined #python
2019-12-09 15:38:42	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Quit: Leaving)
2019-12-09 15:39:10	-->	arashi (~avimanyu@223.187.208.143) has joined #python
2019-12-09 15:39:49	Mr_9anu3rq	Tritium: successfully created exe file, but can not run on windows
2019-12-09 15:41:25	<--	boxr (~boxr@panopticon.cybergaraget.org) has quit (Quit: Lost terminal)
2019-12-09 15:41:26	--	hberaud|gone is now known as hberaud
2019-12-09 15:41:35	<--	lemoldu__ (~lemoldu@arennes-654-1-223-102.w90-32.abo.wanadoo.fr) has quit (Quit: Leaving)
2019-12-09 15:41:46	<--	Sxuza (~textual@105.186.99.218) has quit (Ping timeout: 265 seconds)
2019-12-09 15:41:53	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2019-12-09 15:42:21	-->	jaziz1 (~jaziz@unaffiliated/jaziz) has joined #python
2019-12-09 15:42:24	<--	musr (~musr@gateway/tor-sasl/musr) has quit (Ping timeout: 260 seconds)
2019-12-09 15:42:37	Mr_9anu3rq	warning: missing module named
2019-12-09 15:42:53	-->	boxr (~boxr@panopticon.cybergaraget.org) has joined #python
2019-12-09 15:43:54	<--	Mrbuck (~Mrbuck@ec2-34-200-164-101.compute-1.amazonaws.com) has quit (Remote host closed the connection)
2019-12-09 15:43:59	-->	Darkhunter (~mmojzis@242.214.broadband18.iol.cz) has joined #python
2019-12-09 15:44:37	-->	musr (~musr@gateway/tor-sasl/musr) has joined #python
2019-12-09 15:45:25	<--	jaziz (~jaziz@unaffiliated/jaziz) has quit (Ping timeout: 250 seconds)
2019-12-09 15:46:25	<--	vpathak (~vpathak@c-73-197-108-42.hsd1.nj.comcast.net) has quit (Ping timeout: 268 seconds)
2019-12-09 15:46:35	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 15:51:03	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 250 seconds)
2019-12-09 15:51:08	[Tritium]	Mr_9anu3rq: the pyinstaller docs will tell you how to deal with hidden imports
2019-12-09 15:51:56	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 15:52:47	<--	MoarSpaceFi (~Forgot_my@65.155.84.20) has quit (Read error: Connection reset by peer)
2019-12-09 15:52:49	-->	lockywolf_ (~lockywolf@95.85.18.95) has joined #python
2019-12-09 15:52:50	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 15:54:05	-->	ciccio2000 (~fbeninca@84.88.185.62) has joined #python
2019-12-09 15:54:40	-->	enoq (~textual@91.113.175.52) has joined #python
2019-12-09 15:55:18	<--	duderonomy (~duderonom@c-73-231-57-101.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2019-12-09 15:55:24	<--	lockywolf (~lockywolf@114.85.176.190) has quit (Ping timeout: 250 seconds)
2019-12-09 15:56:12	-->	bdeshi (~bdeshi@103.55.145.110) has joined #python
2019-12-09 15:57:21	-->	ralonsoh (~ralonsoh@79.97.188.172) has joined #python
2019-12-09 15:58:46	-->	xy2_ (~xy2_@94.239.177.175) has joined #python
2019-12-09 15:58:58	-->	floppydh (~floppydh@buro.mquadr.at) has joined #python
2019-12-09 15:59:48	-->	framend (~framend@unaffiliated/framend) has joined #python
2019-12-09 16:00:59	<--	lambda-11235 (~lambda-11@172.242.242.177) has quit (Quit: Bye)
2019-12-09 16:01:23	<--	tsaka__ (~torstein@94.66.73.249) has quit (Quit: Konversation terminated!)
2019-12-09 16:01:28	-->	pwned (~pwned@85.103.13.248) has joined #python
2019-12-09 16:01:33	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 245 seconds)
2019-12-09 16:01:48	pwned	I was wondering
2019-12-09 16:01:58	pwned	I've written a bunch of asyncio code over the past 2 months
2019-12-09 16:02:30	pwned	following the docs I always took good care to give the loop parameter to every function that has it
2019-12-09 16:02:39	pwned	now 3.8 docs says it is deprecated in many places
2019-12-09 16:02:49	pwned	was all my effort in vain?
2019-12-09 16:03:00	energizer	yes
2019-12-09 16:03:07	pwned	k thx
2019-12-09 16:03:11	<--	enoq (~textual@91.113.175.52) has quit (Ping timeout: 276 seconds)
2019-12-09 16:03:16	<--	vikas027 (~vikas027@119-18-2-150.771202.syd.nbn.aussiebb.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 16:03:18	-->	C2_Win1 (~Thunderbi@59.153.110.86) has joined #python
2019-12-09 16:03:21	<--	owenc (~owen@193.238.71.3) has quit (Quit: WeeChat 2.6)
2019-12-09 16:03:44	energizer	pwned: i've switched to using trio for async whenever i possibly can (https://trio.readthedocs.io/)
2019-12-09 16:04:34	deniska	I was ahead the curve, never passed the loop around :)
2019-12-09 16:04:48	-->	lockywolf__ (~lockywolf@114.85.184.10) has joined #python
2019-12-09 16:05:08	pwned	energizer: is it a wrapper around asyncio or does it use some external 3rd party dependency like libevent ?
2019-12-09 16:05:19	deniska	it implements its own event loop
2019-12-09 16:05:21	energizer	pwned: neither
2019-12-09 16:05:43	<--	carl- (~carl@nat.basefarm.se) has quit (Remote host closed the connection)
2019-12-09 16:05:56	<--	gkamathe (gkamathe@unaffiliated/gkamathe) has quit (Ping timeout: 265 seconds)
2019-12-09 16:05:59	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 16:06:13	-->	carl- (~carl@nat.basefarm.se) has joined #python
2019-12-09 16:06:22	pwned	I realy can't switch at this point but people keep on recommending it whenever I enter the channel
2019-12-09 16:06:31	-->	dynetrekk (3e46673b@62.70.103.59) has joined #python
2019-12-09 16:06:43	han-solo	trio is very good
2019-12-09 16:06:45	pwned	cuz nursery
2019-12-09 16:06:46	<--	C2_Win (~Thunderbi@59.153.110.122) has quit (Ping timeout: 268 seconds)
2019-12-09 16:06:47	--	C2_Win1 is now known as C2_Win
2019-12-09 16:06:51	han-solo	the design principle is also very nice
2019-12-09 16:06:57	-->	DanyC (~DanyC@185.65.25.74) has joined #python
2019-12-09 16:06:58	<--	zadock (~zadock@gateway/tor-sasl/zadock) has quit (Quit: Leaving)
2019-12-09 16:07:06	-->	owenc (~owen@193.238.71.3) has joined #python
2019-12-09 16:07:06	energizer	if you must use asyncio, you can try https://github.com/agronholm/anyio
2019-12-09 16:07:19	dynetrekk	Hi, I'm running an external process with subprocess.run and a timeout of, say, 5 seconds. How do I capture output? I'm testing a daemon process that will always timeout, but I would like to capture its output.
2019-12-09 16:07:26	energizer	er i mean https://anyio.readthedocs.io/
2019-12-09 16:07:30	-->	veek (~veek@unaffiliated/veek) has joined #python
2019-12-09 16:07:36	-->	mcsontos (mcsontos@nat/redhat/x-fyireofjbwisulnz) has joined #python
2019-12-09 16:07:44	<--	lockywolf_ (~lockywolf@95.85.18.95) has quit (Ping timeout: 276 seconds)
2019-12-09 16:07:50	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined #python
2019-12-09 16:07:51	<--	DanyC (~DanyC@185.65.25.74) has quit (Remote host closed the connection)
2019-12-09 16:08:00	pwned	`High level compatibility layer for multiple asynchronous event loop implementations on Python
2019-12-09 16:08:06	Yhg1s	dynetrekk: you tell subprocess.run to capture output, and it'll be attached to the object returned from 'run'
2019-12-09 16:08:10	energizer	dynetrekk: subprocess.check_output()?
2019-12-09 16:08:20	<--	CrazyEddy (crazyed@wrongplanet/CrazyEddy) has quit (Ping timeout: 252 seconds)
2019-12-09 16:08:38	dynetrekk	Yhg1s but when subprocess.run raises the timeout exception, I don't get that object?
2019-12-09 16:08:45	ikanobori	I bet the timeout raises an exception and you don't get the output.
2019-12-09 16:08:52	pwned	haha
2019-12-09 16:08:56	ikanobori	dynetrekk: Does the exception object hold the outputs?
2019-12-09 16:09:00	-->	DanyC (~DanyC@185.65.25.74) has joined #python
2019-12-09 16:09:08	-->	fflori (~fflori@nat-wlan-uzh-89-206-64-012.uzh.ch) has joined #python
2019-12-09 16:09:14	energizer	dynetrekk: run(check=False, stdout=PIPE) should work
2019-12-09 16:09:28	Yhg1s	dynetrekk: correct, but the TimeoutExpired exception you get does.
2019-12-09 16:09:54	-->	ncrocfer (~ncrocfer@unaffiliated/ncrocfer) has joined #python
2019-12-09 16:09:58	arashi	I wrote a simple matrix addition program , and now i have no idea how to print the result of the adddition
2019-12-09 16:15:21	--	irc: disconnected from server
2019-12-09 17:27:43	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-09 17:27:43	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-09 17:27:43	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-09 17:27:44	--	Channel #python: 1806 nicks (0 ops, 0 voices, 1806 normals)
2019-12-09 17:27:56	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-09 17:28:07	Yhg1s	[Tritium]: except if you have any kind of third-party dependency.
2019-12-09 17:28:20	Yhg1s	and since Python itself has third-party dependencies...
2019-12-09 17:28:35	Yhg1s	(this is low cost in the first year, and then more and more cost every year. In the end it will be pretty compelling.)
2019-12-09 17:28:36	[Tritium]	Yhg1s: Like I said... if you are willing to patch cpython yourself...
2019-12-09 17:28:37	<--	scruz (~Adium@41.58.106.178) has quit (Quit: Leaving.)
2019-12-09 17:29:20	-->	RRedcroft (~user@cpc89156-stok18-2-0-cust787.1-4.cable.virginm.net) has joined #python
2019-12-09 17:29:27	Yhg1s	[Tritium]: it's not just about 'patching cpython'. It's about *maintaining it*.
2019-12-09 17:29:31	<--	DanyC (~DanyC@185.65.25.74) has quit (Remote host closed the connection)
2019-12-09 17:29:33	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 265 seconds)
2019-12-09 17:29:51	[Tritium]	Yhg1s: we live in a world where some companies cannot migrate to windows 10 because it fully dropped *16 bit* support.
2019-12-09 17:30:22	Yhg1s	[Tritium]: this does not dispute anything I said.
2019-12-09 17:31:07	[Tritium]	an internal codebase at rest will stay at rest unless acted on by competition or legislation
2019-12-09 17:31:17	[Tritium]	or litigation
2019-12-09 17:31:18	Haxxa	is 2.7 still "secure"?
2019-12-09 17:31:26	Yhg1s	Haxxa: at the moment, sure.
2019-12-09 17:31:33	Yhg1s	[Tritium]: an internal codebase does not exist in isolation.
2019-12-09 17:31:42	[Tritium]	in so far as they are accepting security patches for the next... 3 weeks
2019-12-09 17:31:43	<--	AcTiVaTe (~activate@host-m7ku8h.tnz1.zeelandnet.nl) has quit (Quit: Leaving)
2019-12-09 17:31:52	<--	funeral (Funeral@gateway/vpn/nordvpn/funeral) has quit (Ping timeout: 268 seconds)
2019-12-09 17:32:26	Haxxa	like if major vulnerabilities emerged on Jan 2nd 2020, that enabled any hello world program to run remote unsigned code, would that get patched? (yes I have picked an insane example)
2019-12-09 17:32:36	Yhg1s	Haxxa: yes.
2019-12-09 17:32:42	Yhg1s	Haxxa: the last release is scheduled for PyCon 2020.
2019-12-09 17:32:48	<--	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-12-09 17:32:57	[Tritium]	yes, but only because Benjamen wants to throw a party at pycon.
2019-12-09 17:33:17	<--	barometz (~dominic@pdpc/supporter/active/nazgjunk) has quit (Quit: corn upgrade)
2019-12-09 17:33:20	<--	spacewook (~spacewook@ip24-253-130-175.hr.hr.cox.net) has left #python ("leaving")
2019-12-09 17:33:24	-->	AcTiVaTe (~activate@host-m7ku8h.tnz1.zeelandnet.nl) has joined #python
2019-12-09 17:33:26	-->	DanyC (~DanyC@185.65.25.74) has joined #python
2019-12-09 17:33:38	-->	funeral (~Funeral@246.109-247-210.customer.lyse.net) has joined #python
2019-12-09 17:33:50	-->	spacewook (~spacewook@ip24-253-130-175.hr.hr.cox.net) has joined #python
2019-12-09 17:33:52	Haxxa	Fun Fact: I work for a utility company our SCADA network runs on win3.1.
2019-12-09 17:34:04	<--	Marbug (~Marbug@d515361f5.access.telenet.be) has quit (Quit: The Lounge - https://thelounge.chat)
2019-12-09 17:34:10	tos9	We have different definitions of "fun".
2019-12-09 17:34:14	Haxxa	Client Pcs run windows xp
2019-12-09 17:34:16	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 17:34:21	phx	Haxxa, you could upgrade that to win3.11 :)
2019-12-09 17:34:31	-->	Jak_o_Shadows (~Jak@unaffiliated/jak-o-shadows/x-0479135) has joined #python
2019-12-09 17:34:48	Haxxa	The cost of upgrading was deemed to be more expensive than supporting win3.1 thus we continue
2019-12-09 17:35:00	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 17:35:45	Haxxa	I really hope one day I don't have to program from a RDP session into the desktop with green hills and blue sky.
2019-12-09 17:36:30	[Tritium]	i mean, its windows 3.1... wine should run that no problem...
2019-12-09 17:37:11	<--	rkta (~kt@62.113.246.111) has quit (Remote host closed the connection)
2019-12-09 17:37:32	-->	rkta (~kt@62.113.246.111) has joined #python
2019-12-09 17:38:00	Haxxa	[Tritium], It runs in remote-standby configuration. between the two servers there hasn't been any downtime since it was immplemented
2019-12-09 17:38:09	Haxxa	its more an issue of how to migrate without downtime
2019-12-09 17:38:18	Haxxa	anyway not python sorry
2019-12-09 17:38:24	[Tritium]	ahh
2019-12-09 17:38:36	-->	barometz (~dominic@pdpc/supporter/active/nazgjunk) has joined #python
2019-12-09 17:39:16	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2019-12-09 17:39:38	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 252 seconds)
2019-12-09 17:42:29	<--	Sxuza (~textual@41.13.196.205) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2019-12-09 17:42:32	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 17:46:28	-->	burakcank (~burakcank@188.58.109.220) has joined #python
2019-12-09 17:46:43	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 17:46:58	<--	chewyDelicious (~nooblet@ip4d16fc6e.dynamic.kabel-deutschland.de) has quit (Ping timeout: 252 seconds)
2019-12-09 17:47:01	_habnabit	[Tritium], i have no idea where this idea of "1 jan 2020 is the EOL date" came from because (afaik) it was always "supposed to be" pycon 2020
2019-12-09 17:47:54	[Tritium]	_habnabit: the python 2.7 release schedule pep, and several...endless... threads on -dev.
2019-12-09 17:47:56	-->	Marbug (~Marbug@d515361f5.access.telenet.be) has joined #python
2019-12-09 17:48:21	_habnabit	[Tritium], i didn't think either of those ever said 1 jan
2019-12-09 17:48:24	KirkMcDonald	It was initially just "2020" without a date for a while.
2019-12-09 17:48:56	-->	isokee (~isokee@unaffiliated/isokee) has joined #python
2019-12-09 17:48:56	Yhg1s	Guido explicitly said 'let's just say january 1'
2019-12-09 17:48:56	KirkMcDonald	(Well, I think it was initally some earlier year and got pushed back.)
2019-12-09 17:49:04	Yhg1s	earlier this year, I believe.
2019-12-09 17:49:16	-->	ice9 (~ice9@unaffiliated/ice9) has joined #python
2019-12-09 17:49:20	Yhg1s	before that, the idea was to make it 'at PyCon 2020'
2019-12-09 17:49:26	_habnabit	KirkMcDonald, originally 2015, but that was aggressively optimistic
2019-12-09 17:49:27	[Tritium]	Yhg1s: mid last year iirc, but suffices to say recently in the life of 2.7
2019-12-09 17:49:45	<--	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has quit (Remote host closed the connection)
2019-12-09 17:51:33	-->	tsaka__ (~torstein@2a02:582:cf8:e000:b454:f62:19b4:b7f5) has joined #python
2019-12-09 17:52:23	<--	Marbug (~Marbug@d515361f5.access.telenet.be) has quit (Ping timeout: 245 seconds)
2019-12-09 17:53:04	-->	Marbug (~Marbug@d515361F5.access.telenet.be) has joined #python
2019-12-09 17:53:28	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-09 17:54:36	--	hberaud is now known as hberaud|school-r
2019-12-09 17:59:05	-->	MikeDebian (~none@bl12-167-178.dsl.telepac.pt) has joined #python
2019-12-09 18:00:15	<--	RRedcroft (~user@cpc89156-stok18-2-0-cust787.1-4.cable.virginm.net) has quit (Ping timeout: 268 seconds)
2019-12-09 18:01:55	-->	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has joined #python
2019-12-09 18:02:52	-->	C2_Win1 (~Thunderbi@59.153.110.86) has joined #python
2019-12-09 18:04:01	--	hberaud|school-r is now known as hberaud|lunch
2019-12-09 18:05:19	<--	weedmic (~weedmic@212.68.131.233) has quit (Quit: Konversation terminated!)
2019-12-09 18:05:23	<--	C2_Win (~Thunderbi@59.153.110.86) has quit (Ping timeout: 276 seconds)
2019-12-09 18:05:24	--	C2_Win1 is now known as C2_Win
2019-12-09 18:06:37	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 18:07:27	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 18:09:40	-->	mintograde (~mintograd@47.201.168.46) has joined #python
2019-12-09 18:11:33	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 245 seconds)
2019-12-09 18:12:06	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 246 seconds)
2019-12-09 18:12:36	-->	eamonnmr (uid408207@gateway/web/irccloud.com/x-svqllanbpqkowqrm) has joined #python
2019-12-09 18:13:13	-->	bdeshi (~bdeshi@103.55.145.110) has joined #python
2019-12-09 18:13:38	<--	GenTooMan (~cyberman@2601:547:4380:2fe0:21f:5bff:fefe:a883) has quit (Ping timeout: 245 seconds)
2019-12-09 18:13:44	<--	C2_Win (~Thunderbi@59.153.110.86) has quit (Ping timeout: 252 seconds)
2019-12-09 18:15:03	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 268 seconds)
2019-12-09 18:16:07	-->	gkamathe (gkamathe@unaffiliated/gkamathe) has joined #python
2019-12-09 18:16:17	-->	[itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) has joined #python
2019-12-09 18:16:38	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 18:17:17	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 18:18:26	Dev0n	hey, I have a string in py2.7 that's: ur"""@£$¥èéùìò""", py3.7 obv complains because ur isn't valid syntax, am I safe changing this to just: r"""@£$¥èéùìò""". (dropping the u)?
2019-12-09 18:18:57	Yhg1s	Dev0n: in that particular string, you're safe to drop the 'r'. You shouldn't drop the 'u' if you want the same code to work in 3.7 and 2.7.
2019-12-09 18:18:58	mgedmin	Dev0n: yes, if you don't need to support python 2.7 any more
2019-12-09 18:19:17	-->	chamar (chamarmatr@gateway/shell/matrix.org/x-zlduizpxyhjxkokb) has joined #python
2019-12-09 18:19:18	-->	Evidlo (evidlomatr@purduelug/evidlo) has joined #python
2019-12-09 18:19:18	-->	dngray[m] (dngraypriv@gateway/shell/matrix.org/x-gefsfhoapmdmzptj) has joined #python
2019-12-09 18:19:18	-->	olavx200 (olavx200ma@gateway/shell/matrix.org/x-acbwfxelihljodrl) has joined #python
2019-12-09 18:19:18	-->	execat[m] (execatmatr@fedora/execat) has joined #python
2019-12-09 18:19:18	-->	agates[m] (agatesmatr@gateway/shell/matrix.org/x-qpujswounldjrsck) has joined #python
2019-12-09 18:19:18	-->	pheoxy (pheoxymatr@gateway/shell/matrix.org/x-ypdopoahxdglbqxd) has joined #python
2019-12-09 18:19:18	-->	gpanders[m] (gpandersma@gateway/shell/matrix.org/x-luuujjeuvyfggkrv) has joined #python
2019-12-09 18:19:19	-->	PantelicGR3 (pantelicgr@gateway/shell/matrix.org/x-golqcezmjkzskhzy) has joined #python
2019-12-09 18:19:20	-->	kureta[m] (kuretamatr@gateway/shell/matrix.org/x-sebzoramncqlrbpi) has joined #python
2019-12-09 18:19:20	-->	fiberpunk[m] (fiberpunkm@gateway/shell/matrix.org/x-izearunaozlnyyfx) has joined #python
2019-12-09 18:19:20	-->	colemickens (colemicken@pdpc/supporter/professional/geomyidae) has joined #python
2019-12-09 18:19:21	-->	rmanak (rmanakmatr@gateway/shell/matrix.org/x-bydrhpotedspbcyb) has joined #python
2019-12-09 18:19:21	-->	mjs2600 (mjs2600mat@gateway/shell/matrix.org/x-kozrmqcjdfoqwxpe) has joined #python
2019-12-09 18:19:22	-->	carl0s- (carl0smatr@gateway/shell/matrix.org/x-wfoaumcaoakpzrta) has joined #python
2019-12-09 18:19:22	-->	jerrykan[m] (jerrykanma@gateway/shell/matrix.org/x-aozijaohrzgennmf) has joined #python
2019-12-09 18:19:27	-->	mattwthomas (mattwthoma@gateway/shell/matrix.org/x-oxezvjlkeookduof) has joined #python
2019-12-09 18:19:29	nedbat	Dev0n: this is assuming you have a coding comment at the top of the file that says utf8
2019-12-09 18:19:42	Dev0n	yea I do nedbat
2019-12-09 18:20:00	Dev0n	if I do want 2.7 support, do I have to bring in six?
2019-12-09 18:20:09	Yhg1s	Dev0n: no, just drop the 'r'.
2019-12-09 18:20:16	Yhg1s	nedbat: in what way does that change things?
2019-12-09 18:20:33	Dev0n	ah ok Yhg1s
2019-12-09 18:20:37	<--	is_null (~jpic@pdpc/supporter/professional/is-null) has quit (Ping timeout: 240 seconds)
2019-12-09 18:20:39	-->	Lucas_Gray (~Wryhder@197.210.85.40) has joined #python
2019-12-09 18:20:46	nedbat	Yhg1s: i guess it doesn't because it had to have *some* encoding specified at the top, which would continue to work.
2019-12-09 18:20:47	Dev0n	another string I have in the same format contains "\u0394_\u03A6\u0393"
2019-12-09 18:20:50	Yhg1s	Dev0n: things get harder if you do need it to be a raw string.
2019-12-09 18:21:14	Dev0n	would this be the harder case Yhg1s?
2019-12-09 18:21:23	Yhg1s	Dev0n: this one, not so much: you can still remove the 'r'.
2019-12-09 18:21:33	Yhg1s	Dev0n: if you have \u escapes *and* other uses of backslashes, that's when it gets harder :)
2019-12-09 18:21:35	nedbat	Dev0n: that second one has an r prefix?
2019-12-09 18:21:36	-->	PantelicGR (~PantelicG@unaffiliated/pantelicgr) has joined #python
2019-12-09 18:21:44	Dev0n	yea it does nedbat
2019-12-09 18:22:01	nedbat	Dev0n: what are you using these strings for?
2019-12-09 18:22:10	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2019-12-09 18:23:46	-->	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has joined #python
2019-12-09 18:24:43	Dev0n	nedbat, well, tbh, the variable is called unicode_regex and and looks like it's trying to use regex to find something that matches the regex
2019-12-09 18:25:02	Dev0n	don't ask me why, I've just had this thrown at me to migrate to py3
2019-12-09 18:25:17	Dev0n	doesn't look right for sure, but I'll address that once I get it working in 3 =x
2019-12-09 18:25:23	Dev0n	thanks Yhg1s
2019-12-09 18:25:38	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 18:26:24	nedbat	Dev0n: in that case, I would expect that dropping the "r" prefix would work.  Do you have tests to confirm it's correct?
2019-12-09 18:26:34	<--	Jantz (~IceChat9@2407:7000:8d04:100:edd9:8a1e:edf1:b8e5) has quit (Ping timeout: 252 seconds)
2019-12-09 18:26:55	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 18:26:55	Dev0n	the code never came with any tests so I'm having to manually test for the time being
2019-12-09 18:27:18	<--	TML (~TML-prv@unaffiliated/tml) has quit (Read error: Connection reset by peer)
2019-12-09 18:27:24	-->	roadie (~user@2a02:8108:ec0:1583:f43c:6306:42a0:9581) has joined #python
2019-12-09 18:27:37	Yhg1s	or, you know, you could write tests.
2019-12-09 18:27:40	<--	iamNOTadog (~notadog@2804:7f4:c780:8be5:62ff:4522:41c4:e36a) has quit (Ping timeout: 252 seconds)
2019-12-09 18:27:46	-->	TML (~TML-prv@unaffiliated/tml) has joined #python
2019-12-09 18:27:54	-->	ice9 (~ice9@unaffiliated/ice9) has joined #python
2019-12-09 18:29:15	-->	SilverFang (~SilverFan@unaffiliated/silverfang) has joined #python
2019-12-09 18:29:16	Dev0n	this is what I suggested doing initially, write tests for 2.7 and then do the migration but I was told to migrate first and write tests later "to save time"
2019-12-09 18:29:27	Dev0n	wish I had more say in the matter, but alas
2019-12-09 18:29:33	Yhg1s	I think they meant "to spend more time"
2019-12-09 18:29:50	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 18:29:58	Yhg1s	Dev0n: in any case, as long as the only escapes you have in the ur'' strings are '\u', you can safely drop the 'r'.
2019-12-09 18:30:22	Dev0n	perfect, thanks Yhg1s
2019-12-09 18:30:35	-->	C2_Win (~Thunderbi@59.153.110.86) has joined #python
2019-12-09 18:30:36	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 252 seconds)
2019-12-09 18:31:20	-->	Allegretto_ (~allegrett@212.52.160.157) has joined #python
2019-12-09 18:31:23	<--	Skripter1 (~Skripter@unaffiliated/skripter) has quit (Ping timeout: 250 seconds)
2019-12-09 18:32:02	<--	appinv (~appinv@unaffiliated/appinventormu) has quit (Ping timeout: 276 seconds)
2019-12-09 18:32:18	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-09 18:32:24	<--	seanacais_ (~seanacais@173.170.215.25) has quit (Quit: Leaving)
2019-12-09 18:32:25	<--	seanacais (~seanacais@173.170.215.25) has quit (Quit: Leaving)
2019-12-09 18:34:06	-->	ClaymorePT (~Claymore@188.251.245.88) has joined #python
2019-12-09 18:34:09	<--	thiras (~thiras@unaffiliated/thiras) has quit (Ping timeout: 268 seconds)
2019-12-09 18:34:38	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 252 seconds)
2019-12-09 18:36:50	<--	rmarcand (~rmarcand@2001:420:c0c0:1003::3b1) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-12-09 18:37:01	<--	mintograde (~mintograd@47.201.168.46) has quit (Ping timeout: 250 seconds)
2019-12-09 18:37:43	-->	alexsuraphel (~alexsurap@196.190.154.193) has joined #python
2019-12-09 18:37:53	<--	phlixi (~phlixi@ppp-46-244-195-226.dynamic.mnet-online.de) has quit (Ping timeout: 276 seconds)
2019-12-09 18:37:54	<--	alexsuraphel (~alexsurap@196.190.154.193) has quit (Read error: Connection reset by peer)
2019-12-09 18:41:16	-->	gandalfdwite (~gandalfdw@183.82.17.252) has joined #python
2019-12-09 18:41:39	<--	ob-sed (~obesd@unaffiliated/obesd) has quit (Ping timeout: 240 seconds)
2019-12-09 18:42:27	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 18:42:37	<--	plutoniix (~q@175.176.222.7) has quit (Quit: Leaving)
2019-12-09 18:43:05	<--	jay-m_ (~jay-m@41.205.30.141) has quit (Ping timeout: 250 seconds)
2019-12-09 18:43:18	<--	gandalfdwite (~gandalfdw@183.82.17.252) has quit (Remote host closed the connection)
2019-12-09 18:45:45	Dev0n	if you were running the codebase between py2.7 and py3.7, there will be slight changes between the requirements.txt right? so for example, if I pull the code down and run it in 3.7 and the push a fix to support 2.7 and 3.7, when I pull the same code down in 2.7, I would have to potentially reinstall the modules appropriate for 2.7?
2019-12-09 18:45:55	-->	brinzhang (~brinzhang@171.8.76.20) has joined #python
2019-12-09 18:46:10	_habnabit	Dev0n, potentially but unlikely
2019-12-09 18:46:13	Dev0n	I'm using pip-tools, and do pip-compile/pip-sync on each pull but wanted to check this isn't weird behaviour
2019-12-09 18:46:29	<--	thomasross (~thomasros@CPEbc4dfb93c813-CMbc4dfb93c810.cpe.net.cable.rogers.com) has quit (Ping timeout: 268 seconds)
2019-12-09 18:46:44	<--	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-27.dsl.bell.ca) has quit (Ping timeout: 252 seconds)
2019-12-09 18:47:35	-->	ice9 (~ice9@unaffiliated/ice9) has joined #python
2019-12-09 18:48:57	erry	anyonne who knows utf8 here? UnicodeDecodeError: 'utf-8' codec can't decode byte 0xbf in position 17641572: invalid start byte
2019-12-09 18:49:17	-->	sincorchetes (c3376cee@unaffiliated/sincorchetes) has joined #python
2019-12-09 18:49:44	<--	milkt (~debian@gateway/tor-sasl/milkt) has quit (Quit: leaving)
2019-12-09 18:49:55	_habnabit	erry, i usually use a computer to decode it instead of needing to know it myself
2019-12-09 18:50:10	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 18:50:19	-->	thomasross (~thomasros@CPEbc4dfb93c813-CMbc4dfb93c810.cpe.net.cable.rogers.com) has joined #python
2019-12-09 18:50:26	Dev0n	_habnabit, ahh so for example, pip-compile on py2.7 updates requirements.txt with six, typing, futures, configparser etc
2019-12-09 18:50:33	Dev0n	but doing the same on p3.7 removes them
2019-12-09 18:50:36	nedbat	Dev0n: it can definitely happen that the packages will be slightly different.
2019-12-09 18:50:48	_habnabit	Dev0n, 'six' and 'future' should be in use on both
2019-12-09 18:50:48	<--	C2_Win (~Thunderbi@59.153.110.86) has quit (Ping timeout: 268 seconds)
2019-12-09 18:50:55	-->	zst (~z@unaffiliated/zst) has joined #python
2019-12-09 18:51:01	nedbat	Dev0n: do you require six, or is that a transitive dependency?
2019-12-09 18:51:11	Dev0n	transitive
2019-12-09 18:51:20	-->	iamNOTadog (~notadog@2804:7f4:c780:8be5:62ff:4522:41c4:e36a) has joined #python
2019-12-09 18:51:21	cdunklau	after looking at `future`, i don't think i ever want to use it
2019-12-09 18:51:22	Dev0n	same with "futures" _habnabit
2019-12-09 18:51:33	Dev0n	also there is "future" and "futures"
2019-12-09 18:51:42	Dev0n	I had to install "future" to get it working in py3.7
2019-12-09 18:51:48	nedbat	Dev0n: what can happen is that one of your dependencies recently dropped support for 2.7, and so has a newer version that is py3-only, and no longer needs six, future, etc.
2019-12-09 18:52:00	Dev0n	ahh that makes sense
2019-12-09 18:52:04	nedbat	Dev0n: but if you are concerned, you can pin your dependencies to be the same on both
2019-12-09 18:52:47	Dev0n	gotcha, think I'm not too concerned, I'll fully move this to py3 soon so 2.7 support is there to test
2019-12-09 18:52:51	Dev0n	thanks
2019-12-09 18:53:21	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Quit: Bin weg.)
2019-12-09 18:53:49	<--	Grayson (~Grayson@unaffiliated/grayson) has quit (Read error: Connection reset by peer)
2019-12-09 18:53:58	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 18:55:06	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 265 seconds)
2019-12-09 18:55:42	<--	sponge337 (~sponge337@unaffiliated/sponge337) has quit (Quit: Leaving)
2019-12-09 18:56:16	sincorchetes	Hi all, with statement is like try/except?
2019-12-09 18:56:29	<--	roadie (~user@2a02:8108:ec0:1583:f43c:6306:42a0:9581) has quit (Remote host closed the connection)
2019-12-09 18:56:34	-->	dtcrshr (~dtcrshr@unaffiliated/datacrusher) has joined #python
2019-12-09 18:56:36	[Tritium]	sincorchetes: no.
2019-12-09 18:56:40	nedbat	sincorchetes: it's kind of like try/finally
2019-12-09 18:56:40	--	hberaud|lunch is now known as hberaud
2019-12-09 18:56:41	tos9	sincorchetes: No, it's like try/finally.
2019-12-09 18:56:49	-->	roadie (~user@2a02:8108:ec0:1583:f43c:6306:42a0:9581) has joined #python
2019-12-09 18:56:49	[Tritium]	that ^
2019-12-09 18:57:00	nedbat	sincorchetes: exceptions will flow out of "with", but cleanup will happen
2019-12-09 18:57:21	-->	AndreYuhai (~porfavord@air108.wispotter.com) has joined #python
2019-12-09 18:57:50	-->	is_null (~jpic@pdpc/supporter/professional/is-null) has joined #python
2019-12-09 18:58:27	sincorchetes	nedbat, so you have to use try/except. with inside of it? like try: with open(file,'r') as fileZ ... except: print("File not found")
2019-12-09 18:58:30	-->	Masklin (~joel@eduroam43.nat.wireless.lu.se) has joined #python
2019-12-09 18:59:20	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 276 seconds)
2019-12-09 18:59:31	nedbat	sincorchetes: or: try: fileZ = open(file); except:... ;  with fileZ: ...
2019-12-09 18:59:32	KirkMcDonald	sincorchetes: If you wanted to catch exceptions, sure.
2019-12-09 19:01:24	maddagaska	sincorchetes: Also, as a general rule for error handling, bare excepts are not good. You should catch specific exceptions- ones that you can actually handle.
2019-12-09 19:02:02	<--	ikanobori (~user@python/site-packages/ikanobori) has quit (Quit: WeeChat 1.9.1)
2019-12-09 19:02:16	maddagaska	If you can't handle it then it's likely better to let it bubble up, uncaught, because it indicates something happened that you didn't anticipate, and that'll leave your program in an unknown state.
2019-12-09 19:02:31	<--	burakcank (~burakcank@188.58.109.220) has quit (Ping timeout: 268 seconds)
2019-12-09 19:02:44	-->	ikanobori (~user@python/site-packages/ikanobori) has joined #python
2019-12-09 19:03:31	<--	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has quit (Quit: Leaving)
2019-12-09 19:04:21	-->	cdown (~cdown@199.201.66.0) has joined #python
2019-12-09 19:04:22	-->	C2_Win (~Thunderbi@59.153.110.86) has joined #python
2019-12-09 19:04:43	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 19:05:23	-->	brinzhang_ (~brinzhang@171.8.76.20) has joined #python
2019-12-09 19:05:44	AndreYuhai	Hey there, I am using jpype and startJVM using some jar on Windows but I get this error https://postimg.cc/xccJsVT8
2019-12-09 19:05:47	-->	DanyC_ (~DanyC@185.65.25.74) has joined #python
2019-12-09 19:05:58	-->	pnwise (~pnwise@unaffiliated/pnwise) has joined #python
2019-12-09 19:06:04	AndreYuhai	Code: https://paste.ofcode.org/VuJSgxvx2UAxpqXX4m9ZQt
2019-12-09 19:06:37	AndreYuhai	It is just throwing an error after I use jpype.startJVM() even if I have a control block checking whether JVM is started or not
2019-12-09 19:06:47	AndreYuhai	This is not happening on Linux though
2019-12-09 19:06:55	<--	DanyC (~DanyC@185.65.25.74) has quit (Ping timeout: 250 seconds)
2019-12-09 19:06:56	<--	bpmedley (~bpm@2601:246:8201:8e0:e8a8:928a:41e1:c4e5) has quit (Ping timeout: 250 seconds)
2019-12-09 19:09:05	<--	brinzhang (~brinzhang@171.8.76.20) has quit (Ping timeout: 276 seconds)
2019-12-09 19:09:22	-->	perlsyntax (~perlsynta@unaffiliated/perlsyntax) has joined #python
2019-12-09 19:10:05	-->	ice9 (~ice9@unaffiliated/ice9) has joined #python
2019-12-09 19:10:23	<--	is_null (~jpic@pdpc/supporter/professional/is-null) has quit (Ping timeout: 276 seconds)
2019-12-09 19:10:28	<--	DanyC_ (~DanyC@185.65.25.74) has quit (Remote host closed the connection)
2019-12-09 19:10:30	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 19:10:44	-->	is_null (~jpic@pdpc/supporter/professional/is-null) has joined #python
2019-12-09 19:11:57	<--	tsaka__ (~torstein@2a02:582:cf8:e000:b454:f62:19b4:b7f5) has quit (Ping timeout: 246 seconds)
2019-12-09 19:12:37	-->	bomb-on (~bomb-on@adsl74-86.du.heimsnet.is) has joined #python
2019-12-09 19:15:18	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 19:15:24	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 265 seconds)
2019-12-09 19:16:28	[Tritium]	AndreYuhai: does the error happen outside of ipython?
2019-12-09 19:16:47	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 19:20:44	-->	dasher00 (~dasher00@2.221.109.249) has joined #python
2019-12-09 19:20:49	-->	moonshine_ (~moonshine@112.134.104.27) has joined #python
2019-12-09 19:21:13	<--	C2_Win (~Thunderbi@59.153.110.86) has quit (Ping timeout: 250 seconds)
2019-12-09 19:21:39	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 250 seconds)
2019-12-09 19:22:15	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-09 19:22:32	-->	stahl (~stahl@z35.anorg.net) has joined #python
2019-12-09 19:22:45	-->	rardiol (~quassel@177.52.229.215) has joined #python
2019-12-09 19:22:51	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 19:24:00	-->	zeden (~user@unaffiliated/zeden) has joined #python
2019-12-09 19:25:04	-->	weedmic (~weedmic@212.68.131.233) has joined #python
2019-12-09 19:25:11	moonshine_	I have project structure like this https://bpaste.net/show/ZRVD6 currently I'm trying to use flask-login to authenticate users but I defined user model in the model.py but I can't import into the users blueprint. Help me!
2019-12-09 19:25:45	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 19:26:11	<--	perlsyntax (~perlsynta@unaffiliated/perlsyntax) has quit (Remote host closed the connection)
2019-12-09 19:27:18	-->	CookieM (~tomek@afbg63.neoplus.adsl.tpnet.pl) has joined #python
2019-12-09 19:27:29	<--	is_null (~jpic@pdpc/supporter/professional/is-null) has quit (Ping timeout: 265 seconds)
2019-12-09 19:28:20	AndreYuhai	[Tritium], I am trying to check it right now.
2019-12-09 19:28:30	moonshine_	https://bpaste.net/show/CPDR4
2019-12-09 19:29:02	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Ping timeout: 268 seconds)
2019-12-09 19:29:21	<--	Tucky (~Tucky@61.235.17.93.rev.sfr.net) has quit (Quit: WeeChat 2.6)
2019-12-09 19:29:24	moonshine_	It says that models belong to upper package!
2019-12-09 19:29:57	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-09 19:30:20	-->	ice9 (~ice9@unaffiliated/ice9) has joined #python
2019-12-09 19:30:47	-->	Falc (~LaurentDB@2a02:a03f:52f9:2f00:95a:3071:c42e:7852) has joined #python
2019-12-09 19:31:25	-->	RRedcroft (~user@cpc89156-stok18-2-0-cust787.1-4.cable.virginm.net) has joined #python
2019-12-09 19:32:35	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 19:32:53	-->	pxs (~pxs@176.60.138.31) has joined #python
2019-12-09 19:33:25	-->	ihristov (55c48532@gateway/web/cgi-irc/kiwiirc.com/ip.85.196.133.50) has joined #python
2019-12-09 19:34:48	-->	alexsuraphel (~alexsurap@197.156.77.178) has joined #python
2019-12-09 19:36:11	-->	tsaka__ (~torstein@94.66.69.65) has joined #python
2019-12-09 19:36:17	<--	jakehemmerle (~jakehemme@72.49.2.66) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 19:36:24	-->	zmt00 (~zmt00@2600:1700:7c00:8f20:3c81:8ba1:8c0a:6ae8) has joined #python
2019-12-09 19:36:28	-->	melatonina (uid317528@gateway/web/irccloud.com/x-lrnljphaipezmugo) has joined #python
2019-12-09 19:36:58	<--	zmt01 (~zmt00@2600:1700:7c00:8f20:856e:c905:36f9:e2fe) has quit (Ping timeout: 245 seconds)
2019-12-09 19:37:17	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 240 seconds)
2019-12-09 19:38:48	-->	throsturx (~throstur@unaffiliated/throstur) has joined #python
2019-12-09 19:39:39	-->	operateur (~operateur@91.143.220.230) has joined #python
2019-12-09 19:42:17	<--	throsturt (~throstur@unaffiliated/throstur) has quit (Ping timeout: 240 seconds)
2019-12-09 19:43:32	<--	throsturx (~throstur@unaffiliated/throstur) has quit (Ping timeout: 276 seconds)
2019-12-09 19:43:42	-->	throsturx (~throstur@unaffiliated/throstur) has joined #python
2019-12-09 19:44:53	<--	mkoskar (~mkoskar@unaffiliated/mkoskar) has quit (Ping timeout: 265 seconds)
2019-12-09 19:44:55	-->	Twipply (~Twipply@unaffiliated/twipply) has joined #python
2019-12-09 19:45:30	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 19:46:05	-->	Althorion (~althorion@37.30.29.137.nat.umts.dynamic.t-mobile.pl) has joined #python
2019-12-09 19:46:23	-->	acharon (~acharon@dsl-jklbng12-54fbce-100.dhcp.inet.fi) has joined #python
2019-12-09 19:46:36	-->	AhmedAmerican (c52b5fcb@gateway/web/cgi-irc/kiwiirc.com/ip.197.43.95.203) has joined #python
2019-12-09 19:47:02	<--	xPatsy (~xPatsy@li1750-248.members.linode.com) has quit (Quit: stepped on a cable)
2019-12-09 19:47:10	-->	DanyC (~DanyC@185.65.25.74) has joined #python
2019-12-09 19:47:23	-->	xPatsy (~xPatsy@li1750-248.members.linode.com) has joined #python
2019-12-09 19:47:42	-->	DanyC_ (~DanyC@185.65.25.74) has joined #python
2019-12-09 19:48:20	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2019-12-09 19:48:48	moonshine_	I have project structure like this https://bpaste.net/show/CPDR4 currently I'm trying to use flask-login to authenticate users but I defined user model in the model.py but I can't import into the users blueprint. Help me!
2019-12-09 19:49:04	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 19:49:14	<--	xPatsy (~xPatsy@li1750-248.members.linode.com) has quit (Client Quit)
2019-12-09 19:51:11	-->	jay-m_ (~jay-m@41.205.30.141) has joined #python
2019-12-09 19:51:39	<--	DanyC (~DanyC@185.65.25.74) has quit (Ping timeout: 265 seconds)
2019-12-09 19:51:51	-->	juanosorio94 (~juan.osor@p5099462a.dip0.t-ipconnect.de) has joined #python
2019-12-09 19:54:09	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2019-12-09 19:54:36	<--	alexsuraphel (~alexsurap@197.156.77.178) has quit (Remote host closed the connection)
2019-12-09 19:54:37	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 240 seconds)
2019-12-09 19:55:23	-->	cetchmoh (~ike@thymoeides.stuko.uni-weimar.de) has joined #python
2019-12-09 19:55:43	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined #python
2019-12-09 19:55:43	-->	Haudegen (~quassel@91.114.49.10) has joined #python
2019-12-09 19:55:49	-->	salamanderrake (~quassel@2605:a000:122a:213d:cc8:9482:322e:140d) has joined #python
2019-12-09 21:57:57	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-09 21:57:57	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-09 21:57:57	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-09 21:57:58	--	Channel #python: 1846 nicks (0 ops, 0 voices, 1846 normals)
2019-12-09 21:58:00	--	You are now known as laduyhaha
2019-12-09 21:58:04	-->	Achylles (~Achylles@2804:431:d724:d52:91be:5444:b74b:feac) has joined #python
2019-12-09 21:58:06	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-09 21:58:38	Soni	https://bpaste.net/show/SGIX4 does this look okay?
2019-12-09 21:59:07	-->	minip (~minip@unaffiliated/minip) has joined #python
2019-12-09 21:59:20	Soni	mainly the docs and the stuff about get_supported_properties and get_property_value
2019-12-09 21:59:40	-->	lockywolf (~lockywolf@101.224.173.82) has joined #python
2019-12-09 21:59:46	Soni	also I thought about handling default values through ConfigProperty itself
2019-12-09 21:59:54	sincorchetes	Yhg1s https://repl.it/repls/MaroonVigilantWordprocessing --> I edited without print nothing, but helloFile is not defined.
2019-12-09 22:00:39	Yhg1s	sincorchetes: yes. Because you the exception happened *and you ignored it*. *do not catch the exception*, or catch the exception *and exit the function or program*.
2019-12-09 22:00:41	<--	iamNOTadog (~notadog@2804:7f4:c780:8be5:62ff:4522:41c4:e36a) has quit (Ping timeout: 276 seconds)
2019-12-09 22:00:53	-->	Sheilong (uid293653@gateway/web/irccloud.com/x-rumlhxtiecbwcxzq) has joined #python
2019-12-09 22:00:54	--	Payhn is now known as Payhnn
2019-12-09 22:01:07	-->	pxs_0o (~pxs@176.60.138.31) has joined #python
2019-12-09 22:01:20	<--	hungrydonkey (~frost@117.136.52.216) has quit (Ping timeout: 276 seconds)
2019-12-09 22:01:25	-->	Jordy (Elite21829@gateway/shell/elitebnc/x-gaeanxkxlwejmjtk) has joined #python
2019-12-09 22:01:39	Trieste	Hi, I'd like to convert my threaded app to asyncio; there's a couple places where I spawn a thread with a forever loop that just periodically runs a certain task (kind of like cron) - what's the asyncio (pattern) equivalent?
2019-12-09 22:01:44	<--	pxs_0o (~pxs@176.60.138.31) has quit (Max SendQ exceeded)
2019-12-09 22:02:13	-->	swimmer (~swimmer@unaffiliated/swimmer) has joined #python
2019-12-09 22:02:19	-->	DTZUZO_ (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 22:02:20	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Remote host closed the connection)
2019-12-09 22:02:23	Yhg1s	Trieste: schedule the period task with asyncio. Don't loop manually. See loop.call_later and loop.call_at.
2019-12-09 22:02:32	-->	TDT (~user@108.160.234.134) has joined #python
2019-12-09 22:02:37	Dev0n	I have a bit of code her that does func().encode('utf8'), if I want to support compat on 2.7 and 3.7, would I replace this with, str.encode(func(), 'utf-8') and make sure file has from builtins import str?
2019-12-09 22:02:47	Dev0n	here*
2019-12-09 22:02:58	-->	dendazen (~dendazen@pool-72-76-93-243.nwrknj.fios.verizon.net) has joined #python
2019-12-09 22:03:13	<--	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has quit (Ping timeout: 268 seconds)
2019-12-09 22:03:13	Yhg1s	Dev0n: there's no useful difference between func().encode('utf-8') and str.encode(func(), 'utf-8').
2019-12-09 22:03:16	-->	pxs_0o (~pxs@176.60.138.31) has joined #python
2019-12-09 22:03:25	Yhg1s	Dev0n: so I'm not sure what you're trying to fix here. What's wrong with func().encode('utf-8')?
2019-12-09 22:03:47	<--	pxs_0o (~pxs@176.60.138.31) has quit (Max SendQ exceeded)
2019-12-09 22:03:49	Trieste	Yhg1s: fair! I assume for "proper" periodic behavior, I should just schedule it again with call_at at the end of the task?
2019-12-09 22:04:05	Yhg1s	Trieste: the end, or the start, depending on what you want.
2019-12-09 22:04:09	Jordy	Hi, I got a line that I have to port to Python 3. "range(1, len("string") + 1) + [0]" the error is TypeError: unsupported operand type(s) for +: 'range' and 'list'
2019-12-09 22:04:13	-->	pxs_0o (~pxs@176.60.138.31) has joined #python
2019-12-09 22:04:27	-->	whaley (~whaley@8.25.196.25) has joined #python
2019-12-09 22:04:30	<--	pxs (~pxs@176.60.138.31) has quit (Ping timeout: 246 seconds)
2019-12-09 22:04:30	-->	nixjdm (~nixjdm@2605:a601:aa3e:e400:1401:e3b8:4b3f:547a) has joined #python
2019-12-09 22:04:34	Yhg1s	Jordy: You'll have to use list(range(...)) if you want an actual list (in order to concatenate another list to it)
2019-12-09 22:04:34	<--	jlf (~user@pdpc/supporter/active/jlf) has quit (Ping timeout: 265 seconds)
2019-12-09 22:04:50	Jordy	Googling it tells me to use list() like "list(range(1, len(seq2)) + 1) + [0]" but that resulted in TypeError: unsupported operand type(s) for +: 'range' and 'int'
2019-12-09 22:05:01	Trieste	Yhg1s: right, thanks! one more thing, though - what if I don't know the wait time beforehand? (i.e. it's some kind of a long blocking wait) - should I just use threading along with asyncio then?
2019-12-09 22:05:14	Jordy	well seq2 = "string" for easy reading.
2019-12-09 22:05:14	<--	b1tninja (~b1tninja@unaffiliated/b1tninja) has quit (Ping timeout: 276 seconds)
2019-12-09 22:05:32	Dev0n	hum, maybe that wasn't the cause of the error, I had .read().decode('utf-8') above but 3.7 complained about decode(), so replaced that with http://python-future.org/compatible_idioms.html#file-io-with-open (alternative 1), then it complained about the .encode() being: "a bytes-like object is required, not 'str'", removing the .encode() worked on 3.7 Yhg1s
2019-12-09 22:05:33	Yhg1s	Jordy: you got your parentheses wrong. you need range(1, len(seq2) + 1), not range(1, len(seq2)) + 1
2019-12-09 22:05:53	<--	is_null (~jpic@pdpc/supporter/professional/is-null) has quit (Ping timeout: 250 seconds)
2019-12-09 22:06:15	Yhg1s	Dev0n: if you open the file in text mode with io.open(), it'll produce unicode when reading, and expects unicode when writing. You shouldn't encode it if you are going to write to that file.
2019-12-09 22:06:28	Yhg1s	(it'd be easier to see what was going wrong if we could see the actual code though.)
2019-12-09 22:06:47	Dev0n	sec
2019-12-09 22:07:12	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 22:07:37	<--	jaziz1 (~jaziz@unaffiliated/jaziz) has quit (Ping timeout: 250 seconds)
2019-12-09 22:07:44	-->	pxs (~pxs@176.60.138.31) has joined #python
2019-12-09 22:07:56	<--	Tazmainian (~Tazmain@unaffiliated/tazmain) has quit (Remote host closed the connection)
2019-12-09 22:08:05	-->	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has joined #python
2019-12-09 22:08:37	<--	pxs_0o (~pxs@176.60.138.31) has quit (Ping timeout: 240 seconds)
2019-12-09 22:08:46	<--	nathias (~nathias@unaffiliated/nathias) has quit (Ping timeout: 268 seconds)
2019-12-09 22:09:03	Jordy	Yhg1s, do you know why the + [0] was added? I can't seem to figure out what that was supposed to do.
2019-12-09 22:09:04	<--	Luke (~Luke@bitnomial/staff/luke) has quit (Quit: sleep)
2019-12-09 22:09:15	sincorchetes	Yhg1s of course, I guess, I have to create a conditional that value if helloFile is defined. If that's defined, then, run 'wtih' statements and more. Am I right?
2019-12-09 22:09:19	-->	sdoherty (sdoherty@nat/redhat/x-vvwnpvyprvlzseua) has joined #python
2019-12-09 22:09:54	-->	stranac (~stranac@78-1-49-64.adsl.net.t-com.hr) has joined #python
2019-12-09 22:10:11	twobitsprite	asyncio confuses me.... the "await" keyword seems to look like a statement, but can be used inside a function argument list? what is the actual syntactic status of "await"?
2019-12-09 22:10:20	<--	Revan- (~Revan@host-69-144-17-114.static.bresnan.net) has quit (Quit: Konversation terminated!)
2019-12-09 22:10:43	-->	b1tninja (~b1tninja@unaffiliated/b1tninja) has joined #python
2019-12-09 22:11:05	deniska	twobitsprite: it's kinda similar to `yield`, it's an expression
2019-12-09 22:11:14	<--	DTZUZO_ (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 268 seconds)
2019-12-09 22:11:18	-->	Creatornator (~Creatorna@155.33.132.42) has joined #python
2019-12-09 22:11:41	Dev0n	Yhg1s, this is the function, https://bpaste.net/show/4JCDE, it basically takes in a css and html location and runs premailer on it to inline the css
2019-12-09 22:11:54	twobitsprite	deniska: seems oddly unpythonic to not just make it a function. is there a reason it's not just a built-in function?
2019-12-09 22:11:55	Dev0n	3.7 complains on line 8 and line 15
2019-12-09 22:12:01	-->	canarts (~stranac@193.14.245.77) has joined #python
2019-12-09 22:12:04	-->	Blankspace (~Toggle@unaffiliated/blankspace) has joined #python
2019-12-09 22:12:09	twobitsprite	i.e, is there some syntactic/semantic advantage to making it an expression?
2019-12-09 22:12:15	deniska	twobitsprite: it does special things which a function can't
2019-12-09 22:12:26	Jordy	But yeah, putting the parentheses like you did made the error go away :)
2019-12-09 22:12:37	Dev0n	I fixed line 8 by doing from io import open and then changing read more to rb
2019-12-09 22:12:40	<--	palasso (~palasso@unaffiliated/palasso) has quit (Remote host closed the connection)
2019-12-09 22:12:44	-->	saml (~saml@unaffiliated/saml) has joined #python
2019-12-09 22:12:58	Dev0n	but line 15 errors with :a bytes-like object is required, not 'str': unless I remove the .encode()
2019-12-09 22:13:00	-->	pepee (~pepee@unaffiliated/pepee) has joined #python
2019-12-09 22:13:02	<--	pxs (~pxs@176.60.138.31) has quit (Ping timeout: 276 seconds)
2019-12-09 22:13:41	<--	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has quit (Ping timeout: 268 seconds)
2019-12-09 22:14:13	cdunklau	twobitsprite: it's a flow control construct, really
2019-12-09 22:14:15	Yhg1s	Dev0n: yes, just use io.open() and stop manually decoding and encoding.
2019-12-09 22:14:19	<--	ed_peguillan (~ed_peguil@wsip-184-176-6-219.ok.ok.cox.net) has quit (Quit: Leaving)
2019-12-09 22:14:22	cdunklau	twobitsprite: closer to `return` than a function
2019-12-09 22:14:32	Yhg1s	Dev0n: or, if you prefer, open in binary mode and keep manually encoding and decoding.
2019-12-09 22:14:41	Dev0n	Yhg1s, would that work fine on 2.7?
2019-12-09 22:14:45	Yhg1s	Dev0n: yes.
2019-12-09 22:14:45	-->	Vornicus (~Vornicus@2605:e000:1218:255d:1dbb:ff02:47cc:cc7a) has joined #python
2019-12-09 22:14:47	Dev0n	if I were to remove the manual encoding/decode
2019-12-09 22:14:48	-->	gunsnmoses (~mreyes2@edge2.crownawards.com) has joined #python
2019-12-09 22:14:48	Dev0n	ahh
2019-12-09 22:14:49	Dev0n	ok
2019-12-09 22:14:55	twobitsprite	cdunklau: right, but that's what confused me... you can't do `print(return foo)`
2019-12-09 22:15:08	twobitsprite	cdunklau: but apparently you can do `print(await foo)`
2019-12-09 22:15:10	Yhg1s	sincorchetes: no, what you should do is *not catch the exception*, or *catch the exception and exit*.
2019-12-09 22:15:19	<--	stranac (~stranac@78-1-49-64.adsl.net.t-com.hr) has quit (Ping timeout: 245 seconds)
2019-12-09 22:15:23	cdunklau	twobitsprite: `return` is a statement. it doesn't result in a value
2019-12-09 22:15:37	cdunklau	twobitsprite: `await` does result in a value. it's an expression
2019-12-09 22:15:44	twobitsprite	cdunklau: I know that, which is why await confused me :P
2019-12-09 22:15:46	Dev0n	great, thanks
2019-12-09 22:15:47	-->	DTZUZO_ (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 22:15:53	-->	ed_peguillan (~ed_peguil@wsip-184-176-6-219.ok.ok.cox.net) has joined #python
2019-12-09 22:16:03	twobitsprite	cdunklau: I think I got it now though, the comparison to `yeild` helped :)
2019-12-09 22:16:07	Yhg1s	twobitsprite: does 'func(not some_value)' also confuse you? :)
2019-12-09 22:16:18	-->	con3 (~kvirc@165.255.74.108) has joined #python
2019-12-09 22:16:22	twobitsprite	Yhg1s: nope, good point, I wasn't thinking in terms of that, thanks
2019-12-09 22:17:11	cdunklau	twobitsprite: i make the comparison to `return` because it impacts flow control
2019-12-09 22:17:24	-->	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has joined #python
2019-12-09 22:17:37	cdunklau	because `await` causes control to exit the funciton
2019-12-09 22:18:03	cdunklau	(exit as opposed to "end")
2019-12-09 22:18:40	<--	con3 (~kvirc@165.255.74.108) has quit (Client Quit)
2019-12-09 22:18:54	<--	jay-m_ (~jay-m@41.205.30.141) has quit (Ping timeout: 250 seconds)
2019-12-09 22:19:29	deniska	twobitsprite: now that I think about it, `yield` as a part of an expression is a much rarer sight than `await` :)
2019-12-09 22:20:12	-->	pigweed (~pigweed@184.97.141.49) has joined #python
2019-12-09 22:20:48	<--	DanyC (~DanyC@185.65.25.74) has quit (Remote host closed the connection)
2019-12-09 22:20:50	<--	DTZUZO_ (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 276 seconds)
2019-12-09 22:21:01	<--	MACscr (~MACscr@204.42.21.14) has quit (Read error: Connection reset by peer)
2019-12-09 22:21:03	-->	jaredce (5ee4442f@94.228.68.47) has joined #python
2019-12-09 22:21:05	sincorchetes	Yhg1s, but althought you catch the exception. with statement of this file is outside. When It's try to read variable, and It does not have any value, print error without use print() statement. You can try it. https://repl.it/repls/MaroonVigilantWordprocessing --> Code was updated
2019-12-09 22:21:07	-->	happycrappy (~mes@107.84.158.127) has joined #python
2019-12-09 22:21:59	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 22:22:35	-->	jlf (~user@pdpc/supporter/active/jlf) has joined #python
2019-12-09 22:22:54	-->	MACscr (~MACscr@204.42.21.14) has joined #python
2019-12-09 22:22:57	<--	carl- (~carl@nat.basefarm.se) has quit (Ping timeout: 268 seconds)
2019-12-09 22:23:04	<--	karmabeach24 (~ircap@186.105.11.3) has quit (Ping timeout: 252 seconds)
2019-12-09 22:23:52	<--	lakitu (~lakitu@unaffiliated/lakitu) has quit (Read error: Connection reset by peer)
2019-12-09 22:23:57	-->	DanyC (~DanyC@185.65.25.74) has joined #python
2019-12-09 22:24:53	-->	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has joined #python
2019-12-09 22:25:18	<--	audioburn (~audioburn@unaffiliated/theology) has quit (Ping timeout: 245 seconds)
2019-12-09 22:25:27	sincorchetes	Yhg1s, sorry if I insist more, but when people with knows how to do right things. I try to understand how to do right things instead learn bad things.
2019-12-09 22:25:32	<--	eZanmoto (89bfe3fe@gateway/web/cgi-irc/kiwiirc.com/ip.137.191.227.254) has quit (Remote host closed the connection)
2019-12-09 22:25:34	sincorchetes	or bad practices
2019-12-09 22:25:41	-->	youtah_ (~youtah@69.169.133.42) has joined #python
2019-12-09 22:26:01	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Quit: leaving)
2019-12-09 22:26:04	shibboleth	in general: is there a simplistic reason/possible issue which might explain why a "tf"/keras+opencv task runs at about 1/20th the speed of the same task using opencv dnn?
2019-12-09 22:26:06	-->	shiriru (~shiriru@unaffiliated/shiriru) has joined #python
2019-12-09 22:26:12	shibboleth	python in both cases
2019-12-09 22:26:22	<--	shiriru (~shiriru@unaffiliated/shiriru) has quit (Remote host closed the connection)
2019-12-09 22:26:25	-->	AbleBacon (~AbleBacon@unaffiliated/ablebacon) has joined #python
2019-12-09 22:27:16	-->	lakitu (~lakitu@unaffiliated/lakitu) has joined #python
2019-12-09 22:28:01	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 22:28:26	<--	operateur (~operateur@91.143.220.230) has quit (Ping timeout: 250 seconds)
2019-12-09 22:28:29	<--	youtah__ (~youtah@67.139.187.132) has quit (Ping timeout: 268 seconds)
2019-12-09 22:28:39	-->	zerotech1 (~zerotech@BSN-182-126-110.dynamic.siol.net) has joined #python
2019-12-09 22:28:54	-->	operateur (~operateur@91.143.220.230) has joined #python
2019-12-09 22:29:40	<--	BeerLover (~BeerLover@103.72.8.101) has quit (Remote host closed the connection)
2019-12-09 22:29:59	-->	r1ch (~r1ch@2604:2000:e384:6f00:684a:8a38:1b1e:86a7) has joined #python
2019-12-09 22:30:25	-->	kilyos (~kilyos@176.90.233.63) has joined #python
2019-12-09 22:30:57	<--	sandeepk (~sandeepk@103.69.88.194) has quit (Remote host closed the connection)
2019-12-09 22:31:20	-->	gloomy (~Gloomy@x590e0512.dyn.telefonica.de) has joined #python
2019-12-09 22:31:43	pepee	can anyone tell me why  re.match(r"a$", "asda")  won't returns any matches?
2019-12-09 22:31:47	-->	indeedwatson (~yama@181.164.182.59) has joined #python
2019-12-09 22:32:10	pepee	s/returns/return/
2019-12-09 22:33:39	<--	r4ulrm (~administr@mail.klonal.com.ar) has quit (Quit: Lost terminal)
2019-12-09 22:34:27	-->	RebelCoder (~RebelCode@cpc121028-nmal24-2-0-cust148.19-2.cable.virginm.net) has joined #python
2019-12-09 22:34:50	-->	govbotdotnet (~govbotdot@2600:1700:b2d0:8ef0:35cf:290d:41b8:1573) has joined #python
2019-12-09 22:34:55	<--	kajo (~kajo@2001:4c50:371e:dc00:ca2a:14ff:fe0f:7dd1) has quit (Ping timeout: 250 seconds)
2019-12-09 22:36:21	cdunklau	pepee: use re.search
2019-12-09 22:36:25	-->	r4ulrm (~administr@mail.klonal.com.ar) has joined #python
2019-12-09 22:36:38	<--	s00pcan (~chris@104.254.92.226) has quit (Ping timeout: 252 seconds)
2019-12-09 22:36:46	cdunklau	pepee: match only looks at the start of the string
2019-12-09 22:36:56	<--	silva (c9eef11a@201.238.241.26) has quit (Remote host closed the connection)
2019-12-09 22:37:00	-->	drmbls (~drmbls@78-56-83-14.static.zebra.lt) has joined #python
2019-12-09 22:37:18	pepee	cdunklau: that's odd... but it works. thanks
2019-12-09 22:37:27	cdunklau	pepee: it's in the docs
2019-12-09 22:38:20	-->	s00pcan (~chris@75-133-56-178.dhcp.trcy.mi.charter.com) has joined #python
2019-12-09 22:38:39	SnoopJeDi	It's one of the ugliest ducklings of the stdlib, so it often causes confusion :)
2019-12-09 22:38:49	<--	Beam_Inn (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has quit (Remote host closed the connection)
2019-12-09 22:38:54	pepee	cdunklau: aha. I misread, then
2019-12-09 22:39:11	pepee	I had read help(re.match) but didn't notice that part...
2019-12-09 22:39:15	<--	RebelCoder (~RebelCode@cpc121028-nmal24-2-0-cust148.19-2.cable.virginm.net) has quit (Ping timeout: 250 seconds)
2019-12-09 22:39:21	jaredce	https://bpaste.net/show/JVXWU how can i run the gevent.pywsgi webserver in the background and have the application running other functions at the same time?  i'm expecting it to message with 'starting download', but it doesn't send that message, but the server is reachable
2019-12-09 22:39:44	cdunklau	SnoopJeDi: i mean, it does what it says. it matches the string against the pattern
2019-12-09 22:40:11	-->	davepdot_ (~davepdoto@212.219.133.13) has joined #python
2019-12-09 22:40:13	SnoopJeDi	cdunklau, you're not wrong!
2019-12-09 22:40:16	cdunklau	SnoopJeDi: also, saying it's one of the ugliest ducklings implies you haven't seen much of the stdlib :)
2019-12-09 22:40:53	SnoopJeDi	cdunklau, `re` is somewhere at the sweet spot of "likely to be needed by everyone" and "poorly designed"
2019-12-09 22:41:21	-->	panikovsky (~panikovsk@87.117.58.121) has joined #python
2019-12-09 22:41:23	cdunklau	heh
2019-12-09 22:41:26	SnoopJeDi	But sure, there are more awful horrors than English being ambiguous
2019-12-09 22:41:40	-->	therue (~rue@1-162-40-115.dynamic-ip.hinet.net) has joined #python
2019-12-09 22:42:24	cdunklau	jaredce: serve_forever() blocks, well, forever
2019-12-09 22:42:33	jaredce	ahh
2019-12-09 22:42:34	<--	kosh (~kosh@ibt008.ibt.kfa-juelich.de) has quit (Read error: Connection reset by peer)
2019-12-09 22:42:54	-->	kosh (~kosh@134.94.63.5) has joined #python
2019-12-09 22:43:06	Falc	jaredce: a quick google seems to indicate gevent.spawn() might be what you're looking for
2019-12-09 22:43:08	cdunklau	can't give you any more advice though, dunno how gevent would play with threads
2019-12-09 22:43:25	cdunklau	gevent in general is a scary thing to me
2019-12-09 22:44:06	-->	Skripter1 (~Skripter@unaffiliated/skripter) has joined #python
2019-12-09 22:44:11	-->	tachoknight_ (~tachoknig@205.178.20.7) has joined #python
2019-12-09 22:45:13	-->	steven__ (~shicks252@2600:1700:2428:20b0:d1d8:d44d:a089:c14f) has joined #python
2019-12-09 22:46:02	<--	Falc (~LaurentDB@2a02:a03f:52f9:2f00:95a:3071:c42e:7852) has quit (Quit: Leaving)
2019-12-09 22:46:03	-->	mattfly (~matheus@191.55.81.55) has joined #python
2019-12-09 22:46:10	-->	ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) has joined #python
2019-12-09 22:46:17	-->	is_null (~jpic@pdpc/supporter/professional/is-null) has joined #python
2019-12-09 22:46:17	<--	Skripter (~Skripter@unaffiliated/skripter) has quit (Ping timeout: 240 seconds)
2019-12-09 22:46:26	--	Skripter1 is now known as Skripter
2019-12-09 22:47:25	<--	Darkhunter (~mmojzis@ip-37-188-250-81.eurotel.cz) has quit (Read error: Connection reset by peer)
2019-12-09 22:47:29	<--	happycrappy (~mes@107.84.158.127) has quit (Ping timeout: 250 seconds)
2019-12-09 22:47:31	<--	riezaizu (~riezaizu@unaffiliated/riezaizu) has quit (Quit: Leaving)
2019-12-09 22:47:32	ELFrederich	Can someone please remind me again about the benefits of putting your Python package under a "src" directory instead of directly at root of your Git repo?
2019-12-09 22:47:36	<--	kosh (~kosh@134.94.63.5) has quit (Ping timeout: 268 seconds)
2019-12-09 22:47:37	-->	xy3_ (~xy2_@37.172.150.248) has joined #python
2019-12-09 22:48:00	<--	louisg (~louis@x-160-94-179-187.acm.umn.edu) has quit (Ping timeout: 252 seconds)
2019-12-09 22:49:02	<--	chele (~chele@business-90-187-8-217.pool2.vodafone-ip.de) has quit (Quit: Leaving)
2019-12-09 22:49:03	<--	shicks_ (~shicks252@2600:1700:2428:20b0:27:f085:e4bb:adcf) has quit (Ping timeout: 245 seconds)
2019-12-09 22:49:14	-->	youtah__ (~youtah@67.139.187.132) has joined #python
2019-12-09 22:49:18	<--	Noti (~steffan@194.44.236.118) has quit (Quit: Konversation terminated!)
2019-12-09 22:50:09	-->	jakehemmerle (~jakehemme@89.187.183.71) has joined #python
2019-12-09 22:50:09	-->	novum (~novumsens@gateway/tor-sasl/novumsensum) has joined #python
2019-12-09 22:50:22	MrElendig	none really
2019-12-09 22:50:32	rud0lf	aesthetics i guess
2019-12-09 22:50:35	shady_traveller	ELFrederich: If your whole package is just one file, it should stay as such. If you need to use multiple files, group them in a directory with the same name as the project name. This will help with the imports allowing you to use something like: from <module> import <function>. Using a "src" directory is not very pythonic.
2019-12-09 22:50:42	-->	millerti (~millerti@cpe-66-24-91-119.stny.res.rr.com) has joined #python
2019-12-09 22:51:35	cdunklau	shady_traveller: eh, either way is fine
2019-12-09 22:51:37	<--	b1tninja (~b1tninja@unaffiliated/b1tninja) has quit (Ping timeout: 240 seconds)
2019-12-09 22:51:47	<--	jakehemmerle (~jakehemme@89.187.183.71) has quit (Client Quit)
2019-12-09 22:51:50	<--	lolidunno (~lolidunno@FL1-49-129-77-113.tky.mesh.ad.jp) has quit (Quit: h)
2019-12-09 22:51:55	<--	xy2_ (~xy2_@94.239.177.175) has quit (Ping timeout: 268 seconds)
2019-12-09 22:51:56	<--	youtah_ (~youtah@69.169.133.42) has quit (Ping timeout: 265 seconds)
2019-12-09 22:52:07	-->	causasui (~causasui@wikipedia/causa-sui) has joined #python
2019-12-09 22:52:14	novum	is there a tool (maybe in functools somewhere) to take a string and parse it into tokens as the cpython interpretter might. Such that something like 'foo: Optional[Union[int,str]] = None, bar: int = 0' comes out to be [("foo", "Optional[Union[int,str]]", "None"), ("bar", "int", "0")] yaknow
2019-12-09 22:52:16	-->	pxs (~pxs@176.60.138.31) has joined #python
2019-12-09 22:52:20	-->	arashi (uid408828@gateway/web/irccloud.com/x-uljxbfibhnxentow) has joined #python
2019-12-09 22:52:37	gcbirzan	Nice. grpc has wonderful error messages: E1209 15:52:20.155337652    4530 ev_epollex_linux.cc:503]    Error shutting down fd 12. errno: 9
2019-12-09 22:52:51	-->	nathias (~nathias@unaffiliated/nathias) has joined #python
2019-12-09 22:52:51	-->	blobsson (~infer@68.235.43.37) has joined #python
2019-12-09 22:53:00	gcbirzan	Not even using logging, it seems.
2019-12-09 22:53:08	cdunklau	ELFrederich: src/ makes it slightly harder to run your tests against the repo code instead of the installed code
2019-12-09 22:53:29	cdunklau	which is overall a good thing
2019-12-09 22:53:31	tos9	ELFrederich: https://hynek.me/articles/testing-packaging/
2019-12-09 22:53:41	gcbirzan	and it seems to happen when I add a route to 192.168/16...
2019-12-09 22:53:41	tos9	ELFrederich: (of course for those of us who don't use src/, there are other ways to fix that)
2019-12-09 22:53:49	-->	peter22222 (~peter2222@dslb-188-104-250-048.188.104.pools.vodafone-ip.de) has joined #python
2019-12-09 22:54:05	-->	GenTooMan (~cyberman@2601:547:4380:2fe0:21f:5bff:fefe:a883) has joined #python
2019-12-09 22:54:14	ELFrederich	cdunklau: yeah... I've been reading this now: https://hynek.me/articles/testing-packaging/
2019-12-09 22:55:05	gcbirzan	Ah. I'll kill the sysadmin here. :(
2019-12-09 22:55:20	ELFrederich	I definitely see the benefit of running tests against the installed version instead of whatever happens to be sitting in your current directory.  Unfortunately I also see the benefit of being able to run tests against your current directory during development.
2019-12-09 22:55:26	-->	theotherreactguy (~Thunderbi@106.51.25.63) has joined #python
2019-12-09 22:55:35	gcbirzan	but, ffs, tell me "could not resolve IP"
2019-12-09 22:55:41	cdunklau	ELFrederich: you can do that too. venv/bin/pip install -e .
2019-12-09 22:55:41	novum	I am trying to make a rather comprehensive ultisnips thing so that I don't really have to think about it ever again and fix it when it breaks ... https://asciinema.org/a/Bd7EtuhHDGRrxuYOvy1MIMPRT
2019-12-09 22:55:47	-->	b1tninja (~b1tninja@unaffiliated/b1tninja) has joined #python
2019-12-09 22:56:11	ELFrederich	cdunklau: okay.... perfect.  I shall henceforth use a "src/" directory
2019-12-09 22:56:21	cdunklau	novum: perhaps you're looking for https://docs.python.org/3/library/ast.html
2019-12-09 22:56:30	 *	ELFrederich looks up henceforth to see if he used it correctly
2019-12-09 22:56:46	 *	ELFrederich did use it correctly
2019-12-09 22:58:25	shady_traveller	novum: good luck with that, especially when you're trying to do something as complex as this :D I use regexes in my complex ultisnips snippets and they work fine, though they would break in some edge cases. If you want to do it "properly", you should use the ast module.
2019-12-09 22:58:40	shady_traveller	Though I think this would be an overkill for a snippet...
2019-12-09 22:59:12	-->	uks (~uksio@p200300CB1BD0F15635E304058F93C382.dip0.t-ipconnect.de) has joined #python
2019-12-09 22:59:14	-->	submerciful (~submercif@162.213.133.160) has joined #python
2019-12-09 22:59:21	<--	theotherreactguy (~Thunderbi@106.51.25.63) has quit (Client Quit)
2019-12-09 22:59:31	-->	parabolize (~paraboliz@c-76-25-97-149.hsd1.co.comcast.net) has joined #python
2019-12-09 22:59:43	<--	im0nde_ (~im0nde@2a0a-a546-a52f-0-2ad2-44ff-fe00-9395.ipv6dyn.netcologne.de) has quit (Quit: ZNC 1.7.4 - https://znc.in)
2019-12-09 23:00:20	novum	my snippet not too crazy .. yet .. http://ix.io/23Yp
2019-12-09 23:00:42	novum	I mean the split(..)[0].split(..)[0].strip() stuff isn't ideal but
2019-12-09 23:01:07	<--	Deusdeorum (~Deusdeoru@unaffiliated/deusdeorum) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-12-09 23:01:21	<--	uksio (~uksio@p200300CB1BD0F18FC44F69A5AA296049.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2019-12-09 23:01:31	-->	bluezone (uid104970@gateway/web/irccloud.com/x-cfizwkltvyltcjxu) has joined #python
2019-12-09 23:01:32	<--	Serpent7776 (~Serpent77@78-11-8-249.static.ip.netia.com.pl) has quit (Quit: Leaving)
2019-12-09 23:01:50	-->	im0nde (~im0nde@2a0a-a546-a52f-0-2ad2-44ff-fe00-9395.ipv6dyn.netcologne.de) has joined #python
2019-12-09 23:02:13	<--	sebatron (902bfa3f@gateway/web/cgi-irc/kiwiirc.com/ip.144.43.250.63) has quit (Remote host closed the connection)
2019-12-09 23:02:46	-->	mluser-home (~mluser-ho@cpe-107-11-253-108.columbus.res.rr.com) has joined #python
2019-12-09 23:03:02	novum	I don't like the documentation for ast.parse
2019-12-09 23:03:06	-->	hostile (~quassel@adsl-65.176.58.194.tellas.gr) has joined #python
2019-12-09 23:03:20	--	LabMonkey is now known as Mechanismus
2019-12-09 23:03:26	shady_traveller	noodle: cdown, actually ast won't work because at the time of writing the code, the code won't be valid. You can use a module like parso which is built exactly for this but it's even more complex to use and introduces a third party dependancy... for a simple snippet :D
2019-12-09 23:03:35	<--	elisa87 (~jalal@goku.bu.edu) has quit (Remote host closed the connection)
2019-12-09 23:04:00	shady_traveller	Just go with regexes. They are better than these splits and will work well enough... most of the time.
2019-12-09 23:04:23	<--	hostile (~quassel@adsl-65.176.58.194.tellas.gr) has quit (Client Quit)
2019-12-09 23:04:45	-->	kosh (~kosh@p57A4F0A1.dip0.t-ipconnect.de) has joined #python
2019-12-09 23:05:00	novum	ya ast being a banana face butt head
2019-12-09 23:05:16	-->	xy__ (~xy2_@94.239.177.175) has joined #python
2019-12-09 23:05:25	-->	hqdruxn08__ (hqdruxn08@gateway/vpn/privateinternetaccess/hqdruxn08) has joined #python
2019-12-09 23:05:41	<--	r1ch (~r1ch@2604:2000:e384:6f00:684a:8a38:1b1e:86a7) has quit (Ping timeout: 250 seconds)
2019-12-09 23:05:44	novum	am I really going to have to do annoying "how many opening and closing square brackets has this regex encountered" regexes?
2019-12-09 23:05:53	-->	cfoch (uid153227@gateway/web/irccloud.com/x-eozoognsbqbzxprj) has joined #python
2019-12-09 23:06:40	-->	heyitsrama (~heyitsram@c-24-6-105-253.hsd1.ca.comcast.net) has joined #python
2019-12-09 23:07:00	shady_traveller	If you want to cover all cases, probably yes. And even then, regexes won't cover all cases. But I think they will work well enough in 99% of the cases.
2019-12-09 23:07:15	<--	Creatornator (~Creatorna@155.33.132.42) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 23:07:40	shady_traveller	I'd hack it to use the colon as the delimiter, so that you can get the annotation easier.
2019-12-09 23:07:45	novum	I don't care about 100% coverage but I would like the Union[..,..,..] to be supported
2019-12-09 23:08:06	novum	what if I don't have ':'s
2019-12-09 23:08:10	novum	then it break
2019-12-09 23:08:17	novum	, is arg delimeter
2019-12-09 23:08:17	<--	xy3_ (~xy2_@37.172.150.248) has quit (Ping timeout: 250 seconds)
2019-12-09 23:08:27	shady_traveller	In that case, just assume you always have at most one pair of [] and go from there.
2019-12-09 23:08:54	-->	b10n1k (~b10n1k@94.142.239.79) has joined #python
2019-12-09 23:08:55	shady_traveller	Well, you can do a simple check for whether there are colons. If there aren't any, don't add the type for any argument.
2019-12-09 23:08:58	-->	Creatornator (~Creatorna@155.33.132.42) has joined #python
2019-12-09 23:08:59	novum	don't make me write my own tokenizer >:| grr python
2019-12-09 23:09:04	<--	hqdruxn08_ (hqdruxn08@gateway/vpn/privateinternetaccess/hqdruxn08) has quit (Ping timeout: 246 seconds)
2019-12-09 23:09:28	<--	adamholmberg (~adamholmb@67.133.97.100) has quit (Remote host closed the connection)
2019-12-09 23:09:35	shady_traveller	Well, you're trying to have a tokenizer of _invalid_ python code which is even worse. Again, parso is built for this but it's such an overkill...
2019-12-09 23:09:37	novum	going to make an arg token generator I guess
2019-12-09 23:09:46	-->	Kelzorz (~Kelzorz@67.6.83.103) has joined #python
2019-12-09 23:09:55	novum	oh didn't see that .. parso .. meh may checkity before I reckity
2019-12-09 23:09:59	novum	thanks
2019-12-09 23:10:07	-->	kajo (~kajo@2a02:908:2f34:d740:c96a:621b:c203:4523) has joined #python
2019-12-09 23:10:46	novum	isn't parso for shell-like argument tokenization?
2019-12-09 23:10:47	shady_traveller	By the way, why do you need to do this? If you have the type and the default value in the function signature, why do you add it to the doc? Most editors/IDEs will use both sources.
2019-12-09 23:11:39	shady_traveller	parso was built for jedi, an autocompletion library for python which has the same problems you're facing. It's just a library, so it should work for your usecase.
2019-12-09 23:11:41	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 23:11:48	novum	I thought about why also. I am not sure I would, indeed, like to discard it, so I could just split(":")[0] and be done
2019-12-09 23:11:51	shady_traveller	That being said, I haven't actually used it
2019-12-09 23:11:55	-->	riezaizu (~riezaizu@unaffiliated/riezaizu) has joined #python
2019-12-09 23:12:04	-->	runlevel7 (~runlevel7@unaffiliated/runlevel7) has joined #python
2019-12-09 23:13:11	-->	srandon111 (~srandon11@5.102.20.11) has joined #python
2019-12-09 23:13:19	-->	AcousticDan (~dan@70.118.0.218) has joined #python
2019-12-09 23:13:27	novum	heh. you're right. If I just remove the type part, it works in 99.9% of cases
2019-12-09 23:13:41	novum	and it's not even useful because the type is already there
2019-12-09 23:14:30	<--	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has quit (Ping timeout: 246 seconds)
2019-12-09 23:14:38	novum	oh it still kind of breaks a little because of the comma split
2019-12-09 23:15:19	-->	Beanzilla (~Beanzilla@unaffiliated/beanzilla) has joined #python
2019-12-09 23:15:54	-->	gekkou (main@gateway/vpn/protonvpn/tfwegh) has joined #python
2019-12-09 23:17:26	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2019-12-09 23:17:36	-->	led_dark_1 (~Thunderbi@217.66.160.14) has joined #python
2019-12-09 23:18:01	<--	pigweed (~pigweed@184.97.141.49) has quit (Quit: Leaving)
2019-12-09 23:18:04	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2019-12-09 23:18:26	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 252 seconds)
2019-12-09 23:19:04	-->	burakcank (~burakcank@159.146.45.121) has joined #python
2019-12-09 23:19:11	-->	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 23:19:31	-->	jroth (60e6f869@pool-96-230-248-105.bstnma.fios.verizon.net) has joined #python
2019-12-09 23:20:03	-->	soniya29 (~soniya@2409:4042:2104:2048:9ef8:b3c:40ee:50c9) has joined #python
2019-12-09 23:20:30	-->	headrx (d13602d7@209.54.2.215) has joined #python
2019-12-09 23:20:38	<--	Creatornator (~Creatorna@155.33.132.42) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 23:21:31	<--	operateur (~operateur@91.143.220.230) has quit (Ping timeout: 268 seconds)
2019-12-09 23:21:39	-->	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has joined #python
2019-12-09 23:22:37	-->	aalmazan (uid180785@gateway/web/irccloud.com/x-wxbwumakujetzxtv) has joined #python
2019-12-09 23:23:01	<--	juanosorio94 (~juan.osor@p5099462a.dip0.t-ipconnect.de) has quit (Quit: Lost terminal)
2019-12-09 23:23:09	-->	tiwula (~lane@70.89.246.241-Busname-UT.hfc.comcastbusiness.net) has joined #python
2019-12-09 23:23:14	<--	haslo (uid390999@gateway/web/irccloud.com/x-dcgkuxmhtvwerkgk) has quit (Quit: Connection closed for inactivity)
2019-12-09 23:23:21	<--	jlf (~user@pdpc/supporter/active/jlf) has quit (Ping timeout: 265 seconds)
2019-12-09 23:23:24	<--	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has quit (Quit: shibboleth)
2019-12-09 23:23:30	<--	weedmic (~weedmic@212.68.131.233) has quit (Quit: Konversation terminated!)
2019-12-09 23:23:51	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 23:24:10	-->	Syzygy__ (~androirc@e248-009.eduroam.tuwien.ac.at) has joined #python
2019-12-09 23:24:37	-->	oragadam (7aae3633@122.174.54.51) has joined #python
2019-12-09 23:24:39	<--	traptrip (trip@brigaid.xs4all.nl) has quit (Remote host closed the connection)
2019-12-09 23:24:49	Syzygy__	I found python syntax that I do not understand. class Z( X >> Y): can someone explain?
2019-12-09 23:24:56	Syzygy__	X Y and Z are classes
2019-12-09 23:25:57	<--	mathemancer (~mathemanc@ip1f11fe4c.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2019-12-09 23:27:06	shady_traveller	Syzygy__: what's the context? By default, this is not possible but the X or Y class could redefine the >> operator to do something. What? That depends on the implementation. Are you using some library?
2019-12-09 23:27:26	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 23:27:57	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 240 seconds)
2019-12-09 23:27:58	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2019-12-09 23:28:46	Syzygy__	shady_traveller I'm trying to implement owlready2 for ontologies. here's the code where I found this: bitbucket.org/jibalamy/owlready2/src/default/test/drug.py
2019-12-09 23:29:24	-->	traptrip (trip@brigaid.xs4all.nl) has joined #python
2019-12-09 23:29:57	<--	vpathak (~vpathak@c-73-197-108-42.hsd1.nj.comcast.net) has quit (Ping timeout: 240 seconds)
2019-12-09 23:30:07	-->	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has joined #python
2019-12-09 23:30:45	Syzygy__	I guess it's possible that the Thing class overrides it for some reason...
2019-12-09 23:30:46	<--	octav1a (~Rboreal_F@rcb-fwall-00-users2.pmacs.upenn.edu) has quit (Remote host closed the connection)
2019-12-09 23:30:54	-->	Darkhunter (~mmojzis@ip-89-176-175-30.net.upcbroadband.cz) has joined #python
2019-12-09 23:31:41	<--	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has quit (Ping timeout: 276 seconds)
2019-12-09 23:31:42	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 250 seconds)
2019-12-09 23:32:15	shady_traveller	I'm not familiar with this library, sorry. But assuming that Drug inherits from Thing, then probably yes. I'd look for __rshift__ method of the metaclass of Thing.
2019-12-09 23:33:08	Syzygy__	Right now I'm having trouble even finding the thing class...
2019-12-09 23:33:16	-->	octav1a (~Rboreal_F@2607:f470:6:2001:8962:c186:1948:58e3) has joined #python
2019-12-09 23:33:45	-->	dastier (~dastier@mm-74-45-120-178.brest.dynamic.pppoe.byfly.by) has joined #python
2019-12-09 23:34:16	<--	asimon (~asimon@206.205.22.129) has quit (Quit: NOW WE CAN GO LOOKING FOR ANY UPDATES)
2019-12-09 23:34:17	-->	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has joined #python
2019-12-09 23:34:26	shady_traveller	Syzygy__: I think I found the definition though to be honest I don't understand anything because I'm not familiar with the library.
2019-12-09 23:34:27	shady_traveller	https://bitbucket.org/jibalamy/owlready2/src/37c3ef7e481c94ae8a59796d37d64f60ba686014/class_construct.py#lines-197
2019-12-09 23:34:59	-->	s2013 (~textual@cpe-24-243-145-239.rgv.res.rr.com) has joined #python
2019-12-09 23:35:09	-->	dunpeal (~dunpeal@unaffiliated/dunpeal) has joined #python
2019-12-09 23:35:18	<--	srandon111 (~srandon11@5.102.20.11) has quit (Ping timeout: 252 seconds)
2019-12-09 23:35:51	<--	ciccio2000 (~fbeninca@84.88.185.62) has left #python
2019-12-09 23:36:14	-->	joshisanonymous (~joshisano@198.137.18.120) has joined #python
2019-12-09 23:36:43	<--	pxs (~pxs@176.60.138.31) has quit (Read error: Connection reset by peer)
2019-12-09 23:36:46	<--	sandbox1 (~unbanked_@c-67-167-239-14.hsd1.il.comcast.net) has quit (Ping timeout: 252 seconds)
2019-12-09 23:37:08	<--	nichlas (uid374954@gateway/web/irccloud.com/x-axouncvfpbtcxwpy) has quit (Quit: Connection closed for inactivity)
2019-12-09 23:37:32	-->	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-27.dsl.bell.ca) has joined #python
2019-12-09 23:37:38	Syzygy__	shady_traveller thanks. Tells me next to nothing as well.
2019-12-09 23:37:40	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 23:37:41	shady_traveller	Syzygy__: Ah, I found an explanation in the docs. Again, doesn't speak much to me but you may find it helpful: https://pythonhosted.org/Owlready2/properties.html
2019-12-09 23:38:16	-->	marloi (~mark@modemcable138.66-70-69.static.videotron.ca) has joined #python
2019-12-09 23:38:35	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Remote host closed the connection)
2019-12-09 23:38:40	--	kitties is now known as neolibbies
2019-12-09 23:38:50	--	neolibbies is now known as kitties
2019-12-09 23:38:52	<--	floppydh (~floppydh@buro.mquadr.at) has quit (Quit: WeeChat 2.6)
2019-12-09 23:39:00	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 23:39:41	Syzygy__	I knew I saw it somewhere in the documentation, but couldn't find it earlier when looking again.
2019-12-09 23:39:42	marloi	Hello. I have strings that look like dictionaries coming from an sql database that look like this: '{key1=val1, key2=val2, key3=val3}', note that the keys and vals don't have quotes around them. Is there an easy way to convert this to an actual dictionary?
2019-12-09 23:40:10	<--	boxr (~boxr@panopticon.cybergaraget.org) has quit (Quit: Lost terminal)
2019-12-09 23:41:09	<--	Skripter (~Skripter@unaffiliated/skripter) has quit (Remote host closed the connection)
2019-12-09 23:41:40	dunpeal	marloi: not easily, you'll basically have to parse.
2019-12-09 23:41:43	<--	tiwula (~lane@70.89.246.241-Busname-UT.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2019-12-09 23:41:52	Syzygy__	shady_traveller thanks for your help, I'll do my best to decypher the documentation some more.
2019-12-09 23:41:57	marloi	ok
2019-12-09 23:42:04	-->	Nozzzle (~Nozzzle@unaffiliated/nozzzle) has joined #python
2019-12-09 23:42:16	-->	Nozzlle (~Nozzzle@unaffiliated/nozzzle) has joined #python
2019-12-09 23:42:26	<--	Vornicus (~Vornicus@2605:e000:1218:255d:1dbb:ff02:47cc:cc7a) has quit (Read error: Connection reset by peer)
2019-12-09 23:42:38	dunpeal	this isn't valid Python so you can't just use the Python parser.
2019-12-09 23:43:33	dunpeal	I'm designing the classification system for my team's test suite. Most important is to separate by time-to-complete, so my current planned scheme is:
2019-12-09 23:43:34	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 23:44:23	dunpeal	no mark: <5 seconds. "long": 5+ seconds. "minutes": 1+ minutes. "hours": 1+ hours. "days": 1+ days.
2019-12-09 23:44:25	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 23:44:26	dunpeal	Does that make sense?
2019-12-09 23:45:23	<--	jroth (60e6f869@pool-96-230-248-105.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2019-12-09 23:46:24	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 23:46:25	<--	is_null (~jpic@pdpc/supporter/professional/is-null) has quit (Ping timeout: 250 seconds)
2019-12-09 23:46:51	<--	Haudegen (~quassel@91.114.49.10) has quit (Quit: Bin weg.)
2019-12-09 23:46:51	<--	joshisanonymous (~joshisano@198.137.18.120) has quit (Ping timeout: 250 seconds)
2019-12-09 23:47:10	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 23:47:17	<--	soniya29 (~soniya@2409:4042:2104:2048:9ef8:b3c:40ee:50c9) has quit (Ping timeout: 250 seconds)
2019-12-09 23:47:33	-->	boratet (~bort@cpe-173-89-74-11.neo.res.rr.com) has joined #python
2019-12-09 23:47:35	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 23:48:39	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 268 seconds)
2019-12-09 23:48:40	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 23:48:52	-->	Skripter (~Skripter@unaffiliated/skripter) has joined #python
2019-12-09 23:49:05	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 23:49:26	-->	mikami (~scurfee@broadband-77-37-146-212.ip.moscow.rt.ru) has joined #python
2019-12-09 23:49:30	-->	IRCNew (~Elrick@76-10-173-219.dsl.teksavvy.com) has joined #python
2019-12-09 23:49:49	<--	shady_traveller (~shady_tra@80.169.46.234) has quit (Quit: WeeChat 1.4)
2019-12-09 23:50:06	-->	dale_ (~dale@unaffiliated/dale) has joined #python
2019-12-09 23:50:10	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 23:50:14	--	dale_ is now known as dale
2019-12-09 23:50:23	-->	dijitol (~Thunderbi@p200300D477217400B4C67DC5D22FDA20.dip0.t-ipconnect.de) has joined #python
2019-12-09 23:50:35	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 23:50:43	<--	Anthaas (~Anthaas@unaffiliated/anthaas) has quit (Ping timeout: 245 seconds)
2019-12-09 23:51:40	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 23:52:05	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 23:52:10	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 23:52:11	-->	Anthaas (~Anthaas@unaffiliated/anthaas) has joined #python
2019-12-09 23:53:08	-->	fflori (~fflori@194.230.155.144) has joined #python
2019-12-09 23:53:17	-->	qlixed (~qlixed@190.2.28.97) has joined #python
2019-12-09 23:53:17	<--	iflema (~ian@unaffiliated/iflema) has quit (Quit: iflema)
2019-12-09 23:53:19	<--	drmbls (~drmbls@78-56-83-14.static.zebra.lt) has quit (Quit: Leaving)
2019-12-09 23:53:42	-->	drease (~conchey@134.117.223.210) has joined #python
2019-12-09 23:54:55	<--	moaz (~moaz@trivialand/student/moaz) has quit (Ping timeout: 246 seconds)
2019-12-09 23:55:06	<--	drease (~conchey@134.117.223.210) has quit (Quit: WeeChat 2.7)
2019-12-09 23:55:06	-->	moaz_ (~moaz@trivialand/student/moaz) has joined #python
2019-12-09 23:56:54	<--	Grayson (~Grayson@unaffiliated/grayson) has quit (Read error: Connection reset by peer)
2019-12-09 23:56:55	-->	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2019-12-09 23:57:16	-->	Grayson (~Grayson@unaffiliated/grayson) has joined #python
2019-12-09 23:57:16	-->	ellcs (~ellcs@200116b86849660062f677fffebe55f5.dip.versatel-1u1.de) has joined #python
2019-12-09 23:57:41	<--	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2019-12-09 23:58:43	-->	stoopkid (uid137696@gateway/web/irccloud.com/x-trbgwxoeonpoqvdw) has joined #python
2019-12-09 23:58:45	-->	is_null (~jpic@pdpc/supporter/professional/is-null) has joined #python
2019-12-09 23:59:03	-->	ebernhardson (~guy@unaffiliated/ebernhardson) has joined #python
2019-12-09 23:59:38	<--	peterandre (peterandre@gateway/shell/qz/x-mnptlgxjxoadlvrd) has quit (Quit: Oooh mysterious girl!)
2019-12-09 23:59:43	ebernhardson	Any suggestions for libraries to help build a custom REPL? Not trying to build a python REPL, trying to make a custom REPL (imagine something like pdb)
2019-12-09 23:59:45	<--	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has quit (Ping timeout: 268 seconds)
2019-12-10 00:00:03	-->	avimanyu (~avimanyu@106.203.139.182) has joined #python
2019-12-10 00:00:08	ebernhardson	i guess pdb is still off, because it still executes the code as python
2019-12-10 00:00:14	-->	Saukk (~Saukk@2001:998:fe:2716:f8e9:21fa:72ec:8e8f) has joined #python
2019-12-10 00:00:48	<--	funeral (~Funeral@246.109-247-210.customer.lyse.net) has quit (Read error: Connection reset by peer)
2019-12-10 00:00:52	dale	ebernhardson: Maybe prompt_toolkit?
2019-12-10 00:00:55	<--	ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) has quit (Quit: Leaving)
2019-12-10 00:01:03	<--	csed (~CSED]@cbg-off-client.mpi-cbg.de) has quit (Ping timeout: 265 seconds)
2019-12-10 00:01:07	dale	I believe that's what IPython uses for its REPL these days.
2019-12-10 00:01:19	-->	funeral (~Funeral@246.109-247-210.customer.lyse.net) has joined #python
2019-12-10 00:01:32	<--	television (~alex@unaffiliated/arexr) has quit (Ping timeout: 265 seconds)
2019-12-10 00:01:46	-->	JackK_ (~jack@pdpc/supporter/active/Jkessler) has joined #python
2019-12-10 00:01:51	ebernhardson	dale: i'll take a look, thanks!
2019-12-10 00:02:02	<--	JackK (~jack@pdpc/supporter/active/Jkessler) has quit (Ping timeout: 265 seconds)
2019-12-10 00:02:02	<--	salparadise (~salparadi@129.146.17.140) has quit (Ping timeout: 265 seconds)
2019-12-10 00:02:02	-->	dhellmann_ (~dhellmann@97-81-99-73.dhcp.athn.ga.charter.com) has joined #python
2019-12-10 00:02:14	<--	CoolerY (~coolerext@14.139.38.136) has left #python ("Leaving")
2019-12-10 00:02:23	<--	xrogaan (~xrogaan@unaffiliated/xrogaan) has quit (Quit: Leaving)
2019-12-10 00:02:24	-->	peterandre (peterandre@gateway/shell/qz/x-yxgncyfsoxxqhmeb) has joined #python
2019-12-10 00:02:30	<--	jgwak (jgwak@gateway/vpn/nordvpn/jgwak) has quit (Ping timeout: 265 seconds)
2019-12-10 00:02:48	<--	dhellmann (~dhellmann@97-81-99-73.dhcp.athn.ga.charter.com) has quit (Ping timeout: 245 seconds)
2019-12-10 00:02:56	--	dhellmann_ is now known as dhellmann
2019-12-10 00:03:36	<--	zeSoup (~jsc@2003:5b:203b:100:3580:c637:f15b:4411) has quit (Quit: Leaving.)
2019-12-10 00:03:40	-->	jgwak (jgwak@gateway/vpn/nordvpn/jgwak) has joined #python
2019-12-10 00:03:44	-->	hostile (~quassel@adsl-65.176.58.194.tellas.gr) has joined #python
2019-12-10 00:03:45	<--	ellcs (~ellcs@200116b86849660062f677fffebe55f5.dip.versatel-1u1.de) has quit (Ping timeout: 250 seconds)
2019-12-10 00:03:55	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-10 00:04:54	-->	ValekoZ (~valekoz@193.57.120.254) has joined #python
2019-12-10 00:04:58	<--	avimanyu (~avimanyu@106.203.139.182) has quit (Quit: avimanyu)
2019-12-10 00:05:33	<--	fflori (~fflori@194.230.155.144) has quit (Remote host closed the connection)
2019-12-10 00:06:04	-->	joshisanonymous (~joshisano@198.137.18.120) has joined #python
2019-12-10 00:06:13	<--	funeral (~Funeral@246.109-247-210.customer.lyse.net) has quit (Read error: Connection reset by peer)
2019-12-10 00:06:43	-->	mmfood (~mmfood@178.73.201.248) has joined #python
2019-12-10 00:06:50	<--	infina (~infina@unaffiliated/infina) has quit (Ping timeout: 252 seconds)
2019-12-10 00:07:01	-->	television (~alex@unaffiliated/arexr) has joined #python
2019-12-10 00:07:26	-->	salparadise (~salparadi@129.146.17.140) has joined #python
2019-12-10 00:07:34	-->	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-10 00:07:49	<--	pombreda_ (~pombreda@host-78-129-86-230.dynamic.voo.be) has quit (Ping timeout: 265 seconds)
2019-12-10 00:08:06	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-10 00:08:26	-->	purplex88 (~purplex88@unaffiliated/purplex88) has joined #python
2019-12-10 00:08:47	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 265 seconds)
2019-12-10 00:08:54	IRCNew	I'm wondering if I'm trying to insert a bunch of data into a db should I use threads or processes
2019-12-10 00:09:45	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2019-12-10 00:09:46	IRCNew	Also does it make sense to create a function that make a new db connection or should I create one and use it for all processes/threads
2019-12-10 00:10:59	IRCNew	Comparing some different modules it looks like concurrent.futures is a what I would want
2019-12-10 00:11:33	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Ping timeout: 246 seconds)
2019-12-10 00:12:10	<--	salsa4life (~salsa4lif@2.57.100.21) has quit (Ping timeout: 265 seconds)
2019-12-10 00:12:49	dunpeal	IRCNew: why do you think threads or processes would make a difference?
2019-12-10 00:13:14	-->	avimanyu (~avimanyu@106.203.139.182) has joined #python
2019-12-10 00:13:18	<--	novum (~novumsens@gateway/tor-sasl/novumsensum) has quit (Remote host closed the connection)
2019-12-10 00:13:21	<--	escanor (uid387784@gateway/web/irccloud.com/x-knsphqhwcocadmma) has quit (Quit: Connection closed for inactivity)
2019-12-10 00:13:23	-->	jarthur (~jarthur@207.114.244.5) has joined #python
2019-12-10 00:13:28	IRCNew	My data is 800MB of json which is an array and I'm currently doing a for loop on it
2019-12-10 00:13:29	dunpeal	Generally, establishing a new db connection is costly, so reusing is advisable.
2019-12-10 00:13:29	<--	avimanyu (~avimanyu@106.203.139.182) has quit (Remote host closed the connection)
2019-12-10 00:13:49	<--	sincorchetes (c3376cee@unaffiliated/sincorchetes) has quit (Quit: The Lounge - https://thelounge.chat)
2019-12-10 00:13:57	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-10 00:14:07	dunpeal	IRCNew: OK, but multiplexing that won't necessarily improve performance.
2019-12-10 00:14:13	<--	rindolf (~rindolf@IGLD-84-229-96-151.inter.net.il) has quit (Remote host closed the connection)
2019-12-10 00:14:14	dunpeal	Of course, you're welcome to benchmark.
2019-12-10 00:14:26	<--	Jonopoly (~Jonopoly@unaffiliated/jonopoly) has quit (Quit: WeeChat 2.5)
2019-12-10 00:14:32	dunpeal	For instance, you may be able to saturate your DB with just one thread.
2019-12-10 00:14:48	dunpeal	Or the network may be the bottleneck.
2019-12-10 00:14:56	IRCNew	Would multiprocessing work better?
2019-12-10 00:15:04	<--	mcsontos (mcsontos@nat/redhat/x-fyireofjbwisulnz) has quit (Quit: Leaving)
2019-12-10 00:15:07	<--	subsonick (~subsonik@matrix.netspectrum.de) has quit (Quit: ZNC - https://znc.in)
2019-12-10 00:15:12	IRCNew	Everything currently is localhost
2019-12-10 00:15:19	dunpeal	I'm trying to explain that multiplexing isn't a magic bullet that would definitely make your INSERT faster.
2019-12-10 00:15:32	<--	truthseeker_ (~Bharath@183.82.21.107) has quit (Remote host closed the connection)
2019-12-10 00:15:33	dunpeal	In some case it may indeed slow it down since multiplexing has a cost.
2019-12-10 00:15:38	-->	The_Tick (~headliner@growl/the-tick) has joined #python
2019-12-10 00:15:45	<--	marloi (~mark@modemcable138.66-70-69.static.videotron.ca) has quit (Ping timeout: 246 seconds)
2019-12-10 00:15:48	<--	The_Tick (~headliner@growl/the-tick) has left #python
2019-12-10 00:15:59	dunpeal	The key question is whether you can gain anything by running multiple concurrent INSERTs.
2019-12-10 00:16:17	<--	Velgor (~Velgor@HSI-KBW-109-193-081-230.hsi7.kabel-badenwuerttemberg.de) has quit (Quit: Night)
2019-12-10 00:16:35	dunpeal	If that's the case (you can establish this by benchmarking) then whether you do it with processes or threads is a relatively minor concern.
2019-12-10 00:16:55	-->	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2019-12-10 00:16:57	dunpeal	So pick whichever is most comfortable and benchmark.
2019-12-10 00:17:11	dunpeal	`multiprocessing` is just a multi-process approach.
2019-12-10 00:17:37	<--	blobsson (~infer@68.235.43.37) has quit (Ping timeout: 240 seconds)
2019-12-10 00:17:37	-->	novumsensum (~novumsens@gateway/tor-sasl/novumsensum) has joined #python
2019-12-10 00:18:01	IRCNew	the nice thing about concurrent.futures is that you just need to change "ThreadPoolExecuter" to "ProcessPoolExecuter" making it quick to change
2019-12-10 00:18:05	<--	hostile (~quassel@adsl-65.176.58.194.tellas.gr) has quit (Quit: hostile)
2019-12-10 00:18:15	IRCNew	but it looks like it is slower then some other modules
2019-12-10 00:18:37	<--	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has quit (Ping timeout: 240 seconds)
2019-12-10 00:18:44	dunpeal	...not really why you're still focused on this thread/process false dilemma.
2019-12-10 00:19:47	-->	tmm88 (~tmm88@unaffiliated/tmm88) has joined #python
2019-12-10 00:20:01	IRCNew	I'm just thinking it would be faster.
2019-12-10 00:20:03	-->	subsonik (~subsonik@matrix.netspectrum.de) has joined #python
2019-12-10 00:20:04	<--	jaredce (5ee4442f@94.228.68.47) has quit (Remote host closed the connection)
2019-12-10 00:20:17	<--	Nozzlle (~Nozzzle@unaffiliated/nozzzle) has quit (Ping timeout: 240 seconds)
2019-12-10 00:20:22	IRCNew	but I suppose it could be slower because of overhead
2019-12-10 00:20:28	IRCNew	is what you are saying
2019-12-10 00:20:53	-->	Harlin (~hseritt@c-73-14-133-234.hsd1.co.comcast.net) has joined #python
2019-12-10 00:20:58	dunpeal	I'm saying you should benchmark.
2019-12-10 00:21:05	-->	pombreda_ (~pombreda@host-78-129-86-230.dynamic.voo.be) has joined #python
2019-12-10 00:21:21	<--	Nozzzle (~Nozzzle@unaffiliated/nozzzle) has quit (Ping timeout: 268 seconds)
2019-12-10 00:21:38	IRCNew	any recommendations on modules for that
2019-12-10 00:21:38	-->	Forsaken87 (~quassel@2a02:908:1860:bec0:c179:63c7:fe6c:8293) has joined #python
2019-12-10 00:21:59	dunpeal	It's quite possible that both would be slower than a uniplex approach.
2019-12-10 00:22:07	dunpeal	Just try with multiprocessing.
2019-12-10 00:28:23	--	irc: disconnected from server
2019-12-10 00:28:50	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-10 00:28:50	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-10 00:28:50	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-10 00:28:51	--	Channel #python: 1858 nicks (0 ops, 0 voices, 1858 normals)
2019-12-10 00:29:04	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-10 00:29:32	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 276 seconds)
2019-12-10 00:29:45	<--	Andecy (~andecy@bzq-218-29-26.cablep.bezeqint.net) has quit (Ping timeout: 246 seconds)
2019-12-10 00:31:23	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-10 00:31:25	-->	lnxw37d4 (lnxw37d4ma@gateway/shell/matrix.org/x-jmsguwkscwxsytuh) has joined #python
2019-12-10 00:32:06	--	irc: disconnected from server
2019-12-13 03:38:38	-->	duy (~laduyhaha@113.190.149.78) has joined #python
2019-12-13 03:38:38	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-13 03:38:38	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-13 03:38:38	--	Channel #python: 1843 nicks (0 ops, 0 voices, 1843 normals)
2019-12-13 03:38:44	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-13 03:39:06	--	irc: disconnected from server
2019-12-13 03:43:21	-->	duy (~laduyhaha@113.190.149.78) has joined #python
2019-12-13 03:43:21	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-13 03:43:21	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-13 03:43:21	--	Channel #python: 1845 nicks (0 ops, 0 voices, 1845 normals)
2019-12-13 03:43:27	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-13 03:43:59	-->	wingsorc_ (~wingsorc@unaffiliated/wingsorc) has joined #python
2019-12-13 03:44:22	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 265 seconds)
2019-12-13 03:44:37	cdunklau	sphinxo: pathlib and ipaddress are pretty good
2019-12-13 03:45:02	cdunklau	worst... now that's a hard question
2019-12-13 03:45:12	sphinxo	could be not in the standard library
2019-12-13 03:45:14	<--	wingsorc_ (~wingsorc@unaffiliated/wingsorc) has quit (Client Quit)
2019-12-13 03:45:29	cdunklau	sphinxo: all the ones that encourage subclassing are candidates
2019-12-13 03:45:39	sphinxo	just a commonly used library, that has some very confusing functions that either do the wrong thing or blow up in your face
2019-12-13 03:45:39	sphinxo	ok
2019-12-13 03:45:40	-->	Siecje (~cody@64.119.220.154) has joined #python
2019-12-13 03:45:41	cdunklau	sphinxo: oh! duh
2019-12-13 03:45:43	cdunklau	sphinxo: asyncio
2019-12-13 03:45:54	energizer	sphinxo: https://github.com/energizah/python-stdlib-alternatives
2019-12-13 03:45:55	-->	gchristensen (~grahamc@NixOS/user/gchristensen) has joined #python
2019-12-13 03:45:55	cdunklau	it's massively confusing
2019-12-13 03:46:01	energizer	multiprocessing
2019-12-13 03:46:06	-->	pyusr (4fb6714d@unaffiliated/db42) has joined #python
2019-12-13 03:46:09	sphinxo	what are some bad functions?
2019-12-13 03:46:25	gchristensen	I'm trying to make a typing.NamedTuple with a "count" value, and getting: error: Incompatible types in assignment (expression has type "int", base class "tuple" defined the type as "Callable[[Tuple[object, ...], Any], int]") is there a way to override th edefault count?
2019-12-13 03:46:27	pyusr	Is this considered a bug in PDB ? (typing in the repl): (Pdb) ![x for x in a if 2 in a[x]] # a is a dict
2019-12-13 03:46:27	cdunklau	sphinxo: hasattr used to be bad
2019-12-13 03:46:31	Siecje	I'm updating a project to use marshmallow version 3. If a method returns missing the .dump() method will not return multiple values.
2019-12-13 03:46:42	energizer	cdunklau: it's still bad. but it used to be bad too.
2019-12-13 03:47:00	-->	frrs (uid130725@gateway/web/irccloud.com/x-uhhjfesajovzjbsx) has joined #python
2019-12-13 03:47:04	cdunklau	energizer: nah, at least now it only traps AttributeError :)
2019-12-13 03:47:06	-->	Nozzzle (~Nozzzle@unaffiliated/nozzzle) has joined #python
2019-12-13 03:47:08	<--	torak (~torak@31.155.118.228) has quit (Remote host closed the connection)
2019-12-13 03:47:13	sphinxo	cdunklau that sounds perfect, https://hynek.me/articles/hasattr/ seems to describe it well
2019-12-13 03:47:28	bjs	pyusr: is what a bug?  what did that line do?
2019-12-13 03:47:32	Nozzzle	hello, how do I view my jupyter files on Nikola?
2019-12-13 03:47:33	cdunklau	gchristensen: ...code?
2019-12-13 03:47:52	pyusr	bjs: output the line after it ? (i pasted 2 lines)
2019-12-13 03:47:57	-->	mat001_ (~mat001@198.151.206.196) has joined #python
2019-12-13 03:47:58	Nozzzle	this darn static thing is everything other than simple. non-static websites are much easier
2019-12-13 03:48:13	FunkyBob	heh
2019-12-13 03:48:15	<--	sdu (~doo@80.107.19.194) has quit (Quit: leaving)
2019-12-13 03:48:17	FunkyBob	oh, the irony :)
2019-12-13 03:48:18	cdunklau	Nozzzle: nah, your issue is you aren't comfortable with git
2019-12-13 03:48:24	cdunklau	which is okay
2019-12-13 03:48:25	pyusr	bjs: it seems as if "a" in the if part of the list comprehension isn't known for some weird reason
2019-12-13 03:48:33	<--	cdown (~cdown@199.201.66.0) has quit (Ping timeout: 250 seconds)
2019-12-13 03:48:34	bjs	pyusr: what makes you think it isn't known?
2019-12-13 03:48:45	FunkyBob	Nozzzle: I second that... nobody should every get comfortable with git.. that's when it bites you
2019-12-13 03:48:47	energizer	gchristensen: have you considered using http://attrs.org or https://docs.python.org/3/library/dataclasses.html for the reasons here http://www.attrs.org/en/stable/why.html#namedtuples
2019-12-13 03:48:48	pyusr	bjs huh ? thats the output of PDB
2019-12-13 03:48:53	Yhg1s	pyusr: yes, that's unfortunately the case, because of how scoping works.
2019-12-13 03:48:56	Yhg1s	pyusr: you only pasted one line.
2019-12-13 03:49:03	Nozzzle	so how can I view them?
2019-12-13 03:49:05	bjs	pyusr: i don't see your second line
2019-12-13 03:49:10	bjs	Yhg1s: only if a is a local variable right
2019-12-13 03:49:13	pyusr	strange.. the webchat is borked then, 2nd line: *** NameError: name 'a' is not defined
2019-12-13 03:49:14	gchristensen	sure: https://gist.github.com/grahamc/c72d55db26f30afd3ebdcb337491b17b
2019-12-13 03:49:18	Yhg1s	bjs: yes.
2019-12-13 03:49:35	pyusr	Yhg1s: i thought "!" passes it directly to python repl or os
2019-12-13 03:49:42	FunkyBob	Nozzzle: maybe I missed the context.... view which "them"?
2019-12-13 03:49:46	Nozzzle	I copied them in a folder, but they are not shown like a text post. conf file contains ipynb format
2019-12-13 03:49:54	gchristensen	dataclasses look nice, thanks energizer
2019-12-13 03:49:56	<--	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2019-12-13 03:49:58	Nozzzle	FunkyBob, python files
2019-12-13 03:49:58	bjs	Yhg1s: tbh I'd be happy to call this a bug because it's not really "how scopes work"
2019-12-13 03:50:19	-->	b10n1k (~b10n1k@94.142.239.79) has joined #python
2019-12-13 03:50:24	-->	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has joined #python
2019-12-13 03:50:41	<--	mat001 (~mat001@198.151.206.196) has quit (Ping timeout: 246 seconds)
2019-12-13 03:51:03	bjs	Yhg1s: it's more some weird oddity of how Python compiles the list comp and how pdb works
2019-12-13 03:51:09	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 250 seconds)
2019-12-13 03:51:09	-->	red666 (~redastabl@unaffiliated/pkcloud) has joined #python
2019-12-13 03:51:12	red666	hello
2019-12-13 03:51:23	<--	Kaedenn (~kaedenn@unaffiliated/kaedenn) has quit (Ping timeout: 246 seconds)
2019-12-13 03:51:28	cdunklau	bjs: AFAICT ! is like a side-load thing
2019-12-13 03:51:34	Nozzzle	the following happened; because I wrestled the whole day with git and couldnt manage to run Nikola website from its local setup, I moved it to the web the conventional way. but it is still in the dark how I can make it display python files on a browser.
2019-12-13 03:51:37	cdunklau	"Python statements can also be prefixed with an exclamation point (!). This is a powerful way to inspect the program being debugged; it is even possible to change a variable or call a function. When an exception occurs in such a statement, the exception name is printed but the debugger’s state is not changed."
2019-12-13 03:51:49	<--	red666 (~redastabl@unaffiliated/pkcloud) has quit (Remote host closed the connection)
2019-12-13 03:51:58	cdunklau	the last bit there makes me think there's some kind of isolation happening
2019-12-13 03:52:11	cdunklau	pyusr: what happens with p instead of ~
2019-12-13 03:52:14	cdunklau	err instead of !
2019-12-13 03:52:16	<--	elegast (~elegast@83-161-161-141.mobile.xs4all.nl) has quit (Ping timeout: 240 seconds)
2019-12-13 03:52:25	Yhg1s	bjs: nope, I said "how scoping works", not "how scopes work" :)
2019-12-13 03:52:33	Yhg1s	bjs: it *is* about how scoping works, in Python.
2019-12-13 03:52:35	bjs	Yhg1s: fair enough
2019-12-13 03:52:44	Yhg1s	bjs: it's also about how pdb runs things, though.
2019-12-13 03:52:46	-->	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-13 03:53:01	<--	Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz) has quit (Quit: Leaving.)
2019-12-13 03:53:20	pyusr	cdunklau both p and ! and print() dont work
2019-12-13 03:53:35	cdunklau	pyusr: k. what does `where` output
2019-12-13 03:53:41	bjs	cdunklau: Yhg1s and I are talking about the way compiling that list comp will put a LOAD_GLOBAL (?) because it doesn't know 'a' is a local var
2019-12-13 03:53:52	-->	xyt (~xyt@157.130.212.6) has joined #python
2019-12-13 03:53:53	pyusr	cdunklau somewher ein my code ?
2019-12-17 01:28:47	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:28:47	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:28:47	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 01:28:47	--	Channel #python: 1745 nicks (0 ops, 0 voices, 1745 normals)
2019-12-17 01:28:53	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:28:56	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Remote host closed the connection)
2019-12-17 01:29:02	-->	ArchDebian (~us@ool-3f8fedbe.dyn.optonline.net) has joined #python
2019-12-17 01:29:21	<--	x256 (~Jace@2001:638:60f:1000:603d:120e:5e41:b147) has quit (Quit: Leaving)
2019-12-17 01:29:26	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-17 01:29:27	-->	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-17 01:29:50	<--	ArchDebian (~us@ool-3f8fedbe.dyn.optonline.net) has quit (Client Quit)
2019-12-17 01:30:09	-->	ArchDebian (~us@ool-3f8fedbe.dyn.optonline.net) has joined #python
2019-12-17 01:31:07	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:31:07	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:31:07	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 01:31:08	--	Channel #python: 1747 nicks (0 ops, 0 voices, 1747 normals)
2019-12-17 01:31:15	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:31:17	eck0	chris, one parameter is like an accumulator and other is current value
2019-12-17 01:32:25	chris_99	ahh, i think i get that then, thanks, so the accumulator, gets built up, by taking the current value and processing it, and adding it to the accumulator?
2019-12-17 01:32:38	-->	b1tninja (~b1tninja@unaffiliated/b1tninja) has joined #python
2019-12-17 01:32:53	-->	hackinghorn (~hackingho@unaffiliated/hackinghorn) has joined #python
2019-12-17 01:33:22	eck0	yes or however you please, you can use it to sort or divide or whatever
2019-12-17 01:33:28	eck0	in this case it’s concatting
2019-12-17 01:33:54	chris_99	cheers, that makes sense now
2019-12-17 01:34:04	eck0	np
2019-12-17 01:34:45	zumba_addict	I hope this **kwargs input will work. I mean it will accept it but I am not sure if the lambda functions are going to get created in each regions in AWS. `env = [{'region': 'us-east-1'}, {'region': 'us-east-2'}, {'region': 'us-west-1'}, {'region': 'us-west-2'}],`
2019-12-17 01:35:12	-->	xcm (~xcm@ipa210.225.tellas.gr) has joined #python
2019-12-17 01:35:22	eck0	is there a reason it’s in a list
2019-12-17 01:35:46	eck0	you can’t unpack that dictionary like that can you?
2019-12-17 01:36:44	<--	tos9 (~tos9@python/site-packages/tos9) has quit (Quit: Bye)
2019-12-17 01:36:47	<--	Dan_au (~Dan@syd.danscomp.net) has quit (Ping timeout: 246 seconds)
2019-12-17 01:36:52	eck0	did you make that env variable?
2019-12-17 01:37:01	-->	tos9 (~tos9@python/site-packages/tos9) has joined #python
2019-12-17 01:37:02	<--	humitos (~humitos@139.47.122.65) has quit (Remote host closed the connection)
2019-12-17 01:37:38	-->	laduygaga (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:37:38	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:37:38	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 01:37:39	--	Channel #python: 1749 nicks (0 ops, 0 voices, 1749 normals)
2019-12-17 01:37:45	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:38:24	<--	tos9 (~tos9@python/site-packages/tos9) has quit (Client Quit)
2019-12-17 01:38:28	<--	Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz) has quit (Quit: Leaving.)
2019-12-17 01:38:49	-->	laduygaga (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:38:49	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:38:49	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:58
2019-12-17 01:38:50	--	Channel #python: 1748 nicks (0 ops, 0 voices, 1748 normals)
2019-12-17 01:38:56	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:39:05	--	hberaud is now known as hberaud|gone
2019-12-17 01:39:05	<--	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 268 seconds)
2019-12-17 01:39:05	-->	xyt (~xyt@157.130.212.6) has joined #python
2019-12-17 01:39:06	<--	tos9 (~tos9@python/site-packages/tos9) has quit (Client Quit)
2019-12-17 01:39:06	<--	shoogz (~shoogz@unaffiliated/shoogz) has quit (Ping timeout: 265 seconds)
2019-12-17 01:39:06	-->	ArchDebian (~us@ool-3f8fedbe.dyn.optonline.net) has joined #python
2019-12-17 01:39:20	cluelessperson	So, I have a design question
2019-12-17 01:39:22	-->	tos9 (~tos9@python/site-packages/tos9) has joined #python
2019-12-17 01:39:32	<--	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has quit (Quit: Leaving)
2019-12-17 01:39:42	cluelessperson	AdventOfCode's second challenge involves making an intcode computer.  Easy enough.
2019-12-17 01:40:03	zumba_addict	It failed eck0 with `Error: Got an array where a @aws-cdk/core.Environment was expected. Did you mean to pass a variable number of arguments?`
2019-12-17 01:40:14	cluelessperson	I figured I should create an object "Computer" which I could .register(class Operation)  operations that the computer might perform.
2019-12-17 01:40:21	<--	w1kl4s (~w1kl4s@159.69.34.145) has quit (Remote host closed the connection)
2019-12-17 01:40:28	-->	lakitu (~lakitu@unaffiliated/lakitu) has joined #python
2019-12-17 01:40:36	cluelessperson	The computer simply raises an exception if it wanders across an opcode that isn't a known operation, make sense?
2019-12-17 01:40:41	cluelessperson	is this design sane?
2019-12-17 01:42:26	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:42:26	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:42:26	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 01:42:27	--	Channel #python: 1747 nicks (0 ops, 0 voices, 1747 normals)
2019-12-17 01:42:33	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:43:09	-->	Dan_au (~Dan@syd.danscomp.net) has joined #python
2019-12-17 01:43:17	<--	xyt (~xyt@157.130.212.6) has quit (Ping timeout: 248 seconds)
2019-12-17 01:43:35	zumba_addict	but I don't understand how to write the value, maybe it should be written as `env='default'`
2019-12-17 01:44:10	zumba_addict	I mean `env={'region': 'default'}`
2019-12-17 01:44:16	zumba_addict	I'll try that now
2019-12-17 01:44:28	-->	DebianArch (~us@ool-3f8fedbe.dyn.optonline.net) has joined #python
2019-12-17 01:44:30	<--	ArchDebian (~us@ool-3f8fedbe.dyn.optonline.net) has quit (Ping timeout: 250 seconds)
2019-12-17 01:45:32	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:45:32	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:45:32	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 01:45:33	--	Channel #python: 1748 nicks (0 ops, 0 voices, 1748 normals)
2019-12-17 01:45:37	-->	owenc_ (~owen@88-145-2-196.host.pobb.as13285.net) has joined #python
2019-12-17 01:45:39	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:45:40	zumba_addict	yup, no more errors. I'm hoping the lamdba func will be created in few regions I'm expecting it too
2019-12-17 01:45:43	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2019-12-17 01:46:08	zumba_addict	I don't know what `agnostic` means. I think it means `does not depend on region`
2019-12-17 01:46:10	TheRedRipper	i want to make a file that stores your answers and puts them together to understand what the program/drawing should look like. anyone know how?
2019-12-17 01:46:39	zumba_addict	or maybe, I should remove the env={.....} and see where it's going to go
2019-12-17 01:47:17	CrtxReavr	zumba_addict, a more modern/adaptive definition of agnostic is that it doesn't care about something, or can work with any of a certain type of things.
2019-12-17 01:47:31	zumba_addict	yeah, that's what I mean
2019-12-17 01:47:34	zumba_addict	cool
2019-12-17 01:48:08	zumba_addict	I removed `env` from app.py and `cdk synth ` didn't have an error but added more output to the screen
2019-12-17 01:48:41	<--	chewyDelicious (~nooblet@musketeer-63.fusion.uni-jena.de) has quit (Read error: Connection reset by peer)
2019-12-17 01:48:42	-->	renlolo (lhoward@gateway/vpn/privateinternetaccess/renlo) has joined #python
2019-12-17 01:49:15	zumba_addict	this is what it added to the output - https://nopaste.xyz/?f6d6325f7ce088c3#QfUMClum3bLBhzjXwBJ6TT5962pdbtRzvJduF96Yhlg=
2019-12-17 01:49:56	<--	Linzeestomp (~lindsey@64.44.80.28) has quit (Read error: Connection reset by peer)
2019-12-17 01:50:05	-->	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-17 01:50:11	<--	owenc_ (~owen@88-145-2-196.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-17 01:50:36	-->	chewyDelicious (~nooblet@musketeer-63.fusion.uni-jena.de) has joined #python
2019-12-17 01:51:54	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-17 01:52:13	-->	macaronus (macaronus@gateway/vpn/privateinternetaccess/macaronus) has joined #python
2019-12-17 01:52:37	CrtxReavr	zumba_addict, you should probably use the pastebin in the topic.
2019-12-17 01:52:38	<--	w4lL8 (w4lL8@82.120.196.231) has quit (Ping timeout: 265 seconds)
2019-12-17 01:52:49	zumba_addict	it was down
2019-12-17 01:53:01	zumba_addict	I'll repaste it later when it's back up
2019-12-17 01:53:12	CrtxReavr	dpaste.de then
2019-12-17 01:53:42	CrtxReavr	Though bpaste.net seems up now.
2019-12-17 01:53:57	josef_October	could someone please upload this file to wikileaks it is endlessly important!!! Its about safety of the whole human mankind | https://ufile.io/c7dtbmnl
2019-12-17 01:54:17	josef_October	my computer is beeing controled thats why i cannot upload it
2019-12-17 01:54:29	<--	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2019-12-17 01:54:36	-->	Rapture (~Rapture@50-204-232-30-static.hfc.comcastbusiness.net) has joined #python
2019-12-17 01:54:48	<--	fookara (~user@37.57.118.55) has quit (Remote host closed the connection)
2019-12-17 01:55:33	<--	maxpowa (~maxpowa@brought.to.you.by.maxpowa.us) has quit (Ping timeout: 276 seconds)
2019-12-17 01:55:43	-->	subho (~subho@fedora/subho) has joined #python
2019-12-17 01:55:46	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Ping timeout: 250 seconds)
2019-12-17 01:56:26	-->	BeerLove_ (~BeerBuddy@171.50.137.211) has joined #python
2019-12-17 01:57:35	-->	iam730 (~iam730@c-71-198-201-85.hsd1.ca.comcast.net) has joined #python
2019-12-17 01:57:35	<--	DebianArch (~us@ool-3f8fedbe.dyn.optonline.net) has quit (Read error: Connection reset by peer)
2019-12-17 01:57:36	pingveno	Is there a way to make mypy treat an Enum subclass as an Enum?
2019-12-17 01:57:50	-->	DebianArch (~us@ool-3f8fedbe.dyn.optonline.net) has joined #python
2019-12-17 01:58:02	pingveno	There's a library I'm working with that subclasses Enum and it's causing type errors.
2019-12-17 01:58:41	pingveno	e.g. `class SomeEnum(EnumSubclass): COMPLETED = 'C'`
2019-12-17 01:59:03	pingveno	`SomeEnum.COMPLETED` -> `str`
2019-12-17 01:59:40	pingveno	Is there some way to say "treat this as an Enum"?
2019-12-17 02:00:10	-->	jcarl43 (~jcarl@208.181.54.130) has joined #python
2019-12-17 02:00:26	<--	zzzoid (~zzzoid@212-147-55-201.fix.access.vtx.ch) has quit (Quit: This computer has gone to sleep)
2019-12-17 02:01:14	<--	DebianArch (~us@ool-3f8fedbe.dyn.optonline.net) has quit (Client Quit)
2019-12-17 02:01:21	-->	HenryTheGreat (~HenryTheG@c-75-69-184-220.hsd1.nh.comcast.net) has joined #python
2019-12-17 02:01:31	<--	rendar (~rendar@unaffiliated/rendar) has quit
2019-12-17 02:01:46	The-Compiler	josef_October: how is that related to Python?
2019-12-17 02:02:19	eck0	https://docs.python.org/3/library/enum.html#restricted-subclassing-of-enumerations
2019-12-17 02:02:33	<--	LKoen (~LKoen@lstlambert-657-1-123-43.w92-154.abo.wanadoo.fr) has quit (Remote host closed the connection)
2019-12-17 02:02:34	eck0	looks like it’s not allowed if your base class has any members already
2019-12-17 02:02:35	<--	HenryTheGreat (~HenryTheG@c-75-69-184-220.hsd1.nh.comcast.net) has quit (Client Quit)
2019-12-17 02:03:52	-->	HenryTheGreat (~HenryTheG@c-75-69-184-220.hsd1.nh.comcast.net) has joined #python
2019-12-17 02:04:04	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-17 02:04:20	--	Mode #python [+o cdunklau] by ChanServ
2019-12-17 02:04:28	--	Mode #python [+b *!*josef_Oct@2a01:598:8190:6ad8:c0c9:8cff:feb1:*] by cdunklau
2019-12-17 02:04:28	<--	cdunklau has kicked josef_October (nope)
2019-12-17 02:04:34	<--	jcarl43 (~jcarl@208.181.54.130) has quit (Client Quit)
2019-12-17 02:05:04	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 02:05:04	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 02:05:04	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 02:05:04	--	Channel #python: 1747 nicks (2 ops, 0 voices, 1745 normals)
2019-12-17 02:05:08	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 02:05:55	-->	jarthur (~jarthur@207.114.244.5) has joined #python
2019-12-17 02:06:02	<--	Atlenohen (~Walter@cpe-194-152-22-87.static.triera.net) has quit (Quit: Shutdown - Closing IRC)
2019-12-17 02:06:06	The-Compiler	cdunklau: or that, i guess.
2019-12-17 02:06:16	-->	whaley (~whaley@smtp.hosted.acftechnologies.com) has joined #python
2019-12-17 02:06:27	<--	tesseract (~tesseract@2a01:e35:2424:84a0:72c:f72:86cc:a023) has quit (Quit: Leaving)
2019-12-17 02:06:56	<--	lucid-lullaby (lucid-lull@gateway/vpn/privateinternetaccess/lucid-lullaby) has quit (Read error: Connection reset by peer)
2019-12-17 02:06:59	-->	w1kl4s (~w1kl4s@159.69.34.145) has joined #python
2019-12-17 02:07:06	-->	jcarl43 (~jcarl@208.181.54.130) has joined #python
2019-12-17 02:07:26	-->	Rurik (~textual@unaffiliated/temur) has joined #python
2019-12-17 02:07:59	<--	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 02:08:42	jfhbrook	howdy, I'm trying to publish a stale project to pypi and it appears that I need to migrate from bdist_wheel upload to twine upload and there's a cli flag here I can't find any docs on
2019-12-17 02:08:46	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 250 seconds)
2019-12-17 02:08:54	<--	HenryTheGreat (~HenryTheG@c-75-69-184-220.hsd1.nh.comcast.net) has quit (Remote host closed the connection)
2019-12-17 02:09:10	jfhbrook	any y'all good at this stuff? https://github.com/Squarespace/pgbedrock/blob/master/Makefile#L61
2019-12-17 02:09:20	jfhbrook	wanna know what the -r flag is
2019-12-17 02:09:49	--	Mode #python [-o infobob] by infobob
2019-12-17 02:11:07	jfhbrook	-r for registry I guess
2019-12-17 02:11:25	-->	owlscientist (~owlscient@sburn/devel/name) has joined #python
2019-12-17 02:11:29	jfhbrook	and I think my specific blocker mighta been due to using the wrong local python version, oops
2019-12-17 02:11:48	@cdunklau	jfhbrook: setup.py upload --help might be informative
2019-12-17 02:12:01	--	Mode #python [-o cdunklau] by ChanServ
2019-12-17 02:12:07	<--	panikovsky (~panikovsk@84.51.219.27) has quit (Quit: Leaving)
2019-12-17 02:13:37	pingveno	eck0: I'm working with https://github.com/hzdg/django-enumfields/blob/master/enumfields/enums.py
2019-12-17 02:14:02	danyeaw	jfhbrook: you usually use -r or --repository to use a different default repo to upload instead of PyPI. The default is pypi, but you could also upload to https://test.pypi.org or even host your own repository.
2019-12-17 02:14:04	<--	TheRedRipper (~u0_a51@198.236.27.247) has quit (Quit: WeeChat 2.7)
2019-12-17 02:14:08	<--	wreed (~wreed@ool-182f2441.dyn.optonline.net) has quit (Quit: Goodbye)
2019-12-17 02:14:47	pingveno	I wonder if the subclassing of EnumMeta that they do is interfering. :/
2019-12-17 02:14:53	jfhbrook	I see
2019-12-17 02:14:58	jfhbrook	and yeah probably what's going on here
2019-12-17 02:14:59	<--	wellds (~wellds@179.176.249.211.dynamic.adsl.gvt.net.br) has quit (Quit: Leaving)
2019-12-17 02:15:28	<--	pombreda_ (~pombreda@host-78-129-86-230.dynamic.voo.be) has quit (Ping timeout: 246 seconds)
2019-12-17 02:16:46	<--	xrogaan (~xrogaan@unaffiliated/xrogaan) has quit (Quit: Leaving)
2019-12-17 02:17:45	<--	throstur (~throstur@unaffiliated/throstur) has quit (Ping timeout: 265 seconds)
2019-12-17 02:19:15	-->	Ruhan (uid76353@gateway/web/irccloud.com/x-pcnjnxfbldkgnfqt) has joined #python
2019-12-17 02:19:52	-->	matsaman (~matsaman@unaffiliated/matsaman) has joined #python
2019-12-17 02:21:01	-->	Slartibart (~kvirc@c-cf2c70d5.217486-0-69706f6e6c79.bbcust.telenor.se) has joined #python
2019-12-17 02:21:23	-->	gnumojo (~Thunderbi@87.18.42.88) has joined #python
2019-12-17 02:21:55	-->	nishantagrawal (dfe69df8@223.230.157.248) has joined #python
2019-12-17 02:21:57	-->	burakcank (~burakcank@159.146.10.86) has joined #python
2019-12-17 02:22:02	-->	maxpowa (~maxpowa@brought.to.you.by.maxpowa.us) has joined #python
2019-12-17 02:22:06	cluelessperson	Hi there, I'm confused about something
2019-12-17 02:22:19	cluelessperson	I'm "registering" classes that extend another class
2019-12-17 02:22:31	jfhbrook	it seems that twine respects -r as well
2019-12-17 02:22:32	cluelessperson	uh, lemme test something
2019-12-17 02:22:32	-->	_bart (~textual@12.52.67.99) has joined #python
2019-12-17 02:22:34	jfhbrook	so that works for me
2019-12-17 02:22:36	<--	jcarl43 (~jcarl@208.181.54.130) has quit (Quit: WeeChat 2.7)
2019-12-17 02:22:36	<--	gnumojo (~Thunderbi@87.18.42.88) has quit (Remote host closed the connection)
2019-12-17 02:22:37	<--	pepee (~pepee@unaffiliated/pepee) has quit (Quit: pepee)
2019-12-17 02:22:49	-->	jcarl43 (~jcarl@208.181.54.130) has joined #python
2019-12-17 02:22:52	<--	Mattiaslndstrm (~Mattiasln@c-136be555.018-449-6e6b701.bbcust.telenor.se) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 02:23:08	cluelessperson	Okay, so I've added the method __repr__ to my objects
2019-12-17 02:23:13	cluelessperson	but it doesn't seem to be working
2019-12-17 02:23:14	cluelessperson	I'm confused.
2019-12-17 02:23:16	cluelessperson	<class '__main__.Addition'>
2019-12-17 02:23:45	energizer	repr affects the instances not the class
2019-12-17 02:23:47	-->	definity (8ea77268@142.167.114.104) has joined #python
2019-12-17 02:24:16	-->	shiroininja (shiroininj@gateway/vpn/privateinternetaccess/shiroininja) has joined #python
2019-12-17 02:25:21	tos9	A class called "Addition" is also a bit of an odd thing unless you're writing an implementation of groups.
2019-12-17 02:25:37	cdunklau	cluelessperson: if you need to change the repr of the class itself (yikes why), you need to do metaclass shenanigans
2019-12-17 02:25:51	cluelessperson	ah
2019-12-17 02:25:55	-->	rpg (~rpg@sift.net) has joined #python
2019-12-17 02:25:57	cluelessperson	I'm screwing around
2019-12-17 02:25:58	-->	stoopkid (uid137696@gateway/web/irccloud.com/x-glsqxfmzxnxysfbn) has joined #python
2019-12-17 02:26:06	<--	BeerLove_ (~BeerBuddy@171.50.137.211) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 02:26:22	-->	aslicedbanjo (~aslicedba@host86-160-19-113.range86-160.btcentralplus.com) has joined #python
2019-12-17 02:26:33	-->	singularity00 (~singulari@85.187.64.126.client.entry.bg) has joined #python
2019-12-17 02:26:35	cluelessperson	cdunklau, this is the dumbness I'm doing: https://gist.github.com/aa2c88e1e9e6f1ebe56810bd2ef5d629
2019-12-17 02:26:42	-->	Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz) has joined #python
2019-12-17 02:27:11	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-17 02:27:27	cdunklau	cluelessperson: aaah can't look
2019-12-17 02:27:37	cluelessperson	cdunklau, why
2019-12-17 02:27:50	cdunklau	although i doubt i'll be spoiled by python AoC code
2019-12-17 02:27:55	-->	JoshS_ (~JoshS@50.56.229.19) has joined #python
2019-12-17 02:27:59	-->	baweaver (~baweaver@ruby/staff/baweaver) has joined #python
2019-12-17 02:28:00	cluelessperson	cdunklau, It's Day 2
2019-12-17 02:28:04	cdunklau	i'm doing it in haskell
2019-12-17 02:28:08	cdunklau	cluelessperson: yes, i'm on day 2!
2019-12-17 02:28:09	cdunklau	 :D
2019-12-17 02:28:20	cluelessperson	cdunklau, I'm sure you'll find this exceedingly easy.
2019-12-17 02:28:24	cluelessperson	cdunklau, This is where I'm at.
2019-12-17 02:28:33	cluelessperson	cdunklau, These challenges have all been very easy, yet tedious.
2019-12-17 02:28:43	cluelessperson	cdunklau, but I want to learn to do things "right", so I'm redoing this.
2019-12-17 02:28:50	<--	burakcank (~burakcank@159.146.10.86) has quit (Quit: WeeChat 2.6)
2019-12-17 02:29:00	cluelessperson	if this code makes your hair scream or stand on end, WHY
2019-12-17 02:29:01	<--	Rurik (~textual@unaffiliated/temur) has quit (Quit: Rurik)
2019-12-17 02:29:03	cdunklau	cluelessperson: yeah, that's kinda how AoC goes. its either tedious and boring, or like, nigh-impossible
2019-12-17 02:29:06	cluelessperson	and how the hell am I supposed to do it?
2019-12-17 02:29:20	cdunklau	cluelessperson: first of all, way too many classes
2019-12-17 02:29:34	cluelessperson	cdunklau, Let's start there!
2019-12-17 02:29:35	-->	gloomy (~Gloomy@213.61.70.210) has joined #python
2019-12-17 02:29:39	cluelessperson	why?
2019-12-17 02:29:41	-->	burakcank (~burakcank@159.146.10.86) has joined #python
2019-12-17 02:29:54	definity	I got a dictionary this shape: {'USD': {'rate': 1.22, 'time': 124432432}, 'GBP': {'rate': 0.65, 'time': 12423523}, 'EUR': {'rate': 0.98, 'time': 12433432}} How can I get the keys EUR, GBP, USD as strings?
2019-12-17 02:30:06	cluelessperson	cdunklau, There are multiple challenges that require adding other operations to the computer, so I figured I'd make the operations themselves classes that I add on to it.
2019-12-17 02:30:08	cdunklau	cluelessperson: use a dict of optcode -> (arity, operate)
2019-12-17 02:30:15	<--	jarthur (~jarthur@207.114.244.5) has quit (Quit: BRB)
2019-12-17 02:30:23	<--	muhlinux (~muhlinux@45.83.91.18) has quit (Quit: Leaving)
2019-12-17 02:30:27	cdunklau	operate takes `arity` args
2019-12-17 02:30:29	cluelessperson	definity, a = dict(that);   a.keys()   done.
2019-12-17 02:30:32	<--	jim (~jim@about/linux/staff/jim) has quit (Remote host closed the connection)
2019-12-17 02:30:46	cluelessperson	definity, also, you should google simple questions like that.
2019-12-17 02:31:11	cluelessperson	cdunklau, I don't know wtf `arity` is
2019-12-17 02:31:24	cdunklau	cluelessperson: number of args
2019-12-17 02:31:33	-->	Beam_Inn_ (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has joined #python
2019-12-17 02:31:44	-->	pombreda_ (~pombreda@host-78-129-86-230.dynamic.voo.be) has joined #python
2019-12-17 02:31:57	<--	chewyDelicious (~nooblet@musketeer-63.fusion.uni-jena.de) has quit (Ping timeout: 276 seconds)
2019-12-17 02:31:59	<--	nishantagrawal (dfe69df8@223.230.157.248) has left #python
2019-12-17 02:32:11	cdunklau	ah, sorry. operate takes `arity + 1` args, because you give it the int list as the first arg
2019-12-17 02:32:33	cdunklau	cluelessperson: but overall, i've always found that trying to plan ahead for AoC is like, never worth it
2019-12-17 02:33:37	cdunklau	cluelessperson: and it's kinda funny that i'm telling you this, because i have horrible confusing ideas about how i can maybe generalize intcode computer operations in a typeclass, or god forbid, a monad
2019-12-17 02:33:44	cdunklau	send help
2019-12-17 02:33:54	<--	sauvin (sauvin@about/linux/staff/sauvin) has quit (Ping timeout: 276 seconds)
2019-12-17 02:34:47	-->	desophos (~Thunderbi@c-24-14-63-128.hsd1.il.comcast.net) has joined #python
2019-12-17 02:35:02	-->	jim (~jim@about/linux/staff/jim) has joined #python
2019-12-17 02:35:40	<--	Jerrynicki (~niklas@p200300F573C0F6003DB24683DF88A860.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-17 02:35:51	<--	Beam_Inn (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has quit (Ping timeout: 276 seconds)
2019-12-17 02:35:58	--	Beam_Inn_ is now known as Beam_Inn
2019-12-17 02:36:07	cluelessperson	cdunklau, wtf is a typeclass, or monad
2019-12-17 02:36:28	cluelessperson	cdunklau, what is arity, much less arity + 1?
2019-12-17 02:36:42	definity	cluelessperson: That returns a keys_dict object not a string
2019-12-17 02:37:28	-->	unit37 (~IceChat9@173-31-162-74.client.mchsi.com) has joined #python
2019-12-17 02:37:33	cluelessperson	definity,   ...   for key in dict.keys():  print(key)  # str
2019-12-17 02:37:36	<--	legola (~legola@unaffiliated/legola) has quit (Remote host closed the connection)
2019-12-17 02:37:53	cluelessperson	definity, keys is a generator that outputs a key at a time.
2019-12-17 02:37:59	energizer	cluelessperson: the "arity" of a function is the number of arguments that it takes
2019-12-17 02:38:20	ChaiTRex	cluelessperson: A typeclass is a certain set of functions that work on a certain set of types. Arity is the number of arguments to a function. Monads are pretty abstract and hard to describe.
2019-12-17 02:38:20	definity	cluelessperson: oh yeah I missed the __it__ dunder opn dir() my bad. Thanks :)
2019-12-17 02:38:27	<--	funeral (~Funeral@246.109-247-210.customer.lyse.net) has quit (Ping timeout: 276 seconds)
2019-12-17 02:39:10	-->	isokee (~isokee@unaffiliated/isokee) has joined #python
2019-12-17 02:39:33	energizer	cluelessperson: those terms are used in haskell, we dont talk about them much in python
2019-12-17 02:40:06	-->	funeral (~Funeral@45.12.223.84) has joined #python
2019-12-17 02:41:03	-->	gnumojo (~Thunderbi@87.18.42.88) has joined #python
2019-12-17 02:41:23	<--	tuskkk____ (uid18470@gateway/web/irccloud.com/x-flvcebeparybnirn) has quit (Quit: Connection closed for inactivity)
2019-12-17 02:41:56	-->	JTa (~Thunderbi@unaffiliated/jta) has joined #python
2019-12-17 02:41:59	<--	rardiol (~quassel@177.52.229.215) has quit (Ping timeout: 268 seconds)
2019-12-17 02:42:12	-->	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has joined #python
2019-12-17 02:42:17	-->	alexgr (~alexgr@unaffiliated/alexgr) has joined #python
2019-12-17 02:42:27	<--	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has quit (Client Quit)
2019-12-17 02:42:56	-->	longshi (~mist_@2a02:a311:a242:ae00:badf:e4d5:e74c:e2c1) has joined #python
2019-12-17 02:43:22	-->	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has joined #python
2019-12-17 02:43:54	<--	slamtime (~textual@108.63.250.69) has quit (Quit: slamtime)
2019-12-17 02:44:18	<--	burakcank (~burakcank@159.146.10.86) has quit (Ping timeout: 276 seconds)
2019-12-17 02:44:20	<--	gnumojo (~Thunderbi@87.18.42.88) has quit (Client Quit)
2019-12-17 02:45:03	cdunklau	cluelessperson: typeclass and monads are haskell, i'm expressing my bewilderment with my code :)
2019-12-17 02:45:12	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-17 02:45:20	cluelessperson	cdunklau, oh, I thought you were judging my code.
2019-12-17 02:45:22	cluelessperson	very confusing.
2019-12-17 02:45:26	cdunklau	cluelessperson: nope, sorry
2019-12-17 02:45:29	<--	chriys (~Thunderbi@modemcable050.26-73-45.static.videotron.ca) has quit (Remote host closed the connection)
2019-12-17 02:45:36	cluelessperson	cdunklau, I would like your judgement. :)
2019-12-17 02:45:40	cluelessperson	energizer, yours too? :)
2019-12-17 02:45:48	-->	chriys (~Thunderbi@modemcable050.26-73-45.static.videotron.ca) has joined #python
2019-12-17 02:46:11	energizer	cluelessperson: i havent been doing aoc
2019-12-17 02:46:42	energizer	nedbat has been posting a link about it recently, maybe it interests you
2019-12-17 02:46:44	-->	__stranac__ (~stranac@83-131-240-219.adsl.net.t-com.hr) has joined #python
2019-12-17 02:46:45	<--	zalt__ (~devp@unaffiliated/lambda443) has quit (Ping timeout: 248 seconds)
2019-12-17 02:46:51	<--	arj15 (~arj15@185.47.223.198) has quit (Read error: Connection reset by peer)
2019-12-17 02:47:10	<--	chriys (~Thunderbi@modemcable050.26-73-45.static.videotron.ca) has quit (Client Quit)
2019-12-17 02:47:38	<--	ap4lmtree (ap4lmtree@unaffiliated/ap4lmtree) has quit (Quit: Leaving)
2019-12-17 02:47:38	<--	cliluw (~cliluw@unaffiliated/cliluw) has quit (Read error: Connection reset by peer)
2019-12-17 02:47:49	-->	legola (~legola@unaffiliated/legola) has joined #python
2019-12-17 02:47:57	<--	GnomosOrg (~matrixirc@183.51-175-188.customer.lyse.net) has quit (Remote host closed the connection)
2019-12-17 02:48:11	nedbat	cdunklau, cluelessperson: i have a leaderboard if you want to join it. I had to kind of go cold turkey on advent after yesterday. you can join it at https://adventofcode.com/2019/leaderboard/private with join code 33698-d7f39dcb if you want
2019-12-17 02:48:12	-->	GnomosOrg (~matrixirc@183.51-175-188.customer.lyse.net) has joined #python
2019-12-17 02:48:34	cdunklau	cluelessperson: so what i'm saying is you make a dict like {1: (3, do_add)} with `def do_add(intcodes, idx_x, idx_y, idx_dst): ...`
2019-12-17 02:48:39	<--	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has quit (Ping timeout: 245 seconds)
2019-12-17 02:49:15	cdunklau	cluelessperson: and do_add then does the actual transformation (or mutation) called for
2019-12-17 02:49:40	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined #python
2019-12-17 02:49:42	cdunklau	nedbat: i might. not sure how far i'll get with this
2019-12-17 02:49:57	<--	canarts (~stranac@m83-178-234-229.cust.tele2.hr) has quit (Ping timeout: 248 seconds)
2019-12-17 02:50:02	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2019-12-17 02:50:09	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 265 seconds)
2019-12-17 02:50:11	nedbat	cdunklau: i'm on another private board where one of the people has zero stars.  It doesn't have to be a competition :)
2019-12-17 02:50:18	-->	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has joined #python
2019-12-17 02:50:50	-->	yoller (6a4213ab@106.66.19.171) has joined #python
2019-12-17 02:50:53	-->	_jonathan_ (~jonathan@cpe-66-65-138-2.nyc.res.rr.com) has joined #python
2019-12-17 02:50:54	cdunklau	lol
2019-12-17 02:51:00	cdunklau	k
2019-12-17 02:51:04	-->	fphilipe_ (~phil@2a02:168:f7b6:0:1135:3b88:d127:db7c) has joined #python
2019-12-17 02:51:29	-->	wreed (~wreed@ool-182f2441.dyn.optonline.net) has joined #python
2019-12-17 02:51:45	cluelessperson	nedbat, why thank you
2019-12-17 02:51:51	yoller	Many suggest emacs and vim text editor for python...which should i choose i am a beginner
2019-12-17 02:51:52	-->	zalt (~devp@unaffiliated/lambda443) has joined #python
2019-12-17 02:52:05	energizer	yoller: vscode
2019-12-17 02:52:07	-->	philr (~phil@ppp14-2-90-166.adl-apt-pir-bras31.tpg.internode.on.net) has joined #python
2019-12-17 02:52:07	-->	_afx_ (~Thunderbi@5.180.62.43) has joined #python
2019-12-17 02:52:12	nedbat	yoller: do you already use an editor of some kind?
2019-12-17 02:54:16	<--	legola (~legola@unaffiliated/legola) has quit (Ping timeout: 246 seconds)
2019-12-17 02:54:16	eck0	i did day 2 in c#
2019-12-17 02:54:16	-->	pepee (~pepee@unaffiliated/pepee) has joined #python
2019-12-17 02:54:16	eck0	:(
2019-12-17 02:54:16	-->	lacrymology (~lacrymolo@static-21-49-228-77.ipcom.comunitel.net) has joined #python
2019-12-17 02:54:16	cluelessperson	nedbat, I started late and I'm getting caught up in learning and these design problems
2019-12-17 02:54:16	yoller	energizer yes sublime for c++
2019-12-17 02:54:16	cdunklau	cluelessperson: i suggest solving it simply first
2019-12-17 02:54:16	eck0	1st intcode one isn’t bad , the rest are wtf
2019-12-17 02:54:16	<--	_afx_ (~Thunderbi@5.180.62.43) has quit (Remote host closed the connection)
2019-12-17 02:54:16	grym	yoller: vscode edges out sublime at this point, which i'm kind of sad about, but it'll make sense real fast
2019-12-17 02:54:16	-->	sameerynho (~lxsameer@unaffiliated/lxsameer) has joined #python
2019-12-17 02:54:16	<--	afx_ (~Thunderbi@adsl-230.37.6.226.tellas.gr) has quit (Ping timeout: 268 seconds)
2019-12-17 02:54:16	-->	afx_ (~Thunderbi@5.180.62.43) has joined #python
2019-12-17 02:54:16	-->	rardiol (~quassel@177.52.226.158) has joined #python
2019-12-17 02:54:16	<--	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has quit (Remote host closed the connection)
2019-12-17 02:54:16	cluelessperson	nedbat, I've added myself. :)
2019-12-17 02:54:16	<--	tabaqui1 (~tabaqui@31.44.93.25) has quit (Quit: WeeChat 2.6)
2019-12-17 02:54:16	-->	Jerrynicki (~niklas@p200300F573C0F6003DB24683DF88A860.dip0.t-ipconnect.de) has joined #python
2019-12-17 02:54:16	yoller	has ayone python build system code for sublime
2019-12-17 02:54:16	cluelessperson	wut
2019-12-17 02:54:19	nedbat	yoller: lots of python people use sublime
2019-12-17 02:54:32	-->	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has joined #python
2019-12-17 02:54:40	-->	tabaqui1 (~tabaqui@31.44.93.25) has joined #python
2019-12-17 02:54:49	nedbat	cluelessperson: your self-deprecating manner notwithstanding, you seem to be doing fine in advent
2019-12-17 02:54:54	<--	definity (8ea77268@142.167.114.104) has quit (Remote host closed the connection)
2019-12-17 02:55:19	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 245 seconds)
2019-12-17 02:55:32	yoller	has ayone python build system code for sublime .... that can take input in terminal only as soon as i press build code
2019-12-17 02:56:07	nedbat	yoller: google around for advice on how to do python dev in sublime, i'm sure there are plugins to do what you need
2019-12-17 02:56:37	<--	codydh (uid373109@gateway/web/irccloud.com/x-gtkkpoobpogjsibp) has quit (Quit: Connection closed for inactivity)
2019-12-17 02:56:43	yoller	nedbat ... i have googled it but no working buld system code was found
2019-12-17 02:57:38	cluelessperson	nedbat, Thanks.  It depends on how I frame my approach.   So far the challenges have been very easy, if not occasionally tedious.  But it takes much longer to rewrite them repeatedly trying to make my code "perfect"
2019-12-17 02:58:05	-->	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has joined #python
2019-12-17 02:58:30	<--	halfbit (~tburdick@unaffiliated/submersive) has quit (Ping timeout: 246 seconds)
2019-12-17 02:59:20	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 02:59:20	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 02:59:20	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 02:59:21	--	Channel #python: 1754 nicks (0 ops, 0 voices, 1754 normals)
2019-12-17 02:59:25	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 02:59:45	yoller	at what time this channel is most active
2019-12-17 02:59:51	-->	gelignite (~gelignite@55d4d0ac.access.ecotel.net) has joined #python
2019-12-17 03:01:12	energizer	yoller: i dont think any of the channel regulars use sublime
2019-12-17 03:01:50	yoller	ok thanks
2019-12-17 03:02:18	matsaman	yoller: I'd say generally the network is most active about 7am to midnight UTC-5
2019-12-17 03:02:38	<--	afx_ (~Thunderbi@5.180.62.43) has quit (Quit: afx_)
2019-12-17 03:03:09	<--	pro_z (~pro_z@37.214.24.25) has quit (Ping timeout: 276 seconds)
2019-12-17 03:03:36	-->	afx_ (~Thunderbi@5.180.62.43) has joined #python
2019-12-17 03:04:40	yoller	matsaman: thanks
2019-12-17 03:04:49	nedbat	yoller: can you say more about what you need? "build" is a verb that is often missing from python, because you just run the .py files.
2019-12-17 03:05:29	-->	glow8 (~mario@132.116.221.87.dynamic.jazztel.es) has joined #python
2019-12-17 03:05:36	<--	afx_ (~Thunderbi@5.180.62.43) has quit (Client Quit)
2019-12-17 03:06:31	CrtxReavr	Lots of Python people use Sublime Text. . . not sure how many use full Sublime.
2019-12-17 03:06:34	<--	s00pcan (~chris@75-133-56-178.dhcp.trcy.mi.charter.com) has quit (Ping timeout: 245 seconds)
2019-12-17 03:06:38	yoller	while creating new build system generall we create a file name with sublime-build extension.......in that we enter some commands that runs as soon as we enter build
2019-12-17 03:06:51	yoller	more like this
2019-12-17 03:07:07	yoller	{ cmd: blah blah..... }
2019-12-17 03:07:21	-->	xrogaan (~xrogaan@unaffiliated/xrogaan) has joined #python
2019-12-17 03:07:48	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-17 03:07:49	<--	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 245 seconds)
2019-12-17 03:08:05	-->	afx_ (~Thunderbi@adsl-230.37.6.226.tellas.gr) has joined #python
2019-12-17 03:08:29	-->	s00pcan (~chris@104.254.90.83) has joined #python
2019-12-17 03:08:35	yoller	for c++ i use
2019-12-17 03:08:37	yoller	 {  "cmd": ["g++", "$file", "-o", "${file_path}/${file_base_name}"],  "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",  "working_dir": "${file_path}",  "selector": "source.c, source.c++, source.cxx, source.cpp",  "variants":  [      {          "name": "Run",          "shell": true,          "cmd": ["gnome-terminal -e 'bash -c
2019-12-17 03:08:38	yoller	\"${file_path}/${file_base_name};echo;echo;  echo Press ENTER to continue; read line;exit; exec bash\"'"]      }  ]}
2019-12-17 03:09:33	<--	sdu (~doo@80.107.19.194) has quit (Quit: leaving)
2019-12-17 03:10:32	nedbat	yoller: ok, and what do you want these commands to do?
2019-12-17 03:10:44	<--	rippa (~rippa@ppp-vpdn-37.1.85.157.yarnet.ru) has quit (Quit: {#`%${%&`+'${`%&NO CARRIER)
2019-12-17 03:10:47	nedbat	yoller: (btw, please show >1 line of code in a pastebin, not here)
2019-12-17 03:12:12	<--	MrNightmare (~MrNightma@otwaon0147w-lp130-01-64-231-70-62.dsl.bell.ca) has quit (Ping timeout: 268 seconds)
2019-12-17 03:12:21	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 248 seconds)
2019-12-17 03:12:53	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 03:12:53	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 03:12:53	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 03:12:53	--	Channel #python: 1752 nicks (0 ops, 0 voices, 1752 normals)
2019-12-17 03:12:58	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 03:13:21	<--	jim (~jim@about/linux/staff/jim) has quit (Remote host closed the connection)
2019-12-17 03:13:37	-->	halfbit (~tburdick@unaffiliated/submersive) has joined #python
2019-12-17 03:13:44	-->	wordsToLiveBy (~wordsToLi@unaffiliated/wordstoliveby) has joined #python
2019-12-17 03:13:46	-->	MrNightmare (~MrNightma@otwaon0147w-lp130-01-64-231-70-62.dsl.bell.ca) has joined #python
2019-12-17 03:14:02	-->	derk0pf (~derk0pf@p5B2E5D2F.dip0.t-ipconnect.de) has joined #python
2019-12-17 03:14:20	<--	yoller (6a4213ab@106.66.19.171) has quit (Ping timeout: 260 seconds)
2019-12-17 03:14:30	<--	otto_j (~otto_j@otto.hadiko.de) has quit (Quit: Gateway shutdown)
2019-12-17 03:15:30	-->	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has joined #python
2019-12-17 03:16:24	-->	prepend (~textual@198.246.100.83) has joined #python
2019-12-17 03:16:29	<--	sdoherty (sdoherty@nat/redhat/x-epsfxjqgpgrfleap) has quit (Remote host closed the connection)
2019-12-17 03:16:32	-->	Eleanor (~E@h77-53-169-12.cust.a3fiber.se) has joined #python
2019-12-17 03:17:31	-->	cowpacity (~kevin@2601:1c0:5300:470::ce0f) has joined #python
2019-12-17 03:17:48	-->	saxarba (~saxarba@104.238.58.94) has joined #python
2019-12-17 03:18:20	-->	ircuser-1 (~Johnny@69.62.183.158) has joined #python
2019-12-17 03:19:01	-->	jim (~jim@about/linux/staff/jim) has joined #python
2019-12-17 03:19:40	-->	LKoen (~LKoen@81.255.219.130) has joined #python
2019-12-17 03:20:05	-->	altab (~altab@37.165.200.238) has joined #python
2019-12-17 03:21:04	-->	arj15 (~arj15@185.47.223.198) has joined #python
2019-12-17 03:21:09	-->	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has joined #python
2019-12-17 03:21:10	<--	owlscientist (~owlscient@sburn/devel/name) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2019-12-17 03:21:28	<--	gloomy (~Gloomy@213.61.70.210) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 03:22:49	-->	Luke (~Luke@bitnomial/staff/luke) has joined #python
2019-12-17 03:22:53	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined #python
2019-12-17 03:23:01	-->	zyeri (~zyeri@tilde.team/users/zyeri) has joined #python
2019-12-17 03:24:11	-->	jonesy (~textual@70-91-15-1-panjde.hfc.comcastbusiness.net) has joined #python
2019-12-17 03:24:47	<--	sporkf (~jerry@50-76-125-141-static.hfc.comcastbusiness.net) has quit (Quit: Lost terminal)
2019-12-17 03:24:53	--	irc: disconnected from server
2019-12-17 03:25:25	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 03:25:25	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 03:25:25	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 03:25:25	--	Channel #python: 1764 nicks (0 ops, 0 voices, 1764 normals)
2019-12-17 03:25:39	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 03:26:25	-->	seds (~seds@2804:14d:baa0:949b:1d61:2eb4:b097:6dad) has joined #python
2019-12-17 03:26:41	-->	owlscientist (~owlscient@sburn/devel/name) has joined #python
2019-12-17 03:26:45	<--	esro (~esro@b00001.krakowskiinternet.pl) has quit (Quit: Leaving)
2019-12-17 03:26:56	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-17 03:26:57	-->	jarthur (~jarthur@207.114.244.5) has joined #python
2019-12-17 03:27:26	--	McDonaldsWiFi is now known as PublicWiFi
2019-12-17 03:27:54	-->	muhlinux (~muhlinux@45.12.220.250) has joined #python
2019-12-17 03:28:27	zq	poetry 1.0 cool
2019-12-17 03:29:20	energizer	yes!
2019-12-17 03:30:44	<--	edrocks (~ed@2603:9000:c900:1eeb:2c3e:3e04:4e6f:5385) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 03:30:47	-->	arij (uid225068@gateway/web/irccloud.com/x-hnhnxlalvchgswzx) has joined #python
2019-12-17 03:31:57	-->	AbedB (~AbedBhuty@bzq-79-176-25-145.red.bezeqint.net) has joined #python
2019-12-17 03:32:34	<--	Mr0rris0 (g@gateway/vpn/privateinternetaccess/mr0rris0) has quit (Read error: Connection reset by peer)
2019-12-17 03:32:39	-->	winston_ (~winston_@2a04:4540:6c12:5900:9fe0:d1f4:5d5a:e4f8) has joined #python
2019-12-17 03:33:08	-->	Beam_Inn_ (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has joined #python
2019-12-17 03:33:28	<--	jonesy (~textual@70-91-15-1-panjde.hfc.comcastbusiness.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 03:33:42	<--	bzdocha (~bzdocha__@adsl-dyn127.78-98-68.t-com.sk) has quit (Ping timeout: 250 seconds)
2019-12-17 03:33:42	<--	drymer_ (~drymer@unaffiliated/drymer) has quit (Read error: Connection reset by peer)
2019-12-17 03:35:15	<--	Beam_Inn (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has quit (Read error: Connection reset by peer)
2019-12-17 03:35:20	-->	ksft (~ksft@wikipedia/KSFT) has joined #python
2019-12-17 03:35:22	-->	drymer_ (~drymer@unaffiliated/drymer) has joined #python
2019-12-17 03:35:23	--	Beam_Inn_ is now known as Beam_Inn
2019-12-17 03:35:31	FunkyBob	I started a new project using poetry the other day... so far, no significant friction
2019-12-17 03:35:42	<--	iNs (~ins@gateway/tor-sasl/ins) has quit (Remote host closed the connection)
2019-12-17 03:36:02	-->	iNs (~ins@gateway/tor-sasl/ins) has joined #python
2019-12-17 03:36:03	-->	chewyDelicious (~nooblet@ip4d16fc78.dynamic.kabel-deutschland.de) has joined #python
2019-12-17 03:36:03	<--	_bart (~textual@12.52.67.99) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 03:36:44	<--	caglorithm (~caglorith@p4FED3B5E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-17 03:36:52	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 268 seconds)
2019-12-17 03:37:04	-->	Deknos (~some@unaffiliated/menace) has joined #python
2019-12-17 03:37:54	matsaman	I'm going to try Cummings' poetry fork today. Pretty intrigued.
2019-12-17 03:38:29	-->	caglorithm (~caglorith@p4FED3B5E.dip0.t-ipconnect.de) has joined #python
2019-12-17 03:39:27	<--	Ariakenom (~Ariakenom@h-158-174-186-131.NA.cust.bahnhof.se) has quit (Quit: Leaving)
2019-12-17 03:39:32	<--	shiroininja (shiroininj@gateway/vpn/privateinternetaccess/shiroininja) has quit (Quit: WeeChat 2.6)
2019-12-17 03:40:05	<--	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has quit (Quit: Leaving)
2019-12-17 03:40:07	<--	hostile (~hostile@adsl-41.176.58.193.tellas.gr) has quit (Quit: Leaving)
2019-12-17 03:40:29	grym	matsaman: i bet it's all lowercased
2019-12-17 03:40:33	grym	and with
2019-12-17 03:40:34	grym	odd
2019-12-17 03:40:34	grym	line
2019-12-17 03:40:36	grym	brea
2019-12-17 03:40:37	grym	ks
2019-12-17 03:41:48	<--	mikami (~scurfee@broadband-77-37-146-212.ip.moscow.rt.ru) has quit
2019-12-17 03:42:19	SnoopJeDi	poetry[shatner]
2019-12-17 03:42:21	matsaman	=D
2019-12-17 03:42:30	<--	unit37 (~IceChat9@173-31-162-74.client.mchsi.com) has quit (Quit: East bound and down, loaded up and truckin')
2019-12-17 03:42:54	<--	caglorithm (~caglorith@p4FED3B5E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-17 03:42:58	grym	(with up so floating many bells down)
2019-12-17 03:43:04	<--	Luke (~Luke@bitnomial/staff/luke) has quit (Quit: sleep)
2019-12-17 03:43:07	energizer	cumming should use black
2019-12-17 03:43:33	matsaman	black should have a cummings mode
2019-12-17 03:44:01	CrtxReavr	Clearly you know nothing about the author of black.
2019-12-17 03:44:21	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Ping timeout: 246 seconds)
2019-12-17 03:44:38	<--	pepee (~pepee@unaffiliated/pepee) has quit (Quit: pepee)
2019-12-17 03:44:57	matsaman	clearly
2019-12-17 03:45:09	grym	CrtxReavr: all 127 of them
2019-12-17 03:45:34	-->	caglorithm (~caglorith@p4FED3B5E.dip0.t-ipconnect.de) has joined #python
2019-12-17 03:45:38	-->	jonesy (~textual@70-91-15-1-panjde.hfc.comcastbusiness.net) has joined #python
2019-12-17 03:46:08	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 03:46:08	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 03:46:08	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:58
2019-12-17 03:46:08	--	Channel #python: 1760 nicks (0 ops, 0 voices, 1760 normals)
2019-12-17 03:46:12	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 03:46:27	-->	owenc_ (~owen@88-145-2-196.host.pobb.as13285.net) has joined #python
2019-12-17 03:46:50	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-17 03:47:07	<--	levi13 (~levi@p200300E1BF05A255B577A8A6E78739A4.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-17 03:47:28	CrtxReavr	Well for starters it's called "The Uncompromising Code Formatter."
2019-12-17 03:49:01	-->	Mr0rris0 (g@gateway/vpn/privateinternetaccess/mr0rris0) has joined #python
2019-12-17 03:49:01	<--	wreed (~wreed@ool-182f2441.dyn.optonline.net) has quit (Quit: Goodbye)
2019-12-17 03:50:12	-->	[itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) has joined #python
2019-12-17 03:50:18	CrtxReavr	grym, I was referring to Lukasz.
2019-12-17 03:50:45	<--	owenc_ (~owen@88-145-2-196.host.pobb.as13285.net) has quit (Ping timeout: 248 seconds)
2019-12-17 03:50:58	CrtxReavr	There may have been some contributions to the software, but from what I understand, there's no contributing to the formatting standard.
2019-12-17 03:51:18	grym	i'm kind of lost now
2019-12-17 03:51:38	<--	Elodin (~weechat@unaffiliated/padawan) has quit (Ping timeout: 252 seconds)
2019-12-17 03:52:01	-->	legola (~legola@unaffiliated/legola) has joined #python
2019-12-17 03:52:07	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-17 03:52:11	cluelessperson	I think that applications should implement "translation" interfaces
2019-12-17 03:52:21	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 248 seconds)
2019-12-17 03:52:27	cluelessperson	for example, I find it annoying that in linux, different cli applications have different words or "uninstall"
2019-12-17 03:52:39	grym	cluelessperson: naming things is the hard thing, yes
2019-12-17 03:52:46	-->	Xaldafax (~Xaldafax@cpe-104-34-193-119.socal.res.rr.com) has joined #python
2019-12-17 03:52:58	grym	and cache invalidation, canonicallyh
2019-12-17 03:53:00	--	irc: disconnected from server
2020-05-22 23:17:00	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-22 23:17:00	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-22 23:17:00	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-22 23:17:01	--	Channel #python: 1906 nicks (0 ops, 0 voices, 1906 normals)
2020-05-22 23:17:02	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-22 23:17:15	tompaw	damn, it worked
2020-05-22 23:17:23	tompaw	supakeen thanks ;D
2020-05-22 23:17:34	<--	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has quit (Ping timeout: 272 seconds)
2020-05-22 23:17:36	-->	dude-x (~dude-x@pool-100-35-43-218.nwrknj.fios.verizon.net) has joined #python
2020-05-22 23:17:45	supakeen	:)
2020-05-22 23:17:48	<--	psachin (~psachin@103.51.234.94) has quit (Ping timeout: 265 seconds)
2020-05-22 23:18:17	tompaw	soo... wait. at this point, the calls list, what is a type of its element? a "called async function"??
2020-05-22 23:18:39	supakeen	Each element in the list is a <coroutine>, it's what you get when you call an `async def ...`.
2020-05-22 23:18:49	<--	Adbray (~Adbray@2600:6c48:6f7f:d764:1d76:2d1d:aedd:87d4) has quit (Disconnected by services)
2020-05-22 23:18:54	-->	Adbray_ (~Adbray@2600:6c48:6f7f:d764:1d76:2d1d:aedd:87d4) has joined #python
2020-05-22 23:18:56	supakeen	coroutines can be ran themselves, for example by awaiting them or stuffing them in asyncio.gather
2020-05-22 23:18:56	<--	KindOne (kindone@freenode/father-christmas/kindone) has quit (Ping timeout: 258 seconds)
2020-05-22 23:19:05	tompaw	ah, that's the part that confused me
2020-05-22 23:19:10	<--	gandalfdwite (~gandalfdw@49.205.220.210) has quit (Remote host closed the connection)
2020-05-22 23:19:13	-->	throsturx (~throstur@unaffiliated/throstur) has joined #python
2020-05-22 23:19:13	tompaw	if I just call() a coroutine it doesn't execute it
2020-05-22 23:19:17	supakeen	Correct.
2020-05-22 23:19:35	supakeen	The scheduling/running happens when you await it or put it on the event loop in another way (such as gather, etc)
2020-05-22 23:19:47	supakeen	Now some things do have silly APIs like they want a callable that returns a coroutine.
2020-05-22 23:19:52	supakeen	But not this one :)
2020-05-22 23:20:22	<--	mr_sm1th (~mr_sm1th@2001:1c01:3dca:5700:8c26:7412:cbfe:d28c) has quit (Remote host closed the connection)
2020-05-22 23:20:36	-->	wordsToLiveBy (~wordsToLi@unaffiliated/wordstoliveby) has joined #python
2020-05-22 23:20:37	<--	mattmurr (~mattmurr@185.210.219.244) has quit (Max SendQ exceeded)
2020-05-22 23:20:53	tompaw	makes perfect sense. just weird, as [foo()] could mean two completely different things
2020-05-22 23:20:58	-->	psachin (~psachin@103.51.234.101) has joined #python
2020-05-22 23:20:58	tompaw	need to get used to it
2020-05-22 23:20:58	-->	mattmurr (~mattmurr@185.210.219.244) has joined #python
2020-05-22 23:21:09	dTal	anyone wanna lend me a second pair of eyes? I have the strangest problem
2020-05-22 23:21:10	dTal	https://paste.debian.net/1148313/
2020-05-22 23:21:37	-->	KindOne (kindone@freenode/father-christmas/kindone) has joined #python
2020-05-22 23:21:40	supakeen	What is the problem?
2020-05-22 23:21:42	-->	Beanzilla (~Beanzilla@unaffiliated/beanzilla) has joined #python
2020-05-22 23:21:55	dTal	I'm just trying to edit a templated file. The print statements correctly output the "before" and "after" versions of the file, but the file remains unmodified on disk.
2020-05-22 23:22:11	-->	__stranac__ (~stranac@93-141-143-133.adsl.net.t-com.hr) has joined #python
2020-05-22 23:22:11	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-22 23:22:24	<--	throsturt (~throstur@unaffiliated/throstur) has quit (Ping timeout: 240 seconds)
2020-05-22 23:22:32	-->	TimeTrap (~TimeTrap@2601:44:c280:def:cdbd:8403:9afb:7ecd) has joined #python
2020-05-22 23:23:01	-->	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has joined #python
2020-05-22 23:23:09	tompaw	whoa. asyncio is like 8x slower than threading
2020-05-22 23:23:17	dTal	I use an identical formulation elsewhere in the code, and of course it works as expected
2020-05-22 23:23:19	supakeen	tompaw: It depends on the workload.
2020-05-22 23:23:20	<--	lizzin (~lizzin@unaffiliated/lizzin) has quit (Ping timeout: 260 seconds)
2020-05-22 23:23:22	<--	kosh (~kosh@p200300d08f0d6000bc1bd3b324cd725b.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-05-22 23:23:31	tompaw	or probably me misusing the asyncio.sleep()
2020-05-22 23:23:45	dTal	I must have done something dumb but I cannot for life of me see it
2020-05-22 23:23:50	supakeen	dTal: Most likely something finicky is going on with a re-used file object and its offset, toy around with `.offset` and `.seek`.
2020-05-22 23:23:58	supakeen	I have to have dinner so if you're still stuck later I'll take a look.
2020-05-22 23:24:04	<--	throsturx (~throstur@unaffiliated/throstur) has quit (Ping timeout: 256 seconds)
2020-05-22 23:24:09	dTal	I thought "with" was supposed to take care of all that
2020-05-22 23:24:18	supakeen	Same.
2020-05-22 23:24:20	--	Skeer is now known as Skeer_Away
2020-05-22 23:24:32	dTal	(That's why I threw in "f.close()"
2020-05-22 23:24:36	-->	causasui (~causasui@wikipedia/causa-sui) has joined #python
2020-05-22 23:25:03	<--	aasutosh (~aa@27.34.68.84) has quit (Ping timeout: 265 seconds)
2020-05-22 23:25:34	--	Skeer_Away is now known as Skeer
2020-05-22 23:25:42	<--	canarts (~stranac@m90-137-139-43.cust.tele2.hr) has quit (Ping timeout: 256 seconds)
2020-05-22 23:25:46	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-22 23:26:41	tompaw	supakeen it's a DB stress tester, fairly straight forward: https://bpa.st/IKNA
2020-05-22 23:26:50	dTal	I changed the name of the file objects for kicks, "f1", "f2" etc, and the problem persists
2020-05-22 23:26:53	-->	aasutosh (~aa@27.34.68.84) has joined #python
2020-05-22 23:27:13	-->	Guest20 (~textual@115.110.205.84) has joined #python
2020-05-22 23:27:25	tompaw	the threading version can hit 400 batches/sec. asyncio caps at 50.
2020-05-22 23:28:29	-->	DeadTOm (~deadtom@174-045-073-016.res.spectrum.com) has joined #python
2020-05-22 23:28:32	tompaw	I wonder... for this whole thing to make sense... my run_query should also be async, no?
2020-05-22 23:28:34	-->	dethos (~dethos@213.190.211.160) has joined #python
2020-05-22 23:28:36	dTal	I added a "sleep(1)" between the calls to open(), and the problem persists
2020-05-22 23:28:55	tompaw	otherwise it's just the asyncio.sleep that's "run" in parallel?
2020-05-22 23:30:22	-->	Gerula (~Gerula@unaffiliated/gerula) has joined #python
2020-05-22 23:30:29	tompaw	I'm pretty sure that's it. gonna google async pyodbc.
2020-05-22 23:31:25	tompaw	"Note that ODBC async mode is not supported by all drivers, and modifying pyODBC to allow using those that do would be nontrivial."
2020-05-22 23:31:39	tompaw	sigh... celery it is I guess...
2020-05-22 23:31:53	-->	Sathiana (~kath@c188-148-238-78.bredband.comhem.se) has joined #python
2020-05-22 23:33:39	-->	QBic (~kvirc@125.183.35.183) has joined #python
2020-05-22 23:33:41	<--	Speeder_ (~Speeder@2804:14d:ac83:4f59:3127:d070:5951:bcc8) has quit (Ping timeout: 272 seconds)
2020-05-22 23:33:44	dTal	Even weirder. I changed the template file to "measure.template" and the target file "measure" was created... empty
2020-05-22 23:33:46	<--	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has quit (Quit: fission6)
2020-05-22 23:35:14	-->	Gudddu (~Guddu@unaffiliated/guddu) has joined #python
2020-05-22 23:35:29	-->	Speeder (~Speeder@2804:14d:ac83:4f59:3127:d070:5951:bcc8) has joined #python
2020-05-22 23:36:57	<--	Lando-SpacePimp (~Lando@unaffiliated/lando-spacepimp) has quit (Ping timeout: 258 seconds)
2020-05-22 23:38:14	tompaw	ChrisWarrick are you still here? you suggested I use asyncio rather than threading for DB calls, but it looks like there's hardly any support for asyncio and odbc
2020-05-22 23:38:29	<--	Guddu (~Guddu@unaffiliated/guddu) has quit (Ping timeout: 258 seconds)
2020-05-22 23:38:31	tompaw	so maybe threading + celery would be a better option?
2020-05-22 23:38:35	ChrisWarrick	tompaw: google found aioodbc
2020-05-22 23:38:45	ChrisWarrick	tompaw: why celery?
2020-05-22 23:38:48	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Ping timeout: 256 seconds)
2020-05-22 23:38:53	<--	psachin (~psachin@103.51.234.101) has quit (Ping timeout: 260 seconds)
2020-05-22 23:39:12	tompaw	ChrisWarrick that's exactly what I was looking at and they're saying it's buggy as hell with sql server.
2020-05-22 23:39:57	tompaw	ChrisWarrick I was thinking this: find the max number of threads per 1 cpu, say 50 agents, where it caps.
2020-05-22 23:40:16	<--	Mulugruntz (~Mulugrunt@37.120.210.92) has quit (Quit: ZZZzzz…)
2020-05-22 23:40:17	tompaw	then spawn 8 celery workers, each running those 50 threads
2020-05-22 23:40:29	ChrisWarrick	tompaw: what is your end goal?
2020-05-22 23:40:52	--	irc: disconnected from server
2020-05-22 23:44:51	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-22 23:44:51	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-22 23:44:51	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-22 23:44:52	--	Channel #python: 1907 nicks (0 ops, 0 voices, 1907 normals)
2020-05-22 23:44:54	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-22 23:44:57	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 260 seconds)
2020-05-22 23:44:58	tompaw	ChrisWarrick: with the existing setup, we measure the sql load vs IIS load, and sql maxes out while IIS is chilling at 2%. this tells me that SQL is the key player here.
2020-05-22 23:45:13	tompaw	(by "measure" I mean "observe actual use")
2020-05-22 23:45:43	tompaw	I captured the queries using a sql profiler, put them in a .py app and now I want to batter the new sql server with them.
2020-05-22 23:46:45	-->	stonks7903 (~stonks790@pool-173-73-14-112.washdc.fios.verizon.net) has joined #python
2020-05-22 23:47:05	<--	diogenese (~diogenese@diogenese.velotech.net) has quit (Quit: Has anybody seen the bridge?)
2020-05-22 23:47:29	tompaw	I'll try the aioodbc, it seems to be a drop-in replacement.
2020-05-22 23:47:36	-->	diogenese (~diogenese@diogenese.velotech.net) has joined #python
2020-05-22 23:47:50	--	irc: disconnected from server
2020-05-22 23:48:03	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-22 23:48:03	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-22 23:48:03	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-22 23:48:03	--	Channel #python: 1907 nicks (0 ops, 0 voices, 1907 normals)
2020-05-22 23:48:04	-->	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has joined #python
2020-05-22 23:48:06	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-22 23:48:36	<--	Xiti (~Xiti-@unaffiliated/xiti) has quit (Ping timeout: 272 seconds)
2020-05-22 23:48:46	--	irc: disconnected from server
2020-05-22 23:49:29	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-22 23:49:29	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-22 23:49:29	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-22 23:49:29	--	Channel #python: 1909 nicks (0 ops, 0 voices, 1909 normals)
2020-05-22 23:49:31	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-22 23:50:13	-->	renich (~renich@189.192.133.251) has joined #python
2020-05-22 23:50:19	-->	P1ro (~quassel@gentoo/user/p1ro) has joined #python
2020-05-22 23:50:32	<--	audioburn (~audioburn@unaffiliated/theology) has quit (Ping timeout: 260 seconds)
2020-05-22 23:50:34	<--	gobostone (~Ace@174-16-168-254.hlrn.qwest.net) has quit (Read error: Connection reset by peer)
2020-05-22 23:50:42	-->	canarts (~stranac@m90-137-139-43.cust.tele2.hr) has joined #python
2020-05-22 23:50:56	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-22 23:51:01	-->	gobostone (~Ace@174-16-168-254.hlrn.qwest.net) has joined #python
2020-05-22 23:52:02	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-22 23:52:06	theseb	hi
2020-05-22 23:52:46	theseb	Can i ask how much fast pypy is over CPython and if/when it will replace CPython everywhere like is major linux distros?
2020-05-22 23:52:56	theseb	s/is/in
2020-05-22 23:53:02	<--	psachin (~psachin@103.51.234.125) has quit (Ping timeout: 272 seconds)
2020-05-22 23:53:03	<--	burningserenity (burningser@gateway/vpn/privateinternetaccess/burningserenity) has quit (Remote host closed the connection)
2020-05-22 23:53:11	bjs	theseb: a lot and maybe never
2020-05-22 23:53:38	theseb	bjs: wait..if it is faster/better/more wonderful/magical/lalala....why isn't it taking over?
2020-05-22 23:53:53	bjs	theseb: nobody said it was better, more wonderful and magical
2020-05-22 23:53:59	ChrisWarrick	pypy is compatible with python 3.6 right now
2020-05-22 23:54:20	P1ro	hi, im trying to remove duplicate ips but still getting duplicated ips, here is what im trying so far: https://bpa.st/PPVA
2020-05-22 23:54:21	ChrisWarrick	and there are things that pypy isn’t compatible with
2020-05-22 23:54:24	bjs	theseb: it's certainly faster.  But it's far behind,  it doesn't have as much support,  it's not as universally compatible with libraries as CPython is,  and CPython has existed longer
2020-05-22 23:54:25	altendky	and requires cpython c-api packages to get special support in various cases to work at all
2020-05-22 23:54:29	<--	chele (~chele@ip5b413b52.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-05-22 23:54:32	<--	__stranac__ (~stranac@93-141-143-133.adsl.net.t-com.hr) has quit (Ping timeout: 265 seconds)
2020-05-22 23:55:11	altendky	pyside2 decided for example that pypy support was a thing to consider after they had already developed the whole library...  *sigh*
2020-05-22 23:55:11	ChrisWarrick	P1ro: You create a new list and set on every iteration.
2020-05-22 23:55:16	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-22 23:55:31	supakeen	P1ro: You're continually making a new list and set every time, define the list before the loop and the set after (or skip the list).
2020-05-22 23:55:34	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 272 seconds)
2020-05-22 23:55:35	-->	kosh (~kosh@p200300d08f0d6000bc1bd3b324cd725b.dip0.t-ipconnect.de) has joined #python
2020-05-22 23:56:00	-->	Forsaken87 (~quassel@2a02:908:186c:a6a0:c121:c8f9:5ae8:2899) has joined #python
2020-05-22 23:56:12	<--	codingthings (~codingthi@ool-182ec1d7.dyn.optonline.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-22 23:56:46	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-05-22 23:56:49	P1ro	supakeen, ChrisWarrick if i dont create the list ill get output like this: {'0', '.', '1', '2', '5', '3'}
2020-05-22 23:56:50	theseb	bjs: "far behind"...*sigh*....you'd think in all this time it would have caught up
2020-05-22 23:57:03	-->	codingthings (~codingthi@ool-182ec1d7.dyn.optonline.net) has joined #python
2020-05-22 23:57:03	bjs	theseb: that's only a fair statement if CPython stood still :)
2020-05-22 23:57:09	ChrisWarrick	theseb: contributions are welcome
2020-05-22 23:57:20	<--	audiofile (~notanaudi@unaffiliated/audiofile) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-05-22 23:57:24	<--	stonks7903 (~stonks790@pool-173-73-14-112.washdc.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2020-05-22 23:57:24	<--	rns (~rns@c-69-180-72-207.hsd1.fl.comcast.net) has quit (Read error: Connection reset by peer)
2020-05-22 23:57:32	ChrisWarrick	P1ro: create one (empty) set and add to it
2020-05-22 23:57:32	bjs	theseb: also PyPy pretty much by definition has to be behind CPython
2020-05-22 23:57:40	bjs	because CPython is the reference implementation, it gets things first.
2020-05-22 23:57:48	theseb	bjs: ok...so as long as someone doesn't need the latest/greatest features, they should use pypy in anger to turbo their work
2020-05-22 23:57:53	<--	Codaraxis (~Codaraxis@ip68-5-90-227.oc.oc.cox.net) has quit (Remote host closed the connection)
2020-05-22 23:58:01	-->	rns (~rns@196.247.50.36) has joined #python
2020-05-22 23:58:10	ChrisWarrick	theseb: there are use-cases where pypy does not work or does not speed up by much
2020-05-22 23:58:19	bjs	theseb: so long as someone doesn't want an up to date version of Python,  they're not using 3rd party libraries or features incompatible with pypy and they really only care about speed then yes
2020-05-22 23:58:40	P1ro	ChrisWarrick: let em try it
2020-05-22 23:58:40	-->	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2020-05-22 23:58:45	-->	Codaraxis (~Codaraxis@ip68-5-90-227.oc.oc.cox.net) has joined #python
2020-05-22 23:58:51	bjs	theseb: in the end if all people cared about was speed then they'd not be using Python at all :)
2020-05-22 23:59:02	theseb	bjs: good point ;)
2020-05-22 23:59:09	bjs	theseb: so it's harder for a compiler like PyPy to even start to gain traction.  The fact it has is just a testament to how much faster it is
2020-05-22 23:59:12	theseb	bjs: or doing c extensions of their bottlenecks
2020-05-22 23:59:17	ChrisWarrick	theseb: well-written numpy code should be ultra fast with cpython, because it does all its calculation in vectorized C
2020-05-23 00:00:00	theseb	ChrisWarrick: what are some cases when it does not work?
2020-05-23 00:00:14	Ninpo	I often reach for pypy, there's not a _lot_ I run into issues wise with the 3.6 compatible version
2020-05-23 00:00:28	-->	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has joined #python
2020-05-23 00:00:29	Ninpo	but some C libs are slower because they don't use cffi
2020-05-23 00:00:33	Ninpo	e.g. mysqlclient
2020-05-23 00:00:36	-->	psachin (~psachin@103.51.234.155) has joined #python
2020-05-23 00:00:37	Ninpo	pymysql ends up faster
2020-05-23 00:00:45	<--	gelignite (~gelignite@55d4e777.access.ecotel.net) has quit (Quit: Stay safe! Stay at home! Stop the chain reaction!)
2020-05-23 00:01:28	tompaw	yup, aioodbc doesn't work with sql server. back to threading :-(
2020-05-23 00:02:11	Ninpo	tompaw: A good while ago I wrote a tool that queried SQL concurrently making use of trio+pymysql+sqlalchemy+sqlalchemy_aio
2020-05-23 00:02:31	Ninpo	if there's a drop in replacement for sql server that'll work with that (replace pymysql) it might help?
2020-05-23 00:02:58	setuid	I found a module called 'pythontail' that tails a log (even on Windows, very straightforward). What's the best way to take that and tail for specific strings, without having to recreate what it's doing with my own seek()/tell() functions?
2020-05-23 00:02:59	tompaw	Ninpo: I have to use literal queries, because I'm mimicking an actual app behavior. alchemy builds its own queries, no?
2020-05-23 00:03:01	ChrisWarrick	tompaw: as mentioned before, there are libraries which do not work with pypy
2020-05-23 00:03:20	-->	gandalfdwite (~gandalfdw@49.205.220.210) has joined #python
2020-05-23 00:03:20	ChrisWarrick	theseb: as mentioned before, there are libraries which do not work with pypy
2020-05-23 00:03:25	ChrisWarrick	tompaw: sorry, tabfail
2020-05-23 00:03:35	Ninpo	tompaw: stick with core and you can either write your queries as methods, or just stick them in text() methods and pass in whatever SQL you want
2020-05-23 00:03:36	tompaw	no worries, I was scratching my head a bit lol
2020-05-23 00:03:51	-->	cow0w_ (~cow0w@unaffiliated/cow0w) has joined #python
2020-05-23 00:03:58	tompaw	Ninpo in your example, you're still confined to 1 CPU, yes?
2020-05-23 00:04:01	Ninpo	tompaw: my app slung a mix of method chains building queries and straight up literals
2020-05-23 00:04:11	ChrisWarrick	tompaw: re the sql thing… before reaching for celery, I would try the multiprocessing module. Usually considered a blashpemy in this channel, but if you’re just doing stress testing, it might happen to work
2020-05-23 00:04:29	<--	sdoherty (~sdoherty@pool-100-0-19-58.bstnma.fios.verizon.net) has quit (Quit: Leaving)
2020-05-23 00:04:32	-->	alx13 (uid440583@gateway/web/irccloud.com/x-wpjhagggdxzbpzbc) has joined #python
2020-05-23 00:04:35	-->	CodePoint (~CodePoint@99-89-92-208.lightspeed.tukrga.sbcglobal.net) has joined #python
2020-05-23 00:04:37	tompaw	I'm agnostic, don't care about what gods think.
2020-05-23 00:04:45	Ninpo	tompaw: not necessarily. The main thread did a lot of aio work and I pounded data with subprocesses
2020-05-23 00:04:50	theseb	ChrisWarrick: multiprocessing module isn't getting universal love? i thought it was wonderful
2020-05-23 00:05:15	Ninpo	concurrent.futures.ProcessPool :P
2020-05-23 00:05:26	ChrisWarrick	theseb: in general, it’s terrible
2020-05-23 00:05:31	Ninpo	I'm a fan of controlling subprocess groups with trio myself
2020-05-23 00:05:35	-->	oncall-pokemon (uid134758@gateway/web/irccloud.com/x-sjhuxtzxyqwfffac) has joined #python
2020-05-23 00:06:20	theseb	ChrisWarrick: you simply do a map over all your data....and you automagically get parallelism....what's not to love?
2020-05-23 00:06:27	ChrisWarrick	theseb: pickle
2020-05-23 00:06:35	ChrisWarrick	theseb: it tries to be too magical
2020-05-23 00:06:38	-->	prit (uid382930@gateway/web/irccloud.com/x-htufptepjcvrhvve) has joined #python
2020-05-23 00:06:58	<--	cow0w (~cow0w@unaffiliated/cow0w) has quit (Ping timeout: 272 seconds)
2020-05-23 00:07:02	Ninpo	Pickle is why I try and make the things I want to kick into other processes callable via subprocess
2020-05-23 00:07:29	bjs	theseb: also processes aren't magic, automatic parallelism like that can sometimes be slower and it often goes wrong
2020-05-23 00:07:38	Ninpo	(largely my own limitation as I hate trying to remember what can and can't be pickled)
2020-05-23 00:07:48	bjs	theseb: the COW kills a lot of things :)
2020-05-23 00:08:01	bjs	especially in a reference counting interpreter :(
2020-05-23 00:08:13	theseb	bjs: i know about the GIL but not the "COW" ;)
2020-05-23 00:08:45	<--	zarjg (b2319abc@178.49.154.188) has quit (Remote host closed the connection)
2020-05-23 00:08:45	bjs	theseb: COW or Copy-On-Write is a standard part of the UNIX processes API,  when you fork() to get a child process you get a whole new address space that is a copy of the parent one
2020-05-23 00:08:55	bjs	theseb: whenever you try access something,  it has to copy it :)
2020-05-23 00:08:59	-->	devanshbatra04 (6746a57b@103.70.165.123) has joined #python
2020-05-23 00:09:02	<--	P1ro (~quassel@gentoo/user/p1ro) has quit (Ping timeout: 246 seconds)
2020-05-23 00:09:06	jwhisnant	theseb: cowsay dont use multiprocessing :)
2020-05-23 00:09:11	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 260 seconds)
2020-05-23 00:09:29	bjs	(there are ways around it but generally copy-on-write is the semantics you get)
2020-05-23 00:09:36	-->	KindTwo (kindone@freenode/father-christmas/kindone) has joined #python
2020-05-23 00:10:35	<--	ThePortWhisperer (~ThePortWh@unaffiliated/theportwhisperer) has quit (Ping timeout: 264 seconds)
2020-05-23 00:11:03	<--	KindOne (kindone@freenode/father-christmas/kindone) has quit (Ping timeout: 272 seconds)
2020-05-23 00:11:17	-->	mplavsic (~mplavsic@213.144.151.202) has joined #python
2020-05-23 00:12:12	-->	RangerBob (~brian@pool-173-72-244-228.clppva.fios.verizon.net) has joined #python
2020-05-23 00:13:22	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 00:13:26	-->	jamiejackson (cfac5722@gateway/web/cgi-irc/kiwiirc.com/ip.207.172.87.34) has joined #python
2020-05-23 00:13:58	--	Skeer is now known as Skeer_Away
2020-05-23 00:14:17	<--	zebrag (~inkbottle@aaubervilliers-654-1-297-54.w86-198.abo.wanadoo.fr) has quit (Quit: Konversation terminated!)
2020-05-23 00:14:26	-->	sublade (~anonymous@31.132.35.96) has joined #python
2020-05-23 00:14:39	-->	zebrag (~inkbottle@aaubervilliers-654-1-297-54.w86-198.abo.wanadoo.fr) has joined #python
2020-05-23 00:15:25	-->	ponyride1 (~ponyrider@unaffiliated/ponyrider) has joined #python
2020-05-23 00:15:25	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 00:15:26	<--	ponyrider (~ponyrider@unaffiliated/ponyrider) has quit (Read error: Connection reset by peer)
2020-05-23 00:16:27	-->	KindOne (kindone@freenode/father-christmas/kindone) has joined #python
2020-05-23 00:17:50	<--	KindTwo (kindone@freenode/father-christmas/kindone) has quit (Ping timeout: 256 seconds)
2020-05-23 00:18:15	<--	snails (~snails@pool-96-248-97-17.cmdnnj.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 00:18:15	grym	theseb: i normally get slammed by how fat a worker is with multiprocessing.  and fretting about what in my workers are not picklable is deeply annoying
2020-05-23 00:18:22	<--	psachin (~psachin@103.51.234.155) has quit (Ping timeout: 272 seconds)
2020-05-23 00:19:33	-->	jarthur (~jarthur@2605:6000:1019:4971:84c9:79ce:8982:d224) has joined #python
2020-05-23 00:19:36	<--	Laniakea (~Laniakea@2.30.100.73) has quit (Ping timeout: 256 seconds)
2020-05-23 00:19:47	theseb	grym: that's too bad
2020-05-23 00:19:59	theseb	too bad that multiprocessing isn't magic that is
2020-05-23 00:20:11	grym	theseb: the parallel story in python isn't great
2020-05-23 00:20:12	grym	imo
2020-05-23 00:20:21	mefistofeles	hey, trying to extract a float/decimal number from a string, I tried with https://bpa.st/K4OA but it doesn't work (it gives false). Any ideas on how to do this?
2020-05-23 00:20:30	-->	rns_ (~rns@c-69-180-72-207.hsd1.fl.comcast.net) has joined #python
2020-05-23 00:21:20	-->	multifractal (~multifrac@host-92-2-120-196.as43234.net) has joined #python
2020-05-23 00:21:26	-->	detseg (~segv@71-147-44-107.lightspeed.livnmi.sbcglobal.net) has joined #python
2020-05-23 00:21:29	-->	jay-m_ (~jay-m@129.0.205.80) has joined #python
2020-05-23 00:21:46	telemachus	mefistofeles:  float()
2020-05-23 00:21:54	<--	xcm (~xcm@ipd114.250.tellas.gr) has quit (Remote host closed the connection)
2020-05-23 00:21:57	graingert	subinterpreters
2020-05-23 00:21:59	-->	MightyJoe (~joe@189.158.139.123) has joined #python
2020-05-23 00:22:05	-->	Xiti (~Xiti-@unaffiliated/xiti) has joined #python
2020-05-23 00:22:05	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 00:22:14	mefistofeles	telemachus: yes, manually casting could work, but for example what happens if I have "0.12312N" and I want to extract the 0.12312 part
2020-05-23 00:22:27	-->	xcm (~xcm@ipd114.250.tellas.gr) has joined #python
2020-05-23 00:22:35	<--	edlinde (~edlinde@183.83.146.78) has quit (Quit: edlinde)
2020-05-23 00:23:03	telemachus	mefistofeles:  This happens "ValueError: invalid literal for float(): 1.23N"
2020-05-23 00:23:04	telemachus	:)
2020-05-23 00:23:06	--	Skeer_Away is now known as Skeer
2020-05-23 00:23:23	<--	cyraxjoe (~joe@CableLink-187-161-5-13.PCs.InterCable.net) has quit (Ping timeout: 246 seconds)
2020-05-23 00:23:25	mefistofeles	telemachus: yeah, I mean, how to extract just the number in that case?
2020-05-23 00:23:28	telemachus	try...except ValueError and try again? Sorry, I didn't know if you were unaware of float or had other specifications, lol
2020-05-23 00:23:32	<--	rns (~rns@196.247.50.36) has quit (Ping timeout: 265 seconds)
2020-05-23 00:23:39	mefistofeles	telemachus: no worries, thanks anyways
2020-05-23 00:23:51	mefistofeles	it may be enough with float, but I want to get all these other cases
2020-05-23 00:23:58	mefistofeles	but yeah, a try-except may do it
2020-05-23 00:24:15	telemachus	mefistofeles:  Do you have any control (or knowledge) of the range of inputs?
2020-05-23 00:24:32	mefistofeles	telemachus: it's from a 3rd party app in some log file, so not really
2020-05-23 00:24:38	telemachus	If not, then I suppose you could use a regex to carve away the numeric portion, but that seems pretty error prone...
2020-05-23 00:25:10	telemachus	Someone else may know better. Presumably there's a library that provides something more robust than rolling your own...
2020-05-23 00:25:22	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 00:25:53	-->	AbedB (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has joined #python
2020-05-23 00:26:01	-->	GeekOfflineNL (~GeekOffli@2001:1c03:540c:4000:c12b:ffdf:2e56:9307) has joined #python
2020-05-23 00:26:11	<--	Xiti` (~Xiti-@unaffiliated/xiti) has quit (Ping timeout: 264 seconds)
2020-05-23 00:26:51	<--	sharktamer (~sharktame@cpc157207-watf11-2-0-cust5.15-2.cable.virginm.net) has quit (Read error: Connection reset by peer)
2020-05-23 00:27:16	-->	eukreign (~lex@64.223.173.35) has joined #python
2020-05-23 00:27:27	<--	hd1 (4c5b0bf5@gateway/web/cgi-irc/kiwiirc.com/ip.76.91.11.245) has quit (Quit: Connection closed)
2020-05-23 00:27:49	-->	PhizzyNoodlePie (~phillip@77.44.49.73) has joined #python
2020-05-23 00:27:56	-->	sharktamer (~sharktame@cpc157207-watf11-2-0-cust5.15-2.cable.virginm.net) has joined #python
2020-05-23 00:27:58	eukreign	calling `asyncio.create_task()` is taking longer than 0.1 seconds, any tips on debugging this or trying to figure out what could be causing the slow down?
2020-05-23 00:28:16	graingert	eukreign: just the call?
2020-05-23 00:28:17	Ninpo	eukreign: share the code and how you pinned it to that exact line?
2020-05-23 00:28:33	eukreign	yes, specifically `tasks.Task(coro, loop=self)` inside of `asyncio.create_task()`
2020-05-23 00:28:34	telemachus	mefistofeles: e.g., numpy provides .fromstring that returns an array of numbers found in a string
2020-05-23 00:28:34	graingert	asyncio.create_task(coroutinefunction())
2020-05-23 00:28:43	-->	troulouliou_div2 (~troulouli@unaffiliated/troulouliou-div2/x-0271439) has joined #python
2020-05-23 00:28:44	<--	veek (~veek@unaffiliated/veek) has quit (Quit: Leaving)
2020-05-23 00:29:14	graingert	eukreign: is it slow for say
2020-05-23 00:29:15	graingert	async def noop(): return None
2020-05-23 00:29:15	graingert	asyncio.create_task(noop())
2020-05-23 00:29:35	eukreign	https://bpa.st/CV3Q
2020-05-23 00:29:52	graingert	yeah I know what the python source is
2020-05-23 00:30:06	eukreign	i set breakpoint on line 13
2020-05-23 00:30:13	eukreign	and it's hit sometimes
2020-05-23 00:30:18	mefistofeles	telemachus: oh, that looks promising, will check that one
2020-05-23 00:30:21	mefistofeles	thanks
2020-05-23 00:30:21	-->	_alguien_ (~MA2G1@62.117.236.175.dyn.user.ono.com) has joined #python
2020-05-23 00:30:28	eukreign	i tried stepping into Task() but doesn't work well, i guess that's written in C?
2020-05-23 00:30:56	eukreign	`return None` would make it that slow?
2020-05-23 00:31:14	graingert	eukreign: it's probably something in your coro that's slow
2020-05-23 00:31:16	graingert	not cpython
2020-05-23 00:31:23	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 00:31:38	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 00:31:57	-->	mnx (~mnx@unaffiliated/suggarmouth) has joined #python
2020-05-23 00:32:01	eukreign	this is the coro: async def printer(m): print(m)
2020-05-23 00:32:15	graingert	so print is blocking IO
2020-05-23 00:32:27	graingert	what do you pass as m?
2020-05-23 00:32:34	-->	AbedB_ (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has joined #python
2020-05-23 00:32:45	eukreign	if i make the coro blocking (by adding time.sleep()) i get a different message from asyncio, saying that that method is slow
2020-05-23 00:32:48	graingert	eukreign: can you repeat the slowness with my noop async def?
2020-05-23 00:32:48	-->	cthulchu (~Cthulchu@69.172.160.196) has joined #python
2020-05-23 00:32:55	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 00:33:18	<--	Tanvir (~tanvir@wikimedia/wikitanvir) has quit (Ping timeout: 258 seconds)
2020-05-23 00:34:00	eukreign	just did, async def printer(m): return None, still getting the slowness
2020-05-23 00:34:14	graingert	try with my noop
2020-05-23 00:34:20	<--	AbedB (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has quit (Ping timeout: 256 seconds)
2020-05-23 00:34:29	<--	jw4 (~jw4@unaffiliated/jw4) has quit (Read error: Connection reset by peer)
2020-05-23 00:35:04	<--	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has quit (Quit: Out.)
2020-05-23 00:35:42	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Client Quit)
2020-05-23 00:36:12	-->	burningserenity (~burningse@050-088-149-178.res.spectrum.com) has joined #python
2020-05-23 00:36:36	<--	mnx (~mnx@unaffiliated/suggarmouth) has quit (Client Quit)
2020-05-23 00:36:37	eukreign	okay, doing this:            async def noop(): return None
2020-05-23 00:36:38	eukreign	            asyncio.run_coroutine_threadsafe(noop(), self.loop)
2020-05-23 00:36:42	-->	ijens (~ijens@unaffiliated/ijens) has joined #python
2020-05-23 00:36:43	eukreign	and still reproduces
2020-05-23 00:36:44	-->	jw4 (~jw4@unaffiliated/jw4) has joined #python
2020-05-23 00:37:00	eukreign	Executing <Handle run_coroutine_threadsafe.<locals>.callback() at /usr/lib/python3.7/asyncio/tasks.py:839 created at /usr/lib/python3.7/asyncio/tasks.py:847> took 0.132 seconds
2020-05-23 00:37:04	-->	ooboyle (~ooboyle@modemcable042.178-70-69.static.videotron.ca) has joined #python
2020-05-23 00:37:21	-->	qlixed (~qlixed@2800:810:471:1255::1000) has joined #python
2020-05-23 00:37:24	eukreign	not consistently of course, but about 1 in 4 times
2020-05-23 00:37:39	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Quit: leaving)
2020-05-23 00:38:18	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Ping timeout: 256 seconds)
2020-05-23 00:38:23	eukreign	but, i also can't seem to reproduce this in an isolated way, the problem is only while running the rest of my project which triggers the code to run many many times
2020-05-23 00:39:01	eukreign	i tried making a simple isolated case where i called it a lot of times and that didn't reproduce it, so just calling it a lot isn't enough
2020-05-23 00:39:08	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-05-23 00:39:12	eukreign	any ideas on what else to try?
2020-05-23 00:39:13	<--	QBic (~kvirc@125.183.35.183) has quit (Read error: Connection reset by peer)
2020-05-23 00:39:15	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-05-23 00:39:33	-->	lunaa (lunaa@156.223.253.190) has joined #python
2020-05-23 00:39:55	lunaa	hello, easy Q: is there is such a command to return the whole script at that point ??
2020-05-23 00:40:06	-->	nathacof_ (~nathacof@c-24-23-179-197.hsd1.ca.comcast.net) has joined #python
2020-05-23 00:40:16	lunaa	something like return but break the script at that point.
2020-05-23 00:40:30	grym	lunaa: a breakpoint?
2020-05-23 00:40:30	<--	ignloidas (~ignaloida@86.38.252.76) has quit (Read error: Connection reset by peer)
2020-05-23 00:40:34	-->	pombreda__ (~pombreda@host-78-129-33-156.dynamic.voo.be) has joined #python
2020-05-23 00:40:43	grym	lunaa: or "cease execution right here and exit"
2020-05-23 00:40:57	lunaa	grym: okay thanks. just wanted to know the name of the command.
2020-05-23 00:40:58	lunaa	thanks.
2020-05-23 00:40:59	-->	ignloidas (~ignaloida@86.38.252.76) has joined #python
2020-05-23 00:41:21	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-05-23 00:41:26	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 00:41:39	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 00:41:56	-->	rom1dep[x] (~rom1depx]@unaffiliated/rom1dep) has joined #python
2020-05-23 00:42:03	<--	ijens (~ijens@unaffiliated/ijens) has quit (Remote host closed the connection)
2020-05-23 00:42:45	-->	Xiti` (~Xiti-@unaffiliated/xiti) has joined #python
2020-05-23 00:43:17	<--	rendar (~rendar@unaffiliated/rendar) has quit
2020-05-23 00:43:24	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2020-05-23 00:43:28	<--	Xiti` (~Xiti-@unaffiliated/xiti) has quit (Client Quit)
2020-05-23 00:43:48	-->	mnx (~mnx@unaffiliated/suggarmouth) has joined #python
2020-05-23 00:43:48	<--	zebrag (~inkbottle@aaubervilliers-654-1-297-54.w86-198.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2020-05-23 00:43:54	grym	lunaa: as of 3.7 it's breakpoint(), otherwise it's pdb.set_trace()  https://www.python.org/dev/peps/pep-0553/
2020-05-23 00:44:16	-->	Saukk (~Saukk@2001:998:c9:1181:986f:9a9:3912:5004) has joined #python
2020-05-23 00:44:23	-->	zebrag (~inkbottle@aaubervilliers-654-1-297-54.w86-198.abo.wanadoo.fr) has joined #python
2020-05-23 00:45:11	<--	mnx (~mnx@unaffiliated/suggarmouth) has quit (Client Quit)
2020-05-23 00:45:36	<--	Xiti (~Xiti-@unaffiliated/xiti) has quit (Ping timeout: 272 seconds)
2020-05-23 00:46:14	-->	ghost2501 (~ghost2501@unaffiliated/ghost2501) has joined #python
2020-05-23 00:46:23	<--	dude-x (~dude-x@pool-100-35-43-218.nwrknj.fios.verizon.net) has quit (Remote host closed the connection)
2020-05-23 00:46:44	<--	burningserenity (~burningse@050-088-149-178.res.spectrum.com) has quit (Ping timeout: 256 seconds)
2020-05-23 00:47:45	graingert	lunaa: you might want to move your script into a `def main():` function
2020-05-23 00:47:47	graingert	then you can use return
2020-05-23 00:48:00	-->	mnx (~mnx@unaffiliated/suggarmouth) has joined #python
2020-05-23 00:48:07	graingert	but it's not clear if you want to stop midway for debugging reasons
2020-05-23 00:48:08	-->	inkbottle (~inkbottle@aaubervilliers-654-1-220-94.w90-61.abo.wanadoo.fr) has joined #python
2020-05-23 00:48:15	graingert	or something you want to do in production lunaa
2020-05-23 00:48:23	<--	christoph_ (~christoph@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has quit (Ping timeout: 264 seconds)
2020-05-23 00:48:46	<--	SpinTronix (~SpinTroni@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has quit (Ping timeout: 272 seconds)
2020-05-23 00:48:59	<--	philr_ (~phil@ppp118-210-77-184.adl-adc-lon-bras32.tpg.internode.on.net) has quit (Ping timeout: 264 seconds)
2020-05-23 00:49:03	graingert	lunaa: ^
2020-05-23 00:49:04	<--	zebrag (~inkbottle@aaubervilliers-654-1-297-54.w86-198.abo.wanadoo.fr) has quit (Ping timeout: 240 seconds)
2020-05-23 00:49:08	<--	Sathiana (~kath@c188-148-238-78.bredband.comhem.se) has quit (Quit: WeeChat 2.8)
2020-05-23 00:50:36	-->	choy (~choy@2001:16b8:2e88:5e00:8455:4bac:a33e:73ed) has joined #python
2020-05-23 00:51:41	<--	pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) has quit (Remote host closed the connection)
2020-05-23 00:52:00	-->	XenGi (~quassel@c-base/crew/XeN) has joined #python
2020-05-23 00:52:10	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 00:52:30	-->	KindTwo (kindone@freenode/father-christmas/kindone) has joined #python
2020-05-23 00:52:31	-->	pkapp (~pkapp@2601:58c:c500:6900:28b2:a121:3edd:72b1) has joined #python
2020-05-23 00:52:59	-->	D4mned (d465e040@212.101.224.64) has joined #python
2020-05-23 00:53:05	D4mned	hello
2020-05-23 00:54:07	<--	KindOne (kindone@freenode/father-christmas/kindone) has quit (Ping timeout: 272 seconds)
2020-05-23 00:54:42	-->	maryo_s (~Maryo@unaffiliated/maryo) has joined #python
2020-05-23 00:55:20	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 00:55:29	D4mned	https://pastebin.com/USHiwqGn
2020-05-23 00:55:31	infobob	https://bpaste.net/SRHQ (repasted for D4mned)
2020-05-23 00:55:34	-->	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has joined #python
2020-05-23 00:55:38	-->	dude-x (~dude-x@pool-100-35-43-218.nwrknj.fios.verizon.net) has joined #python
2020-05-23 00:55:46	D4mned	this worked fine on linux
2020-05-23 00:55:51	D4mned	and failing to work on windows
2020-05-23 00:56:01	D4mned	if i remove this if and else statement
2020-05-23 00:56:04	D4mned	it works just fine
2020-05-23 00:56:06	<--	frrs (uid130725@gateway/web/irccloud.com/x-wkqjknawsolacknw) has quit (Quit: Connection closed for inactivity)
2020-05-23 00:56:19	D4mned	could it be the os.remove ?
2020-05-23 00:56:29	-->	Newami (~Newami@ip174-68-64-138.sd.sd.cox.net) has joined #python
2020-05-23 00:56:30	D4mned	os works in windows ?
2020-05-23 00:56:38	nedbat	D4mned: get rid of the "except:", and we could see the error
2020-05-23 00:56:45	JordiGH	`from typing import Union; Union[Thing1, Thing2]`  # Why was Union defined with [] instead of ()?
2020-05-23 00:56:46	--	KindTwo is now known as KindOne
2020-05-23 00:57:05	nedbat	JordiGH: all of the typing things are like that
2020-05-23 00:57:13	nedbat	JordiGH: List[int].  Callable is even worse :)
2020-05-23 00:57:26	JordiGH	subscriptable?
2020-05-23 00:57:28	JordiGH	This is weird, man.
2020-05-23 00:57:29	JordiGH	Why?
2020-05-23 00:57:38	<--	Newami (~Newami@ip174-68-64-138.sd.sd.cox.net) has quit (Remote host closed the connection)
2020-05-23 00:57:45	nedbat	JordiGH: i'm not quite sure why. probably the other syntax wouldn't have worked for some reason
2020-05-23 00:57:45	-->	Soo_Slow (Soo_Slow@gateway/vpn/privateinternetaccess/sooslow/x-31376162) has joined #python
2020-05-23 00:58:00	JordiGH	>_>
2020-05-23 00:58:05	-->	gavlee_ (~gav@unaffiliated/gavlee) has joined #python
2020-05-23 00:58:05	<--	mplavsic (~mplavsic@213.144.151.202) has quit (Quit: mplavsic)
2020-05-23 00:58:11	JordiGH	If this is because someone wanted to mimic Java/C++ syntax... <_<
2020-05-23 00:58:20	<--	gavlee (~gav@unaffiliated/gavlee) has quit (Ping timeout: 265 seconds)
2020-05-23 00:58:35	-->	wogi (~wogi@2a02:8108:4740:3420:159d:e5ca:bbd2:ef1b) has joined #python
2020-05-23 00:58:36	<--	haslo (uid390999@gateway/web/irccloud.com/x-gosgsbmiixcceexm) has quit (Quit: Connection closed for inactivity)
2020-05-23 00:59:25	Ninpo	is it because the parser would interpret Union(thing1, thing2) as a method/function call?
2020-05-23 00:59:25	-->	aidanh_ (~aidanh@unaffiliated/aidanh) has joined #python
2020-05-23 00:59:29	JordiGH	So I could do this myself, right? Create my own class, and uhhhhhh, change its metaclass so I can define __get__ on it?
2020-05-23 00:59:30	Soo_Slow	can pillow capture pixel's alpha channel?
2020-05-23 01:00:09	SnoopJeDi	Soo_Slow, "capture?"
2020-05-23 01:00:10	<--	aidanh (~aidanh@unaffiliated/aidanh) has quit (Ping timeout: 272 seconds)
2020-05-23 01:00:10	--	aidanh_ is now known as aidanh
2020-05-23 01:00:13	-->	burningserenity (burningser@gateway/vpn/privateinternetaccess/burningserenity) has joined #python
2020-05-23 01:00:13	JordiGH	Ninpo: But isn't Union[] a function call too? It's calling __get__ unless I'm much mistaken.
2020-05-23 01:00:22	-->	dongcarl (~dongcarl@unaffiliated/dongcarl) has joined #python
2020-05-23 01:00:45	<--	gandalfdwite (~gandalfdw@49.205.220.210) has quit (Remote host closed the connection)
2020-05-23 01:00:57	D4mned	nedbat
2020-05-23 01:00:59	D4mned	     if "jpeg" in r.content:
2020-05-23 01:01:00	<--	greedom (~greedom@2001:16b8:2ed4:3100:8982:7384:9a37:acb3) has quit (Quit: Konversation terminated!)
2020-05-23 01:01:00	Ninpo	hrm yeah
2020-05-23 01:01:14	Soo_Slow	SnoopJeDi, well, I need to get rpg color values, coordinates and alpha channel for all pixels on image. While first and second arent issue, I cant google for third one
2020-05-23 01:01:15	<--	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has quit (Quit: fission6)
2020-05-23 01:01:24	Soo_Slow	*rgb
2020-05-23 01:01:26	D4mned	but it worked on linux
2020-05-23 01:01:30	nedbat	D4mned: i don't know what you're showing.  pastebin the latest code, and error report.
2020-05-23 01:01:40	Ninpo	D4mned: take the except out so we can see the traceback
2020-05-23 01:01:46	D4mned	i did
2020-05-23 01:01:57	<--	Saukk (~Saukk@2001:998:c9:1181:986f:9a9:3912:5004) has quit (Remote host closed the connection)
2020-05-23 01:02:10	-->	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has joined #python
2020-05-23 01:02:30	nedbat	D4mned: ok, now show us the code and the traceback
2020-05-23 01:02:40	<--	MightyJoe (~joe@189.158.139.123) has quit (Ping timeout: 256 seconds)
2020-05-23 01:02:42	-->	cotsuka (cameronmat@gateway/shell/matrix.org/x-bfdpqbudztwsgilr) has joined #python
2020-05-23 01:03:04	bigjazzsound	When I install packages with pip in a bash script, the binaries are installed without the execute bit set. I have tried setting my umask to 0000. When I do 'pip install' on the command line I do not experience the issue. Does anyone have any idea why this is happening?
2020-05-23 01:03:34	<--	devanshbatra04 (6746a57b@103.70.165.123) has quit (Ping timeout: 245 seconds)
2020-05-23 01:05:05	graingert	bigjazzsound: show what's in your bash script
2020-05-23 01:05:15	-->	gato (57cf4dfc@gateway/web/cgi-irc/kiwiirc.com/ip.87.207.77.252) has joined #python
2020-05-23 01:05:20	-->	XsiSec (~xsisec@h-37-123-162-226.NA.cust.bahnhof.se) has joined #python
2020-05-23 01:05:28	graingert	bigjazzsound: try using path/to/your/virt/environment/bin/python -m pip install ...
2020-05-23 01:05:57	<--	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-05-23 01:06:37	-->	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has joined #python
2020-05-23 01:07:15	-->	Sonderblade (~helloman@94.191.139.45.mobile.tre.se) has joined #python
2020-05-23 01:07:18	<--	Sonderblade (~helloman@94.191.139.45.mobile.tre.se) has quit (Client Quit)
2020-05-23 01:07:19	-->	bilb_ono (~alexmarsh@ip70-185-130-174.sb.sd.cox.net) has joined #python
2020-05-23 01:07:44	-->	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has joined #python
2020-05-23 01:10:26	-->	cry0 (~cry0@2607:fea8:8520:4a01:fce9:c2ab:6171:d255) has joined #python
2020-05-23 01:10:44	-->	karab44 (~karab44@unaffiliated/karab44) has joined #python
2020-05-23 01:11:16	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Quit: Bin weg.)
2020-05-23 01:11:56	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-05-23 01:12:04	-->	operateur (~operateur@89.110.227.199) has joined #python
2020-05-23 01:12:20	-->	christoph_ (~christoph@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has joined #python
2020-05-23 01:12:21	-->	SpinTronix (~SpinTroni@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has joined #python
2020-05-23 01:12:30	-->	gelignite (~gelignite@55d4e777.access.ecotel.net) has joined #python
2020-05-23 01:12:39	eukreign	graingert, i finally managed to reproduce it in an isolated way: https://bpa.st/GV2A
2020-05-23 01:12:53	<--	KeiraT (~k4ra@gateway/tor-sasl/k4ra) has quit (Ping timeout: 240 seconds)
2020-05-23 01:13:15	-->	gambl0re (~rickyjw@unaffiliated/gambl0re) has joined #python
2020-05-23 01:13:47	eukreign	how can i get `asyncio.run_coroutine_threadsafe()` to scale better with a lot of events coming from the queue?
2020-05-23 01:13:48	-->	darkstardevx (darkstarde@gateway/vpn/privateinternetaccess/darkstardevx) has joined #python
2020-05-23 01:13:49	<--	oedi (~rue@1-162-53-202.dynamic-ip.hinet.net) has quit (Quit: WeeChat 2.8)
2020-05-23 01:14:02	<--	pnwise (~pnwise@unaffiliated/pnwise) has quit (Read error: Connection reset by peer)
2020-05-23 01:14:35	-->	cry0_ (~cry0@2607:fea8:8520:4a01:906e:599c:4244:6f2b) has joined #python
2020-05-23 01:14:37	-->	KeiraT (~k4ra@gateway/tor-sasl/k4ra) has joined #python
2020-05-23 01:15:02	-->	_gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has joined #python
2020-05-23 01:15:06	<--	cry0 (~cry0@2607:fea8:8520:4a01:fce9:c2ab:6171:d255) has quit (Ping timeout: 260 seconds)
2020-05-23 01:15:08	<--	gobostone (~Ace@174-16-168-254.hlrn.qwest.net) has quit (Ping timeout: 256 seconds)
2020-05-23 01:15:08	<--	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has quit (Ping timeout: 256 seconds)
2020-05-23 01:15:40	bigjazzsound	graingert: https://bpa.st/VJHQ
2020-05-23 01:15:41	--	Skeer is now known as Skeer_Away
2020-05-23 01:16:06	-->	pnwise (~pnwise@unaffiliated/pnwise) has joined #python
2020-05-23 01:16:10	--	_gobostone is now known as gobostone
2020-05-23 01:16:44	<--	operateur (~operateur@89.110.227.199) has quit (Ping timeout: 260 seconds)
2020-05-23 01:17:15	-->	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has joined #python
2020-05-23 01:17:25	<--	GeekOfflineNL (~GeekOffli@2001:1c03:540c:4000:c12b:ffdf:2e56:9307) has quit (Quit: Leaving)
2020-05-23 01:17:48	<--	XenGi (~quassel@c-base/crew/XeN) has quit (Ping timeout: 252 seconds)
2020-05-23 01:18:26	-->	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has joined #python
2020-05-23 01:18:34	f8e4	is this ok: https://bpa.st/QAKA way of annotating?
2020-05-23 01:18:36	-->	XenGi (~quassel@c-base/crew/XeN) has joined #python
2020-05-23 01:19:02	<--	vuoto (~vuoto@80.71.142.174) has quit (Ping timeout: 256 seconds)
2020-05-23 01:19:04	<--	penth (~rachel@pool-74-109-20-147.phlapa.fios.verizon.net) has quit (Remote host closed the connection)
2020-05-23 01:19:24	-->	contained (contained@gateway/vpn/privateinternetaccess/contained) has joined #python
2020-05-23 01:19:26	ChrisWarrick	eukreign: asyncio + threading + threadpoolexecutor? are you sure all that is required? perhaps you could try to devise a different solution to your problem?
2020-05-23 01:19:54	eukreign	i need something that can work with both threading and with multiprocessing (hence the mp.Queue)
2020-05-23 01:20:06	ChrisWarrick	f8e4: how is this used?
2020-05-23 01:20:12	--	Skeer_Away is now known as Skeer
2020-05-23 01:20:41	-->	greedom (~greedom@2001:16b8:2ed4:3100:8982:7384:9a37:acb3) has joined #python
2020-05-23 01:21:00	eukreign	so, it whether i'm using ThreadPoolExecutor or ProcessPoolExecutor is configurable in the app, i was hoping that i could use mp.Queue in both cases
2020-05-23 01:21:32	<--	burningserenity (burningser@gateway/vpn/privateinternetaccess/burningserenity) has quit (Ping timeout: 265 seconds)
2020-05-23 01:21:36	f8e4	ChrisWarrick the app is a dash app with built in server; is function annotation ok, because inside func is runningoutofscope
2020-05-23 01:21:41	tompaw	ok, it might be lame, but celery + threading got the job done ;)
2020-05-23 01:21:47	ChrisWarrick	f8e4: ?
2020-05-23 01:21:54	-->	Jerrynicki (~niklas@p200300f5770318003f16fbda89eb7469.dip0.t-ipconnect.de) has joined #python
2020-05-23 01:21:57	-->	yakiza (~yakiza@05418fcd.skybroadband.com) has joined #python
2020-05-23 01:22:01	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 01:22:07	f8e4	i cannot annototate inside module due app not avail there
2020-05-23 01:22:14	f8e4	so i pass in via app call
2020-05-23 01:22:23	eukreign	the goal in short is: i have a bunch of stuff happening in threads or processes, i want to send events from those threads/processes and have access to them in the main asyncio loop, what's a good way to do that?
2020-05-23 01:22:33	ChrisWarrick	f8e4: oh, I wouldn’t do that then
2020-05-23 01:22:34	<--	sauvin (sauvin@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2020-05-23 01:22:47	f8e4	ChrisWarrick: example: https://dash.plotly.com/basic-callbacks
2020-05-23 01:22:51	ChrisWarrick	f8e4: all decorator usages can be rewritten without the decorator syntax
2020-05-23 01:22:52	f8e4	i just remove callback to another file
2020-05-23 01:23:52	-->	derk0pf (~derk0pf@x527179e6.dyn.telefonica.de) has joined #python
2020-05-23 01:24:19	ChrisWarrick	f8e4: you can just do: app.callback(…)(update_output)
2020-05-23 01:24:22	<--	Ublx (~Alex@2a02:810c:280:59c:9066:3f47:a63f:9732) has quit (Quit: WeeChat 2.8)
2020-05-23 01:24:26	ChrisWarrick	f8e4: without resorting to nested functions and stuff
2020-05-23 01:25:01	graingert	eukreign: https://github.com/aio-libs/janus ?
2020-05-23 01:25:10	<--	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has quit (Quit: fission6)
2020-05-23 01:25:16	<--	darkstardevx (darkstarde@gateway/vpn/privateinternetaccess/darkstardevx) has quit (Ping timeout: 256 seconds)
2020-05-23 01:25:16	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 01:25:29	graingert	eukreign: but generally it's easier to process everything in asyncio and running some sync things in a TPE
2020-05-23 01:26:13	<--	ignloidas (~ignaloida@86.38.252.76) has quit (Read error: Connection reset by peer)
2020-05-23 01:26:15	eukreign	that's what i'm trying to do: process everything in asyncio, but mp.Queue is not asyncio friendly, so that was the problem i was having
2020-05-23 01:26:29	graingert	you can use PPE
2020-05-23 01:26:33	graingert	ProcessPoolExecutor
2020-05-23 01:26:44	ChrisWarrick	graingert: less acronyms == better
2020-05-23 01:27:02	graingert	fewer
2020-05-23 01:27:22	-->	ignloidas (~ignaloida@86.38.252.76) has joined #python
2020-05-23 01:28:14	-->	Ublx (~Alex@2a02:810c:280:59c:9066:3f47:a63f:9732) has joined #python
2020-05-23 01:28:41	<--	Ublx (~Alex@2a02:810c:280:59c:9066:3f47:a63f:9732) has quit (Client Quit)
2020-05-23 01:31:37	-->	johefernan (~ck3t@unaffiliated/johefernan) has joined #python
2020-05-23 01:34:16	eukreign	yeah, PPE works, but i need to support both (it's configurable)
2020-05-23 01:34:47	graingert	both?
2020-05-23 01:35:00	graingert	you just run whichever one you need
2020-05-23 01:36:14	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 01:36:58	<--	XenGi (~quassel@c-base/crew/XeN) has quit (Ping timeout: 260 seconds)
2020-05-23 01:37:02	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined #python
2020-05-23 01:37:08	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 01:37:09	-->	burningserenity (~burningse@050-088-149-178.res.spectrum.com) has joined #python
2020-05-23 01:37:12	-->	csevast (~csevast@79.103.51.222.dsl.dyn.forthnet.gr) has joined #python
2020-05-23 01:37:41	rangergord	does anyone know any non-trivial Qt QML open-source apps? (not Qt Widgets)
2020-05-23 01:38:04	-->	lembron (~admin@unaffiliated/lembron) has joined #python
2020-05-23 01:38:17	-->	gandalfdwite (~gandalfdw@49.205.220.210) has joined #python
2020-05-23 01:39:04	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Client Quit)
2020-05-23 01:39:28	lembron	given [{name:a, opt:2},{name:b, opt:5}] - is there a online to check "if that has one with name=="xyz"?
2020-05-23 01:39:33	-->	Alexander-47u (~Alexander@85.203.44.133) has joined #python
2020-05-23 01:39:42	-->	Ublx (~Alex@2a02:810c:280:59c:f1f2:ea6a:941e:3365) has joined #python
2020-05-23 01:40:18	nedbat	lembron: any(d['name'] == 'xyz' for d in that_list)
2020-05-23 01:40:19	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Read error: Connection reset by peer)
2020-05-23 01:40:22	eukreign	yes, for example, this code has to run on Android and there PPE does not work, so we drop back to TPE, but on desktop we can use PPE
2020-05-23 01:40:32	<--	Gerula (~Gerula@unaffiliated/gerula) has quit (Quit: Leaving)
2020-05-23 01:40:44	-->	jadesoturi (~jadesotur@unaffiliated/kfj) has joined #python
2020-05-23 01:40:48	lembron	that looks neat, thanks nedbat
2020-05-23 01:40:58	<--	XsiSec (~xsisec@h-37-123-162-226.NA.cust.bahnhof.se) has quit (Remote host closed the connection)
2020-05-23 01:41:02	Skeer	So last assignment of teh week: https://bpa.st/4ATA  The result from this is 1 email address with it's associated count. Whats weird is that it prints on two lines. How can I get bigword and bigcount to print both on the same line?
2020-05-23 01:41:04	grym	i always forget that any and all don't take key functions
2020-05-23 01:41:21	<--	MrTrick (uid181961@gateway/web/irccloud.com/x-jexytamfuulpnmjt) has quit (Quit: Connection closed for inactivity)
2020-05-23 01:42:08	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 01:42:14	-->	velix (~velix@unaffiliated/velix) has joined #python
2020-05-23 01:42:15	ChrisWarrick	(and they return True or False)
2020-05-23 01:42:34	-->	edlinde (~edlinde@183.83.146.78) has joined #python
2020-05-23 01:42:45	velix	Does anyone know `pipx`? If yes, is it possible to join the venv using pipx directly?
2020-05-23 01:42:48	<--	gandalfdwite (~gandalfdw@49.205.220.210) has quit (Ping timeout: 265 seconds)
2020-05-23 01:43:03	-->	Xiti (~Xiti-@unaffiliated/xiti) has joined #python
2020-05-23 01:43:04	<--	cry0_ (~cry0@2607:fea8:8520:4a01:906e:599c:4244:6f2b) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2020-05-23 01:43:26	<--	theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) has quit (Quit: Leaving)
2020-05-23 01:43:36	grym	velix: sure, you can reach inside pipx created venvs
2020-05-23 01:43:56	grym	velix: what do you want to do
2020-05-23 01:43:57	velix	grym: Yeah, but I mean using a pipx command or only via venv ?
2020-05-23 01:44:15	grym	velix: i'm confused.  what are you wanting?
2020-05-23 01:44:26	-->	quod (~textual@047-013-133-209.res.spectrum.com) has joined #python
2020-05-23 01:44:32	velix	grym: I want to visit the environment and start its python interpreter for debugging.
2020-05-23 01:44:36	<--	christoph_ (~christoph@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has quit (Ping timeout: 256 seconds)
2020-05-23 01:44:40	velix	normally, I'm just doing activate ;)
2020-05-23 01:45:01	velix	Which also works  right now, of course. But I thought, there's a switch to do this directly in pipx.
2020-05-23 01:45:02	<--	contained (contained@gateway/vpn/privateinternetaccess/contained) has quit (Quit: like a fart in the wind)
2020-05-23 01:45:13	<--	Miggy` (sid422602@gateway/web/irccloud.com/x-sffurnqvecqxwmdj) has quit (Excess Flood)
2020-05-23 01:45:31	grym	velix: ~/.local/pipx/venvs/<somevenv>/bin/python
2020-05-23 01:46:01	velix	Yeah, but that's the "normal" venv approach. I thought, there's something like "pipx enter <venv name>" :)
2020-05-23 01:46:08	velix	Maybe I should request this feature?
2020-05-23 01:47:09	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 01:47:43	-->	nomic (~nomic@host86-180-10-84.range86-180.btcentralplus.com) has joined #python
2020-05-23 01:47:51	grym	velix: there's now pipx runpip
2020-05-23 01:48:08	velix	Yeah, but this runs pip ;)
2020-05-23 01:48:19	-->	theorangeone (~quassel@host81-143-201-103.in-addr.btopenworld.com) has joined #python
2020-05-23 01:48:32	velix	"pipx run pip" or "pip run python" might be better
2020-05-23 01:48:34	grym	afaik there's no "jump into an interpreter for" command, but you can certainly propose it
2020-05-23 01:48:48	grym	it's not really what pipx is designed for, but ..
2020-05-23 01:48:57	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 01:49:09	velix	I know, but - let me face it - a docker like behaviour :)
2020-05-23 01:49:12	<--	AbedB_ (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2020-05-23 01:49:12	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 272 seconds)
2020-05-23 01:51:18	<--	gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has quit (Read error: Connection reset by peer)
2020-05-23 01:51:29	velix	grym: For example, I need to build a package in an pipx environment. So I need to set in there to not mess with the host.
2020-05-23 01:51:36	velix	grym: https://github.com/mapnik/python-mapnik
2020-05-23 01:52:11	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 01:52:33	-->	gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has joined #python
2020-05-23 01:52:35	<--	lucad111 (~lucad111@linaro/lucad111) has quit (Quit: Leaving)
2020-05-23 01:52:43	<--	Ublx (~Alex@2a02:810c:280:59c:f1f2:ea6a:941e:3365) has quit (Quit: WeeChat 2.8)
2020-05-23 01:52:49	-->	PolitePenguin (~textual@c-67-187-173-26.hsd1.ca.comcast.net) has joined #python
2020-05-23 01:53:25	-->	__stranac__ (~stranac@93-141-143-133.adsl.net.t-com.hr) has joined #python
2020-05-23 01:53:34	<--	burningserenity (~burningse@050-088-149-178.res.spectrum.com) has quit (Remote host closed the connection)
2020-05-23 01:53:36	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 260 seconds)
2020-05-23 01:54:48	<--	aasutosh (~aa@27.34.68.84) has quit (Ping timeout: 256 seconds)
2020-05-23 01:55:06	-->	thoros (~thoros@192-164-128-162.hdsl.highway.telekom.at) has joined #python
2020-05-23 01:55:16	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 01:56:18	-->	HAL9000^ (sid422602@gateway/web/irccloud.com/x-hjbjirqxjwewhupe) has joined #python
2020-05-23 01:56:36	<--	bdonnahue1 (~bdonnahue@207.181.203.71) has quit (Remote host closed the connection)
2020-05-23 01:56:49	-->	Lucas_Gray (~Wryhder@197.210.227.204) has joined #python
2020-05-23 01:56:59	-->	bdonnahue1 (~bdonnahue@207.181.203.71) has joined #python
2020-05-23 01:57:07	grym	velix: you mean you have a pipx-installed cli tool in which you wish to install that package?
2020-05-23 01:57:22	-->	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has joined #python
2020-05-23 01:57:39	velix	grym: Yeah, but I need to build them manually, since they're not packaged in pip
2020-05-23 01:57:40	<--	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has quit (Client Quit)
2020-05-23 01:57:44	CoolerZ	is this silly? https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L21-L22
2020-05-23 01:57:48	<--	canarts (~stranac@m90-137-139-43.cust.tele2.hr) has quit (Ping timeout: 272 seconds)
2020-05-23 01:57:56	grym	velix: ew.  maybe just packge them
2020-05-23 01:58:06	velix	grym: I'm a user only, no dev :(
2020-05-23 01:58:06	CoolerZ	they override a method in the base class with the exact same code
2020-05-23 01:58:15	grym	CoolerZ: yes
2020-05-23 01:58:24	velix	grym: But it seems like pipx isn't the right solution for me then.
2020-05-23 01:58:25	grym	velix: what better place than here? what better time than now
2020-05-23 01:58:38	-->	hyper_dave (~hyper_dav@196.188.242.167) has joined #python
2020-05-23 01:59:21	-->	boB_K7IQ (~boB_K7IQ@c-73-42-129-198.hsd1.wa.comcast.net) has joined #python
2020-05-23 01:59:53	grym	CoolerZ: getters like that are silly in python anyway
2020-05-23 01:59:55	<--	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has quit (Ping timeout: 258 seconds)
2020-05-23 02:01:35	<--	NccT (~NccT@unaffiliated/ncct) has quit (Ping timeout: 264 seconds)
2020-05-23 02:02:10	<--	jadesoturi (~jadesotur@unaffiliated/kfj) has quit (Ping timeout: 256 seconds)
2020-05-23 02:02:52	<--	marcello (~petem87@46.59.174.110) has quit (Ping timeout: 272 seconds)
2020-05-23 02:02:55	Dev0n	would you put your "tests" folder outside or inside the "/app" folder? (in the context of a FastAPI project)
2020-05-23 02:03:15	Dev0n	so the "app" folder is basically all the source code
2020-05-23 02:04:07	-->	Tanvir (~tanvir@wikimedia/wikitanvir) has joined #python
2020-05-23 02:04:40	-->	Vornicus (~Vornicus@2605:e000:1218:255d:145d:e50:73e9:7c0e) has joined #python
2020-05-23 02:04:43	<--	platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) has quit (Ping timeout: 240 seconds)
2020-05-23 02:05:16	-->	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has joined #python
2020-05-23 02:05:28	-->	DeaDSouL (~DeaDSouL@194.99.104.130) has joined #python
2020-05-23 02:05:37	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2020-05-23 02:06:03	<--	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has quit (Quit: WeeChat 2.7.1)
2020-05-23 02:06:13	lembron	hm and another dum Q. i have code that generates other code, in the first one "file.write("obj = "+str(genobj))" - i want to pretty-print that json, but json.dumps isnt pythong anymore, is there any other equiv. to say phps var_export? (currently this generates "obj = {'bla':True,'mo':'mi'}" - dumps turns this into "obj = {"bla":true, "mo":"mi"}" and py blows onthe "true vs True"
2020-05-23 02:06:45	_habnabit	lembron, you parse json with json.loads
2020-05-23 02:07:02	_habnabit	lembron, you're trying to generate python code?
2020-05-23 02:07:17	lembron	yes -> i have code that generates other code
2020-05-23 02:07:31	_habnabit	lembron, perhaps you want repr() then
2020-05-23 02:07:51	<--	edlinde (~edlinde@183.83.146.78) has quit (Ping timeout: 256 seconds)
2020-05-23 02:07:53	lembron	can i just sling a json.loads() with some kinda of HEREDoc or so?
2020-05-23 02:08:02	_habnabit	lembron, i suppose you could
2020-05-23 02:08:17	_habnabit	lembron, or pprint.pformat if you want it pretty-printed i guess
2020-05-23 02:09:54	-->	edlinde (~edlinde@203.191.56.226) has joined #python
2020-05-23 02:10:11	<--	karab44 (~karab44@unaffiliated/karab44) has quit
2020-05-23 02:10:21	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 265 seconds)
2020-05-23 02:10:28	-->	kpiyushlucky (6ee14286@110.225.66.134) has joined #python
2020-05-23 02:10:52	kpiyushlucky	How can I get the non-duplicate elements from a list?
2020-05-23 02:10:53	<--	joocain2 (~joocain2@gateway/tor-sasl/joocain2) has quit (Ping timeout: 240 seconds)
2020-05-23 02:10:59	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 02:11:07	SnoopJeDi	Does someone have a link to the right documentation for install_requires that includes ^x.y notation?
2020-05-23 02:11:29	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2020-05-23 02:11:35	ChrisWarrick	is this even supported in Python?
2020-05-23 02:11:38	_habnabit	kpiyushlucky, use a set instead of a list
2020-05-23 02:11:51	-->	waldo323__ (~waldo323@d149-67-45-83.clv.wideopenwest.com) has joined #python
2020-05-23 02:12:12	kpiyushlucky	that would give me unique elements i need the non-duplicate ones.
2020-05-23 02:12:22	-->	P1ro (~quassel@gentoo/user/p1ro) has joined #python
2020-05-23 02:12:32	SnoopJeDi	ChrisWarrick, hmm, is it poetry only? That would explain my confusion
2020-05-23 02:12:35	_habnabit	kpiyushlucky, collections.Counter then
2020-05-23 02:12:57	SnoopJeDi	Not that it's any less mysterious to find the right documentation when I need it, so, same question minus the caret
2020-05-23 02:12:59	-->	joocain2 (~joocain2@gateway/tor-sasl/joocain2) has joined #python
2020-05-23 02:13:02	kpiyushlucky	we should be able to do this with sets, no?
2020-05-23 02:13:27	_habnabit	kpiyushlucky, it would be more complicated with sets alone
2020-05-23 02:13:35	SnoopJeDi	https://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-dependencies seems to be the most complete thing, but ugh, there's so many sources of information
2020-05-23 02:13:40	-->	gil1701 (~Thunderbi@148.103.118.4) has joined #python
2020-05-23 02:13:50	<--	Sylhouette (~johan@85-147-130-226.cable.dynamic.v4.ziggo.nl) has quit (Remote host closed the connection)
2020-05-23 02:13:54	kpiyushlucky	can you please show
2020-05-23 02:14:11	lembron	pprint looks neat.. but im to dum to use that i think...
2020-05-23 02:14:13	kpiyushlucky	just want to see how it would work with sets
2020-05-23 02:14:13	<--	panikovsky (~panikovsk@84.51.218.158) has quit (Quit: Leaving)
2020-05-23 02:14:13	<--	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has quit (Quit: Out.)
2020-05-23 02:14:13	<--	xcombelle (~c2c@abayonne-652-1-593-233.w90-38.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2020-05-23 02:14:26	SnoopJeDi	lembron, pprint.pprint() works exactly like print()
2020-05-23 02:14:47	SnoopJeDi	The rest is there if you want to customize how it prettifies things
2020-05-23 02:14:54	<--	waldo323_ (~waldo323@12.239.4.120) has quit (Ping timeout: 272 seconds)
2020-05-23 02:15:04	_habnabit	kpiyushlucky, it'd be complicated enough that i'd use Counter instead always
2020-05-23 02:15:26	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 02:15:30	-->	Conjecture_ (~Conjectur@mobile-166-175-62-176.mycingular.net) has joined #python
2020-05-23 02:15:33	kpiyushlucky	oh, okay.
2020-05-23 02:15:57	SnoopJeDi	Oh right, PEP440 is I think the thing I'm thinking of.
2020-05-23 02:16:02	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 258 seconds)
2020-05-23 02:16:23	<--	bdonnahue1 (~bdonnahue@207.181.203.71) has quit (Read error: Connection reset by peer)
2020-05-23 02:16:44	-->	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined #python
2020-05-23 02:16:59	<--	csevast (~csevast@79.103.51.222.dsl.dyn.forthnet.gr) has quit (Quit: IRC for eric6 IDE)
2020-05-23 02:17:15	-->	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has joined #python
2020-05-23 02:17:22	-->	csevast (~csevast@79.103.51.222.dsl.dyn.forthnet.gr) has joined #python
2020-05-23 02:17:41	lembron	think i got it... ty =)
2020-05-23 02:17:41	-->	knited (~knited@unaffiliated/knited) has joined #python
2020-05-23 02:17:56	<--	Conjecture (~Conjectur@mobile-166-175-62-176.mycingular.net) has quit (Ping timeout: 258 seconds)
2020-05-23 02:18:03	-->	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2020-05-23 02:18:11	<--	Hanii (~Hanii@2a00:23c5:c587:6d00:597b:a742:505e:ead1) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-05-23 02:19:16	<--	Ergo (~ergo@91.238.59.144) has quit (Remote host closed the connection)
2020-05-23 02:19:34	<--	suuuper (~suuuper@37.179.119.14) has quit
2020-05-23 02:19:45	kpiyushlucky	although this was asked in sets section so i think it shouldn't go that hard, note is they have defined additional property of this list: there is exactly one number which is non-repeated, we need to find that.
2020-05-23 02:20:43	<--	lunaa (lunaa@156.223.253.190) has quit (Ping timeout: 240 seconds)
2020-05-23 02:20:45	-->	skinnym (~skinnym@2601:8c0:4300:4e90:7162:62ab:8a74:9cbb) has joined #python
2020-05-23 02:20:49	<--	D4mned (d465e040@212.101.224.64) has quit (Remote host closed the connection)
2020-05-23 02:20:50	<--	PolitePenguin (~textual@c-67-187-173-26.hsd1.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 02:21:10	<--	Conjecture_ (~Conjectur@mobile-166-175-62-176.mycingular.net) has quit (Read error: Connection reset by peer)
2020-05-23 02:21:24	-->	Silmarilion (~Silmarili@87.116.183.249) has joined #python
2020-05-23 02:22:00	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 02:22:03	-->	bdonnahue1 (~bdonnahue@207.181.203.71) has joined #python
2020-05-23 02:22:10	-->	purplex88 (75cd302f@gateway/web/cgi-irc/kiwiirc.com/ip.117.205.48.47) has joined #python
2020-05-23 02:22:14	-->	Conjecture (~Conjectur@mobile-166-175-62-176.mycingular.net) has joined #python
2020-05-23 02:22:33	<--	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 240 seconds)
2020-05-23 02:22:33	<--	BestSteve (~weechat@gateway/tor-sasl/beststeve) has quit (Ping timeout: 240 seconds)
2020-05-23 02:25:09	-->	stinkpot (~none@ip174-66-146-188.sd.sd.cox.net) has joined #python
2020-05-23 02:25:18	CoolerZ	grym, have you used BLEU score?
2020-05-23 02:25:35	purplex88	after killing process i.e. with os.system("sudo pkill -9 pname") i want to know it what it said when it was killed, e.g. it says "killed" , can i get this message?
2020-05-23 02:25:47	artistsvoid	can someone recommend a good free site to paste python code to and where one is able to run it also? (like get the output of the python script on the website)?
2020-05-23 02:25:48	-->	XenGi (~quassel@c-base/crew/XeN) has joined #python
2020-05-23 02:26:03	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 02:26:23	Habbie	artistsvoid, repl.it
2020-05-23 02:26:42	ChrisWarrick	purplex88: pkill doesn’t say that, the process/shell might
2020-05-23 02:26:49	<--	Aattas (~Aattas@176.25.249.219) has quit (Quit: Aattas)
2020-05-23 02:26:57	purplex88	yes i want that shell message
2020-05-23 02:27:03	ChrisWarrick	purplex88: you can’t access it
2020-05-23 02:27:30	ChrisWarrick	purplex88: also, use psutil, or subprocess if you must, never os.system
2020-05-23 02:27:34	<--	Sheilong (uid293653@gateway/web/irccloud.com/x-tbcpzfwjuiulylhy) has quit (Quit: Connection closed for inactivity)
2020-05-23 02:27:44	Habbie	purplex88, why do you want the message?
2020-05-23 02:27:51	artistsvoid	Habbie: k, I bookmarked the link and will consider trying it in the future
2020-05-23 02:28:00	artistsvoid	Habbie: right now it's not worth making an account for it, but thanks
2020-05-23 02:28:18	-->	Sylhouette (~johan@85-147-130-226.cable.dynamic.v4.ziggo.nl) has joined #python
2020-05-23 02:28:21	Habbie	artistsvoid, it does not require you to make an account
2020-05-23 02:28:35	purplex88	ChrisWarrick: subprocess can give that message?
2020-05-23 02:28:44	Habbie	artistsvoid, i don't have an account and i made this for you https://repl.it/repls/LuckyDifferentScientist
2020-05-23 02:29:04	purplex88	Habbie: i want to see what happened, just curious
2020-05-23 02:29:15	-->	zoko (~zoko@149.red-81-45-129.staticip.rima-tde.net) has joined #python
2020-05-23 02:29:22	CodePoint	when I close my python application it keeps running...
2020-05-23 02:29:26	CodePoint	-- sigh --
2020-05-23 02:29:37	artistsvoid	Habbie: awesome thanks, yep already got my code going
2020-05-23 02:29:41	Habbie	artistsvoid, cool
2020-05-23 02:29:43	artistsvoid	Habbie: superb, exactly what I was looking for
2020-05-23 02:29:47	CodePoint	... even in commandline mode.
2020-05-23 02:30:06	Habbie	artistsvoid, i know there's a couple of other sites like it but this one seems most popular in here and other channels
2020-05-23 02:30:36	artistsvoid	Habbie: :) thanks
2020-05-23 02:30:41	Habbie	np :)
2020-05-23 02:32:04	<--	quod (~textual@047-013-133-209.res.spectrum.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 02:32:17	-->	snails (~snails@pool-96-248-97-17.cmdnnj.fios.verizon.net) has joined #python
2020-05-23 02:33:17	artistsvoid	Habbie: https://repl.it/repls/DarkmagentaUnkemptSolaris tells you something about my level of expertise
2020-05-23 02:33:22	artistsvoid	Habbie: but we all have to start somewhere :)
2020-05-23 02:33:44	-->	quod (~textual@047-013-133-209.res.spectrum.com) has joined #python
2020-05-23 02:34:18	Habbie	artistsvoid, playing around is good :)
2020-05-23 02:34:20	<--	sublade (~anonymous@31.132.35.96) has quit (Ping timeout: 260 seconds)
2020-05-23 02:34:51	artistsvoid	Habbie: playing around? I will sell this script for a million dollars
2020-05-23 02:34:54	artistsvoid	Habbie: serioues business here
2020-05-23 02:35:00	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined #python
2020-05-23 02:35:05	Habbie	:)
2020-05-23 02:35:29	<--	Proklantis (~Proklanti@unaffiliated/proklantis) has quit (Ping timeout: 265 seconds)
2020-05-23 02:36:18	-->	naitsabe1 (~naitsabes@unaffiliated/naitsabes) has joined #python
2020-05-23 02:36:53	<--	RangerBob (~brian@pool-173-72-244-228.clppva.fios.verizon.net) has quit (Quit: Leaving)
2020-05-23 02:37:02	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 244 seconds)
2020-05-23 02:37:16	<--	d3sync|3 (~d3sync@unaffiliated/d3sync) has quit (Read error: Connection reset by peer)
2020-05-23 02:37:17	<--	kype (uid176843@gateway/web/irccloud.com/x-umdnewjbntmayvjx) has quit (Quit: Connection closed for inactivity)
2020-05-23 02:37:30	<--	XenGi (~quassel@c-base/crew/XeN) has quit (Quit: KTHXBYE!)
2020-05-23 02:38:24	<--	edlinde (~edlinde@203.191.56.226) has quit (Ping timeout: 260 seconds)
2020-05-23 02:38:44	-->	d3sync (~d3sync@unaffiliated/d3sync) has joined #python
2020-05-23 02:39:09	f8e4	ChrisWarrick thank you yes.
2020-05-23 02:39:11	<--	led_dark_1 (~Thunderbi@217.66.160.14) has quit (Remote host closed the connection)
2020-05-23 02:39:21	-->	sublade (~anonymous@31.132.35.96) has joined #python
2020-05-23 02:39:28	-->	led_dark_1 (~Thunderbi@217.66.160.14) has joined #python
2020-05-23 02:39:59	f8e4	how do i bind X directly to the module name? X=3, import app.x -> use app.x +3 = 6 ?
2020-05-23 02:40:20	nedbat	f8e4: i don't understand the question
2020-05-23 02:41:13	Tefad	he wants X at the module level
2020-05-23 02:41:16	f8e4	obj defined in module should be acccessable after import directly
2020-05-23 02:41:24	bjs	f8e4: isn't that how imports work already?
2020-05-23 02:41:37	bjs	f8e4: `import foo` then if foo.py did `bar =12` you can do `foo.bar` directly
2020-05-23 02:41:43	vlt	f8e4: Should work exactly like that.
2020-05-23 02:41:52	-->	wildtrees (wildtrees@gateway/vpn/protonvpn/wildtrees) has joined #python
2020-05-23 02:41:57	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 02:42:08	<--	Leonarbro (~Leonarbro@S01067824af93741c.cg.shawcable.net) has quit (Ping timeout: 260 seconds)
2020-05-23 02:42:45	CodePoint	if I had as many threads as are in the software I'm currently working on, I could sew a shirt.
2020-05-23 02:42:55	<--	EmreKasgur (3ef84bad@62.248.75.173) has quit (Remote host closed the connection)
2020-05-23 02:43:12	<--	bilb_ono (~alexmarsh@ip70-185-130-174.sb.sd.cox.net) has quit (Quit: bilb_ono)
2020-05-23 02:43:35	<--	quod (~textual@047-013-133-209.res.spectrum.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 02:43:39	_habnabit	Tefad, 'he'? ;)
2020-05-23 02:44:00	nedbat	f8e4: can you tell us more about why you want importing a module to make the module name be a different value instead?
2020-05-23 02:44:14	<--	johefernan (~ck3t@unaffiliated/johefernan) has quit (Remote host closed the connection)
2020-05-23 02:44:29	CoolerZ	hmm is this weird? https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L73
2020-05-23 02:44:57	CoolerZ	it's making a number of threads based on cpu core count?
2020-05-23 02:45:11	bjs	CoolerZ: those aren't threads
2020-05-23 02:45:25	CoolerZ	a thread pool
2020-05-23 02:45:31	CoolerZ	process pool?
2020-05-23 02:45:34	-->	zebrag (~inkbottle@aaubervilliers-654-1-104-58.w86-212.abo.wanadoo.fr) has joined #python
2020-05-23 02:45:38	[Tritium]	CodePoint: ....teeshirts are usually single-threaded (at least the main trunk of them - if there is no seam down the side, it was knit with a single thread.
2020-05-23 02:45:41	bjs	CoolerZ: it seems to be coming from multiprocessing which implies it's a process pool
2020-05-23 02:45:51	Tefad	"he" in the gender neutral internet sense.
2020-05-23 02:45:57	<--	inkbottle (~inkbottle@aaubervilliers-654-1-220-94.w90-61.abo.wanadoo.fr) has quit (Ping timeout: 256 seconds)
2020-05-23 02:46:01	CoolerZ	but why is it dependent on the core count?
2020-05-23 02:46:12	_habnabit	Tefad, 'he' isn't gender-neutral.. 'they' is tho
2020-05-23 02:46:17	CoolerZ	is it the virtual cpu count? with hyperthreading?
2020-05-23 02:46:18	-->	edlinde (~edlinde@183.83.146.78) has joined #python
2020-05-23 02:46:18	<--	tm (~sinnlos@unaffiliated/tm) has quit (Ping timeout: 258 seconds)
2020-05-23 02:46:26	CoolerZ	so dual core would appear as 4 cores
2020-05-23 02:46:29	Tefad	yes but they is confusing as it is often interpreted as plural out of context
2020-05-23 02:46:32	bjs	CoolerZ: because if the processes are doing lots of CPU work then there's no point having (much) more than the number of CPUs
2020-05-23 02:46:47	Tefad	i assume 'he' until told otherwise
2020-05-23 02:46:47	_habnabit	Tefad, nah, not confusing. singular they is very common
2020-05-23 02:46:48	[Tritium]	just use names, pronouns are a lost cause
2020-05-23 02:46:52	CoolerZ	bjs, why not allocate a fixed number?
2020-05-23 02:47:01	bjs	CoolerZ: because you might not know how many CPUs there are ...
2020-05-23 02:47:03	_habnabit	Tefad, assuming 'he' is quite rude
2020-05-23 02:47:04	<--	Tefad (~tefad@unaffiliated/tefad) has left #python ("jesus christ you guys. choose your battles.")
2020-05-23 02:47:06	CoolerZ	bjs, who cares
2020-05-23 02:47:27	CoolerZ	bjs, even if there are 4 cores and you make 4 processes that doesn't mean each process will run on a different core
2020-05-23 02:47:27	bjs	CoolerZ: a machine with 8 CPUs can run twice as many processes at once as a machine with 4 CPUs
2020-05-23 02:47:36	<--	Lucas_Gray (~Wryhder@197.210.227.204) has quit (Read error: Connection reset by peer)
2020-05-23 02:47:42	<--	elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) has quit (Quit: A random quit message)
2020-05-23 02:48:11	bjs	CoolerZ: right some might be waiting/sleeping,  but those switch to ones that are executing
2020-05-23 02:48:21	-->	elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) has joined #python
2020-05-23 02:48:25	-->	yrungr (~yrungr@178.62.65.106) has joined #python
2020-05-23 02:48:38	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 256 seconds)
2020-05-23 02:48:40	bjs	CoolerZ: but if there was lots of waiting, then you'd want to use threads.  Processes have a high overhead so doing it for IO-bound stuff is generally not the usual use-case
2020-05-23 02:48:45	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined #python
2020-05-23 02:48:47	<--	SpinTronix (~SpinTroni@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has quit (Ping timeout: 256 seconds)
2020-05-23 02:49:14	-->	Lucas_Gray (~Wryhder@197.210.227.135) has joined #python
2020-05-23 02:49:30	CoolerZ	bjs, this doesn't say much https://docs.python.org/3/library/os.html#os.cpu_count
2020-05-23 02:49:35	<--	zoko (~zoko@149.red-81-45-129.staticip.rima-tde.net) has quit (Quit: Leaving)
2020-05-23 02:49:44	f8e4	mmh, i dunno, bjs is right i think
2020-05-23 02:49:48	bjs	CoolerZ: what did you want it to tell you?
2020-05-23 02:50:11	<--	edlinde (~edlinde@183.83.146.78) has quit (Client Quit)
2020-05-23 02:50:13	CoolerZ	does it take into account hyperthreading?
2020-05-23 02:50:18	<--	theorangeone (~quassel@host81-143-201-103.in-addr.btopenworld.com) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2020-05-23 02:50:22	-->	truthr (~truthr@unaffiliated/truthr) has joined #python
2020-05-23 02:50:23	CoolerZ	for a dual core will it report 4?
2020-05-23 02:50:35	bjs	CoolerZ: I'd guess yes
2020-05-23 02:50:43	<--	wogi (~wogi@2a02:8108:4740:3420:159d:e5ca:bbd2:ef1b) has quit (Read error: Connection reset by peer)
2020-05-23 02:51:00	<--	Trieste (~T@unaffiliated/trieste) has quit (Ping timeout: 260 seconds)
2020-05-23 02:51:22	-->	aslicedbanjo (~aslicedba@host86-160-16-10.range86-160.btcentralplus.com) has joined #python
2020-05-23 02:51:24	CoolerZ	I don't even get how this works https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L73-L85
2020-05-23 02:51:30	-->	SpinTronix (~SpinTroni@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has joined #python
2020-05-23 02:51:31	-->	DravenX (48c8c057@ip72-200-192-87.ok.ok.cox.net) has joined #python
2020-05-23 02:51:47	-->	ThePortWhisperer (~ThePortWh@unaffiliated/theportwhisperer) has joined #python
2020-05-23 02:51:57	[Tritium]	os.cpu_count() is misnamed - it should be thread count
2020-05-23 02:52:01	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 02:52:01	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 02:52:13	[Tritium]	my SMT enabled 6 core reports as 12
2020-05-23 02:52:22	djapo	is it ok to use camel case to name python modules?
2020-05-23 02:52:34	nedbat	djapo: it will look odd
2020-05-23 02:52:45	CoolerZ	that's some funky multi processing https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L78
2020-05-23 02:52:50	[Tritium]	i mean, its called cpu_count, i have 1 cpu, with 3 dies, 6 cores and 12 threads
2020-05-23 02:52:59	-->	Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) has joined #python
2020-05-23 02:53:32	<--	TomDotTom (~TomDotTom@c-73-141-225-227.hsd1.de.comcast.net) has quit (Ping timeout: 272 seconds)
2020-05-23 02:53:43	-->	Trieste (~T@unaffiliated/trieste) has joined #python
2020-05-23 02:54:21	-->	GDiaX (~GDiaX@bl21-3-251.dsl.telepac.pt) has joined #python
2020-05-23 02:54:22	<--	DravenX (48c8c057@ip72-200-192-87.ok.ok.cox.net) has quit (Remote host closed the connection)
2020-05-23 02:54:59	-->	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has joined #python
2020-05-23 02:55:01	<--	drymer (~drymer@unaffiliated/drymer) has quit (Read error: Connection reset by peer)
2020-05-23 02:55:23	-->	DravenX (~textual@ip72-200-192-87.ok.ok.cox.net) has joined #python
2020-05-23 02:56:00	-->	drymer (~drymer@unaffiliated/drymer) has joined #python
2020-05-23 02:56:01	<--	gambl0re (~rickyjw@unaffiliated/gambl0re) has quit (Ping timeout: 260 seconds)
2020-05-23 02:56:09	<--	SpinTronix (~SpinTroni@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has quit (Ping timeout: 256 seconds)
2020-05-23 02:56:11	-->	borisrunak (~pkarpesis@217.146.90.34.bc.googleusercontent.com) has joined #python
2020-05-23 02:56:11	borisrunak	hello ! Trying to fetch data for my music library and have this code https://paste.ubuntu.com/p/JqHWJ3Fhc8/ . What would be a way to rewrite it more efficiently ?
2020-05-23 02:56:13	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 02:56:23	djapo	nedbat: should i instead use underscores?
2020-05-23 02:56:42	<--	Lucas_Gray (~Wryhder@197.210.227.135) has quit (Read error: Connection reset by peer)
2020-05-23 02:56:42	-->	quod (~textual@047-013-133-209.res.spectrum.com) has joined #python
2020-05-23 02:56:50	nedbat	djapo: yes
2020-05-23 02:57:06	<--	eck0 (uid375984@gateway/web/irccloud.com/x-yarouahympqxcilf) has quit (Quit: Connection closed for inactivity)
2020-05-23 02:57:19	_habnabit	borisrunak, i'm not actually sure what your intent is there
2020-05-23 02:57:19	[Tritium]	CoolerZ: what's confusing about it?
2020-05-23 02:57:26	CoolerZ	[Tritium], everything
2020-05-23 02:57:29	<--	thorre (~thorre@90-230-32-217-no78.tbcn.telia.com) has quit (Quit: thorre)
2020-05-23 02:57:50	-->	thorre (~thorre@90-230-32-217-no78.tbcn.telia.com) has joined #python
2020-05-23 02:57:53	_habnabit	borisrunak, maybe you want to do something like `missing = not artist or not song or not release`
2020-05-23 02:58:14	gsnedders	[Tritium]: it's the number of "logical CPUs", given OSes at a basic level see SMT-enabled CPUs are multiple CPUs
2020-05-23 02:58:19	[Tritium]	CoolerZ: ...first the big bang happened, and the universe came into being.  300k years later, the universe started to cool....  i mean.... we can skip this part if you can narrow down to the confusing part
2020-05-23 02:58:59	<--	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has quit (Quit: Connection closed)
2020-05-23 02:59:10	CoolerZ	[Tritium], list.append is a normal blocking call on the main thread
2020-05-23 02:59:13	ChrisWarrick	[Tritium]: it should be what_or*cle_will_multiply_the_license_price_by, obviously
2020-05-23 02:59:21	borisrunak	_habnabit: my intent is to get metadata for whatever I can . If I get artist and songtitle then get get metadata for songtitle, elif ... get for the release else get for artist etc.
2020-05-23 02:59:26	[Tritium]	gsnedders:but do they really?  the schedulers do, but the OSes themselves are SMT and SMP aware and function differently ... windows certainly does, if just to do a license check.
2020-05-23 02:59:56	<--	kpiyushlucky (6ee14286@110.225.66.134) has quit (Remote host closed the connection)
2020-05-23 03:00:03	[Tritium]	CoolerZ: that is adding a proxy object - i hesitate to call it a future, because it isnt...
2020-05-23 03:00:14	CoolerZ	[Tritium], how is it processing in parallel when the outer call is a normal synchronous call?
2020-05-23 03:00:16	-->	d7x (~os@unaffiliated/d7x) has joined #python
2020-05-23 03:00:20	gsnedders	[Tritium]: the schedulers are aware, but at the lowest level in legacy compatible ways, they each appear as a different CPU
2020-05-23 03:00:30	CoolerZ	[Tritium], oh proxy objects
2020-05-23 03:00:37	CoolerZ	like a Promise
2020-05-23 03:01:05	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-05-23 03:01:14	[Tritium]	multiprocessing docs just call it a result object, but its similar to a promise or future
2020-05-23 03:01:16	CoolerZ	[Tritium], and how does that work?
2020-05-23 03:01:24	CoolerZ	is it transparent to the user?
2020-05-23 03:01:26	_habnabit	borisrunak, why is it so complicated instead of e.g. `if release: get_release()` ?
2020-05-23 03:01:26	gsnedders	[Tritium]: like, you enumerate the CPUs and get that many logical CPUs, and then you try to figure out which are physical CPUs and any non-uniform CPU/memory structure
2020-05-23 03:01:36	borisrunak	i have somewhere read about doing multiplication with 111 for three conditions but I really can't remember where , or how exactly this was implemented... was very clever and nice though 🙂 However I am not looking for that specific approach but something better than I have
2020-05-23 03:01:42	<--	quod (~textual@047-013-133-209.res.spectrum.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-05-23 03:02:01	CoolerZ	[Tritium], that's weird https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L82
2020-05-23 03:02:08	<--	mickeelm (~micke@ec2-18-185-150-20.eu-central-1.compute.amazonaws.com) has quit (Quit: Lost terminal)
2020-05-23 03:02:13	[Tritium]	CoolerZ: of course its not transparent to the user, you are using a multiprocessing api....
2020-05-23 03:02:14	CoolerZ	proxy.get() is how you get the result?
2020-05-23 03:02:24	CoolerZ	but then you are blocking again
2020-05-23 03:02:31	-->	csevast_ (~csevast@79.103.51.222.dsl.dyn.forthnet.gr) has joined #python
2020-05-23 03:02:33	<--	alexandre42 (~Alexandre@2a01cb000b2095018dde9e91e3449615.ipv6.abo.wanadoo.fr) has quit (Ping timeout: 246 seconds)
2020-05-23 03:02:39	[Tritium]	CoolerZ: the work is done at that point
2020-05-23 03:02:43	CoolerZ	well I guess the other proxy objects can finish in the mean time
2020-05-23 03:03:00	<--	DeaDSouL (~DeaDSouL@194.99.104.130) has quit (Quit: Changing server)
2020-05-23 03:03:18	CoolerZ	[Tritium], well that code is kinda hoping that the proxy objects finish their work in the order they were started
2020-05-23 03:03:39	CoolerZ	if you have a list of proxy objects [p1, p2, p3, ..., pn]
2020-05-23 03:03:46	[Tritium]	CoolerZ: add is transitive
2020-05-23 03:04:14	CoolerZ	if p2 doesn't finish until all the others finish then that code ends up waiting for everything
2020-05-23 03:04:22	CoolerZ	[Tritium], ok?
2020-05-23 03:04:25	borisrunak	_habnabit: what I am really looking here is songtitle meta data . If I don't find for the song , then look for release (if I have the name) and if neither is found then look for the artist metadata . But you re definitely right I could simplify the conditions, let me try
2020-05-23 03:04:27	-->	Brainium (~brainium@unaffiliated/brainium) has joined #python
2020-05-23 03:04:37	-->	fRit_^ (~fRit_^@gateway/tor-sasl/frit/x-29331989) has joined #python
2020-05-23 03:04:38	<--	Python_2020 (uid84198@gateway/web/irccloud.com/x-hnafjceaurmsvhwa) has quit (Quit: Connection closed for inactivity)
2020-05-23 03:04:39	CoolerZ	[Tritium], that code just does a normal add, not some fancy multiprocessing add
2020-05-23 03:04:40	[Tritium]	CoolerZ: that doesn't matter... all the jobs will take exactly the same length of time to complete if you wait for them in that loop or not
2020-05-23 03:04:59	[Tritium]	CoolerZ: so?
2020-05-23 03:05:19	CoolerZ	so it doesn't matter that addition is associative
2020-05-23 03:05:32	CoolerZ	and commutative
2020-05-23 03:06:03	[Tritium]	CoolerZ: they will get done, when they get done, you might have to wait A BIT if one is taking longer than the other, but as soon as its done processing it can collect results immediately after.
2020-05-23 03:06:04	CoolerZ	" all the jobs will take exactly the same length of time to complete" what?
2020-05-23 03:06:05	CoolerZ	why?
2020-05-23 03:06:10	CoolerZ	how do you know that?
2020-05-23 03:06:11	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 03:06:24	artistsvoid	Habbie: did something using the turtle module, repl.it even runs that
2020-05-23 03:06:28	[Tritium]	....because thats how these things work
2020-05-23 03:06:31	artistsvoid	Habbie: did not expect that one
2020-05-23 03:06:32	-->	DeaDSouL (~DeaDSouL@89.249.73.21) has joined #python
2020-05-23 03:06:35	gsnedders	[Tritium]: for x86, basically the topology is exposed through CPUID in various ways and the kernel reads that at startup for each logical CPU and figures out the topology based on that AFAIK
2020-05-23 03:07:11	CoolerZ	[Tritium], each job involves a complicated function that has different running times based on the input https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L54
2020-05-23 03:07:29	CoolerZ	oops not that one
2020-05-23 03:07:32	CoolerZ	this one https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L59
2020-05-23 03:07:34	[Tritium]	CoolerZ: and that running time is nearly invariable given the same input
2020-05-23 03:07:55	[Tritium]	CoolerZ: so it doesn't matter HOW you run it, it will take the same time either way
2020-05-23 03:08:15	CoolerZ	why is it joining AFTER closing? https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L84-L85
2020-05-23 03:08:24	CoolerZ	it should join all the processes first
2020-05-23 03:08:32	CoolerZ	close is the last thing you do
2020-05-23 03:08:36	CoolerZ	to release resources
2020-05-23 03:08:37	[Tritium]	CoolerZ: because the api requires joining.  Or sloppy coding
2020-05-23 03:09:07	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 260 seconds)
2020-05-23 03:09:15	-->	TomDotTom (~TomDotTom@c-73-141-225-227.hsd1.de.comcast.net) has joined #python
2020-05-23 03:09:19	<--	maryo_s (~Maryo@unaffiliated/maryo) has quit (Ping timeout: 265 seconds)
2020-05-23 03:09:34	CoolerZ	[Tritium], each job has a different input tho
2020-05-23 03:09:41	CoolerZ	so the times will be different
2020-05-23 03:10:11	[Tritium]	CoolerZ: close prevents jobs from being added, join waits on all the process to finish.  You do know that documentation exists?
2020-05-23 03:10:16	CoolerZ	for one thing hypothesis will have different lengths at the very least
2020-05-23 03:10:23	<--	gil1701 (~Thunderbi@148.103.118.4) has quit (Ping timeout: 240 seconds)
2020-05-23 03:10:36	<--	DravenX (~textual@ip72-200-192-87.ok.ok.cox.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2020-05-23 03:10:53	CoolerZ	not to mention how many unique n-grams are in the references and hypothesis make a big difference
2020-05-23 03:11:02	<--	derk0pf (~derk0pf@x527179e6.dyn.telefonica.de) has quit (Read error: Connection reset by peer)
2020-05-23 03:11:07	[Tritium]	CoolerZ: IT DOESN'T MATTER
2020-05-23 03:11:19	<--	iNs (~ins@gateway/tor-sasl/ins) has quit (Remote host closed the connection)
2020-05-23 03:11:20	[Tritium]	It doesn't matter WHAT your function does, it could do anything.
2020-05-23 03:11:32	[Tritium]	its irrelevant to the multiprocessing
2020-05-23 03:12:05	-->	iNs (~ins@gateway/tor-sasl/ins) has joined #python
2020-05-23 03:12:16	CoolerZ	so Pool let's it allocate a number of processes first and then reuse them over and over?
2020-05-23 03:12:34	CoolerZ	lets
2020-05-23 03:12:48	-->	platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) has joined #python
2020-05-23 03:13:22	[Tritium]	f(x) and pool.apply_async(f, args=[x]) .... f will take roughly the same length of time in either case.  since you can run N instances of f at the same time, you get a speedup.  You still get that speedup if the first call takes longer, since the subsequent calls finish and wait for you to collect the data in the background.
2020-05-23 03:13:33	-->	netcrash (~charmande@97.245.60.94.rev.vodafone.pt) has joined #python
2020-05-23 03:13:35	netcrash	Hello, Using NFS reading remotely always the same file causes the python3 script to fail on that situation. Any ideas?
2020-05-23 03:14:31	CoolerZ	[Tritium], this is where I wish I had AMD Ryzen to actually take advantage of this
2020-05-23 03:14:35	<--	dillon (~dillon@dsl-dhcp-conrtxxahre-76-164-91-106.consolidated.net) has quit (Remote host closed the connection)
2020-05-23 03:14:39	-->	cry0 (~cry0@2607:fea8:8520:4a01:15cf:4595:ef3d:5ea2) has joined #python
2020-05-23 03:14:40	-->	kype (uid176843@gateway/web/irccloud.com/x-nduqgenrdhtywwuq) has joined #python
2020-05-23 03:15:06	[Tritium]	CoolerZ: You're running nltk, just put two potatoes next to each other
2020-05-23 03:15:49	-->	zoko (~zoko@149.red-81-45-129.staticip.rima-tde.net) has joined #python
2020-05-23 03:16:13	CoolerZ	>>> os.cpu_count()
2020-05-23 03:16:14	CoolerZ	12
2020-05-23 03:16:15	CoolerZ	nice
2020-05-23 03:16:20	<--	irrgit (~ch33se@192.241.175.183) has quit (Ping timeout: 272 seconds)
2020-05-23 03:16:35	CoolerZ	I was expecting 4
2020-05-23 03:16:35	[Tritium]	grubhub.com
2020-05-23 03:16:43	[Tritium]	....this isn't my addressbar
2020-05-23 03:16:51	-->	foolishhart (~foolishha@5.2.99.220) has joined #python
2020-05-23 03:17:10	CoolerZ	oh but my server reports os.cpu_count() == 2
2020-05-23 03:17:15	CoolerZ	ew
2020-05-23 03:17:17	CoolerZ	single core
2020-05-23 03:17:18	<--	gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has quit (Quit: ZNC - https://znc.in)
2020-05-23 03:17:28	<--	is0ke3 (~is0ke3@unaffiliated/isokee) has quit (Quit: WeeChat 1.9.1)
2020-05-23 03:17:34	<--	Alzadoua (~Alzadoua@unaffiliated/alzadoua) has quit (Read error: Connection reset by peer)
2020-05-23 03:17:35	-->	jab416171 (~jab416171@c-67-163-70-50.hsd1.ut.comcast.net) has joined #python
2020-05-23 03:17:45	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Killed (tepper.freenode.net (Nickname regained by services)))
2020-05-23 03:17:53	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined #python
2020-05-23 03:17:59	CoolerZ	[Tritium], if nltk is so bad why haven't they reimplemented it?
2020-05-23 03:17:59	-->	Alzadoua (~Alzadoua@unaffiliated/alzadoua) has joined #python
2020-05-23 03:18:02	[Tritium]	if its a vps, you might not even be on the same numa node
2020-05-23 03:18:07	CoolerZ	in numpy
2020-05-23 03:18:11	CoolerZ	or numba
2020-05-23 03:18:13	CoolerZ	or pytorch
2020-05-23 03:18:16	CoolerZ	or tensorflow
2020-05-23 03:18:24	-->	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2020-05-23 03:18:30	[Tritium]	CoolerZ: i said it could run on a potato
2020-05-23 03:18:45	_habnabit	netcrash, you'd have to show us what you mean by 'fails'
2020-05-23 03:18:45	CoolerZ	well python can run on a potato
2020-05-23 03:18:47	<--	zoko (~zoko@149.red-81-45-129.staticip.rima-tde.net) has quit (Client Quit)
2020-05-23 03:19:09	CoolerZ	but it matters to me when I have to do this 2000+ times with large inputs
2020-05-23 03:19:12	-->	gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has joined #python
2020-05-23 03:19:35	<--	vuoto (~vuoto@80.71.142.174) has quit (Ping timeout: 264 seconds)
2020-05-23 03:19:40	CoolerZ	and I don't even wanna know how tqdm interacts with all of this
2020-05-23 03:19:52	CoolerZ	since it's a normal for loop, it might work just fine
2020-05-23 03:19:58	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 03:20:31	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-05-23 03:21:12	-->	loreloc (~loreloc@host81-77-dynamic.247-95-r.retail.telecomitalia.it) has joined #python
2020-05-23 03:21:50	CoolerZ	[Tritium], unrelated but if you put a \n to end a file will that show when you do    for line in file: print(line)
2020-05-23 03:21:53	<--	Tanvir (~tanvir@wikimedia/wikitanvir) has quit (Ping timeout: 265 seconds)
2020-05-23 03:21:57	<--	fRit_^ (~fRit_^@gateway/tor-sasl/frit/x-29331989) has quit (Remote host closed the connection)
2020-05-23 03:22:00	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 03:22:17	-->	wogi (~wogi@2a02:8108:4740:3420:dc17:b474:efa4:9ace) has joined #python
2020-05-23 03:22:28	<--	thoros (~thoros@192-164-128-162.hdsl.highway.telekom.at) has quit (Quit: WeeChat 2.8)
2020-05-23 03:22:28	<--	eukreign (~lex@64.223.173.35) has quit (Quit: Ex-Chat)
2020-05-23 03:22:32	<--	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 240 seconds)
2020-05-23 03:22:46	<--	vuoto (~vuoto@80.71.142.174) has quit (Client Quit)
2020-05-23 03:23:08	-->	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has joined #python
2020-05-23 03:23:21	-->	fRit_^ (~fRit_^@gateway/tor-sasl/frit/x-29331989) has joined #python
2020-05-23 03:23:33	netcrash	_habnabit: trying to undestand that
2020-05-23 03:23:45	netcrash	still debuging
2020-05-23 03:23:54	_habnabit	netcrash, you can show us what you're seeing
2020-05-23 03:23:55	solrize	is there a way to put an initialization file into .idlerc that gets run whenever i start idle?
2020-05-23 03:23:57	CoolerZ	it doesn't seem to appear
2020-05-23 03:24:38	<--	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has quit (Remote host closed the connection)
2020-05-23 03:25:13	CoolerZ	hmmm
2020-05-23 03:25:22	CoolerZ	so
2020-05-23 03:25:51	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 03:26:02	CoolerZ	it seems that the line comes with the \n character at the end
2020-05-23 03:26:04	CoolerZ	gross
2020-05-23 03:26:58	CoolerZ	so line = line.strip() is mandatory
2020-05-23 03:27:01	-->	neonetstat (~net@186.137.117.100) has joined #python
2020-05-23 03:27:17	<--	tgamblin (~tgamblin@CPE64777de11593-CM64777de11590.cpe.net.cable.rogers.com) has quit (Read error: Connection reset by peer)
2020-05-23 03:27:28	-->	tgamblin (~tgamblin@CPE64777de11593-CM64777de11590.cpe.net.cable.rogers.com) has joined #python
2020-05-23 03:27:45	-->	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has joined #python
2020-05-23 03:28:17	--	Skeer is now known as Skeer_Away
2020-05-23 03:28:19	<--	foolishhart (~foolishha@5.2.99.220) has quit
2020-05-23 03:28:21	CoolerZ	is there a reason why it comes with the \n?
2020-05-23 03:28:35	-->	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has joined #python
2020-05-23 03:28:43	netcrash	_habnabit: https://paste.debian.net/1148341/ <- this
2020-05-23 03:28:44	-->	michelem (~Adium@51.154.167.11) has joined #python
2020-05-23 03:28:49	geirha	so you'll know if the last line lacks one or not
2020-05-23 03:29:18	CoolerZ	is it so you can do   with open('foo.txt', 'r') as f, open('bar.txt', 'w') as g:
2020-05-23 03:29:28	papna	CoolerZ: There's a lot of history, older APIs that didn't have the opportunity to hide the newline character
2020-05-23 03:29:29	<--	Lord-Kamina (~Lord-Kami@pc-5-46-86-200.cm.vtr.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-05-23 03:29:29	CoolerZ	for line in f: g.write(line)
2020-05-23 03:29:36	CoolerZ	that way you make a perfect copy
2020-05-23 03:29:48	papna	CoolerZ: This way you get all the data in the file
2020-05-23 03:29:53	-->	AbedB (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has joined #python
2020-05-23 03:29:54	<--	michelem (~Adium@51.154.167.11) has quit (Client Quit)
2020-05-23 03:29:58	SnoopJeDi	I need to implement an Image class, but would prefer to just subclass someone else's implementation. PIL seems like a natural choice, but their class seems to make subclassing really clumsy. Any pointers?
2020-05-23 03:30:05	<--	wafflehunter (~wafflehun@ip-176-199-211-193.hsi06.unitymediagroup.de) has quit (Read error: Connection reset by peer)
2020-05-23 03:30:13	papna	CoolerZ: In the world where it didn't include the newline, you'd probably do "for line in f: g.writeline(line)" for a copy -- but this isn't that world
2020-05-23 03:30:18	_habnabit	SnoopJeDi, why do you need subclassing
2020-05-23 03:30:27	papna	SnoopJeDi: An image class to...?
2020-05-23 03:30:47	CoolerZ	does python have streams?
2020-05-23 03:30:51	<--	Trashlord (~trash@wikipedia/Sentient-Planet) has quit (Quit: "True ignorance is not the absence of knowledge, but the refusal to acquire it.")
2020-05-23 03:31:04	<--	jamiejackson (cfac5722@gateway/web/cgi-irc/kiwiirc.com/ip.207.172.87.34) has quit (Quit: Connection closed)
2020-05-23 03:31:22	papna	CoolerZ: Streams?
2020-05-23 03:31:30	-->	recursive_curse (~miller@S0106f81d0f6109e3.wp.shawcable.net) has joined #python
2020-05-23 03:31:35	<--	wogi (~wogi@2a02:8108:4740:3420:dc17:b474:efa4:9ace) has quit (Read error: Connection reset by peer)
2020-05-23 03:31:55	<--	Wulf (~Wulf@unaffiliated/wulf) has quit (Ping timeout: 258 seconds)
2020-05-23 03:32:02	_habnabit	netcrash, but what's the failure?
2020-05-23 03:32:07	SnoopJeDi	_habnabit, I'd prefer to do it that way so that it could be backed by something else in the future, but as I think about it I guess that'd rattle through the code anyway.
2020-05-23 03:32:09	[Tritium]	open(...).read() returns the newline because there is a newline in the file.
2020-05-23 03:32:24	CoolerZ	papna, I will take that as a no
2020-05-23 03:32:35	meejah	CoolerZ: what is a "Stream"?
2020-05-23 03:32:42	SnoopJeDi	Maybe I should just PIL's Image directly and cross that bridge if it ever comes up, and focus on the other stuff that is built from sequences of Images and modifications to them
2020-05-23 03:32:53	CoolerZ	python does have the iterator protocol
2020-05-23 03:32:58	CoolerZ	so that can be a read stream
2020-05-23 03:33:01	CoolerZ	read only
2020-05-23 03:33:12	papna	CoolerZ: Python has an iterator protocol - Python's iterator protocol
2020-05-23 03:33:18	meejah	CoolerZ: we don't know what you mean by "Streams"
2020-05-23 03:33:36	papna	CoolerZ: You seem to think that you are appealing to a universal concept, but there are lots of things reusing the same names different places
2020-05-23 03:33:48	CoolerZ	meejah, exactly there's no such thing in python
2020-05-23 03:33:50	SnoopJeDi	_habnabit, e.g. it's plausible we'd want to swap in some of the Image stuff from our core product, and we definitely have some formats floating around that PIL won't know about out of the box etc.
2020-05-23 03:34:07	[Tritium]	twitch.tv and stdio are conceptually different, but both...streams
2020-05-23 03:34:09	papna	CoolerZ: There are many things called 'streams' in Python
2020-05-23 03:34:23	bjs	CoolerZ: what do you mean by stream?
2020-05-23 03:34:25	<--	rocia (~rocia@chihaya.best.moe) has quit (Quit: Bye!)
2020-05-23 03:34:36	<--	fn3t (~fn3t@unaffiliated/fn3t) has quit (Quit: Bye)
2020-05-23 03:34:40	CoolerZ	bjs, something similar to C++
2020-05-23 03:34:44	CoolerZ	or javascript streams
2020-05-23 03:34:57	CoolerZ	NodeJS uses streams
2020-05-23 03:35:15	papna	C++ iostreams?
2020-05-23 03:35:22	bjs	CoolerZ: arent' files a kind of stream
2020-05-23 03:35:22	-->	tomtomgps (~tomtomgps@2a01:cb14:4f6:8f00:875e:f9de:c940:505a) has joined #python
2020-05-23 03:35:28	-->	hexorg (~hexorg@static-173-48-146-3.bstnma.ftas.verizon.net) has joined #python
2020-05-23 03:35:35	netcrash	_habnabit: difficult to explain I did a rundown on what could be the error and ended there
2020-05-23 03:35:38	SnoopJeDi	oh, interesting, I didn't realize Pillow can be extended for decoders. Well, that settles that I guess, I'll just use PIL for now
2020-05-23 03:35:52	[Tritium]	CoolerZ: forget that the word stream exists, and describe what you want to do
2020-05-23 03:36:28	[Tritium]	SnoopJeDi: i hope you mean PIL the import name, not PIL the project name... i mean, you JUST said Pillow
2020-05-23 03:36:29	_habnabit	netcrash, right, but you're seeing an error message or something, right? you're not just guessing that there was an error; you see some indication of it
2020-05-23 03:36:43	SnoopJeDi	[Tritium], yes, Pillow
2020-05-23 03:36:45	CoolerZ	[Tritium], I was thinking of using multiprocessing to read a file, pipe it through a tokenizer line by line, pipe those tokens through a BLEU calc, etc.
2020-05-23 03:36:59	CoolerZ	but now that I think about it it seems way too much like word
2020-05-23 03:37:01	CoolerZ	work*
2020-05-23 03:37:01	SnoopJeDi	[Tritium], does *anyone* use the PIL project?
2020-05-23 03:37:03	bjs	CoolerZ: okay... sod o that?
2020-05-23 03:37:06	royal_screwup21	anyone have experience writing cython modules? Say I wanted to use something from the c++ stl and expose to as a python module. Is it easy to do it with cython?
2020-05-23 03:37:18	_habnabit	royal_screwup21, easier to use cppyy
2020-05-23 03:37:18	-->	rocia (~rocia@chihaya.best.moe) has joined #python
2020-05-23 03:37:33	<--	tood (uid107332@gateway/web/irccloud.com/x-yjdijesrdsctdwos) has quit (Quit: Connection closed for inactivity)
2020-05-23 03:37:36	[Tritium]	SnoopJeDi: legacy code uses legacy code... and there are legacy docs that still advocate people use legacy code
2020-05-23 03:37:37	royal_screwup21	cool thanks, will look into it
2020-05-23 03:37:37	papna	royal_screwup21: It can be -- The C++ support is incomplete, which can be annoying.
2020-05-23 03:37:49	netcrash	_habnabit: No message, this is code deep inside the workings. It's just failling without error.
2020-05-23 03:37:50	CoolerZ	bjs,   file >> tokenizer >> bleu >> add >> print
2020-05-23 03:37:51	graingert	SnoopJeDi: like PIL instead of Pillow?
2020-05-23 03:37:52	-->	calloc (~mrwildric@047-006-018-108.res.spectrum.com) has joined #python
2020-05-23 03:38:06	<--	calloc (~mrwildric@047-006-018-108.res.spectrum.com) has quit (Client Quit)
2020-05-23 03:38:07	bjs	CoolerZ: I mean files are an example of a stream
2020-05-23 03:38:09	_habnabit	netcrash, then what makes you think it's failing at all..?
2020-05-23 03:38:10	bjs	i don't know what you're getting at
2020-05-23 03:38:18	SnoopJeDi	graingert, yea
2020-05-23 03:38:22	CoolerZ	I don't know either, it's too much work to do it that way
2020-05-23 03:38:26	-->	calloc (~mrwildric@047-006-018-108.res.spectrum.com) has joined #python
2020-05-23 03:38:28	-->	AbedB_ (~AbedBhuty@176.113.72.212) has joined #python
2020-05-23 03:38:29	bjs	CoolerZ: that way?
2020-05-23 03:38:39	netcrash	_habnabit: yes because a process that should happen fails. It's not creating a file output.
2020-05-23 03:38:43	graingert	SnoopJeDi: I remember when django needed a pillow-pil shim module to use Pillow
2020-05-23 03:38:47	SnoopJeDi	Aside from what [Tritium] pointed out I don't really think anyone uses a 14 year old project, and I thought the whole point of Pillow is to be a swap-in
2020-05-23 03:38:49	CoolerZ	bjs, with them on different threads/processes
2020-05-23 03:38:55	CoolerZ	each part of the pipeline
2020-05-23 03:38:56	bjs	CoolerZ: for line in f: toks = tokenize(line); bleu_thing = bleu(toks); added_thing = add(bleu_thing); print(thing)
2020-05-23 03:39:13	hexorg	Hey guys, I have a ctypes.cdll library that returns a complex c structure. What's the best way of writing a python class that wraps this cdll? Should I have cdll as a property of the python class, or can I somehow inherit from the cdll class? Or something else?
2020-05-23 03:39:13	[Tritium]	SnoopJeDi: pillow is swap in except one small problem with PIL
2020-05-23 03:39:13	netcrash	_habnabit: and checking went into this and found out that a message from this function was not being printed
2020-05-23 03:39:18	CoolerZ	bjs, that's not multiprocessed
2020-05-23 03:39:27	bjs	CoolerZ: where does multiprocessing come in?
2020-05-23 03:39:27	CoolerZ	bjs, I already have that
2020-05-23 03:39:34	_habnabit	netcrash, if it's not being printed, perhaps the code didn't run at all
2020-05-23 03:39:49	[Tritium]	SnoopJeDi: PIL changes sys.path so you can import PIL.Image or import Image
2020-05-23 03:39:51	CoolerZ	bjs, well in the pipeline you could put each part on a different process/thread
2020-05-23 03:39:54	royal_screwup21	papna my use-case is using C++'s multiset and exposing it as a python module...afaik, python doesn't have it and it would be good to have a performant library
2020-05-23 03:40:05	_habnabit	royal_screwup21, collections.Counter
2020-05-23 03:40:05	SnoopJeDi	[Tritium], yikes
2020-05-23 03:40:18	<--	rememberYou (~user@unaffiliated/rememberyou) has quit (Remote host closed the connection)
2020-05-23 03:40:32	[Tritium]	SnoopJeDi: pillow does not make Image available in the top level, so if you coded to that, you need a shim
2020-05-23 03:40:46	SnoopJeDi	yea I see. In this case, it's all new code, so strictly Pillow
2020-05-23 03:40:53	royal_screwup21	_habnabit it's not a multiset :)  A multiset is basically a container that stores everything you put in it in sorted order, including duplicates
2020-05-23 03:40:56	papna	royal_screwup21: storing PyObject's in a STL container ends up annoying
2020-05-23 03:40:56	[Tritium]	SnoopJeDi: it was a different time - flat is better than nested taken to extremes
2020-05-23 03:40:58	-->	indigaz (~indigaz@unaffiliated/indigaz) has joined #python
2020-05-23 03:41:09	_habnabit	royal_screwup21, sounds like collections.Counter
2020-05-23 03:41:22	SnoopJeDi	Until I bump my head on something that necessitates thinking about it some more, but the point is well taken: I'm getting carried away writing abstraction instead of making code that does something
2020-05-23 03:41:31	<--	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has quit (Ping timeout: 258 seconds)
2020-05-23 03:41:39	royal_screwup21	_habnabit does counter store keys in sorted order? I don't think so, but I'll check
2020-05-23 03:41:58	papna	It doesn't
2020-05-23 03:41:59	_habnabit	royal_screwup21, sorted? no, but you can sort them if you want
2020-05-23 03:42:07	[Tritium]	SnoopJeDi:  thats...the way it works, isn't it?  You spend weeks writing abstraction and maybe an hour actual implementation
2020-05-23 03:42:22	<--	AbedB (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has quit (Ping timeout: 260 seconds)
2020-05-23 03:42:24	[Tritium]	thats what it feels like at least
2020-05-23 03:42:28	SnoopJeDi	[Tritium], too true
2020-05-23 03:42:35	papna	royal_screwup21: There are existing sorted dicts in Python, one of which is fairly popular
2020-05-23 03:42:44	royal_screwup21	right, it would be better to use a multiset module for that specific use-case
2020-05-23 03:42:46	royal_screwup21	ah yeah
2020-05-23 03:42:47	SnoopJeDi	The good news is that the thing I'm hacking on right now is a standalone tool instead of "hey just design us an architecture that serves both teams needs"
2020-05-23 03:43:09	tos9	royal_screwup21: (just saying "multiset" wouldn't connote sorted, so if you want sorted you should say sorted multiset)
2020-05-23 03:43:19	papna	royal_screwup21: This property is somewhat orthogonal to being a multiset per se, which is less relevant in Python, because distinct but equal objects are a bit of an antipattern and because values tend to be big so people often don't store n of them to store the count of n
2020-05-23 03:43:31	royal_screwup21	https://en.cppreference.com/w/cpp/container/multiset
2020-05-23 03:43:41	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 244 seconds)
2020-05-23 03:43:51	tos9	royal_screwup21: it's presumably an implementation detail in C++ that they're sorted
2020-05-23 03:44:07	papna	It's not an implementation detail
2020-05-23 03:44:11	tos9	royal_screwup21: just the word multiset is not sorted -- https://en.wikipedia.org/wiki/Multiset
2020-05-23 03:44:12	papna	It's a part of the standard
2020-05-23 03:44:19	royal_screwup21	oh ok fair enough :)
2020-05-23 03:44:28	tos9	sorry, not implementation detail, but not part of the inherent concept
2020-05-23 03:44:32	papna	For std::multiset
2020-05-23 03:44:34	papna	Right
2020-05-23 03:44:36	papna	Certainly
2020-05-23 03:44:42	royal_screwup21	yeah, unordered_multiset is also a thing so you're probably correct
2020-05-23 03:45:12	<--	yakiza (~yakiza@05418fcd.skybroadband.com) has quit (Read error: Connection reset by peer)
2020-05-23 03:45:19	papna	Good ol' C++ standard: "We're not sayin' it's a BST...but it's a BST."
2020-05-23 03:45:49	-->	yakiza (~yakiza@05418fcd.skybroadband.com) has joined #python
2020-05-23 03:46:02	-->	lenochka (1838f510@gateway/web/cgi-irc/kiwiirc.com/ip.24.56.245.16) has joined #python
2020-05-23 03:46:03	<--	cry0 (~cry0@2607:fea8:8520:4a01:15cf:4595:ef3d:5ea2) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2020-05-23 03:46:33	<--	bkraptor (~bkraptor@unaffiliated/bkraptor) has quit (Quit: Leaving)
2020-05-23 03:46:39	lenochka	question about asyncio: could someone explain why do you need to cancel tasks before gathering?
2020-05-23 03:46:53	-->	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has joined #python
2020-05-23 03:47:50	-->	audiofile (~notanaudi@unaffiliated/audiofile) has joined #python
2020-05-23 03:49:36	<--	nathacof_ (~nathacof@c-24-23-179-197.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2020-05-23 03:49:47	graingert	lenochka: you don't
2020-05-23 03:49:53	graingert	lenochka: what makes you think you do?
2020-05-23 03:49:58	-->	nathacof_ (~nathacof@c-24-23-179-197.hsd1.ca.comcast.net) has joined #python
2020-05-23 03:50:05	-->	edlinde (~edlinde@203.191.56.226) has joined #python
2020-05-23 03:50:07	-->	hypc1 (~Thunderbi@175.164.8.168) has joined #python
2020-05-23 03:50:11	lenochka	you do. In the examples I see that we cancel pending tasks
2020-05-23 03:50:34	lenochka	i thought gather is supposed to basically end these tasks
2020-05-23 03:50:40	graingert	the examples are probably just showing what happens if they are cancelled
2020-05-23 03:50:43	<--	hypc (~Thunderbi@175.164.8.168) has quit (Ping timeout: 260 seconds)
2020-05-23 03:50:44	--	hypc1 is now known as hypc
2020-05-23 03:50:52	-->	ovnicraft (~ovnicraft@corp-179-49-42-23.uio.puntonet.ec) has joined #python
2020-05-23 03:50:56	<--	tomtomgps (~tomtomgps@2a01:cb14:4f6:8f00:875e:f9de:c940:505a) has quit (Remote host closed the connection)
2020-05-23 03:51:25	lenochka	nope, it shows that all pending tasks need to be cancelled and then we use gather to gather them all, then we also loop.run_until_complete(gathered_tasks)
2020-05-23 03:51:41	lenochka	I mean that's the case when we don't use asycio.run
2020-05-23 03:51:45	-->	johefernan (~ck3t@unaffiliated/johefernan) has joined #python
2020-05-23 03:51:51	graingert	use asyncio.run
2020-05-23 03:52:05	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 03:52:07	graingert	lenochka: but yeah you can gather tasks before you cancel them
2020-05-23 03:52:08	lenochka	in my examples I need to use NOT asyncio.run
2020-05-23 03:52:18	graingert	in your examples?
2020-05-23 03:52:24	-->	bkraptor (~bkraptor@unaffiliated/bkraptor) has joined #python
2020-05-23 03:52:27	lenochka	graingert: that doesn't explain much. Yes, I know I can
2020-05-23 03:52:30	graingert	what's wrong with asyncio.run?
2020-05-23 03:52:47	lenochka	but I am trying to understand why we are cancelling, shouldn't gather do the work?
2020-05-23 03:52:52	graingert	either the tutorial is wrong or you're misinterpreting it
2020-05-23 03:52:55	-->	dlam (~user@2600:1700:dac0:52d0:506d:6f34:9e95:7c6b) has joined #python
2020-05-23 03:53:04	jwhisnant	(or both) :)
2020-05-23 03:53:06	lenochka	graingert: the tutorial isn't wrong.
2020-05-23 03:53:22	lenochka	what am I misinterpreting?
2020-05-23 03:53:26	lenochka	I'll paste the example in a sec
2020-05-23 03:53:32	graingert	a smart move
2020-05-23 03:54:24	lenochka	there! https://bpa.st/XQNA
2020-05-23 03:54:31	-->	abf (~abf@2601:404:c100:7e40::16f8) has joined #python
2020-05-23 03:54:34	lenochka	the idea is not use asyncio.run for educational purpose
2020-05-23 03:54:48	-->	nbro (~nbro@2a02:aa13:3142:3100:89c9:decf:9f42:c52c) has joined #python
2020-05-23 03:55:09	[Tritium]	lenochka: I assume the integers at the end of some lines are not literally in the code?
2020-05-23 03:55:20	lenochka	yeah.. obviously
2020-05-23 03:55:33	ChrisWarrick	lenochka: I don’t understand what you’re trying to do here
2020-05-23 03:55:35	<--	millido (~millido@148-252-99.248.3p.ntebredband.no) has quit (Remote host closed the connection)
2020-05-23 03:55:38	[Tritium]	lenochka: you need to hang out in here more if thats "obvious" :)
2020-05-23 03:55:46	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 03:55:57	lenochka	ChrisWarrick: I am trying to run that example :D
2020-05-23 03:56:01	lenochka	and understand it
2020-05-23 03:56:05	lenochka	I can run it
2020-05-23 03:56:06	ChrisWarrick	lenochka: this example is terrible
2020-05-23 03:56:12	<--	renich (~renich@189.192.133.251) has quit (Ping timeout: 265 seconds)
2020-05-23 03:56:16	-->	millido (~millido@148-252-99.248.3p.ntebredband.no) has joined #python
2020-05-23 03:56:20	lenochka	OK, I dont want to hear how terrible is the example
2020-05-23 03:56:20	supakeen	I don't understand what it's trying to do.
2020-05-23 03:56:23	ChrisWarrick	lenochka: loop.create_task schedules the task already
2020-05-23 03:56:24	lenochka	It has a purpose
2020-05-23 03:56:45	<--	millido (~millido@148-252-99.248.3p.ntebredband.no) has quit (Client Quit)
2020-05-23 03:56:46	lenochka	ChrisWarrick: ok, and?
2020-05-23 03:56:59	ChrisWarrick	lenochka: if you want to run them later at once, don’t schedule them
2020-05-23 03:57:00	lenochka	it does schedule
2020-05-23 03:57:08	<--	jay-m_ (~jay-m@129.0.205.80) has quit (Read error: Connection reset by peer)
2020-05-23 03:57:23	graingert	lenochka: you can do this instead: https://github.com/python/cpython/blob/3.8/Lib/asyncio/runners.py#L53
2020-05-23 03:57:25	ChrisWarrick	lenochka: asyncio.gather(main(), main(), main(), return_exceptions=True)
2020-05-23 03:57:40	<--	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has quit (Quit: Connection closed)
2020-05-23 03:57:43	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 240 seconds)
2020-05-23 03:57:55	lenochka	I think we gather at the end not for that main() task
2020-05-23 03:57:56	-->	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has joined #python
2020-05-23 03:58:01	graingert	lenochka: it's because coros can start other tasks
2020-05-23 03:58:14	supakeen	Perhaps it's an effort to cancel all running coroutines after main has ended (not that there are any)?
2020-05-23 03:58:16	lenochka	we gather to catch anything that was scheduled but wasn't completed
2020-05-23 03:58:22	supakeen	But like.
2020-05-23 03:58:24	-->	tomtomgps (~tomtomgps@2a01:cb14:4f6:8f00:875e:f9de:c940:505a) has joined #python
2020-05-23 03:58:26	lenochka	supakeen: yes!! this!
2020-05-23 03:58:28	graingert	supakeen: yep it looks like a poor copy of https://github.com/python/cpython/blob/3.8/Lib/asyncio/runners.py#L53
2020-05-23 03:58:40	<--	pradhvan (uid244250@gateway/web/irccloud.com/x-renigkpfxbqltzyk) has quit (Quit: Connection closed for inactivity)
2020-05-23 03:58:42	<--	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has quit (Quit: WeeChat 2.8)
2020-05-23 03:58:44	lenochka	what I am trying to understand here is why do we cancel before gather
2020-05-23 03:58:52	lenochka	why can't we just gather?
2020-05-23 03:59:05	supakeen	lenochka: Because perhaps those coros would be stuck awaiting 'forever'.
2020-05-23 03:59:12	supakeen	So you want to raise CancelledErrors in them.
2020-05-23 03:59:20	lenochka	wouldn't gather get them?
2020-05-23 03:59:26	supakeen	lenochka: They wouldn't finish.
2020-05-23 03:59:35	<--	edlinde (~edlinde@203.191.56.226) has quit (Ping timeout: 265 seconds)
2020-05-23 03:59:41	graingert	lenochka: you've posted a poor alternative to asyncio.run
2020-05-23 03:59:42	supakeen	Imagine just `await asyncio.sleep(123123123123)`.
2020-05-23 03:59:46	supakeen	But yea.
2020-05-23 03:59:51	lenochka	but then why even gather if you anyway have a list of them
2020-05-23 04:00:05	lenochka	and you can just cancel them and goodbye
2020-05-23 04:00:05	lenochka	no need to gather
2020-05-23 04:00:17	supakeen	Because they aren't done after the cancel.
2020-05-23 04:00:22	<--	CodePoint (~CodePoint@99-89-92-208.lightspeed.tukrga.sbcglobal.net) has quit (Quit: WeeChat 1.9.1)
2020-05-23 04:00:24	supakeen	They might be doing cleanup or what have you.
2020-05-23 04:00:32	lenochka	I just dont understand why we have both cancel and gather
2020-05-23 04:00:32	lenochka	why not?
2020-05-23 04:00:33	graingert	lenochka: things might be in a try: await finally:
2020-05-23 04:00:41	<--	bomb-on (~bomb-on@139-142-17-89.fiber.hringdu.is) has quit (Quit: SO LONG, SUCKERS!)
2020-05-23 04:01:00	lenochka	what means "done"?
2020-05-23 04:01:03	-->	floatingman (~dnewman@c-69-139-119-74.hsd1.tn.comcast.net) has joined #python
2020-05-23 04:06:46	--	irc: disconnected from server
2020-05-23 04:08:32	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-23 04:08:32	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-23 04:08:32	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-23 04:08:32	--	Channel #python: 1920 nicks (0 ops, 0 voices, 1920 normals)
2020-05-23 04:08:34	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-23 04:08:37	-->	P1ro (~quassel@gentoo/user/p1ro) has joined #python
2020-05-23 04:08:39	lenochka	to me it would seem intuitive that if you cancel a task, you are done with it
2020-05-23 04:08:40	<--	fweht (uid404746@gateway/web/irccloud.com/x-mjksvdbihmdzkqje) has quit (Quit: Connection closed for inactivity)
2020-05-23 04:08:51	lenochka	after all you are sending a cancellation so it has nothing else to do
2020-05-23 04:09:00	graingert	https://www.irccloud.com/pastebin/WrYoYVnl/database.py
2020-05-23 04:09:07	graingert	lenochka: ok what about that ^
2020-05-23 04:09:14	graingert	you need it to rollback the transaction
2020-05-23 04:09:35	-->	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has joined #python
2020-05-23 04:09:40	<--	Seirdy (~Seirdy@149.248.24.10) has quit (Quit: exiting 2.9-dev)
2020-05-23 04:09:49	lenochka	well you can do that with try finally
2020-05-23 04:09:54	lenochka	but why would you need to gather?
2020-05-23 04:09:58	-->	Python_2020 (uid84198@gateway/web/irccloud.com/x-rmdwntzvwkhroqxz) has joined #python
2020-05-23 04:10:09	graingert	you need to await the tasks for them to execute
2020-05-23 04:10:29	lenochka	after an exception is raised finally is still run
2020-05-23 04:10:31	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-05-23 04:10:33	graingert	nope
2020-05-23 04:10:40	graingert	well sorta
2020-05-23 04:10:43	lenochka	what?
2020-05-23 04:10:51	graingert	once it hits an await it doesn't execute
2020-05-23 04:10:53	lenochka	finally is run even if you have an exception
2020-05-23 04:11:06	lenochka	what await?
2020-05-23 04:11:07	<--	Hal9k (~Hal9k@unaffiliated/kusanagi) has quit (Remote host closed the connection)
2020-05-23 04:11:08	lenochka	there's no await
2020-05-23 04:11:09	graingert	sure but the task doesn't get to execute unless you gather and run it
2020-05-23 04:11:23	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 240 seconds)
2020-05-23 04:11:24	graingert	in the await tx.__aexit__()
2020-05-23 04:11:28	lenochka	it does get to execute, because you created a task and started the lop
2020-05-23 04:11:31	graingert	or the await undo_the_thing()
2020-05-23 04:11:36	graingert	it doesn't though
2020-05-23 04:11:48	-->	Hal9k (~Hal9k@unaffiliated/kusanagi) has joined #python
2020-05-23 04:11:51	graingert	as soon as the loop stops (in run_until_complete) the task cannot continue
2020-05-23 04:12:00	lenochka	hmm
2020-05-23 04:12:35	lenochka	maybe...
2020-05-23 04:12:40	graingert	no definitely
2020-05-23 04:12:56	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-05-23 04:12:57	lenochka	hmm, ok
2020-05-23 04:12:58	-->	bomb-on (~bomb-on@139-142-17-89.fiber.hringdu.is) has joined #python
2020-05-23 04:13:05	<--	Beanzilla (~Beanzilla@unaffiliated/beanzilla) has quit (Quit: Nap time!)
2020-05-23 04:13:10	lenochka	so you are saying those tasks are paused sort of
2020-05-23 04:13:21	lenochka	once the run_until_complete is run
2020-05-23 04:13:30	lenochka	is finished
2020-05-23 04:13:33	-->	SpinTronix (~SpinTroni@37.209.46.140) has joined #python
2020-05-23 04:13:35	-->	flex14 (~flex14@c-75-70-155-244.hsd1.co.comcast.net) has joined #python
2020-05-23 04:13:44	<--	troulouliou_div2 (~troulouli@unaffiliated/troulouliou-div2/x-0271439) has quit (Quit: Leaving)
2020-05-23 04:14:24	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2020-05-23 04:15:25	-->	jarthur_ (~jarthur@2605:6000:1019:4971:e41f:77b7:82c6:10d2) has joined #python
2020-05-23 04:15:34	lenochka	that is strange though... To be honest I am not sure what exactly is run_until_complete
2020-05-23 04:15:44	lenochka	I guess it stops the loop right after it's executed
2020-05-23 04:16:16	bjs	lenochka: it doesn't 'stop' the loop it just returns once the task has finished that you told it to run.  I'm not sure how this conversation relates to your original paste
2020-05-23 04:16:19	bjs	I lost some context in between
2020-05-23 04:16:40	CoolerZ	how can I test out tqdm?
2020-05-23 04:16:45	lenochka	bjs: if so, then why aren't the other tasks run?
2020-05-23 04:16:51	bjs	lenochka: what other tasks?
2020-05-23 04:16:57	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 04:17:00	CoolerZ	will for i in tqdm(range(10)): sleep(1)  work?
2020-05-23 04:17:13	lenochka	anyway, my initial question was why do cancel and gather at the end for cleanup
2020-05-23 04:17:28	ChrisWarrick	CoolerZ: yes
2020-05-23 04:17:46	lenochka	why isn't cancel enough
2020-05-23 04:17:50	<--	bigjazzsound (~craig.fie@75-60-207-113.lightspeed.tukrga.sbcglobal.net) has quit (Quit: leaving)
2020-05-23 04:17:59	<--	vuoto (~vuoto@80.71.142.174) has quit (Quit: WeeChat 2.9-dev)
2020-05-23 04:18:01	bjs	lenochka: because a cancel is just an exception that gets raised in the task
2020-05-23 04:18:08	bjs	lenochka: which doesn't happen immediately
2020-05-23 04:18:11	CoolerZ	ChrisWarrick, something weird is happening
2020-05-23 04:18:13	bjs	lenochka: it happens when the task is next scheduled.
2020-05-23 04:18:18	CoolerZ	it doesn't print the progressbar
2020-05-23 04:18:40	lenochka	ok, it gets scheduled and gets run at some point, where it does the cleanup in the finally
2020-05-23 04:18:49	-->	ferdna (~ferdna@cpe-69-23-148-218.elp.res.rr.com) has joined #python
2020-05-23 04:18:50	-->	ClaymorePT (~Claymore@188.251.245.88) has joined #python
2020-05-23 04:18:54	ChrisWarrick	CoolerZ: cannot reproduce
2020-05-23 04:18:56	bjs	lenochka: what's "the finally",  what finally?
2020-05-23 04:19:03	<--	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has quit (Ping timeout: 240 seconds)
2020-05-23 04:19:14	CoolerZ	how do I send you an image?
2020-05-23 04:19:15	lenochka	bjs: sorry :D I mean that in the task you have the try except finally
2020-05-23 04:19:21	CoolerZ	do you have a wormhole?
2020-05-23 04:19:26	lenochka	bjs: in the finally you do cleanup
2020-05-23 04:19:26	<--	jarthur (~jarthur@2605:6000:1019:4971:84c9:79ce:8982:d224) has quit (Ping timeout: 260 seconds)
2020-05-23 04:19:29	bjs	lenochka: I didn't mention any try except finallies
2020-05-23 04:19:32	ChrisWarrick	CoolerZ: show full code that reproduces the issue
2020-05-23 04:19:40	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 272 seconds)
2020-05-23 04:19:51	CoolerZ	ChrisWarrick, https://i.imgur.com/MIH81DI.png
2020-05-23 04:20:01	<--	jarthur_ (~jarthur@2605:6000:1019:4971:e41f:77b7:82c6:10d2) has quit (Ping timeout: 260 seconds)
2020-05-23 04:20:04	-->	gopper (~Gr@188.252.198.26) has joined #python
2020-05-23 04:20:12	lenochka	bjb: ok, have you seen the example I pasted?
2020-05-23 04:20:30	ChrisWarrick	CoolerZ: can you reproduce outside of tmux? (unlikely, but still)
2020-05-23 04:20:34	-->	ThePortWhisperer (~ThePortWh@unaffiliated/theportwhisperer) has joined #python
2020-05-23 04:20:40	bjs	lenochka: I saw https://bpa.st/XQNA
2020-05-23 04:20:45	CoolerZ	ChrisWarrick, https://bpa.st/ZQOQ
2020-05-23 04:21:01	CoolerZ	I commented out the part does the heavy work
2020-05-23 04:21:12	<--	kndee (~kndee@89-67-112-11.dynamic.chello.pl) has quit (Ping timeout: 260 seconds)
2020-05-23 04:21:14	lenochka	bjs: yes, that's the one. Could you explain why do we do gather at the end?
2020-05-23 04:21:15	ChrisWarrick	CoolerZ: that’s a long sample
2020-05-23 04:21:15	CoolerZ	line 42
2020-05-23 04:21:19	<--	gopper (~Gr@188.252.198.26) has quit (Client Quit)
2020-05-23 04:21:24	bjs	lenochka: in this example I don't think it does anything
2020-05-23 04:21:24	ChrisWarrick	CoolerZ: this should work if your terminal works
2020-05-23 04:21:27	-->	sphenxes (~sphenxes@80.123.111.76) has joined #python
2020-05-23 04:21:27	<--	kosh (~kosh@p200300d08f0d6000bc1bd3b324cd725b.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-05-23 04:21:38	CoolerZ	ChrisWarrick, I have 2 other scripts running in other tmux tabs
2020-05-23 04:21:42	CoolerZ	those have progress bars
2020-05-23 04:21:43	bjs	lenochka: because the tasks are already finished
2020-05-23 04:21:46	bjs	task
2020-05-23 04:21:47	lenochka	bjs: in this example yes, because we have just one task
2020-05-23 04:21:47	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 04:21:57	lenochka	bjb: but what if there was an unfinished one
2020-05-23 04:21:58	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 04:22:29	-->	Dubroialon (~tedflint@host213-120-54-124.range213-120.btcentralplus.com) has joined #python
2020-05-23 04:22:50	CoolerZ	ChrisWarrick, I changed it to for i, hypo in tqdm(enumerate(hypos[:420]), total=420):
2020-05-23 04:22:53	CoolerZ	and now it works
2020-05-23 04:22:56	-->	cry0 (~cry0@2607:fea8:8520:4a01:9c93:c534:7767:ad4a) has joined #python
2020-05-23 04:22:57	<--	aslicedbanjo (~aslicedba@host86-160-16-10.range86-160.btcentralplus.com) has quit (Quit: Leaving.)
2020-05-23 04:23:03	lenochka	bjb: aren't those unfinished tasks still run after the first run_until_complete?
2020-05-23 04:23:03	CoolerZ	it seems for whatever reason it can't get the length of the list?
2020-05-23 04:23:07	lenochka	they are cancelled
2020-05-23 04:23:13	nedbat	CoolerZ: enumerate doesn't make a list
2020-05-23 04:23:19	CoolerZ	but on line 38 it prints out the length
2020-05-23 04:23:27	CoolerZ	nedbat, oh
2020-05-23 04:23:27	nedbat	CoolerZ: hypos is a list.
2020-05-23 04:23:31	CoolerZ	I see
2020-05-23 04:23:44	CoolerZ	so enumerate(tqdm(hypos)):
2020-05-23 04:23:45	-->	cisco (~cisco@a109-49-63-150.cpe.netcabo.pt) has joined #python
2020-05-23 04:24:03	<--	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-115.dsl.bell.ca) has quit (Ping timeout: 258 seconds)
2020-05-23 04:24:13	-->	XenGi (~quassel@c-base/crew/XeN) has joined #python
2020-05-23 04:24:37	graingert	https://www.irccloud.com/pastebin/o7CarfNP/lenochka.py
2020-05-23 04:24:41	graingert	lenochka: try that
2020-05-23 04:24:43	graingert	with 0 1 and 2
2020-05-23 04:25:00	graingert	./lenocha.py 0; ./lenocha.py 1; ./lenocha.py 2;
2020-05-23 04:25:22	lenochka	graingert: k, thanks, will try
2020-05-23 04:25:23	CoolerZ	nedbat, these things are never as transparent as I want them to be
2020-05-23 04:25:24	graingert	python3.8 ./lenocha.py 0; python3.8 ./lenocha.py 1; python3.8 ./lenocha.py 2;
2020-05-23 04:25:25	graingert	even
2020-05-23 04:25:35	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 04:25:41	<--	hyper_dave (~hyper_dav@196.188.242.167) has quit (Ping timeout: 256 seconds)
2020-05-23 04:25:48	-->	eukreign (~lex@64.223.173.35) has joined #python
2020-05-23 04:26:30	-->	kndee (~kndee@89-67-112-11.dynamic.chello.pl) has joined #python
2020-05-23 04:26:36	<--	sphenxes (~sphenxes@80.123.111.76) has quit (Ping timeout: 256 seconds)
2020-05-23 04:26:45	-->	Seirdy (~Seirdy@68.235.43.134) has joined #python
2020-05-23 04:27:01	graingert	essentially because asyncio allows tasks to be created without any attachment to their parent task
2020-05-23 04:27:15	graingert	trio and anyio forces you to spawn tasks in a scope
2020-05-23 04:27:23	bjs	lenochka: my name isn't bjb.  Also taks can be bad and cancel the cancel by swallowing the exception
2020-05-23 04:27:27	bjs	lenochka: as in graingert's example
2020-05-23 04:27:38	graingert	I don't cancel the cancel
2020-05-23 04:27:56	graingert	bjs: the code is well behaved, except that it starts a task and forgets about it
2020-05-23 04:27:57	lenochka	sorry! bjs
2020-05-23 04:28:23	<--	Dubroialon (~tedflint@host213-120-54-124.range213-120.btcentralplus.com) has quit (Quit: Leaving)
2020-05-23 04:28:27	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 260 seconds)
2020-05-23 04:28:32	lenochka	bjs: if we assume they are good and do not swallow anything, would we still need the gather?
2020-05-23 04:28:46	graingert	lenochka: yes, did you see the output?
2020-05-23 04:28:50	-->	renich (~renich@189.192.133.251) has joined #python
2020-05-23 04:28:59	lenochka	graingert: not yet
2020-05-23 04:28:59	<--	sublade (~anonymous@31.132.35.96) has quit (Ping timeout: 260 seconds)
2020-05-23 04:29:00	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-05-23 04:29:12	eukreign	graingert, i managed to fix the issue by adding buffering in my event publishing class (works really well now and is actually faster/higher throughput than before): https://bpa.st/XGQQ
2020-05-23 04:29:21	-->	hd1 (4c5b0bf5@gateway/web/cgi-irc/kiwiirc.com/ip.76.91.11.245) has joined #python
2020-05-23 04:29:25	<--	hd1 (4c5b0bf5@gateway/web/cgi-irc/kiwiirc.com/ip.76.91.11.245) has left #python
2020-05-23 04:29:25	<--	kunningd (~qwe@unaffiliated/kunningd) has quit (Ping timeout: 258 seconds)
2020-05-23 04:29:32	graingert	lenochka: see if you can get mode 1 to print the f"cancelled {v=}" message
2020-05-23 04:29:38	graingert	lenochka: without using gather
2020-05-23 04:30:11	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 04:30:28	-->	hyper_dave (~hyper_dav@196.188.242.167) has joined #python
2020-05-23 04:30:35	-->	sphenxes (~sphenxes@80.123.111.76) has joined #python
2020-05-23 04:31:02	-->	Laniakea (~Laniakea@2.30.100.73) has joined #python
2020-05-23 04:31:09	-->	sublade (~anonymous@31.132.35.96) has joined #python
2020-05-23 04:31:29	<--	cisco (~cisco@a109-49-63-150.cpe.netcabo.pt) has quit (Ping timeout: 265 seconds)
2020-05-23 04:31:38	-->	kunningd (~qwe@unaffiliated/kunningd) has joined #python
2020-05-23 04:31:57	-->	Archaeus6 (~archaeus@2607:fea8:6520:19ce::9) has joined #python
2020-05-23 04:32:01	<--	Archaeus6 (~archaeus@2607:fea8:6520:19ce::9) has left #python
2020-05-23 04:33:02	<--	bitdex (~bitdex@gateway/tor-sasl/bitdex) has quit (Remote host closed the connection)
2020-05-23 04:33:28	<--	multifractal (~multifrac@host-92-2-120-196.as43234.net) has quit (Ping timeout: 256 seconds)
2020-05-23 04:33:36	<--	XenGi (~quassel@c-base/crew/XeN) has quit (Ping timeout: 252 seconds)
2020-05-23 04:33:55	-->	bitdex (~bitdex@gateway/tor-sasl/bitdex) has joined #python
2020-05-23 04:34:45	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2020-05-23 04:35:10	<--	djapo (~archie@unaffiliated/djapo) has quit (Ping timeout: 258 seconds)
2020-05-23 04:35:43	<--	loreloc (~loreloc@host81-77-dynamic.247-95-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2020-05-23 04:36:02	<--	neceve (~quassel@unaffiliated/neceve) has quit (Ping timeout: 260 seconds)
2020-05-23 04:36:36	<--	gato (57cf4dfc@gateway/web/cgi-irc/kiwiirc.com/ip.87.207.77.252) has quit (Ping timeout: 260 seconds)
2020-05-23 04:37:01	<--	hyper_dave (~hyper_dav@196.188.242.167) has quit (Ping timeout: 256 seconds)
2020-05-23 04:37:35	<--	eukreign (~lex@64.223.173.35) has quit (Quit: Ex-Chat)
2020-05-23 04:39:14	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 246 seconds)
2020-05-23 04:39:23	-->	billybigrigger2 (~billybigr@S0106000c292e42fd.cg.shawcable.net) has joined #python
2020-05-23 04:39:59	<--	billybigrigger (~billybigr@S0106000c292e42fd.cg.shawcable.net) has quit (Ping timeout: 264 seconds)
2020-05-23 04:39:59	--	billybigrigger2 is now known as billybigrigger
2020-05-23 04:40:12	-->	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has joined #python
2020-05-23 04:42:41	-->	lauxley (~lauxley@2a01:e35:2fd5:2700:bc21:a00c:b260:8b02) has joined #python
2020-05-23 04:43:36	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 258 seconds)
2020-05-23 04:43:46	-->	gdarko (~sparky@77.29.52.139) has joined #python
2020-05-23 04:44:06	<--	Conjecture (~Conjectur@mobile-166-175-62-176.mycingular.net) has quit (Remote host closed the connection)
2020-05-23 04:44:23	gdarko	Any idea why the list is loosing it's value after iterating over it with for loop? I mean i can't iterate it again, no values in the list.
2020-05-23 04:44:29	-->	jarthur (~jarthur@2605:6000:1019:4971:d895:ef0a:c2c0:4b3e) has joined #python
2020-05-23 04:44:29	-->	Conjecture (~Conjectur@mobile-166-175-62-176.mycingular.net) has joined #python
2020-05-23 04:44:34	graingert	gdarko: show your code
2020-05-23 04:44:36	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 04:45:01	Nalt	Can someone point me to the documentation for 'with open ...  as f' https://i.imgur.com/HYF4TPR.png ? I cannot find it
2020-05-23 04:45:24	graingert	Nalt: https://docs.python.org/3/library/functions.html#open
2020-05-23 04:45:31	<--	Laniakea (~Laniakea@2.30.100.73) has quit (Ping timeout: 256 seconds)
2020-05-23 04:46:05	-->	akoana (~ah@089144219204.atnat0028.highway.a1.net) has joined #python
2020-05-23 04:46:07	Nalt	I don't see the 'with' thing there
2020-05-23 04:46:20	<--	nullheroes (~danielvu@168.235.66.22) has quit (Quit: WeeChat 2.8)
2020-05-23 04:46:31	graingert	Nalt: https://docs.python.org/3/library/io.html#io.IOBase
2020-05-23 04:46:37	graingert	Nalt: open returns an IOBase instance
2020-05-23 04:46:46	Nalt	ooh
2020-05-23 04:46:58	nedbat	gdarko: probably it isn't a list. it's a generator.
2020-05-23 04:47:04	-->	katana (~hentai@unaffiliated/katana) has joined #python
2020-05-23 04:47:13	Nalt	hm, and that ".format(x)" ?
2020-05-23 04:47:15	<--	jarthur (~jarthur@2605:6000:1019:4971:d895:ef0a:c2c0:4b3e) has quit (Remote host closed the connection)
2020-05-23 04:47:22	gdarko	nedbat: Yes, it's generator.
2020-05-23 04:47:34	-->	multifractal (~multifrac@host-92-2-120-196.as43234.net) has joined #python
2020-05-23 04:47:34	gdarko	https://bpa.st/KXWQ both find_* functions return generators
2020-05-23 04:47:38	nedbat	gdarko: ok, that's why: you can't re-iterate it
2020-05-23 04:47:42	<--	a_b_m (~abm@088156197168.unknown.vectranet.pl) has quit (Remote host closed the connection)
2020-05-23 04:47:57	<--	naitsabe1 (~naitsabes@unaffiliated/naitsabes) has quit (Quit: WeeChat 2.8)
2020-05-23 04:48:00	nedbat	gdarko: put the print inside the second loop and only have one loop
2020-05-23 04:48:04	-->	nullheroes (~danielvu@168.235.66.22) has joined #python
2020-05-23 04:48:16	nedbat	gdarko: hmm, except you have three...
2020-05-23 04:48:41	<--	Smeef (~deathonat@unaffiliated/smeef) has quit (Quit: (╯°□°）╯︵ ┻━━┻)
2020-05-23 04:48:42	gdarko	nedbat: those were for testing only, sorry. I am going to convert the generators to list now and clean up the code
2020-05-23 04:50:23	<--	recursive_curse (~miller@S0106f81d0f6109e3.wp.shawcable.net) has quit (Quit: leaving)
2020-05-23 04:50:57	-->	CoolerY (~coolerext@202.83.42.165) has joined #python
2020-05-23 04:51:55	<--	P1ro (~quassel@gentoo/user/p1ro) has quit (Quit: No Ping reply in 180 seconds.)
2020-05-23 04:52:04	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 04:52:20	<--	eXino (~eXino@5E8A5920.rev.sefiber.dk) has quit (Remote host closed the connection)
2020-05-23 04:53:15	<--	medard (~medard@unaffiliated/medard) has quit (Quit: Leaving)
2020-05-23 04:53:16	-->	P1ro (~quassel@gentoo/user/p1ro) has joined #python
2020-05-23 04:53:37	velix	gdarko: I've built a wheel and source package now, yipee. How can I inject/install it into the existing venv created by pipx the best way? Perhaps runpip?
2020-05-23 04:54:05	<--	DeadTOm (~deadtom@174-045-073-016.res.spectrum.com) has quit (Quit: DeadTOm)
2020-05-23 04:54:38	<--	CoolerZ (~coolerext@202.83.42.165) has quit (Ping timeout: 246 seconds)
2020-05-23 04:55:03	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2020-05-23 04:56:04	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 04:57:23	<--	honigkuchen (~honigkuch@ip5f5a65af.dynamic.kabel-deutschland.de) has quit (Ping timeout: 264 seconds)
2020-05-23 04:57:51	<--	codingthings (~codingthi@ool-182ec1d7.dyn.optonline.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 04:58:02	velix	This could work: pipx runpip --verbose mapproxy "install $PWD/mapnik-3.0.23-cp37-cp37m-linux_x86_64.whl"
2020-05-23 04:58:46	velix	ERROR: unknown command "install"
2020-05-23 04:58:51	bjs	gdarko: lists and generators aren't the same thing and they behave differently when you iterate them
2020-05-23 04:59:30	-->	Smeef (~deathonat@unaffiliated/smeef) has joined #python
2020-05-23 04:59:46	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 264 seconds)
2020-05-23 04:59:47	<--	cry0 (~cry0@2607:fea8:8520:4a01:9c93:c534:7767:ad4a) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2020-05-23 04:59:54	<--	Techcable (znc@irc.techcable.net) has quit (Quit: ZNC - http://znc.in)
2020-05-23 05:00:10	<--	[MNEMONIC] (~while@62-210-114-224.rev.poneytelecom.eu) has quit (Read error: Connection reset by peer)
2020-05-23 05:00:13	<--	dastier (~dastier@178.127.56.107) has quit (Remote host closed the connection)
2020-05-23 05:00:22	-->	[MNEMONIC] (~while@62-210-114-224.rev.poneytelecom.eu) has joined #python
2020-05-23 05:00:31	velix	ah, got it working.
2020-05-23 05:00:41	velix	pipx inject mapproxy ./mapnik-3.0.23-cp37-cp37m-linux_x86_64.whl
2020-05-23 05:00:49	<--	XanGotBan (~XanGotBan@148.251.76.131) has quit (Quit: Seeya bois.)
2020-05-23 05:01:26	Nalt	in python for the regular expression package: https://docs.python.org/3.8/library/re.html How do I parse on every second or third tab?
2020-05-23 05:02:00	-->	aleagori (~ale@2a02:a312:c63d:8e00:c411:258a:9840:3209) has joined #python
2020-05-23 05:02:12	-->	Techcable (znc@irc.techcable.net) has joined #python
2020-05-23 05:02:14	-->	XanGotBan (~XanGotBan@148.251.76.131) has joined #python
2020-05-23 05:02:15	<--	sphenxes (~sphenxes@80.123.111.76) has quit (Quit: Leaving)
2020-05-23 05:02:37	Nalt	doing re.split('\s*[\t]\s*') does every tab, but I am trying to figure out how to do every second or third tab
2020-05-23 05:03:14	<--	audiofile (~notanaudi@unaffiliated/audiofile) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-05-23 05:03:31	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 05:03:32	velix	grym: Yipee. Lib has been found. Thanks for help.
2020-05-23 05:03:38	SnoopJeDi	Nalt, you might just want to use str.partition() with "\t" instead
2020-05-23 05:04:06	-->	slivera (~slivera@116.206.228.243) has joined #python
2020-05-23 05:04:27	SnoopJeDi	then slice the result and fuse the slices back together
2020-05-23 05:04:34	SnoopJeDi	(where appropriate, I mean)
2020-05-23 05:04:40	-->	jaziz (~jaziz@unaffiliated/jaziz) has joined #python
2020-05-23 05:04:58	-->	whiteduk3 (~whiteduk3@82.118.6.114) has joined #python
2020-05-23 05:05:12	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 256 seconds)
2020-05-23 05:05:33	<--	Pio (~pio@167.71.127.248) has quit (Quit: Coyote finally caught me)
2020-05-23 05:05:49	Nalt	mmm...
2020-05-23 05:05:50	<--	kunningd (~qwe@unaffiliated/kunningd) has quit (Ping timeout: 258 seconds)
2020-05-23 05:06:01	-->	Pio (~pio@167.71.127.248) has joined #python
2020-05-23 05:06:14	<--	whiteduk3 (~whiteduk3@82.118.6.114) has quit (Client Quit)
2020-05-23 05:06:36	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Client Quit)
2020-05-23 05:06:56	<--	FnorZ (~FnorZ@unaffiliated/fnorz) has quit (Ping timeout: 260 seconds)
2020-05-23 05:07:44	<--	lazarus1 (~lazarus1@91.214.44.137) has quit (Read error: Connection reset by peer)
2020-05-23 05:07:57	<--	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-05-23 05:08:04	-->	kunningd (~qwe@unaffiliated/kunningd) has joined #python
2020-05-23 05:08:53	-->	snits (jsnitsel@nat/redhat/x-kjiogphadpbczhcq) has joined #python
2020-05-23 05:09:26	<--	nbro (~nbro@2a02:aa13:3142:3100:89c9:decf:9f42:c52c) has quit (Remote host closed the connection)
2020-05-23 05:10:05	<--	edlinde (~edlinde@183.83.146.78) has quit (Quit: edlinde)
2020-05-23 05:10:14	<--	snits (jsnitsel@nat/redhat/x-kjiogphadpbczhcq) has quit (Read error: Connection reset by peer)
2020-05-23 05:10:26	<--	legola (~legola@unaffiliated/legola) has quit (Remote host closed the connection)
2020-05-23 05:10:47	-->	brad (~brad@2600:1700:b420:d360:4e1d:96ff:fea6:3c59) has joined #python
2020-05-23 05:10:56	--	brad is now known as Brad73
2020-05-23 05:10:59	<--	Silmarilion (~Silmarili@87.116.183.249) has quit (Quit: Leaving)
2020-05-23 05:11:39	Brad73	Hi does anyone know how to get terminal commands like control+a control+k (start of buffer, kill buffer) working in pycharm python console?
2020-05-23 05:12:15	-->	abm (~abm@088156197168.unknown.vectranet.pl) has joined #python
2020-05-23 05:12:31	-->	AugustusCaesar24 (~AugustusC@99-190-112-116.lightspeed.irvnca.sbcglobal.net) has joined #python
2020-05-23 05:12:48	velix	Can I make this build in parallel? python3 setup.py sdist bdist_wheel
2020-05-23 05:13:15	-->	Conjecture_ (~Conjectur@mobile-166-175-57-63.mycingular.net) has joined #python
2020-05-23 05:13:21	meejah	velix: run two commands ("python3 setup.py sdist" and "... bdist_wheel")
2020-05-23 05:13:49	velix	meejah: Do I need sdist at all? my pip3 is up to date.
2020-05-23 05:13:59	-->	snits (jsnitsel@nat/redhat/x-kclvfaagrokyfwoh) has joined #python
2020-05-23 05:14:00	graingert	velix: you probably don't need sdist
2020-05-23 05:14:07	velix	graingert: Okay :)
2020-05-23 05:14:13	meejah	velix: depends if you want a .tar.gz or just wheels
2020-05-23 05:14:32	velix	meejah: Actually, wheels worked here. And I'm not planning to update it
2020-05-23 05:14:46	<--	kapsh (~kapsh@broadband-46-242-13-201.ip.moscow.rt.ru) has quit (Ping timeout: 264 seconds)
2020-05-23 05:15:22	s_	does anyone know why the re.Scanner documentation is missing?
2020-05-23 05:15:23	<--	Conjecture (~Conjectur@mobile-166-175-62-176.mycingular.net) has quit (Ping timeout: 240 seconds)
2020-05-23 05:15:44	s_	is it raymond hettinger's fault? heh
2020-05-23 05:16:33	syntaxman	What is the practical difference between a) setting a variable inside the __init__() function, and b) setting it in the class definition outside of any function?
2020-05-23 05:16:45	<--	jcarl43 (~jcarl@S01061c1b689d9d2f.vc.shawcable.net) has quit (Quit: WeeChat 2.8)
2020-05-23 05:16:49	<--	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has quit (Quit: fission6)
2020-05-23 05:17:23	s_	its very weird. the docs actually have an implementation of a scanner in them... https://docs.python.org/3/library/re.html#writing-a-tokenizer
2020-05-23 05:17:31	-->	sid21g (~sid21g@2409:4052:601:6e66:6832:248b:186a:dc61) has joined #python
2020-05-23 05:17:31	<--	P1ro (~quassel@gentoo/user/p1ro) has quit (Ping timeout: 260 seconds)
2020-05-23 05:18:32	sid21g	Hey guys! Wanted to know the difference between dictionary and python objects, if they are similar why are we able to access members of one with dot and not other? Or are they not similar?
2020-05-23 05:18:34	<--	purplex88 (75cd302f@gateway/web/cgi-irc/kiwiirc.com/ip.117.205.48.47) has quit (Ping timeout: 272 seconds)
2020-05-23 05:18:49	velix	Hmm, but can I run bdist_wheel in parallel? Sorry, I've read, `bdist_wheel -- -- -j24` might work?
2020-05-23 05:19:05	dsc_	-j24? you mad man
2020-05-23 05:19:47	vlt	sid21g: Dicts can have other types than strings as keys, for example.
2020-05-23 05:20:13	<--	quetz (~quetz@93.185.30.25) has quit
2020-05-23 05:20:28	s_	"What's Scanner?" --GVR  https://mail.python.org/pipermail/python-dev/2003-April/035073.html
2020-05-23 05:20:42	velix	dsc_: Why? Xeon :)
2020-05-23 05:21:01	sid21g	thanks vit, that was a good one. Could you tell why can we not access the dict elements using '.'
2020-05-23 05:21:13	Brad73	object."hello" = val ;)
2020-05-23 05:21:58	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 05:22:08	-->	jmarston (~ncostarj@2804:14d:5c9c:828d:490a:e27:5d79:bd06) has joined #python
2020-05-23 05:22:13	velix	dsc_: hmm, seems like my setuptools don't like -j
2020-05-23 05:22:30	vlt	sid21g: For exactly that reason (among others).
2020-05-23 05:22:39	<--	cecep (~weechat@x4db77a29.dyn.telefonica.de) has quit (Ping timeout: 260 seconds)
2020-05-23 05:22:40	<--	sparkles (~sparkles@rrcs-70-63-80-182.midsouth.biz.rr.com) has quit (Ping timeout: 260 seconds)
2020-05-23 05:22:40	<--	Conjecture_ (~Conjectur@mobile-166-175-57-63.mycingular.net) has quit (Read error: Connection reset by peer)
2020-05-23 05:22:57	velix	but `build` seems to have -j
2020-05-23 05:23:01	<--	snails (~snails@pool-96-248-97-17.cmdnnj.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 05:23:13	davidsong	hiya. is there an easy way to execute python scripts from my webserver, like I can bung an index.php in a dir and it just works?
2020-05-23 05:23:13	-->	BigShip[m]9 (~Bigshipm]@unaffiliated/bigship) has joined #python
2020-05-23 05:23:19	nedbat	sid21g: dicts have two kinds of things: keys, which are data, and methods, which are part of the dict class
2020-05-23 05:23:20	<--	djhankb (~djhankb@208.113.164.68) has quit (Quit: Ping timeout (120 seconds))
2020-05-23 05:23:33	davidsong	is CGI what I'm looking for?
2020-05-23 05:23:38	<--	CubicEarth (~CubicEart@c-67-168-1-172.hsd1.wa.comcast.net) has quit (Ping timeout: 272 seconds)
2020-05-23 05:23:40	nedbat	sid21g: if keys were accessed with . , then those two things would be mixed together.
2020-05-23 05:23:44	davidsong	or are there more modern solutions?
2020-05-23 05:23:49	-->	Conjecture (~Conjectur@mobile-166-175-57-63.mycingular.net) has joined #python
2020-05-23 05:23:49	-->	cecep (~weechat@x4db77a29.dyn.telefonica.de) has joined #python
2020-05-23 05:23:49	-->	djhankb (~djhankb@208.113.164.68) has joined #python
2020-05-23 05:23:54	nedbat	sid21g: d['get'] and d.get are two different things, and they don't collide.
2020-05-23 05:24:09	velix	I don't like Python. It's so hard to get support and those 1000 versions and builds and tools makes it as worde as node :(
2020-05-23 05:24:10	<--	calloc (~mrwildric@047-006-018-108.res.spectrum.com) has quit (Ping timeout: 265 seconds)
2020-05-23 05:24:11	s_	does anyone know who "/F" might be in reference to the python re implementation
2020-05-23 05:24:16	<--	foul_owl_ (~foul_owl@104.140.79.44) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:16	<--	death916 (~Death916@unaffiliated/death916) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:18	<--	kype (uid176843@gateway/web/irccloud.com/x-nduqgenrdhtywwuq) has quit (Quit: Connection closed for inactivity)
2020-05-23 05:24:28	velix	as worse*
2020-05-23 05:24:29	nedbat	s_: where do you see that?
2020-05-23 05:24:31	-->	_Warl0ck- (~warl0ck@c-73-83-145-12.hsd1.wa.comcast.net) has joined #python
2020-05-23 05:24:38	s_	nedbat: https://mail.python.org/pipermail/python-dev/2003-April/035070.html
2020-05-23 05:24:39	<--	tomku (~tomku@unaffiliated/tomku) has quit (Ping timeout: 265 seconds)
2020-05-23 05:24:44	<--	lakitu (~lakitu@unaffiliated/lakitu) has quit (Ping timeout: 246 seconds)
2020-05-23 05:24:44	<--	aleagori (~ale@2a02:a312:c63d:8e00:c411:258a:9840:3209) has left #python ("Konversation terminated!")
2020-05-23 05:24:54	<--	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:54	<--	BigShip[m] (~Bigshipm]@unaffiliated/bigship) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:54	<--	seoul_man (~meh@wilug/newlug/seoul-man) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:54	<--	_Warl0ck (~warl0ck@c-73-83-145-12.hsd1.wa.comcast.net) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:54	<--	KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:54	--	BigShip[m]9 is now known as BigShip[m]
2020-05-23 05:24:59	graingert	davidsong: not really no
2020-05-23 05:25:04	graingert	davidsong: you might like django it's very easy
2020-05-23 05:25:21	nedbat	s_: i don't know.  You are digging deep in the archives
2020-05-23 05:25:26	-->	Lucas_Gray (~Wryhder@197.210.226.75) has joined #python
2020-05-23 05:25:32	<--	gimmic (~gimmic@unaffiliated/gimmic) has quit (Ping timeout: 272 seconds)
2020-05-23 05:25:37	-->	Conjecture_ (~Conjectur@mobile-166-175-57-63.mycingular.net) has joined #python
2020-05-23 05:25:52	s_	nedbat: well, yeah. i was hoping to find an answer to the question "Why isn't re.scanner documented?"
2020-05-23 05:26:03	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 05:26:03	<--	Soo_Slow (Soo_Slow@gateway/vpn/privateinternetaccess/sooslow/x-31376162) has quit (Quit: Soo_Slow)
2020-05-23 05:26:17	-->	tomku (~tomku@unaffiliated/tomku) has joined #python
2020-05-23 05:26:20	davidsong	graingert: aw that sucks. I'm basically squirting out a quick script that I want friends to be able to execute from the web. it'd be nice if I could just write it in Python
2020-05-23 05:26:32	-->	gimmic (~gimmic@unaffiliated/gimmic) has joined #python
2020-05-23 05:26:35	nedbat	s_: if you want to know who /F is, I would go back in the git history to april 2003, and git blame
2020-05-23 05:26:36	-->	KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) has joined #python
2020-05-23 05:26:42	<--	flex14 (~flex14@c-75-70-155-244.hsd1.co.comcast.net) has quit (Quit: Leaving, lenovo notebook life (sorry, maybe my battery died?))
2020-05-23 05:26:44	-->	nbro (~nbro@31-10-153-18.cgn.dynamic.upc.ch) has joined #python
2020-05-23 05:26:45	s_	surprisingly little talk about it, esp given its covered in a relatively famous dbeaz presentation on generators where he live codes a compiler
2020-05-23 05:26:53	graingert	davidsong: https://adamj.eu/tech/2019/04/03/django-versus-flask-with-single-file-applications/
2020-05-23 05:27:01	-->	Conjecture__ (~Conjectur@mobile-166-175-57-63.mycingular.net) has joined #python
2020-05-23 05:27:06	graingert	davidsong: you can use django with very little code
2020-05-23 05:27:17	-->	Tanvir (~tanvir@wikimedia/wikitanvir) has joined #python
2020-05-23 05:27:24	Brad73	does anyone know any good introduction to django that is not as wordy as the docs but still very technical?
2020-05-23 05:27:31	nedbat	davidsong: cgi is the closest thing you will find.
2020-05-23 05:27:43	auser0	hello, i am trying to use xpath to find elements which are similar to  <script type="text/template">
2020-05-23 05:28:04	auser0	i did m = root.xpath(".//*[local-name()='script']/[@type='text/template']") but seems wrong, any idea?
2020-05-23 05:28:07	<--	nbro (~nbro@31-10-153-18.cgn.dynamic.upc.ch) has quit (Remote host closed the connection)
2020-05-23 05:28:10	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Remote host closed the connection)
2020-05-23 05:28:23	<--	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has quit (Quit: ZNC - https://znc.in)
2020-05-23 05:28:25	<--	Conjecture (~Conjectur@mobile-166-175-57-63.mycingular.net) has quit (Ping timeout: 256 seconds)
2020-05-23 05:28:32	<--	Conjecture__ (~Conjectur@mobile-166-175-57-63.mycingular.net) has quit (Remote host closed the connection)
2020-05-23 05:28:38	nedbat	auser0: does this not work?  ".//script/[@type='text/template']"
2020-05-23 05:28:46	davidsong	nedbat: I guess I'll give CGI a try. graingert, I don't want to run a webserver, I've already got one of those
2020-05-23 05:28:52	davidsong	thanks guys
2020-05-23 05:28:58	<--	jmarston (~ncostarj@2804:14d:5c9c:828d:490a:e27:5d79:bd06) has quit (Ping timeout: 272 seconds)
2020-05-23 05:29:01	graingert	:/
2020-05-23 05:29:01	nedbat	davidsong: django isn't a webserver
2020-05-23 05:29:11	<--	octav1a (~Rboreal_F@69.136.97.6) has quit (Ping timeout: 264 seconds)
2020-05-23 05:29:25	s_	nedbat: you are testing my git knowledge. fair enough
2020-05-23 05:29:27	graingert	nedbat: it's a wsgi... middleware?
2020-05-23 05:29:33	graingert	or a wsgi app?
2020-05-23 05:29:39	graingert	I'm not sure what it "is"
2020-05-23 05:29:42	-->	calloc (~mrwildric@047-006-018-108.res.spectrum.com) has joined #python
2020-05-23 05:29:46	-->	CubicEarth (~CubicEart@c-67-168-1-172.hsd1.wa.comcast.net) has joined #python
2020-05-23 05:29:58	<--	Conjecture_ (~Conjectur@mobile-166-175-57-63.mycingular.net) has quit (Ping timeout: 246 seconds)
2020-05-23 05:30:16	-->	Conjecture (~Conjectur@mobile-166-175-57-63.mycingular.net) has joined #python
2020-05-23 05:30:48	nedbat	s_: https://github.com/nedbat/cpython/blob/ff139a8a44d079a8261292044c82f128343fea09/Lib/re.py
2020-05-23 05:30:49	-->	foul_owl_ (~foul_owl@104.140.79.44) has joined #python
2020-05-23 05:31:02	bjs	s_: it seems to be written by https://wiki.python.org/moin/FredrikLundh
2020-05-23 05:31:06	nedbat	s_: (oops, that's my fork, but same thing)
2020-05-23 05:31:47	-->	gambl0re (~rickyjw@unaffiliated/gambl0re) has joined #python
2020-05-23 05:31:53	bjs	s_: re.Scanner that is
2020-05-23 05:32:09	SnoopJeDi	s_, http://lucumr.pocoo.org/2015/11/18/pythons-hidden-re-gems/ is also a rewrite and a good article besides
2020-05-23 05:32:14	<--	Betal (~Betal@unaffiliated/betal) has quit (Quit: WeeChat 2.8)
2020-05-23 05:32:26	s_	SnoopJeDi: yeah, found the same article
2020-05-23 05:32:31	davidsong	nedbat: oh I just skim-read the top half. I guess I don't care about routes or anything. I want to spit out some HTML, capture a POST, execute a function
2020-05-23 05:32:50	ChrisWarrick	davidsong: CGI is a thing, but not a very supported or liked thing in the Python world
2020-05-23 05:32:51	davidsong	last time I did something like this I used PHP, and it was awful
2020-05-23 05:32:56	SnoopJeDi	s_, it points out that re.Scanner is undocumented, but also not very useful :)
2020-05-23 05:33:02	-->	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2020-05-23 05:33:17	davidsong	anything as simple as PHP but not as... well, PHP?
2020-05-23 05:33:19	-->	jarthur (~jarthur@2605:6000:1019:4971:d895:ef0a:c2c0:4b3e) has joined #python
2020-05-23 05:33:21	ChrisWarrick	davidsong: what made PHP awful?
2020-05-23 05:33:25	-->	frank1e (~frank1e@unaffiliated/frank1e) has joined #python
2020-05-23 05:33:27	-->	lakitu (~lakitu@unaffiliated/lakitu) has joined #python
2020-05-23 05:33:28	<--	lakitu (~lakitu@unaffiliated/lakitu) has quit (Max SendQ exceeded)
2020-05-23 05:33:46	<--	Tanvir (~tanvir@wikimedia/wikitanvir) has quit (Ping timeout: 272 seconds)
2020-05-23 05:34:10	davidsong	ChrisWarrick: it's just awful. "a fractal of bad design" as others have put it
2020-05-23 05:34:31	-->	Alternity8 (~tinycat@unaffiliated/tinycat) has joined #python
2020-05-23 05:34:34	auser0	ya nedbat errors out too
2020-05-23 05:34:40	Seirdy	hello again everyone! so i think i hit a good baseline level of functionality for my new program weestats (https://git.sr.ht/~seirdy/weestats) which analyzes weechat logs and outputs stats for a given duration (sorting channels by active nicks/messages and displaying chattiest nicks per channel). i was wondering if anybody could take a look.
2020-05-23 05:34:41	Seirdy	i was also wondering if the massive amount of stdlib imports in https://git.sr.ht/~seirdy/weestats/tree/master/weestats/gather_stats.py is worrying and if i should refactor it.
2020-05-23 05:34:49	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 05:34:53	davidsong	ChrisWarrick: https://www.pixelstech.net/article/1334166417-PHP%3A-a-fractal-of-bad-design if you've not read it
2020-05-23 05:34:55	nedbat	auser0: if you have an error, share it with us
2020-05-23 05:35:04	Seirdy	gotta add some tests and more extensive docs (currently i just have a bunch of one-line docstrings).
2020-05-23 05:35:40	ChrisWarrick	davidsong: I have (and you linked to some shady copy of Eevee’s original article)
2020-05-23 05:35:53	ChrisWarrick	davidsong: so the only problems you had with PHP was that PHP code is ugly?
2020-05-23 05:35:59	davidsong	oh have I?
2020-05-23 05:36:11	ChrisWarrick	davidsong: the correct link is https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/
2020-05-23 05:36:28	davidsong	yeah I guses it's like programming in a script that tries to be C, with all C's ugliness
2020-05-23 05:36:30	<--	Alternity (~tinycat@unaffiliated/tinycat) has quit (Ping timeout: 258 seconds)
2020-05-23 05:36:30	--	Alternity8 is now known as Alternity
2020-05-23 05:36:38	<--	jarthur (~jarthur@2605:6000:1019:4971:d895:ef0a:c2c0:4b3e) has quit (Remote host closed the connection)
2020-05-23 05:36:44	davidsong	it's better than bash I guess
2020-05-23 05:36:54	<--	Alternity (~tinycat@unaffiliated/tinycat) has quit (Client Quit)
2020-05-23 05:36:57	<--	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has quit (Ping timeout: 256 seconds)
2020-05-23 05:37:11	davidsong	but Python and Ruby are trying to be BASIC. I guess that's what I'm looking for.
2020-05-23 05:37:16	Seirdy	> better than bash
2020-05-23 05:37:18	Seirdy	that's a low bar
2020-05-23 05:37:19	-->	lakitu (~lakitu@unaffiliated/lakitu) has joined #python
2020-05-23 05:37:27	s_	https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/
2020-05-23 05:37:28	-->	Alternity (~tinycat@unaffiliated/tinycat) has joined #python
2020-05-23 05:37:45	davidsong	can I run JavaScript by bunging it in a dir?
2020-05-23 05:37:57	-->	ghost43_ (~daer@gateway/tor-sasl/daer) has joined #python
2020-05-23 05:38:05	<--	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-05-23 05:38:05	Seirdy	more like python is trying to be ABC (cuz i mean it literally is intended to be its spiritual successor)
2020-05-23 05:38:13	davidsong	actually maybe JavaScript is too constrained, and doesn't have a standard library
2020-05-23 05:38:24	ChrisWarrick	davidsong: the PHP way of just putting files on a server and requesting them directly doesn’t work with any other language
2020-05-23 05:38:28	-->	cisco (~cisco@a109-49-63-150.cpe.netcabo.pt) has joined #python
2020-05-23 05:38:28	<--	Franch (~Username@59.red-83-53-217.dynamicip.rima-tde.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-05-23 05:38:32	<--	ghost43 (~daer@gateway/tor-sasl/daer) has quit (Ping timeout: 240 seconds)
2020-05-23 05:38:33	-->	eigenstate (~eigenstat@unaffiliated/eigenstate) has joined #python
2020-05-23 05:38:38	-->	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has joined #python
2020-05-23 05:38:40	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-05-23 05:38:44	ChrisWarrick	(unless you do CGI, which node probably doesn’t support, and Python/Ruby discourage)
2020-05-23 05:38:48	davidsong	ah balls to it then, I'll bite the bullet and go back in time 20 years and put my PHP hat on
2020-05-23 05:38:59	ChrisWarrick	davidsong: why not just use flask?
2020-05-23 05:39:12	<--	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 240 seconds)
2020-05-23 05:39:25	davidsong	can I drop an index.py in a dir and it'll just run?
2020-05-23 05:39:28	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Ping timeout: 272 seconds)
2020-05-23 05:39:29	graingert	no
2020-05-23 05:39:39	-->	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has joined #python
2020-05-23 05:39:58	<--	jay-m_ (~jay-m@129.0.205.80) has quit (Ping timeout: 264 seconds)
2020-05-23 05:40:00	-->	Betal (~Betal@unaffiliated/betal) has joined #python
2020-05-23 05:40:37	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 265 seconds)
2020-05-23 05:40:47	davidsong	I'm making an interface to youtube-dl that my dad can run on my webserver instead of pestering me to download music to his mp3 player
2020-05-23 05:40:59	graingert	ok write a django app
2020-05-23 05:41:09	graingert	it will pay off in the short and long term
2020-05-23 05:41:12	Seirdy	davidsong: your dad needs persepolis
2020-05-23 05:41:45	Seirdy	persepolis has youtube-dl and aria2 baked, wrapped up in a noob-friendly PyQt interface.
2020-05-23 05:42:07	davidsong	oh cool, that sounds reasonable Seirdy, I might just point him at that
2020-05-23 05:42:28	davidsong	graingert: if I have to start servers after a reboot then it's probably a bad idea
2020-05-23 05:42:31	<--	AbedB_ (~AbedBhuty@176.113.72.212) has quit (Ping timeout: 256 seconds)
2020-05-23 05:42:38	graingert	you don't need to reboot
2020-05-23 05:42:42	davidsong	I don't really want more infrastructure to manage
2020-05-23 05:42:57	davidsong	there's enough plates spinning around here without adding more to the show
2020-05-23 05:43:07	graingert	Seirdy: like this? https://github.com/persepolisdm/persepolis
2020-05-23 05:43:18	Seirdy	graingert: that's the one
2020-05-23 05:43:48	<--	snits (jsnitsel@nat/redhat/x-kclvfaagrokyfwoh) has quit (Ping timeout: 258 seconds)
2020-05-23 05:44:53	-->	jarthur (~jarthur@2605:6000:1019:4971:d895:ef0a:c2c0:4b3e) has joined #python
2020-05-23 05:45:12	davidsong	hrm maybe I should just write something that makes CGI from Python easy
2020-05-23 05:45:28	graingert	asgi and wsgi is better though
2020-05-23 05:45:40	<--	Asmodean (~Asmodean@91.141.1.12.wireless.dyn.drei.com) has quit (Ping timeout: 260 seconds)
2020-05-23 05:47:16	SnoopJeDi	Yes, ideally don't write CGI at all
2020-05-23 05:47:45	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 05:47:50	davidsong	well, I guess I'm thinking I'd like to write some HTMLish template with Python in it
2020-05-23 05:47:53	<--	kindling (u1Afx9cD@unaffiliated/kindling) has quit (Quit: The cake is a lie!)
2020-05-23 05:48:06	-->	AbedB_ (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has joined #python
2020-05-23 05:48:07	davidsong	like moustache or whatever the other one is called
2020-05-23 05:48:19	<--	TomDotTom (~TomDotTom@c-73-141-225-227.hsd1.de.comcast.net) has quit (Ping timeout: 260 seconds)
2020-05-23 05:48:22	SnoopJeDi	That seems unrelated to the interface
2020-05-23 05:48:44	davidsong	and some default place where a python module is imported, and gets executed as the template is parsed
2020-05-23 05:48:50	-->	snails (~snails@pool-96-248-97-17.cmdnnj.fios.verizon.net) has joined #python
2020-05-23 05:49:11	-->	Asmodean (~Asmodean@178.115.128.218.wireless.dyn.drei.com) has joined #python
2020-05-23 05:49:14	davidsong	so I get a similar developer experience as a php script
2020-05-23 05:49:19	-->	snits (jsnitsel@nat/redhat/x-belcemzwzhxvmslm) has joined #python
2020-05-23 05:49:20	SnoopJeDi	davidsong, are you familiar with Jinja?
2020-05-23 05:49:34	davidsong	ah yeah that's it, Jinja, forgot what it was called
2020-05-23 05:50:42	Seirdy	quick question: at what point does a python file have too many stdlib imports?
2020-05-23 05:50:58	bjs	Seirdy: when you are importing things you dont use
2020-05-23 05:51:10	SnoopJeDi	good answer
2020-05-23 05:51:10	Seirdy	the file in question: https://git.sr.ht/~seirdy/weestats/tree/master/weestats/gather_stats.py
2020-05-23 05:51:11	<--	gelignite (~gelignite@55d4e777.access.ecotel.net) has quit (Quit: Stay safe! Stay at home! Stop the chain reaction!)
2020-05-23 05:51:41	SnoopJeDi	10 imports is definitely not "a lot," assuming you pass bjs's bar
2020-05-23 05:51:43	-->	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has joined #python
2020-05-23 05:51:57	SnoopJeDi	err, 11, I missed the weestats one :)
2020-05-23 05:51:58	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 05:52:01	Seirdy	bjs: don't unused imports typically cause like all 500 static analysis tools/linter to summon the living dead to torment you until you repent?
2020-05-23 05:52:11	SnoopJeDi	no
2020-05-23 05:52:14	<--	frank1e (~frank1e@unaffiliated/frank1e) has quit
2020-05-23 05:52:25	bjs	Seirdy: unused imports is exactly the point it becomes 'too many' :)
2020-05-23 05:52:28	SnoopJeDi	unless the things you're importing do it themselves, which is definitely nothing in stdlib
2020-05-23 05:52:33	bjs	Seirdy: if you're using the imports then by definition it's not too many
2020-05-23 05:52:40	SnoopJeDi	these are tools that are usually invoked from not-Python, though.
2020-05-23 05:53:12	Seirdy	flake8, pylint, py-unused-imports, etc. all throw a hissy-fit whenever i have an unused import.
2020-05-23 05:53:24	-->	honigkuchen (~honigkuch@ip5f5a65af.dynamic.kabel-deutschland.de) has joined #python
2020-05-23 05:53:26	Seirdy	and some vim plugins and IDEs auto-delete them
2020-05-23 05:53:26	SnoopJeDi	oh, I misread that question, oops
2020-05-23 05:53:42	SnoopJeDi	it's a good thing to check for, yea
2020-05-23 05:53:56	<--	lambda (~xiretza@213-47-232-21.cable.dynamic.surfer.at) has quit (Ping timeout: 256 seconds)
2020-05-23 05:54:06	SnoopJeDi	and if it matters to your code, it probably means the import is having serious side effects and you probably have bigger fish to fry in that case
2020-05-23 05:54:39	<--	honigkuchen (~honigkuch@ip5f5a65af.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-05-23 05:54:40	<--	cecep (~weechat@x4db77a29.dyn.telefonica.de) has quit (Ping timeout: 272 seconds)
2020-05-23 05:55:22	-->	christoph_ (~christoph@37.209.46.140) has joined #python
2020-05-23 05:55:25	Seirdy	also, when should i switch from "from <lib> import <modules>" to just "import <lib>" and using "lib.module"? i know that people usually don't ever do it with the typing lib unless they're avoiding a name collision.
2020-05-23 05:55:53	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 05:55:55	davidsong	Seirdy: when your code looks long/ugly/difficult to read
2020-05-23 05:56:31	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Quit: Bin weg.)
2020-05-23 05:56:34	<--	cisco (~cisco@a109-49-63-150.cpe.netcabo.pt) has quit (Quit: leaving)
2020-05-23 05:56:36	<--	AugustusCaesar24 (~AugustusC@99-190-112-116.lightspeed.irvnca.sbcglobal.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-05-23 05:56:39	ChrisWarrick	Seirdy: I tend to use `import module` much more than from-imports
2020-05-23 05:57:40	davidsong	if you're repeating module.stuff all over the place and it looks verbose, then use from module import thing1, thing2
2020-05-23 05:57:58	Seirdy	got it.
2020-05-23 05:58:36	<--	methyl (~methyl@64.44.55.108) has quit (Read error: Connection reset by peer)
2020-05-23 05:58:51	Seirdy	any other general feedback on weestats would be appreciated
2020-05-23 05:59:07	gambl0re	is github down?
2020-05-23 05:59:31	Seirdy	gambl0re: works on my machine^TM
2020-05-23 05:59:31	<--	wymillerlinux (~wymillerl@097-084-004-094.res.spectrum.com) has quit (Ping timeout: 256 seconds)
2020-05-23 05:59:34	--	Skeer_Away is now known as Skeer
2020-05-23 05:59:40	davidsong	gambl0re: yes
2020-05-23 05:59:49	davidsong	500 here
2020-05-23 05:59:53	Seirdy	aaand it's donwn
2020-05-23 06:00:05	Seirdy	this is why i always use multiple remotes
2020-05-23 06:00:11	Habbie	https://www.githubstatus.com/
2020-05-23 06:00:36	davidsong	Seirdy: any reason for the 'is not None' rather than just using the falsey property of dates?
2020-05-23 06:00:49	<--	LKoen (~LKoen___@81.255.219.130) has quit (Remote host closed the connection)
2020-05-23 06:00:55	Seirdy	davidsong: didn't think of that. lemme try it out.
2020-05-23 06:01:27	davidsong	Seirdy: also IRCChannel, I'd put "Stats" in the class name so you don't need the helpdoc
2020-05-23 06:01:51	Seirdy	davidsong: good idea.
2020-05-23 06:01:51	<--	sharktamer (~sharktame@cpc157207-watf11-2-0-cust5.15-2.cable.virginm.net) has quit (Read error: Connection reset by peer)
2020-05-23 06:02:00	-->	sharktamer (~sharktame@cpc157207-watf11-2-0-cust5.15-2.cable.virginm.net) has joined #python
2020-05-23 06:02:15	ChrisWarrick	gambl0re: F5 can fix it
2020-05-23 06:02:25	SnoopJeDi	gambl0re, they're been having trouble for half the day
2020-05-23 06:02:39	<--	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-05-23 06:03:17	-->	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has joined #python
2020-05-23 06:03:32	Seirdy	also in parse.py, i'm currently defining IRCMessage._nick outside __init__ so i can distinguish between it being "None" (i.e., we already found that there is nick for the message) and non-existent (i.e., we haven't yet checked). is there a better way to do this?
2020-05-23 06:03:43	<--	snits (jsnitsel@nat/redhat/x-belcemzwzhxvmslm) has quit (Ping timeout: 260 seconds)
2020-05-23 06:03:44	-->	nbro (~nbro@2a02:aa13:3142:3100:bcd2:9dda:8b02:aaa) has joined #python
2020-05-23 06:03:46	gambl0re	SnoopJeDi: o really?
2020-05-23 06:03:52	Seirdy	s/there is nick/there is no nick/
2020-05-23 06:04:03	<--	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has quit (Quit: Out.)
2020-05-23 06:04:07	SnoopJeDi	gambl0re, see the link that Habbie shared
2020-05-23 06:04:08	-->	localhost522 (8d9b8f11@141.155.143.17) has joined #python
2020-05-23 06:04:25	<--	borisrunak (~pkarpesis@217.146.90.34.bc.googleusercontent.com) has quit (Quit: Idle timeout reached: 10800s)
2020-05-23 06:04:45	davidsong	Seirdy: what do you mean there's no nick for a message? don't all messages have a sender?
2020-05-23 06:04:58	-->	snits (jsnitsel@nat/redhat/x-oyitfssaxodoakpg) has joined #python
2020-05-23 06:05:23	Seirdy	davidsong: in weechat logs, you might get messages generated by scripts or join/leave msgs with an ascii arrow in the nick column.
2020-05-23 06:05:40	<--	snits (jsnitsel@nat/redhat/x-oyitfssaxodoakpg) has quit (Read error: Connection reset by peer)
2020-05-23 06:05:40	<--	ghost43_ (~daer@gateway/tor-sasl/daer) has quit (Remote host closed the connection)
2020-05-23 06:05:53	<--	kolbrich (~quassel@185-118-198-140.clients.srvfarm.net) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2020-05-23 06:05:56	-->	ghost43 (~daer@gateway/tor-sasl/daer) has joined #python
2020-05-23 06:06:02	Seirdy	a "normal message" with a nick and message body is currently the only thing that weestats cares about, but it might utilize join/leave/chanmsg for some other stuff in the future.
2020-05-23 06:06:02	davidsong	Seirdy: ah okay. So maybe create a default value for those?
2020-05-23 06:06:15	<--	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has quit
2020-05-23 06:06:32	<--	Alexander-47u (~Alexander@85.203.44.133) has quit (Remote host closed the connection)
2020-05-23 06:07:14	davidsong	I mean, Python None being not checked, but SystemMessage or NoUser or similar being those things explicitly
2020-05-23 06:07:21	<--	dlam (~user@2600:1700:dac0:52d0:506d:6f34:9e95:7c6b) has quit (Ping timeout: 260 seconds)
2020-05-23 06:07:36	-->	audioburn (~audioburn@unaffiliated/theology) has joined #python
2020-05-23 06:07:43	<--	localhost522 (8d9b8f11@141.155.143.17) has quit (Remote host closed the connection)
2020-05-23 06:08:04	-->	localhost522 (8d9b8f11@141.155.143.17) has joined #python
2020-05-23 06:08:19	-->	gar (~textual@pdpc/supporter/professional/gar) has joined #python
2020-05-23 06:08:23	<--	localhost522 (8d9b8f11@141.155.143.17) has quit (Remote host closed the connection)
2020-05-23 06:08:31	Seirdy	davidsong: what i currently do is set nick to "none" if there isn't a nick, or to the nick string. if self._nick exists i just return it, if it doesn't exist i find it. so there's different behavior for self._nick not existing (find and return it) and self._nick existing, meaning it was previously found (return whether it's a None or string).
2020-05-23 06:08:32	<--	Trieste (~T@unaffiliated/trieste) has quit (Ping timeout: 260 seconds)
2020-05-23 06:08:39	Seirdy	so self._nick is kind of like a cached value
2020-05-23 06:08:52	davidsong	I can't say I'm a fan of all this typing, not really a criticism of your code but in general, not that I have much experience with it. Seems like a lot of boilerplate
2020-05-23 06:09:27	-->	kolbrich (~quassel@185-118-198-140.clients.srvfarm.net) has joined #python
2020-05-23 06:10:05	davidsong	Seirdy: have you heard the good news of our lord and saviour, @lru_cache?
2020-05-23 06:10:09	<--	theorangeone (~quassel@host81-143-201-103.in-addr.btopenworld.com) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2020-05-23 06:10:25	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 06:10:28	Seirdy	davidsong: it's saved me from several errors. i try to be specific in what i return (list/tuple/dict) but generous in what i accept (iterable/sequence or mapping)
2020-05-23 06:10:53	-->	Trieste (~T@unaffiliated/trieste) has joined #python
2020-05-23 06:11:03	Seirdy	davidsong: yeah i'll try it out. i think it caused an issue last time but my code looks different now.
2020-05-23 06:11:08	-->	theology (~audioburn@unaffiliated/theology) has joined #python
2020-05-23 06:11:12	davidsong	I probably overuse this pattern, but I really like it: https://bpa.st/WQJA
2020-05-23 06:11:20	sid21g	Hey nedbat: Always a pleasure to hear from you. Thanks for the reply!
2020-05-23 06:11:32	nedbat	sid21g: hey hey
2020-05-23 06:11:56	-->	methyl (~methyl@c-73-210-224-53.hsd1.il.comcast.net) has joined #python
2020-05-23 06:12:16	sid21g	nedbat: Have been helped by you many times over the years :P
2020-05-23 06:12:28	-->	methyl_ (~methyl@170.130.139.91) has joined #python
2020-05-23 06:12:29	nedbat	sid21g: so you;re the one :)
2020-05-23 06:12:34	davidsong	Decorate a method with @cached_property and you get object.attribute that gets calculated the first time it's called
2020-05-23 06:12:53	-->	lambda (~xiretza@mail.xiretza.xyz) has joined #python
2020-05-23 06:12:54	Seirdy	davidsong: thing is, it might be helpful to distinguish whether self._nick is unknown (we have to find it) or whether we previously found it and discovered its value to be None.
2020-05-23 06:13:15	Seirdy	yeah i've used @lru_cache in the past for simple memoization
2020-05-23 06:13:46	<--	audioburn (~audioburn@unaffiliated/theology) has quit (Ping timeout: 260 seconds)
2020-05-23 06:13:54	Seirdy	davidsong: cached_property isn't py36 right?
2020-05-23 06:13:58	Seirdy	i might need a backport
2020-05-23 06:14:10	<--	velix (~velix@unaffiliated/velix) has left #python ("Leaving")
2020-05-23 06:14:10	davidsong	Seirdy: the snippet I posted reimplements it
2020-05-23 06:14:20	-->	bilb_ono (~alexmarsh@ip70-185-130-174.sb.sd.cox.net) has joined #python
2020-05-23 06:14:25	davidsong	it was taken out I think
2020-05-23 06:14:47	Seirdy	i already use a backport of dataclasses if python < 3.7
2020-05-23 06:15:12	davidsong	anyway, if you have a nick that has been checked and it turns out it's not a real nickname, just set it to something that represents that
2020-05-23 06:15:59	<--	bluesmonk_ (uid318026@gateway/web/irccloud.com/x-tmzdrnjwisrgejbi) has quit (Quit: Connection closed for inactivity)
2020-05-23 06:16:25	Seirdy	yeah https://docs.python.org/3/library/functools.html#functools.cached_property <- new in py37
2020-05-23 06:16:35	Seirdy	wait no i mean py38
2020-05-23 06:16:50	<--	methyl (~methyl@c-73-210-224-53.hsd1.il.comcast.net) has quit (Ping timeout: 272 seconds)
2020-05-23 06:16:50	<--	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has quit (Ping timeout: 272 seconds)
2020-05-23 06:16:53	<--	Rootsudo (~rootsudo@unaffiliated/rootsudo) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-05-23 06:17:04	ChrisWarrick	Seirdy: consider using attrs instead of dataclasses
2020-05-23 06:17:10	Seirdy	im trying to support pypy which is way faster at running weestats on machines with few cpu threads.
2020-05-23 06:17:14	-->	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has joined #python
2020-05-23 06:17:37	Seirdy	ChrisWarrick: but i like that with the latest cpython there are no external deps; dataclasses does what i need and more.
2020-05-23 06:17:56	davidsong	maybe its __repr__ is an empty string and it evaluates to False, but it 'is not None'
2020-05-23 06:17:56	_habnabit	wow, cached_property is way more complex than pyramid's reify and still isn't as good
2020-05-23 06:18:23	_habnabit	https://docs.pylonsproject.org/projects/pyramid/en/latest/api/decorator.html
2020-05-23 06:18:34	Seirdy	is https://pypi.org/project/cached-property/ any different from https://docs.python.org/3/library/functools.html#functools.cached_property
2020-05-23 06:19:03	_habnabit	Seirdy, i'd use reify instead
2020-05-23 06:19:13	Seirdy	_habnabit: is that in the stdlib
2020-05-23 06:19:17	<--	wordsToLiveBy (~wordsToLi@unaffiliated/wordstoliveby) has quit (Quit: (( _ _ ))..zzzZZ)
2020-05-23 06:19:38	_habnabit	Seirdy, no, but i've often copy-pasted its source from pyramid if i'm not already using pyramid
2020-05-23 06:20:05	<--	christoph_ (~christoph@37.209.46.140) has quit (Remote host closed the connection)
2020-05-23 06:20:12	Seirdy	_habnabit: i kind of want weestats to be small. at one point i even considered making it a single file that you could just drop into $PATH but it got big.
2020-05-23 06:20:23	-->	christoph_ (~christoph@37.209.46.140) has joined #python
2020-05-23 06:20:37	_habnabit	Seirdy, its source is tiny; the docstring is longer than the implementation https://docs.pylonsproject.org/projects/pyramid/en/latest/_modules/pyramid/decorator.html#reify
2020-05-23 06:20:39	Seirdy	i mean, its predecessor was a single-file shell script that you chould just curl into shell
2020-05-23 06:20:51	Seirdy	hmm lemme take a look
2020-05-23 06:21:03	-->	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-115.dsl.bell.ca) has joined #python
2020-05-23 06:21:20	<--	nbro (~nbro@2a02:aa13:3142:3100:bcd2:9dda:8b02:aaa) has quit (Remote host closed the connection)
2020-05-23 06:21:36	-->	nbro (~nbro@2a02:aa13:3142:3100:89c9:decf:9f42:c52c) has joined #python
2020-05-23 06:21:37	<--	dinis (~root@217.136.27.77.dynamic.reverse-mundo-r.com) has quit (Ping timeout: 256 seconds)
2020-05-23 06:21:56	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 06:21:58	Seirdy	oh that's hella simple
2020-05-23 06:22:29	_habnabit	Seirdy, easy enough to add the attribution to your LICENSE too
2020-05-23 06:23:16	Seirdy	so why is cached_property (https://github.com/python/cpython/blob/3.8/Lib/functools.py#L931) like 10 times bigger?
2020-05-23 06:23:21	_habnabit	Seirdy, i have no idea!
2020-05-23 06:23:28	Seirdy	it seems to be doing a lot of checks under the hood
2020-05-23 06:23:30	-->	CoolerZ (~coolerext@202.83.42.165) has joined #python
2020-05-23 06:23:38	Seirdy	_habnabit: ooh, idea!
2020-05-23 06:23:44	Seirdy	oh, i misread
2020-05-23 06:23:51	Seirdy	misread "no" as "an" lol
2020-05-23 06:24:29	davidsong	ew. I think I prefer my cached_property. what does Pyramid's one look like
2020-05-23 06:24:37	davidsong	oh I see it
2020-05-23 06:24:40	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 06:24:52	Seirdy	it's literally 9 lines of code
2020-05-23 06:25:02	-->	hussar (~hussar@modemcable027.157-202-24.mc.videotron.ca) has joined #python
2020-05-23 06:25:06	-->	wordsToLiveBy (~wordsToLi@unaffiliated/wordstoliveby) has joined #python
2020-05-23 06:25:17	--	gavlee_ is now known as gavlee
2020-05-23 06:25:24	<--	bilb_ono (~alexmarsh@ip70-185-130-174.sb.sd.cox.net) has quit (Quit: bilb_ono)
2020-05-23 06:25:24	davidsong	oh wow reify looks good. I like it
2020-05-23 06:25:33	-->	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2020-05-23 06:25:38	-->	theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) has joined #python
2020-05-23 06:25:40	Seirdy	so how would i provide attribution for reify?
2020-05-23 06:25:42	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 06:25:42	davidsong	mine would be slower I guess
2020-05-23 06:26:00	Seirdy	assuming i just paste it in without the doctest
2020-05-23 06:26:24	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 240 seconds)
2020-05-23 06:26:27	_habnabit	Seirdy, https://github.com/habnabit/passacre/blob/master/COPYING#L143-L183
2020-05-23 06:26:31	Seirdy	weestats is AGPL (cuz i might use it in a web service for channels that want to take part)
2020-05-23 06:27:04	<--	CoolerY (~coolerext@202.83.42.165) has quit (Ping timeout: 260 seconds)
2020-05-23 06:27:13	ChrisWarrick	Seirdy: are you sure about this?
2020-05-23 06:27:25	ChrisWarrick	Seirdy: many people avoid AGPL software
2020-05-23 06:27:40	davidsong	reify is probably small enough to argue it's not got copyright protection, but novel enough to argue that it does
2020-05-23 06:28:00	 *	CrtxReavr prefers functionality over software license zealousy.
2020-05-23 06:28:14	Seirdy	ChrisWarrick: i mean with GPL3 it could be provided as SASS if i end up making the bespoke web service
2020-05-23 06:28:44	Seirdy	and FOSS served as SASS without sharing backend/unminified isn't any different from proprietary
2020-05-23 06:28:49	davidsong	the freedom to abuse users is a very valid freedom, whether you want to enable that is a matter of ethics and personal politics
2020-05-23 06:29:03	-->	padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) has joined #python
2020-05-23 06:29:23	--	Skeer is now known as Skeer_Away
2020-05-23 06:29:24	davidsong	I personally care more about computers than people, so I tend towards the WTFPL, but I respect rms
2020-05-23 06:29:29	-->	_gobostone (~Ace@174-16-170-244.hlrn.qwest.net) has joined #python
2020-05-23 06:29:31	Seirdy	davidsong: user freedom != developer freedom. maximizing the former often means limiting the latter. case in point is what i described.
2020-05-23 06:29:53	<--	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 240 seconds)
2020-05-23 06:30:16	Seirdy	licensee/licensor is probably a better division than user/developer
2020-05-23 06:30:20	<--	gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has quit (Ping timeout: 260 seconds)
2020-05-23 06:30:26	Seirdy	or user/licensor
2020-05-23 06:30:48	_habnabit	davidsong, wtfpl unfortunately lacks an attribution clause so it's not very useful in practice compared to unlicense or cc0
2020-05-23 06:30:49	-->	carljm (~carljm@django/moderator/carljm) has joined #python
2020-05-23 06:30:53	davidsong	Seirdy: yeah I think history will be on your side eventually. yeah developer freedom usually equals the power of companies that hire the developers, and that power is power over everyone else
2020-05-23 06:31:34	davidsong	_habnabit: why would I care about attribution? I usually say "wtfpl with one additional clause: don't blame me"
2020-05-23 06:31:42	<--	carljm (~carljm@django/moderator/carljm) has quit (Client Quit)
2020-05-23 06:31:43	Seirdy	i mean if you only plan on making FOSS then AGPL shouldn't be a problem for you.
2020-05-23 06:31:56	Seirdy	davidsong: WTFPL has a "no warranty" disclaimer iirc lemme check
2020-05-23 06:31:56	_habnabit	davidsong, errrrr i entirely flubbed that
2020-05-23 06:32:07	_habnabit	davidsong, i meant it has no warranty disclaimer clause
2020-05-23 06:32:14	davidsong	ah I see yeah I add the warranty clause myself
2020-05-23 06:32:24	<--	veevax (~veevax@212-198-32-77.rev.numericable.fr) has quit (Quit: Leaving.)
2020-05-23 06:32:30	_habnabit	davidsong, at that point i'd just use an established license tho
2020-05-23 06:32:42	altendky	yay, take a license that people don't want to deal with and customize it to make it even harder to use...  :|
2020-05-23 06:32:45	Seirdy	davidsong: wait no it doesn't nvm
2020-05-23 06:34:01	davidsong	it's an implied statement about maximal freedom, in fun projects it's often more important to have fun than be practical
2020-05-23 06:34:39	<--	christoph_ (~christoph@37.209.46.140) has quit (Ping timeout: 256 seconds)
2020-05-23 06:34:47	<--	methyl_ (~methyl@170.130.139.91) has quit (Read error: Connection reset by peer)
2020-05-23 06:35:30	Seirdy	davidsong: i'd rather use CC0 for pubdom, ISC for permissive, Apache for large permissive projects, (A)GPL for copyleft, and the Good Luck With That license for half-finished personal projects i sleep-typed in a flight that you should absolutely use in mission-critical production environments.
2020-05-23 06:36:15	Seirdy	https://github.com/me-shaon/GLWTPL <- best license
2020-05-23 06:36:31	<--	MmeQuignon (~matthieu@2a01:e0a:1ab:f090:515a:340d:1125:dd60) has quit (Ping timeout: 260 seconds)
2020-05-23 06:36:35	tpr	please think about the lawyers, jslint had some "funny" do no evil thing in place which caused some gray hairs in the past..
2020-05-23 06:36:54	tpr	it's better to use well known licenses instead of doing something like that
2020-05-23 06:37:02	Seirdy	tpr: the point of the GLWTPL is that software shouldn't be used by the kind of orgs that have a legal dept
2020-05-23 06:37:04	davidsong	lol cool license
2020-05-23 06:37:12	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2020-05-23 06:37:23	davidsong	yeah same with the wtfpl
2020-05-23 06:38:38	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 272 seconds)
2020-05-23 07:30:05	--	irc: disconnected from server
2020-05-23 07:30:32	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-23 07:30:32	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-23 07:30:32	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-23 07:30:33	--	Channel #python: 1870 nicks (0 ops, 0 voices, 1870 normals)
2020-05-23 07:30:35	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-23 07:30:35	bjs	CoolerZ: I mean you can just google or go to -offtopic and I'll explain,  they're definitely not Python code
2020-05-23 07:31:11	_habnabit	CDuv, usually i make an entry point.. you put in your pyproject.toml or equivalent the name of the binary you want to call it and what python function to run
2020-05-23 07:32:06	<--	greedom (~greedom@2001:16b8:2ed4:3100:8982:7384:9a37:acb3) has quit (Quit: Konversation terminated!)
2020-05-23 07:32:22	Brad73	do python debuggers also use ptrace or is there an equivalent?
2020-05-23 07:32:33	_habnabit	Brad73, sys.settrace
2020-05-23 07:32:48	bjs	Brad73: Python is very high-level and provides a way to trace through execution of a Python program (see trace functions, aka sys.settrace)
2020-05-23 07:32:57	bjs	Brad73: they don't need to play the tricks that e.g. GDB does :)
2020-05-23 07:33:48	CoolerZ	bjs, wouldn't the fact that the memory is writeable make it so that you lose any performance benefits because of locking?
2020-05-23 07:33:56	bjs	CoolerZ: I don't know what you mean
2020-05-23 07:34:31	CoolerZ	if the memory is read only then it doesn't have to worry about the instructions changing
2020-05-23 07:34:55	bjs	CoolerZ: well,  no.  But you can't lock the instructions :)
2020-05-23 07:34:57	CoolerZ	if it is writeable then the instructions might change and you need to have locking
2020-05-23 07:35:22	<--	Dauthiwarlord (~Dauthiwar@189.172.73.242) has quit (Ping timeout: 256 seconds)
2020-05-23 07:35:30	CoolerZ	to avoid race conditions where you are reading instructions in the middle of them being changed
2020-05-23 07:35:47	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined #python
2020-05-23 07:36:40	CoolerZ	also now your instruction can might become stale and you need to keep fetching
2020-05-23 07:36:50	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 07:36:51	CoolerZ	further degrading performance
2020-05-23 07:37:06	bjs	CoolerZ: heh,  you're getting close to why this is a terrible language feature that noone should use unless they need to.  But no,  you don't put locks around everything.
2020-05-23 07:37:14	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-05-23 07:37:22	CoolerZ	instruction cache*
2020-05-23 07:37:35	bjs	CoolerZ: you're now straying away from 'self-modifying' since you seem to be talking about concurrency and caches and things
2020-05-23 07:37:55	<--	lauxley (~lauxley@2a01:e35:2fd5:2700:bc21:a00c:b260:8b02) has quit (Remote host closed the connection)
2020-05-23 07:38:14	CoolerZ	bjs, well one of the main reasons to use self modifying code is for performance reasons
2020-05-23 07:38:15	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 07:38:20	_habnabit	is it???
2020-05-23 07:38:23	-->	Lord_of_Life_ (~Lord@unaffiliated/lord-of-life/x-0885362) has joined #python
2020-05-23 07:38:29	<--	lembron (~admin@unaffiliated/lembron) has left #python
2020-05-23 07:38:55	CoolerZ	_habnabit, well also as a virus/malicious program you might want to do this
2020-05-23 07:39:07	CoolerZ	https://en.wikipedia.org/wiki/Self-modifying_code#Usage
2020-05-23 07:39:09	bjs	CoolerZ: eh.  self-modifying code as you describe can maybe improve performance (by removing an "if" branch or a read of a pointer)
2020-05-23 07:39:44	<--	DravenX (~textual@ip72-200-192-87.ok.ok.cox.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2020-05-23 07:39:48	<--	katana (~hentai@unaffiliated/katana) has quit (Ping timeout: 272 seconds)
2020-05-23 07:39:55	bjs	which is what it's used for in JITs,  where you dynamically replace a jump table with new entries to new functions.  The only 'self-modifying' happens on exactly 1 instruction.  It's very subtle and hard to get right
2020-05-23 07:40:40	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2020-05-23 07:40:42	CoolerZ	"Because of the security implications of self-modifying code, all of the major operating systems are careful to remove such vulnerabilities as they become known"
2020-05-23 07:40:48	bjs	Yes
2020-05-23 07:40:58	<--	dethos (~dethos@213.190.211.160) has quit (Ping timeout: 256 seconds)
2020-05-23 07:41:14	CDuv	_habnabit, is you "entrypoint" approach related to this: https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html ?
2020-05-23 07:41:21	_habnabit	CDuv, it is that
2020-05-23 07:41:26	<--	bilb_ono (~alexmarsh@ip70-185-130-174.sb.sd.cox.net) has quit (Quit: bilb_ono)
2020-05-23 07:41:27	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Ping timeout: 265 seconds)
2020-05-23 07:41:31	_habnabit	CDuv, i normally use poetry to generate them
2020-05-23 07:41:31	--	Lord_of_Life_ is now known as Lord_of_Life
2020-05-23 07:41:44	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 260 seconds)
2020-05-23 07:42:02	bjs	CoolerZ: I can guarantee you that (1) your O/S is doing it to load processes to run them,  (2) your browser is doing it in the way i describe in its JIT implementation and (3) GDB/ptrace is doing it when you use them.  Pretty much nowhere else does it,  and it's really not worth the effort to get right :)
2020-05-23 07:42:10	Brad73	In bash there is a bug where you self modify code and delete a line and you continue reading from the wrong spot. Does that happen in python?
2020-05-23 07:42:11	-->	ronin_anubis (~chrx@23-116-232-232.lightspeed.sntcca.sbcglobal.net) has joined #python
2020-05-23 07:42:20	_habnabit	Brad73, it does not
2020-05-23 07:42:22	Brad73	you can accidentally execute commented out code, etc
2020-05-23 07:42:32	CoolerZ	"A relatively portable way to bypass W^X is to create a file with all permissions, then map the file into memory twice." what?
2020-05-23 07:42:34	bjs	Brad73: Python does not read the file as it executes
2020-05-23 07:42:40	CoolerZ	how does that work?
2020-05-23 07:42:43	<--	nixjdm (~nixjdm@2605:a601:aa3e:e400:bc56:aa4e:4614:ea54) has quit (Ping timeout: 260 seconds)
2020-05-23 07:42:47	nedbat	Brad73: the whole file is compiled, then the bytecode is run
2020-05-23 07:43:02	_habnabit	Brad73, all the python implementations i'm aware of do one full read of the file before executing any of it
2020-05-23 07:43:23	bjs	CoolerZ: now you're asking questions that are totally not Python.  But it's what I said earlier,  you can have multiple addresses for the same bit of memory.
2020-05-23 07:43:23	<--	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has quit (Quit: Connection closed)
2020-05-23 07:43:28	-->	hackinghorn (~hackingho@unaffiliated/hackinghorn) has joined #python
2020-05-23 07:43:28	bjs	CoolerZ: with different protections
2020-05-23 07:43:46	CDuv	Thanks, it's the "guide" I was following but had yet reached the "execute you stuff" part. It's my first Python Package: I usually did some small scripts and put all my code in a few files and ran the "main" one using `python3 -m run.py` ;)
2020-05-23 07:43:50	bjs	CoolerZ: #python-offtopic now for random systems questions :)
2020-05-23 07:44:01	_habnabit	CDuv, -m doesn't take paths
2020-05-23 07:44:21	bjs	nedbat: but I did learn that traceback printing *does* read the file again
2020-05-23 07:44:22	CDuv	Right s/-m //
2020-05-23 07:45:03	Brad73	are we talking about using language functionality to recompile code or editing code in some way other than writing to a file?
2020-05-23 07:45:05	bjs	nedbat: which implies it doesn't even keep the original source about :)
2020-05-23 07:45:11	bjs	Brad73: yes
2020-05-23 07:45:20	ronin_anubis	Hi, I'm trying to use threading in python3. If I do, for t in thread_list: t.join() . Does it halt at the first thread that didnt't complete or it keeps rotating? Howe can I use threading module to do what concurrent.futures as_completed() does?
2020-05-23 07:45:31	<--	ogo (~ogo@gateway/tor-sasl/ogo) has quit (Quit: Leaving)
2020-05-23 07:45:43	bjs	Brad73: in most languages once the program starts running the file is useless and changes to it don't affect anything
2020-05-23 07:45:44	nedbat	bjs: right. if the pyc is there, it doesn't need the source
2020-05-23 07:46:02	_habnabit	ronin_anubis, yes, .join() blocks until the thread in question has exited
2020-05-23 07:46:05	Brad73	that's why the cool kids use bash 8)
2020-05-23 07:46:06	bjs	nedbat: I have no idea what happens with a traceback when there's only a pyc now you mention it
2020-05-23 07:46:09	_habnabit	ronin_anubis, why don't you use concurrent.futures?
2020-05-23 07:46:22	-->	gvsa123 (~gvsa123@d50-93-31-58.abhsia.telus.net) has joined #python
2020-05-23 07:46:22	nedbat	bjs: i think it just doesn't have the source lines
2020-05-23 07:46:29	_habnabit	bjs, nedbat is right
2020-05-23 07:46:42	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 07:46:51	bjs	fair enough
2020-05-23 07:47:01	bjs	seems sub-optimal as far as error reporting goes
2020-05-23 07:47:09	_habnabit	indeed
2020-05-23 07:47:22	<--	Jerrynicki (~niklas@p200300f5770318003f16fbda89eb7469.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-05-23 07:48:48	Brad73	how much of this previous discussion was python implementation dependent?
2020-05-23 07:49:11	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2020-05-23 07:49:14	SnoopJeDi	all of it
2020-05-23 07:49:37	ronin_anubis	_habnabit, I can't find a way to name each of the threads in the thread pool executor if I use concurrent.futures
2020-05-23 07:49:43	nedbat	Brad73: you *could* have a python implementation that read the file as it went, but none do that.
2020-05-23 07:49:57	_habnabit	ronin_anubis, does that matter/
2020-05-23 07:49:59	SnoopJeDi	There's got to be one out there, but nothing anybody uses in production code
2020-05-23 07:50:11	<--	tasse (~tasse@55d42d3b.access.ecotel.net) has quit (Ping timeout: 264 seconds)
2020-05-23 07:50:45	ronin_anubis	_habnabit, might be nice when debugging, I'm very concerned about debugging threads when the time comes.
2020-05-23 07:50:49	<--	nbro (~nbro@2a02:aa13:3142:3100:89c9:decf:9f42:c52c) has quit
2020-05-23 07:51:12	_habnabit	ronin_anubis, the name doesn't tell you much about how the work is distributed
2020-05-23 07:51:35	-->	ffs (uid158779@gateway/web/irccloud.com/x-ocfsqfolmzcjlvrg) has joined #python
2020-05-23 07:51:56	-->	tasse (~tasse@55d41d48.access.ecotel.net) has joined #python
2020-05-23 07:51:56	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 07:52:11	ronin_anubis	_habnabit, it tells which thread is causing a problem, esp. if using logging module I guess.
2020-05-23 07:52:36	-->	recursive_curse (~miller@S0106f81d0f6109e3.wp.shawcable.net) has joined #python
2020-05-23 07:52:50	_habnabit	ronin_anubis, sure, but in a thread pool, which thread gets what work is practically random
2020-05-23 07:53:56	_habnabit	ronin_anubis, the threads having names doesn't help identify anything; each thread has the same code before 'execute a job', and the function being run is nondeterministic
2020-05-23 07:54:03	-->	selimcan (~selimcan@89.232.118.200) has joined #python
2020-05-23 07:54:54	-->	czer0 (~toaster@170.199.140.177) has joined #python
2020-05-23 07:54:57	ronin_anubis	_habnabit, Ah, in my case, I wanted the thread name to be the file name that the thread will process, so that I can tell which file crashed or so.
2020-05-23 07:55:00	-->	nixjdm (~nixjdm@2605:a601:aa3e:e400:5432:f128:58d:3003) has joined #python
2020-05-23 07:55:23	_habnabit	ronin_anubis, that's not a thread pool then
2020-05-23 07:55:29	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 07:55:38	<--	YaknotiS (~YaknotiS@cpc91250-cmbg18-2-0-cust68.5-4.cable.virginm.net) has quit (Ping timeout: 272 seconds)
2020-05-23 07:55:53	_habnabit	ronin_anubis, there's better ways of reporting that kind of context
2020-05-23 07:55:53	-->	fstd_ (~fstd@unaffiliated/fisted) has joined #python
2020-05-23 07:56:04	bjs	Brad73: the most common implementation of Python does as nedbat describes;  reading the file and generating bytecode then executing that.  Not all do that though,  but it is (today) a very common way of implementing a programming language.
2020-05-23 07:56:13	<--	kish` (~oracle@gateway/tor-sasl/oracle) has quit (Ping timeout: 240 seconds)
2020-05-23 07:56:15	-->	aasutosh (~aa@27.34.68.84) has joined #python
2020-05-23 07:56:21	-->	drincruz (~adriancru@ool-44c7491c.dyn.optonline.net) has joined #python
2020-05-23 07:56:54	<--	ColdKeyboard (~ColdKeybo@unaffiliated/coldkeyboard) has quit (Ping timeout: 272 seconds)
2020-05-23 07:56:56	-->	DeadTOm (~deadtom@2001:4b98:dc0:41:216:3eff:fe58:44d0) has joined #python
2020-05-23 07:56:59	-->	ralof (~ralof@x4d070b47.dyn.telefonica.de) has joined #python
2020-05-23 07:57:02	-->	kish` (~oracle@gateway/tor-sasl/oracle) has joined #python
2020-05-23 07:57:03	<--	blallo (~Blallo@104.167.103.80) has quit (Ping timeout: 256 seconds)
2020-05-23 07:57:22	-->	dskullz (~dskull@unaffiliated/daynaskully) has joined #python
2020-05-23 07:57:53	<--	logex (~logex@64.235.98.186) has quit (Ping timeout: 265 seconds)
2020-05-23 07:57:53	<--	dskull (~dskull@unaffiliated/daynaskully) has quit (Ping timeout: 265 seconds)
2020-05-23 07:58:10	<--	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has quit (Ping timeout: 272 seconds)
2020-05-23 07:58:10	<--	Petrushka (~devcon@deathstar.devconproductions.org) has quit (Ping timeout: 272 seconds)
2020-05-23 07:58:10	<--	bjb (~bjb@sourcerer.ca) has quit (Ping timeout: 272 seconds)
2020-05-23 07:58:22	<--	^Zer0^ (~toaster@170.199.140.177) has quit (Ping timeout: 265 seconds)
2020-05-23 07:58:35	<--	cryzed (~cryzed@185.253.97.6) has quit (Read error: Connection reset by peer)
2020-05-23 07:58:48	<--	recursive_curse (~miller@S0106f81d0f6109e3.wp.shawcable.net) has quit (Ping timeout: 272 seconds)
2020-05-23 07:58:48	<--	z3r0fox (~z3r0fox@184.75.214.163) has quit (Ping timeout: 272 seconds)
2020-05-23 07:58:50	Brad73	how does python handle huge files? Read/compile the entire file even if you only need one function from it?
2020-05-23 07:58:50	--	dskullz is now known as dskull
2020-05-23 07:59:02	-->	bjb (~bjb@sourcerer.ca) has joined #python
2020-05-23 07:59:06	Brad73	python meaning cpython/pypy
2020-05-23 07:59:13	ronin_anubis	_habnabit, so for threading module I can't mimic as_completed(), and in thread pool, I can't set the thread name. Sure, what other ways to report that context?
2020-05-23 07:59:14	SnoopJeDi	Brad73, yep
2020-05-23 07:59:29	<--	Nightwing52 (~Thunderbi@71-221-252-191.cdrr.qwest.net) has quit (Quit: Later!)
2020-05-23 07:59:33	<--	bomb-on (~bomb-on@139-142-17-89.fiber.hringdu.is) has quit (Quit: SO LONG, SUCKERS!)
2020-05-23 07:59:49	FunkyBob	Brad73: huge course files are considerd a code smell
2020-05-23 07:59:52	FunkyBob	source files ,even
2020-05-23 08:00:14	<--	ralof_ (~ralof@x4d07081b.dyn.telefonica.de) has quit (Ping timeout: 256 seconds)
2020-05-23 08:00:17	<--	plastico (~plastico@2001:8a0:de6b:1a00:4883:3805:f4f1:6b81) has quit (Quit: WeeChat 2.8)
2020-05-23 08:00:17	<--	puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) has quit (Read error: Connection reset by peer)
2020-05-23 08:00:18	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 265 seconds)
2020-05-23 08:00:18	--	fstd_ is now known as fstd
2020-05-23 08:00:22	Brad73	let's just say huge files are the least of my worries :)
2020-05-23 08:00:26	-->	fuho (~fuho@ool-4575ae42.dyn.optonline.net) has joined #python
2020-05-23 08:00:35	-->	blallo (~Blallo@104.167.103.80) has joined #python
2020-05-23 08:01:00	-->	UpvoteClub (~UpvoteClu@125-237-192-191-fibre.sparkbb.co.nz) has joined #python
2020-05-23 08:02:07	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 08:02:16	<--	ralof (~ralof@x4d070b47.dyn.telefonica.de) has quit (Ping timeout: 260 seconds)
2020-05-23 08:02:30	_habnabit	ronin_anubis, usually i use eliot for establishing these contexts and then any sort of logging or error reporting will include that
2020-05-23 08:02:35	-->	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has joined #python
2020-05-23 08:03:00	-->	fmcs (~fmcs@ec2-35-176-207-141.eu-west-2.compute.amazonaws.com) has joined #python
2020-05-23 08:04:10	<--	gil1701 (~Thunderbi@148.103.118.4) has quit (Ping timeout: 265 seconds)
2020-05-23 08:04:10	ronin_anubis	_habnabit, thanks! will check it out!
2020-05-23 08:05:47	<--	markcerv (~markcerv@c-24-5-22-21.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2020-05-23 08:05:54	<--	Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) has quit (Ping timeout: 256 seconds)
2020-05-23 08:05:58	<--	gdarko (~sparky@77.29.52.139) has quit (Ping timeout: 256 seconds)
2020-05-23 08:07:49	<--	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has quit (Ping timeout: 256 seconds)
2020-05-23 08:08:22	<--	wildtrees (wildtrees@gateway/vpn/protonvpn/wildtrees) has quit (Quit: Leaving)
2020-05-23 08:09:05	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-05-23 08:09:25	<--	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has quit (Remote host closed the connection)
2020-05-23 08:09:34	<--	blallo (~Blallo@104.167.103.80) has quit (Ping timeout: 272 seconds)
2020-05-23 08:09:58	<--	bjb (~bjb@sourcerer.ca) has quit (Ping timeout: 265 seconds)
2020-05-23 08:11:25	-->	bjb (~bjb@sourcerer.ca) has joined #python
2020-05-23 08:12:30	-->	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has joined #python
2020-05-23 08:12:55	<--	_alguien_ (~MA2G1@62.117.236.175.dyn.user.ono.com) has quit (Quit: Leaving)
2020-05-23 08:12:57	<--	CDuv (~CDuv@82-65-30-70.subs.proxad.net) has quit (Quit: Leaving)
2020-05-23 08:13:20	-->	blallo (~Blallo@104.167.103.80) has joined #python
2020-05-23 08:13:50	<--	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has quit (Ping timeout: 265 seconds)
2020-05-23 08:14:50	<--	Catatronic (~corrupt@unaffiliated/catatronic) has quit (Ping timeout: 258 seconds)
2020-05-23 08:15:55	<--	fmcs (~fmcs@ec2-35-176-207-141.eu-west-2.compute.amazonaws.com) has quit (Quit: Bye)
2020-05-23 08:17:15	-->	fmcs (~fmcs@ec2-35-176-207-141.eu-west-2.compute.amazonaws.com) has joined #python
2020-05-23 08:17:54	<--	artistsvoid (~artistsvo@unaffiliated/artistsvoid) has quit (Ping timeout: 258 seconds)
2020-05-23 08:18:28	<--	truthr (~truthr@unaffiliated/truthr) has quit (Quit: ##politics-uncensored   https://www.youtube.com/watch?v=VXOFHr6tGMQ)
2020-05-23 08:18:32	-->	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2020-05-23 08:19:41	<--	selimcan (~selimcan@89.232.118.200) has quit (Ping timeout: 260 seconds)
2020-05-23 08:20:15	-->	Death916_ (~Death916@unaffiliated/death916) has joined #python
2020-05-23 08:20:28	<--	ronin_anubis (~chrx@23-116-232-232.lightspeed.sntcca.sbcglobal.net) has quit (Quit: Leaving)
2020-05-23 08:21:11	-->	FNetSec (~FNetSec@ec2-35-176-207-141.eu-west-2.compute.amazonaws.com) has joined #python
2020-05-23 08:21:54	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 08:22:53	<--	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 240 seconds)
2020-05-23 08:22:57	-->	Catatronic (~corrupt@unaffiliated/catatronic) has joined #python
2020-05-23 08:23:24	<--	aesthe (Aesthe@gateway/vpn/privateinternetaccess/aesthe) has quit (Ping timeout: 240 seconds)
2020-05-23 08:24:42	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 08:25:14	<--	oncall-pokemon (uid134758@gateway/web/irccloud.com/x-sjhuxtzxyqwfffac) has quit (Quit: Connection closed for inactivity)
2020-05-23 08:27:02	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-05-23 08:29:29	<--	palasso (~palasso@unaffiliated/palasso) has quit (Ping timeout: 272 seconds)
2020-05-23 08:30:06	-->	slackcals (~slackcals@unaffiliated/slackcals) has joined #python
2020-05-23 08:31:22	-->	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has joined #python
2020-05-23 08:31:42	-->	roadie (~user@2a02:8108:ec0:1427:a5b8:b8f0:f0ee:1b1e) has joined #python
2020-05-23 08:31:53	-->	selimcan (~selimcan@178.162.208.155) has joined #python
2020-05-23 17:57:22	--	irc: disconnected from server
2020-10-06 17:20:27	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-10-06 17:20:27	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-10-06 17:20:27	--	Topic set by nedbat (~nedbat@python/psf/nedbat) on Thu, 20 Aug 2020 03:18:59
2020-10-06 17:20:27	--	Channel #python: 1737 nicks (0 ops, 0 voices, 1737 normals)
2020-10-06 17:20:30	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-10-06 17:20:32	amo	that's what you have namespaces for
2020-10-06 17:20:49	amo	you're not operating blindly
2020-10-06 17:20:50	man_in_shack	globals are different
2020-10-06 17:21:15	-->	minhaj-sixbyte (~sixbyte@103.138.145.127) has joined #python
2020-10-06 17:21:41	man_in_shack	i tought myself python 1.5 like 20 years ago and i'm still learning new things about python syntax
2020-10-06 17:22:04	PJBoy	say I wrote `def append_x(items): items += x`
2020-10-06 17:22:17	 *	amo started learning his mother language over 30 years ago and still hasn't learnt all the words
2020-10-06 17:22:20	PJBoy	and I tested it on some mutable types and decided it worked
2020-10-06 17:22:33	man_in_shack	but one thing i've never cared about is how a+=b behaves internally, unless i'm explicitly implementing __iadd__ on a class
2020-10-06 17:22:36	PJBoy	and then my friend JPGirl comes and uses that with some immutable type
2020-10-06 17:22:44	PJBoy	there'd be no error
2020-10-06 17:22:47	PJBoy	and we'd have a bug
2020-10-06 17:22:50	man_in_shack	no
2020-10-06 17:22:51	PJBoy	and that would suck
2020-10-06 17:22:57	man_in_shack	that's not a bug
2020-10-06 17:23:07	man_in_shack	for one, it's a terrible function (:
2020-10-06 17:23:25	man_in_shack	you don't even define where x comes from
2020-10-06 17:23:44	PJBoy	you're currently criticising IRC code
2020-10-06 17:24:07	man_in_shack	second, you really shouldn't be passing objects around between functions like that. this isn't c. it's python, and we have some very powerful mro stuff
2020-10-06 17:24:14	-->	HalfWord (~halfword@unaffiliated/halfword) has joined #python
2020-10-06 17:24:45	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 240 seconds)
2020-10-06 17:24:46	man_in_shack	PJBoy: you're currently criticsising a variable name not being hard-linked to its initial resource/object
2020-10-06 17:25:12	PJBoy	yeah my criticism is worth discussion
2020-10-06 17:25:37	<--	tmlpp (~teemu@94.22.206.33) has quit (Quit: WeeChat 2.9)
2020-10-06 17:25:40	-->	dethos (~dethos@87-196-81-134.net.novis.pt) has joined #python
2020-10-06 17:25:44	<--	todda7 (~torstein@2a02:587:d32:8d00:e12b:ad32:29e:9021) has quit (Quit: Konversation terminated!)
2020-10-06 17:25:45	man_in_shack	it really isn't
2020-10-06 17:25:53	PJBoy	the function I gave is a hugely simplified version of code that could actually happen IRL
2020-10-06 17:25:56	-->	todda7 (~torstein@athedsl-217541.home.otenet.gr) has joined #python
2020-10-06 17:26:02	PJBoy	well we're discussing it  ¯\_(ツ)_/¯
2020-10-06 17:27:03	PJBoy	anyways
2020-10-06 17:27:17	PJBoy	if things like ints are immutable then whatever
2020-10-06 17:27:33	PJBoy	can't avoid this fact in the first place
2020-10-06 17:27:36	amo	hmmm.. which raises a more important question imo
2020-10-06 17:27:46	man_in_shack	you're spending a lot of energy complaining about core python syntax because "could"
2020-10-06 17:27:48	amo	how DO i check if something is immutable or not?
2020-10-06 17:28:17	-->	BSaboia (~bsaboia@94.147.11.66) has joined #python
2020-10-06 17:28:19	PJBoy	`a = b; a += t; if a is b` :_
2020-10-06 17:28:19	auscompgeek	typically the immutable things implement __hash__
2020-10-06 17:28:23	PJBoy	*:)
2020-10-06 17:28:30	amo	the function would produce an expected result for both tuples or lists, but in case of a list, it would have a side-effect
2020-10-06 17:28:45	PJBoy	the function wouldn't produce the expected result for tuple
2020-10-06 17:28:52	amo	it would.
2020-10-06 17:28:53	PJBoy	it would create a temporary and throw it away
2020-10-06 17:28:58	amo	so what
2020-10-06 17:29:03	PJBoy	that's unexpected
2020-10-06 17:29:10	man_in_shack	no it's not
2020-10-06 17:29:19	amo	there would be a tuple with the expected values in it
2020-10-06 17:29:24	PJBoy	it's my scenario damn it
2020-10-06 17:29:29	-->	biermic (~biermic@193-80-12-83.adsl.highway.telekom.at) has joined #python
2020-10-06 17:29:41	<--	naquad (~naquad@79.135.214.17) has quit (Remote host closed the connection)
2020-10-06 17:29:46	man_in_shack	why do you even care if they're the same object?
2020-10-06 17:29:47	PJBoy	let me update the snippet
2020-10-06 17:29:58	man_in_shack	the "is" operator has limited usecases
2020-10-06 17:30:21	amo	however, if the function author only expects tuples but alice passes in a list, she'd be in trouble
2020-10-06 17:30:32	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:d8ef:2e17:4f7:9db) has joined #python
2020-10-06 17:30:39	PJBoy	`def append_x(items): """adds the item x to the input items argument""" items += x`
2020-10-06 17:30:46	amo	the result would be a list with the expected values within the function still
2020-10-06 17:30:58	amo	but the list would be modified outside of it
2020-10-06 17:31:06	PJBoy	the function doesn't perform any operations after the compound assignment
2020-10-06 17:31:13	amo	so.. how to check if the container class is immutable or not? :/
2020-10-06 17:31:41	-->	vngx (~vngx@c-73-33-132-63.hsd1.nj.comcast.net) has joined #python
2020-10-06 17:32:01	<--	mumixam (~m@unaffiliated/mumixam) has quit (Ping timeout: 272 seconds)
2020-10-06 17:32:04	PJBoy	anyways what I wrote for mutability detection would work in a hacky sort of way
2020-10-06 17:32:15	mgedmin	if you want to modify a list in-place, do items.extend(x), and you'll get an exception if somebody passes a tuple
2020-10-06 17:32:28	amo	good point
2020-10-06 17:32:42	-->	royal_screwup21 (52254809@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.72.9) has joined #python
2020-10-06 17:32:49	PJBoy	what if someone passes a container that is immutable but which provides .extend?
2020-10-06 17:33:06	PJBoy	or in general if I wanted to support containers that don't provide .extend but which provide +=
2020-10-06 17:33:11	mgedmin	use mypy and static type annotations if you worry about these kinds of problems
2020-10-06 17:33:11	<--	rogersm (~rogersm@92.59.121.108) has quit (*.net *.split)
2020-10-06 17:33:12	<--	Nothing4You (N4Y@nothing4you.w.tf-w.tf) has quit (*.net *.split)
2020-10-06 17:33:12	<--	patriick (patrick@gateway/shell/blinkenshell.org/x-hcefyuriavygutbd) has quit (*.net *.split)
2020-10-06 17:33:12	<--	ssbr (ssbrmatrix@python/site-packages/ssbr) has quit (*.net *.split)
2020-10-06 17:33:12	<--	MrC (Ben@mrbenc.net) has quit (*.net *.split)
2020-10-06 17:33:12	<--	blb (~blb@unaffiliated/bryno) has quit (*.net *.split)
2020-10-06 17:33:12	<--	olasd (~olasd@pdpc/supporter/active/olasd) has quit (*.net *.split)
2020-10-06 17:33:12	<--	technick (sid242939@gateway/web/irccloud.com/x-kxwrurzeqkpyzrai) has quit (*.net *.split)
2020-10-06 17:33:12	<--	Brend (sid34888@gateway/web/irccloud.com/x-rfqqwndppsxlninn) has quit (*.net *.split)
2020-10-06 17:33:12	<--	maxamillion (sid276220@ansible/staff/maxamillion) has quit (*.net *.split)
2020-10-06 17:33:12	<--	Darkfoe (sid402081@gateway/web/irccloud.com/x-uzagfeawdmljuapj) has quit (*.net *.split)
2020-10-06 17:33:12	<--	Soni (~quassel@unaffiliated/soniex2) has quit (*.net *.split)
2020-10-06 17:33:12	<--	MrTrick (uid181961@gateway/web/irccloud.com/x-asyiwpzjjgoobdde) has quit (*.net *.split)
2020-10-06 17:33:12	<--	Hamled (sid129388@gateway/web/irccloud.com/x-taznicoolshddvnp) has quit (*.net *.split)
2020-10-06 17:33:12	<--	tmbg (~bob@2001:4801:7827:101:be76:4eff:fe10:8db6) has quit (*.net *.split)
2020-10-06 17:33:12	<--	belst_ (~belst@unaffiliated/belst) has quit (*.net *.split)
2020-10-06 17:33:12	<--	vdamewood (~vdamewood@unaffiliated/vdamewood) has quit (*.net *.split)
2020-10-06 17:33:12	<--	PacKetSlayer (PacketSlay@hellomouse/member/packetslayer) has quit (*.net *.split)
2020-10-06 17:33:12	<--	Zenstecm (sid176568@gateway/web/irccloud.com/x-kheimfidxrntvcmr) has quit (*.net *.split)
2020-10-06 17:33:12	<--	jtanner (sid194399@ansible/staff/jtanner) has quit (*.net *.split)
2020-10-06 17:33:12	<--	jorendorff (sid28423@gateway/web/irccloud.com/x-rtmqgnasvftummop) has quit (*.net *.split)
2020-10-06 17:33:12	<--	i0X (uid317981@gateway/web/irccloud.com/x-hdnhzszjmsjbhmii) has quit (*.net *.split)
2020-10-06 17:33:12	<--	nickb (sid293439@gateway/web/irccloud.com/x-zmlibwdstjlwsvyz) has quit (*.net *.split)
2020-10-06 17:33:12	<--	mgsk (sid326960@gateway/web/irccloud.com/x-svpfvcrhkxyfosbb) has quit (*.net *.split)
2020-10-06 17:33:12	<--	arij (uid225068@gateway/web/irccloud.com/x-vwislanklfepvqsu) has quit (*.net *.split)
2020-10-06 17:33:12	<--	JayDoubleu (sid339529@gateway/web/irccloud.com/x-qebfalnpjfhplpne) has quit (*.net *.split)
2020-10-06 17:33:12	<--	salimfadhley (sid31217@wikipedia/salimfadhley) has quit (*.net *.split)
2020-10-06 17:33:12	<--	mossylane (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) has quit (*.net *.split)
2020-10-06 17:33:12	<--	Raptors (Raptors@2a03:94e0:2102:1442::2441) has quit (*.net *.split)
2020-10-06 17:33:12	<--	JStoker (jstoker@unaffiliated/jstoker) has quit (*.net *.split)
2020-10-06 17:33:12	<--	CygniX (~CygniX@opensuse/member/CygniX) has quit (*.net *.split)
2020-10-06 17:33:12	<--	markb1 (~mbiggers@2606-a000-111f-41fd-ace7-fb7d-487b-ed36.inf6.spectrum.com) has quit (*.net *.split)
2020-10-06 17:33:12	<--	ap4lmtree (~ap4lmtree@unaffiliated/ap4lmtree) has quit (*.net *.split)
2020-10-06 17:33:12	<--	nulano (~nulano@nulano.eu) has quit (*.net *.split)
2020-10-06 17:33:12	<--	tkv53 (~id@184.75.215.12) has quit (*.net *.split)
2020-10-06 17:33:12	<--	Mechanismus (~LabMonkey@2602:306:cf62:e270:7d66:4a63:2c7a:cad9) has quit (*.net *.split)
2020-10-06 17:33:12	<--	diogenese (~diogenese@diogenese.velotech.net) has quit (*.net *.split)
2020-10-06 17:33:12	<--	emerent (~quassel@p200300cd57246101ba27ebfffed28a59.dip0.t-ipconnect.de) has quit (*.net *.split)
2020-10-06 17:33:12	<--	Masklin (~joel@eduroam-other-02.wireless.lu.se) has quit (*.net *.split)
2020-10-06 17:33:12	<--	prepend (~textual@99-1-32-197.lightspeed.tukrga.sbcglobal.net) has quit (*.net *.split)
2020-10-06 17:33:12	<--	stree (~stree@50-108-75-26.adr01.mskg.mi.frontiernet.net) has quit (*.net *.split)
2020-10-06 17:33:12	<--	bloony (~bloony@185.90.212.132) has quit (*.net *.split)
2020-10-06 17:33:12	<--	nanonyme (nanonyme@unaffiliated/nanonyme) has quit (*.net *.split)
2020-10-06 17:33:12	<--	bzed (~bzed@shell.bzed.at) has quit (*.net *.split)
2020-10-06 17:33:12	<--	bdeshi (~bdeshi@2a0a:51c0:0:1f:19e5::1) has quit (*.net *.split)
2020-10-06 17:33:13	<--	finster (~finster@unaffiliated/axrfnu) has quit (*.net *.split)
2020-10-06 17:33:13	<--	ssiyad (ssiyad@2a03:94e0:2102:1532::2351) has quit (*.net *.split)
2020-10-06 17:33:13	<--	thekingofbandit (~tkob@thunix.net) has quit (*.net *.split)
2020-10-06 17:33:13	<--	dawg (dirtydawg@gateway/shell/blinkenshell.org/x-ibyjyejvhwxonoic) has quit (*.net *.split)
2020-10-06 17:33:13	<--	mattmcc (~matt@li807-33.members.linode.com) has quit (*.net *.split)
2020-10-06 17:33:13	<--	tjf (~tjf@unaffiliated/tjf) has quit (*.net *.split)
2020-10-06 17:33:13	<--	Pio (~pio@167.71.127.248) has quit (*.net *.split)
2020-10-06 17:33:13	<--	er1k757 (~erik@telebit.0x2f8.io) has quit (*.net *.split)
2020-10-06 17:33:18	PJBoy	duck typing and all that
2020-10-06 17:33:22	man_in_shack	ok, how about this then:   class MyList(list):   def __iadd__(self, a): self.append("PJBoy is exhausting")
2020-10-06 17:33:23	-->	stree (~stree@50-108-75-26.adr01.mskg.mi.frontiernet.net) has joined #python
2020-10-06 17:33:38	PJBoy	man_in_shack, you're welcome to leave this conversation
2020-10-06 17:33:44	man_in_shack	<PJBoy> or in general if I wanted to support containers that don't provide .extend but which provide +=    << then you start looking at collections.abc
2020-10-06 17:33:54	-->	DnzAtWrk (~DnzAtWrk@mobile-access-56735f-221.dhcp.inet.fi) has joined #python
2020-10-06 17:34:15	amo	man_in_shack, i was just checking that, is there an abc for mutability?
2020-10-06 17:34:23	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Ping timeout: 264 seconds)
2020-10-06 17:34:31	PJBoy	yeah sweet, I'll definitely write a complex solution to a simple problem to get around the fact that compound assignment is inconsistent
2020-10-06 17:34:37	man_in_shack	i don't think there's one explicitly for that, no
2020-10-06 17:34:42	-->	MrC (Ben@mrbenc.net) has joined #python
2020-10-06 17:34:42	-->	technick (sid242939@gateway/web/irccloud.com/x-kxwrurzeqkpyzrai) has joined #python
2020-10-06 17:34:42	-->	maxamillion (sid276220@ansible/staff/maxamillion) has joined #python
2020-10-06 17:34:42	-->	blb (~blb@unaffiliated/bryno) has joined #python
2020-10-06 17:34:42	-->	olasd (~olasd@pdpc/supporter/active/olasd) has joined #python
2020-10-06 17:34:42	-->	Brend (sid34888@gateway/web/irccloud.com/x-rfqqwndppsxlninn) has joined #python
2020-10-06 17:34:42	-->	tmbg (~bob@2001:4801:7827:101:be76:4eff:fe10:8db6) has joined #python
2020-10-06 17:34:42	-->	Hamled (sid129388@gateway/web/irccloud.com/x-taznicoolshddvnp) has joined #python
2020-10-06 17:34:42	-->	MrTrick (uid181961@gateway/web/irccloud.com/x-asyiwpzjjgoobdde) has joined #python
2020-10-06 17:34:42	-->	Soni (~quassel@unaffiliated/soniex2) has joined #python
2020-10-06 17:34:42	-->	Darkfoe (sid402081@gateway/web/irccloud.com/x-uzagfeawdmljuapj) has joined #python
2020-10-06 17:34:42	-->	belst_ (~belst@unaffiliated/belst) has joined #python
2020-10-06 17:34:42	-->	vdamewood (~vdamewood@unaffiliated/vdamewood) has joined #python
2020-10-06 17:34:42	-->	PacKetSlayer (PacketSlay@hellomouse/member/packetslayer) has joined #python
2020-10-06 17:34:42	-->	Zenstecm (sid176568@gateway/web/irccloud.com/x-kheimfidxrntvcmr) has joined #python
2020-10-06 17:34:42	-->	jtanner (sid194399@ansible/staff/jtanner) has joined #python
2020-10-06 17:34:42	-->	jorendorff (sid28423@gateway/web/irccloud.com/x-rtmqgnasvftummop) has joined #python
2020-10-06 17:34:42	-->	i0X (uid317981@gateway/web/irccloud.com/x-hdnhzszjmsjbhmii) has joined #python
2020-10-06 17:34:42	-->	nickb (sid293439@gateway/web/irccloud.com/x-zmlibwdstjlwsvyz) has joined #python
2020-10-06 17:34:42	-->	mgsk (sid326960@gateway/web/irccloud.com/x-svpfvcrhkxyfosbb) has joined #python
2020-10-06 17:34:42	-->	arij (uid225068@gateway/web/irccloud.com/x-vwislanklfepvqsu) has joined #python
2020-10-06 17:34:42	-->	JayDoubleu (sid339529@gateway/web/irccloud.com/x-qebfalnpjfhplpne) has joined #python
2020-10-06 17:34:42	-->	salimfadhley (sid31217@wikipedia/salimfadhley) has joined #python
2020-10-06 17:34:42	-->	mossylane (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) has joined #python
2020-10-06 17:34:42	-->	JStoker (jstoker@unaffiliated/jstoker) has joined #python
2020-10-06 17:34:42	-->	Raptors (Raptors@2a03:94e0:2102:1442::2441) has joined #python
2020-10-06 17:34:42	-->	CygniX (~CygniX@opensuse/member/CygniX) has joined #python
2020-10-06 17:34:42	-->	markb1 (~mbiggers@2606-a000-111f-41fd-ace7-fb7d-487b-ed36.inf6.spectrum.com) has joined #python
2020-10-06 17:34:42	-->	nulano (~nulano@nulano.eu) has joined #python
2020-10-06 17:34:42	-->	tkv53 (~id@184.75.215.12) has joined #python
2020-10-06 17:34:42	-->	emerent (~quassel@p200300cd57246101ba27ebfffed28a59.dip0.t-ipconnect.de) has joined #python
2020-10-06 17:34:42	-->	Mechanismus (~LabMonkey@2602:306:cf62:e270:7d66:4a63:2c7a:cad9) has joined #python
2020-10-06 17:34:42	-->	diogenese (~diogenese@diogenese.velotech.net) has joined #python
2020-10-06 17:34:42	-->	Masklin (~joel@eduroam-other-02.wireless.lu.se) has joined #python
2020-10-06 17:34:42	-->	prepend (~textual@99-1-32-197.lightspeed.tukrga.sbcglobal.net) has joined #python
2020-10-06 17:34:42	-->	bloony (~bloony@185.90.212.132) has joined #python
2020-10-06 17:34:42	-->	nanonyme (nanonyme@unaffiliated/nanonyme) has joined #python
2020-10-06 17:34:42	-->	bzed (~bzed@shell.bzed.at) has joined #python
2020-10-06 17:34:42	-->	bdeshi (~bdeshi@2a0a:51c0:0:1f:19e5::1) has joined #python
2020-10-06 17:34:42	-->	finster (~finster@unaffiliated/axrfnu) has joined #python
2020-10-06 17:34:42	-->	ssiyad (ssiyad@2a03:94e0:2102:1532::2351) has joined #python
2020-10-06 17:34:42	-->	thekingofbandit (~tkob@thunix.net) has joined #python
2020-10-06 17:34:42	-->	dawg (dirtydawg@gateway/shell/blinkenshell.org/x-ibyjyejvhwxonoic) has joined #python
2020-10-06 17:34:42	-->	mattmcc (~matt@li807-33.members.linode.com) has joined #python
2020-10-06 17:34:42	-->	tjf (~tjf@unaffiliated/tjf) has joined #python
2020-10-06 17:34:42	-->	Pio (~pio@167.71.127.248) has joined #python
2020-10-06 17:34:42	-->	er1k757 (~erik@telebit.0x2f8.io) has joined #python
2020-10-06 17:34:45	<--	sunphlox (~sunphlox@mail.tarakis.de) has quit (Excess Flood)
2020-10-06 17:34:45	PJBoy	that's a great language design choice
2020-10-06 17:35:40	-->	nix8n82 (~AndChat58@67-130-74-235.dia.static.qwest.net) has joined #python
2020-10-06 17:35:40	<--	PacKetSlayer (PacketSlay@hellomouse/member/packetslayer) has quit (Max SendQ exceeded)
2020-10-06 17:35:40	<--	MrC (Ben@mrbenc.net) has quit (Max SendQ exceeded)
2020-10-06 17:35:40	<--	tkv53 (~id@184.75.215.12) has quit (Max SendQ exceeded)
2020-10-06 17:35:40	-->	ap4lmtree (~ap4lmtree@unaffiliated/ap4lmtree) has joined #python
2020-10-06 17:35:40	amo	PJBoy, i think it's a great language design choice
2020-10-06 17:35:40	-->	Nothing4You (N4Y@nothing4you.w.tf-w.tf) has joined #python
2020-10-06 17:35:40	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:d8ef:2e17:4f7:9db) has quit (Ping timeout: 272 seconds)
2020-10-06 17:35:40	man_in_shack	PJBoy: again, you're bitching about how python works. python clearly isn't the language for you
2020-10-06 17:35:40	-->	PacKetSlayer (PacketSlay@hellomouse/member/packetslayer) has joined #python
2020-10-06 17:35:40	emerent	>I tested it on some mutable types and decided it worked
2020-10-06 17:35:40	PJBoy	man_in_shack, yeah sweet thanks for your advice
2020-10-06 17:35:40	-->	sunphlox (~sunphlox@mail.tarakis.de) has joined #python
2020-10-06 17:35:48	man_in_shack	i mean, let's say x is an int, append_x(items) will throw an exception
2020-10-06 17:36:00	man_in_shack	assuming items is an iterable sequence like a list
2020-10-06 17:36:03	emerent	and now you learned that inference is not a sure way of deriving knowledge
2020-10-06 17:36:22	man_in_shack	duck typing is very useful, powerful stuff
2020-10-06 17:36:45	<--	Saukk (~Saukk@2001:998:f1:3963:1c59:9bb5:b94c:2) has quit (Remote host closed the connection)
2020-10-06 17:36:49	PJBoy	emerent, if only the language guaranteed that compound assignment only existed for mutable types, then I would have correctly derived knowledge from language rules
2020-10-06 17:37:20	man_in_shack	but now you're content with saying that ints can be immutable ....?
2020-10-06 17:37:27	man_in_shack	so += can't be used for ints now
2020-10-06 17:37:36	PJBoy	well that's the thing
2020-10-06 17:37:50	PJBoy	if ints are going to be immutable, then there's no choice but to allow +=
2020-10-06 17:37:53	<--	horseface (~horseface@unaffiliated/horseface) has quit (Quit: Leaving)
2020-10-06 17:37:58	<--	jinie (~jimmy@188.114.128.119) has quit (Quit: ZNC 1.6.1 - http://znc.in)
2020-10-06 17:38:04	PJBoy	idk why ints are immutable
2020-10-06 17:38:11	Kingsy	another one I have this -> return self.__dict__.iteritems() <- that I use to convert a class to a dict. How do you go about that in python3 ?
2020-10-06 17:38:18	man_in_shack	so you're perfectly fine with "inconsistency" then
2020-10-06 17:38:31	PJBoy	I think the inconsistency sucks
2020-10-06 17:38:38	man_in_shack	<PJBoy> if ints are going to be immutable, then there's no choice but to allow +=
2020-10-06 17:38:43	PJBoy	but if ints are immutable then it's a lesser of two evils scenario
2020-10-06 17:38:54	adder`	Kingsy, i think attr can do that
2020-10-06 17:39:13	man_in_shack	PJBoy: a=1; b=a; a+=1; print(a is b)
2020-10-06 17:39:17	Kingsy	it can, but there is no natural python way of doing it?
2020-10-06 17:39:18	PJBoy	the real question is why are ints immutable?
2020-10-06 17:39:24	Kingsy	adder`: ^
2020-10-06 17:39:32	<--	xrogaan (~xrogaan@unaffiliated/xrogaan) has quit (Quit: Leaving)
2020-10-06 17:39:41	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-06 17:39:48	-->	ssbr (ssbrmatrix@python/site-packages/ssbr) has joined #python
2020-10-06 17:39:51	man_in_shack	you want the short answer or the long answer?
2020-10-06 17:39:54	man_in_shack	cos i just gave you the short answer
2020-10-06 17:40:02	graingert	Kingsy: you can use six.viewitems
2020-10-06 17:40:12	PJBoy	why would you ever want the behaviour given by the short answer?
2020-10-06 17:40:21	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2020-10-06 17:40:28	graingert	Kingsy: but it's an odd thing to do, but modernize will fix those up for you automatically
2020-10-06 17:40:44	PJBoy	actually I guess it comes down to the fact that b = a doesn't make a copy of `a` >_>
2020-10-06 17:40:55	PJBoy	yet another questionable design choice
2020-10-06 17:41:12	jabberwock	wait what?
2020-10-06 17:41:47	<--	AlanMD_ (~alan@193.105.139.131) has quit (Read error: Connection reset by peer)
2020-10-06 17:41:48	man_in_shack	um
2020-10-06 17:42:12	<--	vuoto (~vuoto@customer-212-237-101-103.ip4.gigabit.dk) has quit (Quit: WeeChat 2.9-dev)
2020-10-06 17:42:17	man_in_shack	PJBoy: so would you rather python have pointers?
2020-10-06 17:42:27	man_in_shack	so that pass-by-reference can be acheived?
2020-10-06 17:42:47	PJBoy	good point
2020-10-06 17:42:56	-->	MrC (Ben@mrbenc.net) has joined #python
2020-10-06 17:43:00	han-solo	`list.__iadd__` does and `extend` right ?
2020-10-06 17:43:26	man_in_shack	i mean, again, you're complaining about very core parts of the python syntax here
2020-10-06 17:43:26	PJBoy	ok I think I get it now
2020-10-06 17:43:30	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-06 17:44:05	Kingsy	graingert: return self.__dict__.iteritems() <- so there is no natural way of making this statement work in python3 without using an extension like attr ?
2020-10-06 17:44:07	PJBoy	so ultimately `a += b` being sometimes mutation and sometimes `a = a + b` derives from reference semantics
2020-10-06 17:44:27	jabberwock	My complaints about python are the lingering structured features like len()
2020-10-06 17:44:40	graingert	Kingsy: return six.iteritems(self.__dict__)
2020-10-06 17:44:56	graingert	Kingsy: try it with `pipx run modernize`
2020-10-06 17:44:57	Kingsy	graingert: sorry what is six in this case?
2020-10-06 17:44:57	man_in_shack	in a very broad sense, yes
2020-10-06 17:44:58	han-solo	jabberwock: http://effbot.org/pyfaq/why-does-python-use-methods-for-some-functionality-e-g-list-index-but-functions-for-other-e-g-len-list.htm
2020-10-06 17:45:03	-->	mumixam (~m@unaffiliated/mumixam) has joined #python
2020-10-06 17:45:28	jabberwock	han-solo, is that meant to sell me on why my complaint is misguided?
2020-10-06 17:45:33	 *	jabberwock reads anyway
2020-10-06 17:46:00	graingert	Kingsy: it's an interop package, lets you write code for py2 and py3 with the same source code
2020-10-06 17:46:10	mgedmin	Kingsy: if you don't need to preserve Python 2 support, you can just do return self.__dict__.items()
2020-10-06 17:46:16	<--	Sylhouette (~johan@85-147-130-226.cable.dynamic.v4.ziggo.nl) has quit (Remote host closed the connection)
2020-10-06 17:46:37	PJBoy	man_in_shack, thanks for the journey through python reasoning :)
2020-10-06 17:46:38	han-solo	jabberwock: sorry, i assumed, your complaint was why there is `len` and not `something.len()` ...
2020-10-06 17:46:56	jabberwock	han-solo, No. I just prefer .len() or .length :)
2020-10-06 17:47:00	jabberwock	but this is interesting so thank you
2020-10-06 17:47:06	han-solo	:)
2020-10-06 17:47:45	jabberwock	han-solo, I think because I coded in ruby before ptyhon. so i.to_s.length and all that made sense
2020-10-06 17:47:47	Kingsy	mgedmin: thats what I had, it throws an exception -> iter() returned non-iterator of type 'dict_items'
2020-10-06 17:47:52	jabberwock	(except .to_s is awful naming)
2020-10-06 17:47:59	jabberwock	*python
2020-10-06 17:48:24	han-solo	jabberwock: i see
2020-10-06 17:48:27	-->	mathlover2 (~mathlover@2604:6000:1013:129e:755e:eccf:8735:da37) has joined #python
2020-10-06 17:48:34	-->	edlinde (~edlinde@183.83.147.45) has joined #python
2020-10-06 17:48:40	-->	very_sneaky (~very_snea@45.67.96.42) has joined #python
2020-10-06 17:49:01	<--	mathlover2 (~mathlover@2604:6000:1013:129e:755e:eccf:8735:da37) has quit (Remote host closed the connection)
2020-10-06 17:49:19	mgedmin	Kingsy: return iter(self.__dict__.items()) if you need an iterator specifically
2020-10-06 17:49:51	mgedmin	Kingsy: is this inside a def __iter__(self): for your class?  I can't think of any other situation where the return value must be an iterator rather than an iterable
2020-10-06 17:50:20	graingert	Kingsy: I'd highly recommend upgrading to py3 via universal py2+py3
2020-10-06 17:50:23	-->	patriick (patrick@gateway/shell/blinkenshell.org/session) has joined #python
2020-10-06 17:50:24	<--	patriick (patrick@gateway/shell/blinkenshell.org/session) has quit (Changing host)
2020-10-06 17:50:24	-->	patriick (patrick@gateway/shell/blinkenshell.org/x-jzmdhucvvvisupkx) has joined #python
2020-10-06 17:51:06	-->	rogersm (~rogersm@92.59.121.108) has joined #python
2020-10-06 17:51:21	<--	Deyaa (uid190709@gateway/web/irccloud.com/x-cubryrdvtovqauvm) has quit (Quit: Connection closed for inactivity)
2020-10-06 17:51:30	jabberwock	han-solo, I think his perspective is fair. I never questioned __special__ methods tbh because I've seen them so often in other languages
2020-10-06 17:52:08	jabberwock	I suppose I wouldn't mind explicit private/public methods and variables
2020-10-06 17:52:13	Kingsy	mgedmin: yeah, that works perfectly. I didnt think to just cast it like that.
2020-10-06 17:52:32	jabberwock	but I can document the intentions easily enough where those would be declared, below the class def
2020-10-06 17:52:39	Kingsy	graingert: I am in the process of upgrading to py3, currently fixing all the little things I find
2020-10-06 17:52:52	graingert	Kingsy: use modernize it will help
2020-10-06 17:53:02	han-solo	jabberwock: one can use `_name` to mark it as private for readers
2020-10-06 17:53:11	 *	jabberwock nods
2020-10-06 17:53:14	jabberwock	I understand that's the convention
2020-10-06 17:53:24	ahivarn	clear
2020-10-06 17:53:25	graingert	Kingsy: get your py2 tests passing with all the modernize fixers applied
2020-10-06 17:53:31	graingert	Kingsy: and apply one fixer at a time
2020-10-06 17:54:09	ahivarn	I was trying to understand hangman game written in python. I have barely any python or programmin lang experience.
2020-10-06 17:54:15	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Remote host closed the connection)
2020-10-06 17:54:16	jabberwock	and then GL with your byte arrays :D
2020-10-06 17:54:39	-->	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-lnmeqadgtbjezvqf) has joined #python
2020-10-06 17:54:39	<--	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-lnmeqadgtbjezvqf) has quit (Excess Flood)
2020-10-06 17:54:47	nedbat	ahivarn: do you have specific questions?
2020-10-06 17:54:51	ahivarn	https://bpa.st/KNSQ
2020-10-06 17:54:56	-->	fflori (~fflori@nat-wlan-uzh-89-206-64-013.uzh.ch) has joined #python
2020-10-06 17:55:01	<--	very_sneaky (~very_snea@45.67.96.42) has quit (Ping timeout: 258 seconds)
2020-10-06 17:55:12	ahivarn	@nedbat i am totally perplexed how this works!!
2020-10-06 17:55:13	-->	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-pdcwnwvholmgooka) has joined #python
2020-10-06 17:55:13	<--	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-pdcwnwvholmgooka) has quit (Excess Flood)
2020-10-06 17:55:16	ahivarn	https://bpa.st/KNSQ
2020-10-06 17:55:42	<--	osiem (~osiem@demeter.boscard.pl) has quit (Ping timeout: 240 seconds)
2020-10-06 17:55:46	-->	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-dzvxupgcuyyqazsa) has joined #python
2020-10-06 17:55:46	<--	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-dzvxupgcuyyqazsa) has quit (Excess Flood)
2020-10-06 17:56:19	-->	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-epduqzzfuodiyftc) has joined #python
2020-10-06 17:56:19	<--	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-epduqzzfuodiyftc) has quit (Excess Flood)
2020-10-06 17:56:52	-->	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-gqbafjeckeskdnnh) has joined #python
2020-10-06 17:56:52	<--	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-gqbafjeckeskdnnh) has quit (Excess Flood)
2020-10-06 17:56:57	jabberwock	ahivarn, that's a sloppy example to learn from imo
2020-10-06 17:57:05	-->	Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.comhem.se) has joined #python
2020-10-06 17:57:22	nedbat	ahivarn: you probably know what line 2 does :)
2020-10-06 17:57:52	ahivarn	jabberwock oh is it?
2020-10-06 17:58:01	jabberwock	In my opinion
2020-10-06 17:58:16	jabberwock	I don't like people shortening variables names and removing their meaning
2020-10-06 17:58:24	jabberwock	we're not on 80 column screens anymore
2020-10-06 17:58:39	ahivarn	nedbat yeah maybe
2020-10-06 17:58:45	jabberwock	And also I've never seen hangman display 1 line at a time like that
2020-10-06 17:58:49	jabberwock	but I'm old
2020-10-06 17:59:13	nedbat	jabberwock: i was noticing that too, but the "right" way to do it would be more complicated
2020-10-06 17:59:30	-->	yakiza (~yakiza@178-147-255-73.haap.dm.cosmote.net) has joined #python
2020-10-06 17:59:32	jabberwock	nedbat, I was thinking an array of his body parts and rope, and .format{} with spaces or those
2020-10-06 17:59:46	-->	very_sneaky (~very_snea@45.67.96.36) has joined #python
2020-10-06 17:59:51	ahivarn	as a beginner to programming, it looks indeed hard. Though i am comfortable in maths;
2020-10-06 18:00:12	nedbat	ahivarn: there's a lot going on here. take it one step at a time.
2020-10-06 18:00:17	<--	Ergo (~ergo@91.238.59.144) has quit (Remote host closed the connection)
2020-10-06 18:00:21	-->	rmarcand (~rmarcand@2001:420:2004:401::12) has joined #python
2020-10-06 18:00:27	-->	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has joined #python
2020-10-06 18:00:33	nedbat	ahivarn: it might help to had print lines to print out the values of some of the variables, so you can see them change as you run it
2020-10-06 18:00:46	ahivarn	nedbat this was from udemy course - self taught programmer
2020-10-06 18:01:04	ahivarn	@nedbat that sounds a good idea
2020-10-06 18:01:16	nedbat	ahivarn: what version of Python do you have?
2020-10-06 18:01:25	ahivarn	3.8
2020-10-06 18:01:27	-->	ct16k (~ryan@79.115.156.201) has joined #python
2020-10-06 18:01:34	jabberwock	ahivarn, I would first replace all "rletters" with "correct_letters". There is no harm in modifying the vernacular to make sense
2020-10-06 18:01:52	ahivarn	jabberwock absolutely
2020-10-06 18:02:02	nedbat	ahivarn: great, you can do things like:  `  print(f"{rletters=}")  `  and it will show you the value of rletters
2020-10-06 18:02:10	-->	Ergo (~ergo@91.238.59.144) has joined #python
2020-10-06 18:02:11	ahivarn	making things more complicated by such practices
2020-10-06 18:02:22	ahivarn	nedbat i will try
2020-10-06 18:02:24	 *	jabberwock nods
2020-10-06 18:02:24	ahivarn	Practical Programming, Third Edition
2020-10-06 18:02:40	ahivarn	How do you review this as a starting book for novice?
2020-10-06 18:03:16	-->	rmmk (Username@179.223.95.42) has joined #python
2020-10-06 18:03:16	jabberwock	I've never heard of it. I am also self taught. My first book was "Teach yourself C in 21 days" by SAMS Publishing
2020-10-06 18:03:19	<--	davor (~davor@unaffiliated/davor) has quit (Quit: Bye)
2020-10-06 18:03:36	ChrisWarrick	ahivarn: we usually recommend "think python" or "automate the boring stuff with python", both free for online reading
2020-10-06 18:03:40	<--	sibachian (~sibachian@h46-236-111-169.cust.a3fiber.se) has quit (Ping timeout: 265 seconds)
2020-10-06 18:03:47	<--	la_croix (~la_croix@cpc97624-walt24-2-0-cust98.13-2.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2020-10-06 18:03:57	<--	Jonopoly (~Jonopoly@unaffiliated/jonopoly) has quit (Quit: WeeChat 2.9)
2020-10-06 18:04:02	ahivarn	jabberwock i am mba grad. Just venturing out as I wanted to explore latest jobs
2020-10-06 18:04:19	-->	shailangsa (~shailangs@host165-120-169-97.range165-120.btcentralplus.com) has joined #python
2020-10-06 18:04:23	ahivarn	ChrisWarrick think python - i wil try
2020-10-06 18:04:26	jabberwock	Congradutions :)
2020-10-06 18:04:34	<--	corvax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has quit (Quit: Leaving)
2020-10-06 18:05:03	-->	NeilG (68a3b088@gateway/web/cgi-irc/kiwiirc.com/ip.104.163.176.136) has joined #python
2020-10-06 18:05:09	-->	davor (~davor@unaffiliated/davor) has joined #python
2020-10-06 18:05:09	<--	|oLa| (~|_oLa_|@2a00:23c7:d601:b500:4078:b14:20af:efa3) has quit (Quit: Leaving.)
2020-10-06 18:05:41	<--	todda7 (~torstein@athedsl-217541.home.otenet.gr) has quit (Ping timeout: 260 seconds)
2020-10-06 18:06:57	han-solo	i think, i read automate the boring stuff first, because it was very hands on, so it was interesting :)
2020-10-06 18:07:27	ahivarn	han-solo i read it few months back but got stuck somewhere and left
2020-10-06 18:07:37	ahivarn	but its great for start
2020-10-06 18:07:45	-->	Sylhouette (~johan@85-147-130-226.cable.dynamic.v4.ziggo.nl) has joined #python
2020-10-06 18:07:48	han-solo	Yeah
2020-10-06 18:07:49	-->	tkv53 (~id@184.75.215.5) has joined #python
2020-10-06 18:07:51	jabberwock	ahivarn, also replace "cind" with "char_index"
2020-10-06 18:07:57	jabberwock	I swear I was like "what does fire have to do with it?"
2020-10-06 18:07:59	<--	tkv53 (~id@184.75.215.5) has quit (Max SendQ exceeded)
2020-10-06 18:08:11	-->	haslo (uid390999@gateway/web/irccloud.com/x-qpszroxaqxwhckaz) has joined #python
2020-10-06 18:08:49	ahivarn	jabberwock right!! people love to make things unreadable.
2020-10-06 18:09:02	nedbat	jabberwock: you have char in yours, sounds like the fire is still burning :)
2020-10-06 18:09:09	jabberwock	lol!
2020-10-06 18:09:14	jabberwock	character_index
2020-10-06 18:09:24	ahivarn	hah
2020-10-06 18:09:27	ahivarn	haha
2020-10-06 18:09:34	nedbat	no, you do have to get used to some conventional abbreviations.
2020-10-06 18:09:35	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-06 18:09:46	<--	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has quit (Ping timeout: 260 seconds)
2020-10-06 18:10:17	ahivarn	nedbat maybe later. For beginners; axions, idioms are often stopping points
2020-10-06 18:10:25	ahivarn	make things mysterious
2020-10-06 18:10:35	nedbat	ahivarn: it's a tricky balance
2020-10-06 18:10:44	jabberwock	nedbat, "cind" is a new one for me tbh
2020-10-06 18:10:51	jabberwock	"idx" not so much
2020-10-06 18:10:52	nedbat	jabberwock: yes
2020-10-06 18:11:19	-->	seanvert (~user@177.84.244.242) has joined #python
2020-10-06 18:11:52	jabberwock	I'd also rather see "c" than "char" since "char" reminds me of C
2020-10-06 18:11:57	 *	jabberwock is talking like a jabberwock 
2020-10-06 18:12:00	<--	john2gb (~john2gb@94-225-47-8.access.telenet.be) has quit (Quit: Ping timeout (120 seconds))
2020-10-06 18:12:57	-->	john2gb (~john2gb@94-225-47-8.access.telenet.be) has joined #python
2020-10-06 18:13:05	ahivarn	Is it easier to learn other languages if i learn python
2020-10-06 18:13:08	-->	osiem (~osiem@demeter.boscard.pl) has joined #python
2020-10-06 18:13:19	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-06 18:13:25	MrElendig	maybe
2020-10-06 18:13:51	rindolf	ahivarn: hi
2020-10-06 18:13:56	nedbat	ahivarn: something that can be hard to learn: which parts are universal, and which parts are particular to a language.
2020-10-06 18:13:57	ahivarn	round(3.6,9) gives 3.6
2020-10-06 18:13:59	jabberwock	ahivarn, The fundamentals you learn will definitely persist across many other languages
2020-10-06 18:14:03	ahivarn	3,6 , 9
2020-10-06 18:14:17	rindolf	ahivarn: it depends on the language
2020-10-06 18:14:20	-->	dreamon (~dreamon@unaffiliated/dreamon) has joined #python
2020-10-06 18:14:40	rindolf	ahivarn: and  see https://www.joelonsoftware.com/2002/12/11/lord-palmerston-on-programming/
2020-10-06 18:14:52	ahivarn	jabberwock nedbat I hope so
2020-10-06 18:14:56	bjs	ahivarn: learning one language helps in learning others, but as nedbat says not all of the language is universal and you'll re-learn the same bit over and over until you've seen it enough times in different languages
2020-10-06 18:15:05	ahivarn	rindolf thanks!
2020-10-06 18:15:31	bjs	ahivarn: did you have a question about that round() ?
2020-10-06 18:15:45	<--	dethos (~dethos@87-196-81-134.net.novis.pt) has quit (Ping timeout: 240 seconds)
2020-10-06 18:16:30	-->	tkv53 (~id@184.75.215.12) has joined #python
2020-10-06 18:17:11	<--	BSaboia (~bsaboia@94.147.11.66) has quit (Quit: This computer has gone to sleep)
2020-10-06 18:18:04	-->	multifractal (~multifrac@host-92-2-127-59.as43234.net) has joined #python
2020-10-06 18:19:38	-->	todda7 (~torstein@athedsl-217541.home.otenet.gr) has joined #python
2020-10-06 18:20:27	ahivarn	bjs round takes two arguments?
2020-10-06 18:20:46	bjs	ahivarn: yes,  the value and the number of decimal places to round it to
2020-10-06 18:21:14	ahivarn	@bjs ok thanks
2020-10-06 18:21:16	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-06 18:22:02	bjs	ahivarn: one of the most useful skills in learning a language is how to find things in its documentation. Try find the docs for round() in the Python docs https://docs.python.org/3/
2020-10-06 18:22:09	<--	Hanii (~Hanii@2a00:23c5:c587:6d00:b558:9a69:c86f:8fe0) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-06 18:22:14	rifoerster	hello, is there a way to change the format for a single logger ? ( log = logging.getLogger('expample') <- one like that)
2020-10-06 18:22:15	-->	raxor2k (~raxor2k@78.158.255.2) has joined #python
2020-10-06 18:22:21	FLHerne	ahivarn: You can also call it with one argument to just get an integer
2020-10-06 18:22:59	dynetrekk	Hi, pydantic: how can I have an empty dict as the default value of a pydantic.BaseModel subclass?
2020-10-06 18:23:32	raxor2k	https://dpaste.org/PYPX   somebody who can tell me how i easily can change timezone without add extra code? (i dont want to use pytz) ....
2020-10-06 18:24:44	bjs	raxor2k: https://docs.python.org/3/library/datetime.html#datetime.timezone  you can make a timezone manually as an offset from UTC.
2020-10-06 18:25:13	-->	banisterfiend (~textual@ruby/staff/banisterfiend) has joined #python
2020-10-06 18:25:25	-->	hussam (uid193284@gateway/web/irccloud.com/x-snbuylngmazoudcr) has joined #python
2020-10-06 18:29:03	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 260 seconds)
2020-10-06 18:29:03	-->	goldfish (~goldfish@2a02:8010:63b5::713) has joined #python
2020-10-06 18:29:03	rifoerster	raxor2k:kind curious: where does that -3 come from? user input, system time zone?
2020-10-06 18:30:51	han-solo	dynetrekk: can't one do `class M(BaseModel):..d: Dict[Any, Any] = {}` or similar ?
2020-10-06 18:30:58	raxor2k	rifoerster: tbh i dont know, found this sample on google and it works perfectly
2020-10-06 18:31:07	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-06 18:31:15	raxor2k	but i tried changing that number with different ones, doesnt make any different impact
2020-10-06 18:31:21	raxor2k	bjs: thank you.
2020-10-06 18:32:53	rifoerster	best would be to get some timezone list from a library and then pick it from there, timezones are the work of the devil
2020-10-06 18:34:04	rifoerster	https://www.iana.org/time-zones
2020-10-06 18:34:48	rifoerster	raxor2k: ^^
2020-10-06 18:35:25	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Ping timeout: 240 seconds)
2020-10-06 18:36:57	MrElendig	3.9 yo?
2020-10-06 18:37:37	dynetrekk	han-solo sure I was worried about the "default mutable" from functions
2020-10-06 18:37:40	<--	pun84 (~pun84@pool-108-24-175-194.cmdnnj.fios.verizon.net) has quit (Read error: Connection reset by peer)
2020-10-06 18:38:40	han-solo	dynetrekk: ah
2020-10-06 18:38:59	han-solo	lemme check
2020-10-06 18:39:45	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-06 18:41:11	dynetrekk	han-solo I checked in Jupyter and looks like it's fine! But for a function default, not so much!
2020-10-06 18:41:23	<--	jackiiilong (~textual@60.10.12.150) has quit (Ping timeout: 258 seconds)
2020-10-06 18:42:29	<--	todda7 (~torstein@athedsl-217541.home.otenet.gr) has quit (Ping timeout: 240 seconds)
2020-10-06 18:42:29	<--	minhaj-sixbyte (~sixbyte@103.138.145.127) has quit (Ping timeout: 240 seconds)
2020-10-06 18:42:29	-->	zeden (~user@unaffiliated/zeden) has joined #python
2020-10-06 18:42:43	-->	jackiiilong (~textual@60.10.194.48) has joined #python
2020-10-06 18:42:59	han-solo	yeah, for methods, you can do the usual `def f(self, x=None):..` right ?
2020-10-06 18:43:06	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-06 18:43:11	dynetrekk	han-solo true fact
2020-10-06 18:43:15	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-06 18:44:15	<--	kuter (~kuter@81.219.61.34) has quit (Remote host closed the connection)
2020-10-06 18:49:42	<--	esir (~Thunderbi@core01-rysa.vggconnect.com) has quit (Quit: esir)
2020-10-06 18:49:42	--	irc: disconnected from server
2020-10-06 18:50:12	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-10-06 18:50:12	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-10-06 18:50:12	--	Topic set by nedbat (~nedbat@python/psf/nedbat) on Thu, 20 Aug 2020 03:18:59
2020-10-06 18:50:13	--	Channel #python: 1740 nicks (0 ops, 0 voices, 1740 normals)
2020-10-06 18:50:14	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-10-06 18:50:56	<--	Aryan (~Aryan@unaffiliated/aryan) has quit (Client Quit)
2020-10-06 18:52:31	<--	raxor2k (~raxor2k@78.158.255.2) has quit (Remote host closed the connection)
2020-10-06 18:52:32	-->	todda7 (~torstein@athedsl-217541.home.otenet.gr) has joined #python
2020-10-06 18:52:55	-->	threwahway (~threwahwa@c-73-223-93-100.hsd1.ca.comcast.net) has joined #python
2020-10-06 18:53:11	-->	horseface (~horseface@unaffiliated/horseface) has joined #python
2020-10-06 18:55:05	<--	truthr (~truthr@unaffiliated/truthr) has quit (Quit: #politics-uncensored Rizon, Disco is life  https://www.youtube.com/watch?v=y1tZUmCyFxM)
2020-10-06 18:56:20	<--	goldfish (~goldfish@2a02:8010:63b5::713) has quit (Quit: Leaving)
2020-10-06 18:57:01	-->	SamuelMarks (~SamuelMar@unaffiliated/samuelmarks) has joined #python
2020-10-06 18:57:03	<--	NomadJim (~NomadJim@pdpc/supporter/active/nomadjim) has quit (Read error: Connection reset by peer)
2020-10-06 18:58:50	-->	Aryan (~Aryan@unaffiliated/aryan) has joined #python
2020-10-06 18:59:02	<--	aw1 (~aw1@unaffiliated/aw1) has quit (Ping timeout: 246 seconds)
2020-10-06 18:59:21	-->	sibachian (~sibachian@host-95-192-73-88.mobileonline.telia.com) has joined #python
2020-10-06 19:00:13	-->	wallace_mu (~wallace_m@pool-173-79-208-61.washdc.fios.verizon.net) has joined #python
2020-10-06 19:00:41	<--	wallace_mu (~wallace_m@pool-173-79-208-61.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2020-10-06 19:01:02	-->	wallace_mu (~wallace_m@pool-173-79-208-61.washdc.fios.verizon.net) has joined #python
2020-10-06 19:01:41	-->	CookieM (~tomek@r-45-155-148-237.gpon.bialnet.pl) has joined #python
2020-10-06 19:02:28	<--	Jak_o_Shadows (~Jak@unaffiliated/jak-o-shadows/x-0479135) has quit (Ping timeout: 256 seconds)
2020-10-06 19:02:45	-->	aypea[0] (~aypea@121.223.158.83) has joined #python
2020-10-06 19:03:19	aypea[0]	hey. trying to use PyQt5. how do I get the window to naturally resize itself to its largest content? I'm trying to use adjustSize() but that does not appear to do it. Trying to avoid doing it manually as that feels dodgy.
2020-10-06 19:03:45	<--	Stanley00 (~stanley00@unaffiliated/stanley00) has quit (Remote host closed the connection)
2020-10-06 19:05:19	<--	andrewSC (~andrew@archlinux/trusteduser/andrewsc) has quit (Quit: WeeChat 2.9)
2020-10-06 19:05:27	<--	Me4502 (~quassel@unaffiliated/me4502) has quit (Read error: Connection reset by peer)
2020-10-06 19:05:50	-->	contained (contained@gateway/vpn/privateinternetaccess/contained) has joined #python
2020-10-06 19:05:59	<--	supakeen (~user@python/site-packages/supakeen) has quit (Quit: WeeChat 2.9)
2020-10-06 19:06:31	-->	supakeen (~user@python/site-packages/supakeen) has joined #python
2020-10-06 19:06:59	jabberwock	This is a kludgy suggestion, but can you set it to 16777215 x 16777215 ?
2020-10-06 19:07:07	<--	Celelibi (celelibi@82-64-105-152.subs.proxad.net) has quit (Ping timeout: 272 seconds)
2020-10-06 19:07:42	jabberwock	I'm saying this while having 0 experience in QT
2020-10-06 19:07:59	-->	gandalfdwite (~gandalfdw@49.207.197.216) has joined #python
2020-10-06 19:08:05	<--	dpreacher (~dpreacher@49.207.202.31) has left #python
2020-10-06 19:08:30	jabberwock	based off what I'm reading, it sounds like maybe the layout isn't set up properly
2020-10-06 19:08:56	aypea[0]	quite possibly. It's My First PyQT Experience[tm]. :)
2020-10-06 19:09:18	aypea[0]	so far everything I have in there is working but... can't size appropriately.
2020-10-06 19:09:39	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-06 19:09:49	jabberwock	I'm looking at this QT-specific forum: https://forum.qt.io/topic/47739/solved-automatically-resizing-layouts/3
2020-10-06 19:09:58	jabberwock	Assuming that the Python API has similar features
2020-10-06 19:10:06	 *	aypea[0] goes to see.
2020-10-06 19:10:31	-->	elmo26 (d47987ab@212.121.135.171) has joined #python
2020-10-06 19:11:33	<--	homerj (~homerj@april-fools/2013/second/homerj) has quit (Quit: Leaving)
2020-10-06 19:11:41	elmo26	Any one here managed to get peewee working together with Threadpoolexecutor and connectionpooling?
2020-10-06 19:12:44	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-06 19:12:44	-->	impermanence (c01c0124@gateway/web/cgi-irc/kiwiirc.com/ip.192.28.1.36) has joined #python
2020-10-06 19:12:47	<--	gandalfdwite (~gandalfdw@49.207.197.216) has quit (Ping timeout: 264 seconds)
2020-10-06 19:13:45	-->	gitesh (uid423739@gateway/web/irccloud.com/x-svconoekllxbwaqq) has joined #python
2020-10-06 19:15:14	aypea[0]	yeah. "break layout" is a qt designer thing. can't find something that describes the code for it. :/
2020-10-06 19:15:19	jabberwock	Darn
2020-10-06 19:15:24	aypea[0]	aye :/
2020-10-06 19:15:24	<--	shan (~shan@unaffiliated/jasatso1301) has quit (Ping timeout: 240 seconds)
2020-10-06 19:15:26	<--	Aryan (~Aryan@unaffiliated/aryan) has quit (Quit: leaving)
2020-10-06 19:15:35	jabberwock	I mean... I would expect QT designer to put that code somewhere
2020-10-06 19:15:46	jabberwock	Can you install QT designer and see what it actually does? I realize that is a bit of an ask
2020-10-06 19:15:52	jabberwock	just throwing suggestions
2020-10-06 19:16:00	aypea[0]	it creates a file in its own format that Qt then can use to create the UI
2020-10-06 19:16:08	jabberwock	omg that's worse than Flex
2020-10-06 19:16:12	aypea[0]	:)
2020-10-06 19:17:08	jabberwock	https://stackoverflow.com/questions/406939/pyqt-getting-widgets-to-resize-automatically-in-a-qdialog
2020-10-06 19:17:16	jabberwock	dunno if you're using qdialog
2020-10-06 19:19:32	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2020-10-06 19:20:52	aypea[0]	that's qt3.3 but I /seem/ to be doing that.
2020-10-06 19:20:56	-->	st8less (~st8less@2603:a060:11fd:0:101c:4882:6a23:1c57) has joined #python
2020-10-06 19:21:18	-->	minhaj-sixbyte (~sixbyte@103.138.145.127) has joined #python
2020-10-06 19:21:52	<--	st8less (~st8less@2603:a060:11fd:0:101c:4882:6a23:1c57) has quit (Client Quit)
2020-10-06 19:22:13	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-06 19:24:13	-->	tocka (uid198544@gateway/web/irccloud.com/x-tnnkyysnhcbrrxtt) has joined #python
2020-10-06 19:24:59	FLHerne	aypea[0]: You want an *existing* window to change size when the content changes?
2020-10-06 19:25:23	FLHerne	That sounds pretty confusing, and might break with some window managers (e.g. tiling ones)
2020-10-06 19:26:12	-->	shan (~shan@unaffiliated/jasatso1301) has joined #python
2020-10-06 19:26:50	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 256 seconds)
2020-10-06 19:27:02	-->	awmv (uid282297@gateway/web/irccloud.com/x-fanulpmbhreekhdl) has joined #python
2020-10-06 19:27:43	awmv	Is it possible to do this with comprehensions?
2020-10-06 19:27:46	awmv	https://bpa.st/4DTQ
2020-10-06 19:27:46	aypea[0]	FLHerne: i'll settle for new, which is what I am playing with. configuring a window with a scrollable area and a QVBoxLayout() within that. I want the window that opens to do so such that the horizontal area does not need to be scrolled if it fits on the screen.
2020-10-06 19:27:50	<--	srandon111 (~srandon11@37.120.201.172) has quit (Quit: leaving)
2020-10-06 19:28:29	<--	contained (contained@gateway/vpn/privateinternetaccess/contained) has quit (Quit: like a fart in the wind)
2020-10-06 19:28:57	FLHerne	aypea[0]: So the layout is inside the scroll area? That's probably your root issue
2020-10-06 19:29:19	aypea[0]	FLHerne: oh?
2020-10-06 19:29:48	mgedmin	awmv: modify an existing dict?  not nicely; create a new dict?  sure:  mc_dict = {macro.filename: macro.line for macro in macros}
2020-10-06 19:30:26	aypea[0]	FLHerne: what do you recommend?
2020-10-06 19:30:39	<--	chillaranand (9d31a997@157.49.169.151) has left #python
2020-10-06 19:30:51	-->	sdoherty (sdoherty@nat/redhat/x-reujtjqyvahhunmq) has joined #python
2020-10-06 19:30:51	<--	SamuelMarks (~SamuelMar@unaffiliated/samuelmarks) has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
2020-10-06 19:30:59	FLHerne	aypea[0]: Is the QScrollArea the root widget of the window, or is there something outside that?
2020-10-06 19:31:02	<--	palasso (~palasso@unaffiliated/palasso) has quit (Remote host closed the connection)
2020-10-06 19:31:19	han-solo	`d.update({...})` should work right ?
2020-10-06 19:31:23	-->	palasso (~palasso@unaffiliated/palasso) has joined #python
2020-10-06 19:31:26	aypea[0]	FLHerne: I'd say that's a yes: self.setCentralWidget(scroll)
2020-10-06 19:31:43	mgedmin	han-solo: good point
2020-10-06 19:31:45	NeilG	is there an elegant way to write one pytest that depends on another?
2020-10-06 19:32:13	FLHerne	aypea[0]: It's a QMainWindow, then?
2020-10-06 19:32:17	 *	FLHerne thinks
2020-10-06 19:32:23	mgedmin	NeilG: can you elaborate?
2020-10-06 19:32:27	-->	m000gle_ (m000gle@gateway/vpn/privateinternetaccess/m000gle) has joined #python
2020-10-06 19:32:32	awmv	Ah thank you :)
2020-10-06 19:32:34	NeilG	maybe I'm designing this wrong: mgedmin
2020-10-06 19:32:34	aypea[0]	FLHerne: self is QMainWindow, yes.
2020-10-06 19:33:18	NeilG	I produce a machine learning model M, I train it, I verify its parameters here (Test A), I run some more stuff on that model and verify some outputs (Test B)
2020-10-06 19:33:27	NeilG	maybe I should make the result of training a fixture?
2020-10-06 19:33:46	NeilG	and h ave test A and B read the session level fixture?
2020-10-06 19:33:49	jabberwock	that makes sense NeilG
2020-10-06 19:34:13	jabberwock	unless TDD has flipped upside down in recent years
2020-10-06 19:34:15	mgedmin	NeilG: yeah, that sounds like a good idea
2020-10-06 19:34:25	NeilG	ok, but what if, suppose, I had this pattern: train, run test A on result, train *more*, run test B, train *more*, run test C?
2020-10-06 19:34:37	-->	andrewSC (~andrew@archlinux/trusteduser/andrewsc) has joined #python
2020-10-06 19:34:42	NeilG	I would love for that to be shown as three tests—not one
2020-10-06 19:35:22	jabberwock	sounds like it would be cool to have some kind of chained way to do that with a generator
2020-10-06 19:35:22	mgedmin	NeilG: multiple fixtures?  that depend on each other?  is training a destructive operation?  can you clone models?
2020-10-06 19:35:26	elmo26	in a multithreaded app does it matter if I use a Connectionpool to my database or if all threads share the one connection? I am using peewee orm and Threadpoolexecutor
2020-10-06 19:35:31	NeilG	I can clone models
2020-10-06 19:35:35	<--	m000gle__ (~m000gle@ip-38-88-102-217.fibre.fibrestream.ca) has quit (Ping timeout: 264 seconds)
2020-10-06 19:35:40	NeilG	can multiple fixtures depend on each other?
2020-10-06 19:35:44	NeilG	I've never done that!
2020-10-06 19:36:06	mgedmin	test_a depends on fixture_a, test_b depends on fixture_b, which depends on fixture_a, clones it, trains some more; etc
2020-10-06 19:36:10	NeilG	oohhhhh
2020-10-06 19:36:22	NeilG	why do I need to clone though? mgedmin?
2020-10-06 19:36:49	mgedmin	because if pytest runs test_b first, you don't want fixture_a to contain the results of both trainings!
2020-10-06 19:37:01	NeilG	got it!
2020-10-06 19:37:05	NeilG	okay, this makes sense
2020-10-06 19:37:17	NeilG	just had my brain stretched lol
2020-10-06 19:37:18	NeilG	thanks
2020-10-06 19:37:28	<--	Carduus (~Carduus@pc199.phh.uni-kiel.de) has quit (Quit: leaving)
2020-10-06 19:37:36	mgedmin	I am assuming you want session-level fixtures, as a performance optimization
2020-10-06 19:37:48	mgedmin	if you use regular fixtures, those will be re-created for each test and this problem wouldn't come up
2020-10-06 19:37:49	NeilG	okay, I never know whether to make them session or module
2020-10-06 19:37:55	NeilG	if nothing leaks from the module
2020-10-06 19:38:04	NeilG	I get that it doesn't matter, but which should I prefer?
2020-10-06 19:38:42	mgedmin	I default to test-level(? whatever the default scope is called) fixtures; if they're expensive and can be reused, I switch to session-level fixtures
2020-10-06 19:38:50	mgedmin	I don't think I ever found the need for module-level fixtures
2020-10-06 19:39:04	NeilG	got it
2020-10-06 19:39:12	NeilG	I've also only ever used session and test level fixtures
2020-10-06 19:39:41	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-06 19:40:09	-->	MikeDebian (~none@2001:8a0:759e:ed00::9984) has joined #python
2020-10-06 19:40:20	jabberwock	the concept of fixtures for AI is interesting to me because of its potential vs. the limitations of the fixture data
2020-10-06 19:40:22	FLHerne	aypea[0]: Maybe try `self.setMinimumSize(self.sizeHint().width(), 0))` on the QScrollArea?
2020-10-06 19:41:05	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-06 19:41:35	FLHerne	aypea[0]: I think by default it implements sizeHint() which can be ignored by parent layouts but not minimumSizeHint() which usually isn't
2020-10-06 19:41:42	-->	thiras (~thiras@unaffiliated/thiras) has joined #python
2020-10-06 19:41:58	<--	todda7 (~torstein@athedsl-217541.home.otenet.gr) has quit (Ping timeout: 272 seconds)
2020-10-06 19:42:13	<--	jackiiilong (~textual@60.10.194.48) has quit (Ping timeout: 256 seconds)
2020-10-06 19:42:35	eyepeetee	"The images are always -.08, .08, .04, -xxx (based on the image size)."
2020-10-06 19:42:39	eyepeetee	What exactly does this mean?
2020-10-06 19:42:56	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-06 19:43:19	-->	la_croix (~la_croix@cpc97624-walt24-2-0-cust98.13-2.cable.virginm.net) has joined #python
2020-10-06 19:43:32	aypea[0]	FLHerne: didn't seem to do anything.
2020-10-06 19:43:42	<--	biermic (~biermic@193-80-12-83.adsl.highway.telekom.at) has quit (Ping timeout: 260 seconds)
2020-10-06 19:43:49	FLHerne	Hrm
2020-10-06 19:44:03	FLHerne	Sorry, I don't really have time to play around with it now :-(
2020-10-06 19:44:05	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-06 19:44:24	-->	lsd|2 (~lsd@dynamic62-133-135-005.ostnet.pl) has joined #python
2020-10-06 19:44:37	-->	aslicedbanjo (~aslicedba@host86-150-115-219.range86-150.btcentralplus.com) has joined #python
2020-10-06 19:44:39	aypea[0]	FLHerne: fair enough. thanks for the help you gave. I'll keep glaring at it and maybe burn through its resisance to my will. :)
2020-10-06 19:46:12	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Quit: Bin weg.)
2020-10-06 19:46:16	-->	jackiiilong (~textual@60.10.23.150) has joined #python
2020-10-06 19:52:50	--	irc: disconnected from server
2020-10-06 19:54:37	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-10-06 19:54:37	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-10-06 19:54:37	--	Topic set by nedbat (~nedbat@python/psf/nedbat) on Thu, 20 Aug 2020 03:18:59
2020-10-06 19:54:37	--	Channel #python: 1739 nicks (0 ops, 0 voices, 1739 normals)
2020-10-06 19:54:39	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-10-06 19:54:43	-->	BobRossWins (~BobRossWi@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has joined #python
2020-10-06 19:54:49	<--	GodFather (~rcc@50.42.186.106) has quit (Read error: Connection reset by peer)
2020-10-06 19:55:33	NeilG	jabberwock what do you mean?
2020-10-06 19:55:55	<--	horseface (~horseface@unaffiliated/horseface) has quit (Quit: Leaving)
2020-10-06 19:56:07	-->	GodFather (~rcc@50.42.186.106) has joined #python
2020-10-06 19:56:11	jabberwock	NeilG, I was being silly honestly
2020-10-06 19:56:23	jabberwock	Training AI with a limited set to make sure it can learn bigger sets
2020-10-06 19:56:26	wyoung	jabberwock: SIlly is a good thing
2020-10-06 19:56:29	jabberwock	there's some nerd joke in there somewhere
2020-10-06 19:56:33	jabberwock	<3
2020-10-06 19:56:40	NeilG	lol ok
2020-10-06 19:56:57	NeilG	I think I overused inheritance again
2020-10-06 19:57:05	wyoung	jabberwock: Yes, monty python too, right proper nerd
2020-10-06 19:57:38	jabberwock	NeilG, It's just - how smart can the AI get with small fixtures?
2020-10-06 19:57:47	<--	Dantalion (~Dantalion@217-123-73-108.cable.dynamic.v4.ziggo.nl) has quit (Remote host closed the connection)
2020-10-06 19:58:03	NeilG	you have a strange sense of humor :D
2020-10-06 19:58:03	jabberwock	so we can build on that and make a real doozy of a joke that will make everyone cringe
2020-10-06 19:59:35	jabberwock	NeilG, well.. I am my name's sake
2020-10-06 19:59:35	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2020-10-06 19:59:35	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-06 19:59:35	NeilG	wasn't that from alice in wonderland?
2020-10-06 19:59:35	dreamer	hmm. we're trying to improve our CI/CD in regards to some form of caching for tox. so far we've been just saving the .tox/ directory and restoring it at the beginning of each CI run, this of course means that we have to invalidate the entire dir any time we change a package. now we're trying to replace this crude "caching" by having a local devpi server to cache all pip packages. but this only marginally
2020-10-06 19:59:35	dreamer	improved things (about 10% faster than running plain pip, but almost twice as long as using our 'cached' tox dir). so what are people using to make their lives easier for this? :)
2020-10-06 19:59:38	NeilG	oh yeah
2020-10-06 19:59:40	NeilG	that poem
2020-10-06 19:59:45	jabberwock	NeilG, Yes. Technically "Through the Looking Glass" but yes :)
2020-10-06 19:59:55	NeilG	right right
2020-10-06 20:00:04	NeilG	it's been about 25 years for me
2020-10-06 20:00:15	-->	mirrorbird (~psutcliff@2a00:801:2d5:9d73:ff00:6553:d451:a276) has joined #python
2020-10-06 20:00:16	jabberwock	It's way before all of our time I hope
2020-10-06 20:00:30	NeilG	since we read it in English class
2020-10-06 20:00:46	jabberwock	I think someone wrote it in pseudo code
2020-10-06 20:01:13	jabberwock	I liked the character after thinking he was pretty bad-ass in American McGee's Alice
2020-10-06 20:01:55	jabberwock	 https://www.youtube.com/watch?v=uMm1M_JQUog
2020-10-06 20:02:10	-->	horseface (~horseface@unaffiliated/horseface) has joined #python
2020-10-06 20:02:21	-->	urodna (~urodna@unaffiliated/urodna) has joined #python
2020-10-06 20:02:23	jabberwock	which, when it came out.. was pretty awesome
2020-10-06 20:02:56	man_in_shack	if weight(typing) == weight(duck): duck.material = "wood"; # (duck in witches) is now True
2020-10-06 20:03:08	man_in_shack	or something (:
2020-10-06 20:03:22	man_in_shack	should be typing.material but yeah
2020-10-06 20:03:34	man_in_shack	import typing is a witch
2020-10-06 20:06:27	<--	chillaranand_ (~chillaran@2409:4071:5a8:790a:d0d2:a299:332:89d9) has quit (Quit: Leaving...)
2020-10-06 20:06:41	<--	GodFather (~rcc@50.42.186.106) has quit (Read error: Connection reset by peer)
2020-10-06 20:07:14	-->	lacrymology (~lacrymolo@static-105-116-25-46.ipcom.comunitel.net) has joined #python
2020-10-06 20:07:56	<--	epsilonKNOT (~epsilonKN@c-73-215-141-174.hsd1.nj.comcast.net) has quit (Quit: ZNC - https://znc.in)
2020-10-06 20:08:05	lacrymology	I've seen things like lone * and / in parameters list of python 3 function definitions, and I can't find what those mean or how to use them, can someone point me to the right docs?
2020-10-06 20:08:39	han-solo	`def f(a, b, *, x=..):..` ?
2020-10-06 20:08:39	-->	Lando-SpacePimp (~Lando@unaffiliated/lando-spacepimp) has joined #python
2020-10-06 20:08:52	supakeen	lacrymology: They mean thigns such as 'no more positional arguments after this' and 'only positional arguments'
2020-10-06 20:09:00	man_in_shack	lacrymology: * means all following arguments are keyword only, / means all previous arguments are positional only
2020-10-06 20:09:26	lacrymology	thanks
2020-10-06 20:09:35	lacrymology	ok, I think I found someething in the glossary
2020-10-06 20:09:35	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-06 20:09:42	man_in_shack	/ is new in 3.8
2020-10-06 20:09:47	han-solo	https://docs.python.org/3/whatsnew/3.8.html#positional-only-parameters
2020-10-06 20:09:48	<--	adasr3 (~Adium@2605:e000:1601:12c8:c01b:60a3:326a:a079) has quit (Quit: Leaving.)
2020-10-06 20:11:29	-->	GodFather (~rcc@50.42.186.106) has joined #python
2020-10-06 20:11:34	-->	Dantalion (~Dantalion@217-123-73-108.cable.dynamic.v4.ziggo.nl) has joined #python
2020-10-06 20:11:37	man_in_shack	when was * added?
2020-10-06 20:11:48	han-solo	since 3.0 ?
2020-10-06 20:12:04	han-solo	me thinks
2020-10-06 20:12:30	<--	GodFather (~rcc@50.42.186.106) has quit (Read error: Connection reset by peer)
2020-10-06 20:12:31	jabberwock	Like def func(*args): or ?
2020-10-06 20:12:42	jabberwock	oh, lone. sorry
2020-10-06 20:13:02	wyoung	han-solo: * and ** in arguments were in version 2 though
2020-10-06 20:13:13	wyoung	Or did I misread something?
2020-10-06 20:13:17	-->	GodFather (~rcc@50.42.186.106) has joined #python
2020-10-06 20:13:32	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-06 20:13:36	han-solo	wyoung: the lone *, but maybe i am wrong
2020-10-06 20:13:45	-->	epsilonKNOT (~epsilonKN@c-73-215-141-174.hsd1.nj.comcast.net) has joined #python
2020-10-06 20:14:12	wyoung	han-solo: Unles you are referring to the order or using *
2020-10-06 20:14:12	wyoung	or = of
2020-10-06 20:14:18	-->	twb (~twb@2403:5800:3200:8300::a92) has joined #python
2020-10-06 20:14:18	wyoung	That was changed in version 3
2020-10-06 20:14:27	jabberwock	what does a lone * do?
2020-10-06 20:14:29	bjs	wyoung: `def f(x, *, y): ...`
2020-10-06 20:14:48	wyoung	bjs: Thnx
2020-10-06 20:14:48	jabberwock	I'm familar with its C-looking synax for args and kwargs and expanding lists
2020-10-06 20:14:48	-->	gandalfdwite (~gandalfdw@49.207.197.216) has joined #python
2020-10-06 20:14:48	jabberwock	*syntax
2020-10-06 20:14:49	bjs	jabberwock: it separates keyword-only arguments out
2020-10-06 20:14:49	<--	gchristensen (~grahamc@NixOS/user/gchristensen) has left #python ("WeeChat 2.6")
2020-10-06 20:14:49	bjs	uh keyword-only parameters
2020-10-06 20:14:54	jabberwock	huh
2020-10-06 20:14:58	wyoung	jabberwock: C-ish style? It isn't a pointer or deferencing a pointer
2020-10-06 20:15:35	jabberwock	how do you reference it?
2020-10-06 20:15:36	bjs	jabberwock: if I have `def f(x, y): ...` then I can call it as `f(1, 2)` or `f(x=1, y=2)` or `f(1, y=2)` etc
2020-10-06 20:15:36	jabberwock	wyoung, I meant in looks only. sorry
2020-10-06 20:15:36	wyoung	h
2020-10-06 20:15:36	wyoung	ah
2020-10-06 20:15:37	wyoung	jabberwock: OK :)
2020-10-06 20:15:37	wyoung	Yes, C using *
2020-10-06 20:15:37	wyoung	so does most languages
2020-10-06 20:15:41	bjs	jabberwock: but if I have `def f(x, *, y): ...` then I cannot call it `f(1, 2)` because y is keyword only
2020-10-06 20:15:43	wyoung	usually means multi0ple
2020-10-06 20:15:46	bjs	because it appears after the *
2020-10-06 20:15:58	man_in_shack	at best it's C-like when used for unpacking/expansions
2020-10-06 20:16:04	man_in_shack	but even then, it really isn't C-like (:
2020-10-06 20:16:08	rapier	guys, I wish use python to allow users to edit the sheet of google sheets, how can I do that?
2020-10-06 20:16:12	twb	foo.py is sometimes run interactively, and sometimes by systemd.  I want to auto-detect "am I a systemd unit?" and change the log format.  What's the *best* way to detect systemd-ness ?
2020-10-06 20:16:15	jabberwock	bjs, so how do you reference it in the function?
2020-10-06 20:16:19	wyoung	rapier: do it
2020-10-06 20:16:29	bjs	jabberwock: reference what?  x and y have names
2020-10-06 20:16:31	jabberwock	*
2020-10-06 20:16:34	twb	Plan B is sys.stdin.isatty()
2020-10-06 20:16:37	rapier	how can I do that, wyoung?
2020-10-06 20:16:37	bjs	jabberwock: * isn't a thing, it's just part of the syntax
2020-10-06 20:22:37	--	irc: disconnected from server
2020-10-06 20:23:50	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-10-06 20:23:50	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-10-06 20:23:50	--	Topic set by nedbat (~nedbat@python/psf/nedbat) on Thu, 20 Aug 2020 03:18:59
2020-10-06 20:23:50	--	Channel #python: 1745 nicks (0 ops, 0 voices, 1745 normals)
2020-10-06 20:23:51	-->	Batzy (~Batzy@unaffiliated/batzy) has joined #python
2020-10-06 20:23:54	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-10-06 20:24:01	jabberwock	bjs, Yes I understand that
2020-10-06 20:24:11	jabberwock	but for configurations, which I think was mentioned
2020-10-06 20:24:24	-->	toverna (~uni@128-70-164-63.broadband.corbina.ru) has joined #python
2020-10-06 20:24:24	amo	i find configuration a bad example for this, tbh
2020-10-06 20:24:25	jabberwock	fair enough
2020-10-06 20:25:26	bjs	no configuration is *the* example for this
2020-10-06 20:25:53	-->	thoros (~thoros@194-96-55-156.hdsl.highway.telekom.at) has joined #python
2020-10-06 20:26:18	bjs	jabberwock: I mean if I have `def update_screen(screen, *things_to_update, background_color=Blue,  foreground_color=White)`
2020-10-06 20:26:29	<--	charims (~quassel@wsip-24-234-28-130.lv.lv.cox.net) has quit (Client Quit)
2020-10-06 20:26:34	-->	mitch-_- (~mitch-_-@65.171.84.141) has joined #python
2020-10-06 20:26:35	<--	BobRossWins (~BobRossWi@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2020-10-06 20:26:45	jabberwock	Okay maybe def load_settings(file, **kwargs, user)  ?
2020-10-06 20:26:49	bjs	jabberwock: here we have some positional-only parameters 'background_color' and 'foreground_color' (in this case they're optional, but you can imagine creating similar parameters that are required)
2020-10-06 20:26:52	amo	i made good use of it in functional programming with decorators etc. with one func taking foo the other bar and the rest of **kwargs passed along to the generic function
2020-10-06 20:26:53	<--	toverna (~uni@128-70-164-63.broadband.corbina.ru) has quit (Client Quit)
2020-10-06 20:26:55	<--	appinv (~appinv@unaffiliated/appinventormu) has quit (Read error: Connection reset by peer)
2020-10-06 20:26:57	 *	jabberwock nods
2020-10-06 20:27:25	bjs	jabberwock: but update_screen doesn't know what to do with *arbitrary* keywords, so you don't want update_screen to take **kwargs
2020-10-06 20:27:32	bjs	it only knows what to do with background_color and foreground_color
2020-10-06 20:27:53	-->	johnch (~CloudNine@115.125.7.51.dyn.plus.net) has joined #python
2020-10-06 20:28:18	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 256 seconds)
2020-10-06 20:28:18	<--	minhaj-sixbyte (~sixbyte@103.138.145.127) has quit (Ping timeout: 256 seconds)
2020-10-06 20:28:29	<--	shan (~shan@unaffiliated/jasatso1301) has quit (Quit: https://shantaram.xyz)
2020-10-06 20:28:34	-->	zodd (~zodd@84-106-62-193.cable.dynamic.v4.ziggo.nl) has joined #python
2020-10-06 20:28:56	jabberwock	right. So kwargs seems more for...I dunno. Writing a dictionary arg to a JSON file?
2020-10-06 20:28:56	-->	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has joined #python
2020-10-06 20:29:01	bjs	jabberwock: so I can go `update_screen(my_screen, sprite1, sprite2, sprite3, ...etc, background_color=Red)`  it's definitely one of the more powerful parts of Python
2020-10-06 20:29:04	<--	Batzy (~Batzy@unaffiliated/batzy) has quit (Ping timeout: 240 seconds)
2020-10-06 20:29:11	jabberwock	well no that would be dict
2020-10-06 20:29:11	-->	bitmask (~bitmask@2601:84:c702:f500:98d9:ff5a:7879:7743) has joined #python
2020-10-06 20:29:20	bjs	jabberwock: kwargs are most useful for collecting keyword args to pass on to another function
2020-10-06 20:29:54	jabberwock	My brain is so overwhelmed with many other things atm lol
2020-10-06 20:29:54	amo	jabberwock, not only. say you have a function (decorator maybe) that is timing the execution of *any* function you pass it
2020-10-06 20:30:45	bjs	jabberwock: okay, you don't need to worry too much.  Just know that Python lets you define parameters that are keyword-only, positional-only, varadic or combinations of the above
2020-10-06 20:31:01	amo	jabberwock, then you can give the timing function some argument, lets say "rounding_precision", while all the other arguments are passed to the function you are actually calling
2020-10-06 20:36:58	--	irc: disconnected from server
2020-10-06 20:39:04	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-10-06 20:39:04	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-10-06 20:39:04	--	Topic set by nedbat (~nedbat@python/psf/nedbat) on Thu, 20 Aug 2020 03:18:59
2020-10-06 20:39:06	--	Channel #python: 1750 nicks (0 ops, 0 voices, 1750 normals)
2020-10-06 20:39:07	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-10-06 20:39:18	<--	biermic (~biermic@193-80-12-83.adsl.highway.telekom.at) has quit (Ping timeout: 265 seconds)
2020-10-06 20:39:21	<--	Asmodee (~Asmodee@gateway/tor-sasl/asmodee) has quit (Ping timeout: 240 seconds)
2020-10-06 20:39:37	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-06 20:39:45	<--	Ariakenom (~Ariakenom@193.254.193.1) has quit (Ping timeout: 240 seconds)
2020-10-06 20:39:48	amo	damn, AttributeError: attribute '__dict__' of 'type' objects is not writable :(
2020-10-06 20:39:55	amo	lame
2020-10-06 20:40:48	-->	rsx (~rsx@ppp-188-174-149-56.dynamic.mnet-online.de) has joined #python
2020-10-06 20:40:59	amo	meh. don't feel like messing around with __getstuffs__ - back to work :|
2020-10-06 20:41:00	rapier	wyoung, what did you said? do you know how can I get access to allow users access the sheets of google sheets?
2020-10-06 20:41:18	<--	thnee (~thnee@h-144-199.A328.priv.bahnhof.se) has quit (Quit: WeeChat 2.7)
2020-10-06 20:41:24	-->	jlf (~user@pdpc/supporter/active/jlf) has joined #python
2020-10-06 20:42:16	<--	Aryan (~Aryan@unaffiliated/aryan) has quit (Remote host closed the connection)
2020-10-06 20:42:29	-->	GodFather (~rcc@50.42.186.106) has joined #python
2020-10-06 20:42:45	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-06 20:44:11	-->	Haudegen (~quassel@91.114.49.10) has joined #python
2020-10-06 20:46:33	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2020-10-06 20:46:50	-->	memelover (~memelover@47.19.105.250) has joined #python
2020-10-06 20:47:09	-->	Morteza24 (b2831eaf@gateway/web/cgi-irc/kiwiirc.com/ip.178.131.30.175) has joined #python
2020-10-06 20:47:51	<--	nvz (~user@unaffiliated/nvz) has quit (Ping timeout: 260 seconds)
2020-10-06 20:48:46	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
2020-10-06 20:49:34	-->	nvz (~user@unaffiliated/nvz) has joined #python
2020-10-06 20:50:01	-->	RangerBob (~brian@pool-173-72-244-228.clppva.fios.verizon.net) has joined #python
2020-10-06 20:50:30	<--	edlinde (~edlinde@183.83.147.45) has quit (Quit: edlinde)
2020-10-06 20:50:37	-->	amir2 (~amir@188.245.69.30) has joined #python
2020-10-06 20:52:08	-->	Citral90 (~elihu@ip-178-201-248-29.hsi08.unitymediagroup.de) has joined #python
2020-10-06 20:52:29	-->	smartsirius (~smartsiri@2a02:8070:18b:b120:3372:6cb2:a792:de3) has joined #python
2020-10-06 20:52:33	-->	Asmodee (~Asmodee@gateway/tor-sasl/asmodee) has joined #python
2020-10-06 20:53:05	-->	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined #python
2020-10-06 20:53:30	-->	kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net) has joined #python
2020-10-06 20:53:31	amir2	I have a question about sql alchemy and it's a little database related, can we have 2 foregin keys for a single model?! I have a post model, a admin model and a seller model, each post can have a writer, who can be admin or seller, what should I do in this situation?! can I have two foregin keys for my post model, and for each post one of them will be filled? any comments?
2020-10-06 20:53:34	han-solo	amo: what did you try ? :)
2020-10-06 20:53:45	<--	CookieM (~tomek@r-45-155-148-237.gpon.bialnet.pl) has quit (Quit: Leaving)
2020-10-06 20:53:52	amo	han-solo, i tried to replace __dict__ with a defaultdict :p
2020-10-06 20:54:37	-->	Super_Feeling (~Super_Fee@103.108.4.50) has joined #python
2020-10-06 20:54:41	-->	Super_Feeling1 (~Super_Fee@103.108.4.50) has joined #python
2020-10-06 20:54:41	<--	Super_Feeling1 (~Super_Fee@103.108.4.50) has quit (Client Quit)
2020-10-06 20:55:01	amo	han-solo, i know how dumb that is, no need to go into it in detail ;)
2020-10-06 20:55:34	<--	Atranimus (~Atranimus@2a02:1388:208c:bd45:ad59:15ec:687:a4ec) has quit (Quit: WeeChat 2.9)
2020-10-06 20:56:03	<--	m000gle_ (m000gle@gateway/vpn/privateinternetaccess/m000gle) has quit (Ping timeout: 272 seconds)
2020-10-06 20:57:42	NeilG	given a sequence A and a subsequence B, what's an efficient and easy way to sort B according to the order in A
2020-10-06 20:57:48	NeilG	sorted(key=index)?
2020-10-06 20:57:53	mitch-_-	Is it even possible to have Pandas show the column/row index number value for that "cell" in the DataFrame?
2020-10-06 20:58:05	NeilG	or is there a nice linearithmic solution
2020-10-06 20:58:06	amo	amir2, what kind of task is this? is that homework or some project you're working on?
2020-10-06 20:58:18	--	justan0theruser is now known as justanotheruser
2020-10-06 20:58:30	NeilG	I guess I could build a hash table of indices
2020-10-06 20:58:43	amo	NeilG, what data is in which?
2020-10-06 20:58:58	NeilG	amo why does it matter?
2020-10-06 20:59:08	amir2	amo: this is a project that I'm working on it, im not too good with databases, I don't know what to do with it, let me explain my problem so u can understand
2020-10-06 20:59:14	NeilG	say it's str
2020-10-06 20:59:43	memelover	I have a class with several subclasses, defined in their own files. I'd like to dynamically import all of the subclasses, and know how to refer to them dynamically. Is this a good idea, and if so, how could I go about it? I do use a common naming scheme for the subclass names. Right now my __init__.py file in the dir with the class and subclasses sets __all__ to all .py files in the directory. I want to end up with a list of subclass objects, when I
2020-10-06 20:59:44	memelover	don't actually know the names of the subclasses, and new subclasses can be added dynamically. I asked this question yesterday, but I couldn't figure out what to do about it.
2020-10-06 20:59:56	Yhg1s	NeilG: turn A into a dict mapping item to its index, then sort based on the value in that dict.
2020-10-06 21:00:10	NeilG	yhg1s yeah makes sense
2020-10-06 21:00:19	-->	silicong (~textual@50.210.211.177) has joined #python
2020-10-06 21:00:33	Yhg1s	memelover: this sounds like a plugin system you're after. Is that the case?
2020-10-06 21:00:47	amo	NeilG, that wouldn't work for arbitrary objects for instance, so it matters :]
2020-10-06 21:00:53	amir2	amo: admins and sellers should be able to have many posts, but posts have to have a relation ship with their writer id , and here comes the problem, can I have 2 foregin keys for my post? so one of them will get filled and the other one will be empty ( the writer is a seller or is a admin )
2020-10-06 21:00:56	<--	hyper_dave (~hyper_dav@197.156.107.106) has quit (Ping timeout: 240 seconds)
2020-10-06 21:01:24	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2020-10-06 21:01:44	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-06 21:01:48	memelover	Yhg1s: I suppose so? I figure that it would be achievable without using external dependencies, though. I was pointed towards this yesterday - https://gather.readthedocs.io/en/latest/
2020-10-06 21:01:48	-->	chowmein__ (~chowmeine@unaffiliated/chowmeined) has joined #python
2020-10-06 21:02:01	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Remote host closed the connection)
2020-10-06 21:02:13	<--	gandalfdwite (~gandalfdw@49.207.197.216) has quit (Remote host closed the connection)
2020-10-06 21:02:27	NeilG	amo right
2020-10-06 21:02:28	Yhg1s	memelover: you can certainly design your plugin system, but it's a lot easier to just use an existing one. If you insist on writing your own, I recommend looking at how existing ones work.
2020-10-06 21:03:05	Yhg1s	(and be ready to just throw it out when you realise it's a lot easier, more maintainable, less buggy to use an existing package.)
2020-10-06 21:03:29	han-solo	amo: i think, you can do that with metaclass :)
2020-10-06 21:03:36	memelover	Yhg1s: I'm not deadset on writing my own, the problem just seems like it should be simple. Do you have any recommendations for plugin management?
2020-10-06 21:03:41	amo	han-solo, oh shit.
2020-10-06 21:03:52	-->	andodt (~andodt@2001:b07:ac9:8c85:b9b3:a0db:f298:aa01) has joined #python
2020-10-06 21:04:04	<--	mumixam (~m@unaffiliated/mumixam) has quit (Ping timeout: 240 seconds)
2020-10-06 21:04:11	amo	han-solo, figured it out?
2020-10-06 21:04:17	-->	stranac (~stranac@78-3-21-41.adsl.net.t-com.hr) has joined #python
2020-10-06 21:04:20	han-solo	`__prepare__`
2020-10-06 21:04:30	han-solo	i am not sure, how it will pan out with `defaultdict` :)
2020-10-06 21:04:35	mgedmin	yeah, it _sounds_ like it should be simple, doesn't it?
2020-10-06 21:04:37	han-solo	could try :)
2020-10-06 21:04:39	amo	crazy :)
2020-10-06 21:04:52	-->	Carduus (~Carduus@pc199.phh.uni-kiel.de) has joined #python
2020-10-06 21:05:03	<--	chowmeined (~chowmeine@unaffiliated/chowmeined) has quit (Read error: Connection reset by peer)
2020-10-06 21:05:04	<--	Luminax (~Luminax@104.238.62.30) has quit (Remote host closed the connection)
2020-10-06 21:05:33	<--	seanvert (~user@177.84.244.242) has quit (Ping timeout: 272 seconds)
2020-10-06 21:06:24	Yhg1s	memelover: there are a lot of details involved in finding and loading plugins, so it's really not that simple. I've used twisted.plugin (not really sensible to use unless you're already using twisted) and straight.plugin.
2020-10-06 21:06:41	-->	ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) has joined #python
2020-10-06 21:07:11	<--	amir2 (~amir@188.245.69.30) has left #python ("WeeChat 2.9")
2020-10-06 21:07:16	memelover	Thanks! I'll check those out. Glad to know that it's more complex than I figured, because I wasn't making much progress on my own.
2020-10-06 21:07:43	amo	amir2, hmmm.. maybe you can try to have an extra table of posts that links to the unique objects in some other way
2020-10-06 21:07:57	amo	damn
2020-10-06 21:08:19	-->	grahamg (~grahamg@192038139239.mbb.telenor.dk) has joined #python
2020-10-06 21:08:46	-->	J4D (~J4D@ip72-200-209-124.ok.ok.cox.net) has joined #python
2020-10-06 21:08:55	-->	chowmeined (~chowmeine@unaffiliated/chowmeined) has joined #python
2020-10-06 21:09:36	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-06 21:10:08	-->	pressure679 (~naamik@194.177.250.82) has joined #python
2020-10-06 21:10:21	grahamg	I have an `attr.s` class which contains `attr.ib`s with type hints. I can access the types programmatically through the class' __attrs_attrs__ attribute. I want to detect attributes with list type hints --- ie. a typing.List[something]. Is there a way to do this?
2020-10-06 21:11:44	<--	chowmein__ (~chowmeine@unaffiliated/chowmeined) has quit (Ping timeout: 240 seconds)
2020-10-06 21:11:50	grahamg	I tried `isinstance([], typing.List[thing])`, which gives an error. And also tried comparing `typing.List[thing] == typing.List[typing.Any]` but this always returns False. Any suggestions?
2020-10-06 21:12:47	<--	jbooker (5afeb156@90.254.177.86) has quit (Remote host closed the connection)
2020-10-06 21:12:50	<--	J4D (~J4D@ip72-200-209-124.ok.ok.cox.net) has quit (Client Quit)
2020-10-06 21:13:04	<--	Morteza24 (b2831eaf@gateway/web/cgi-irc/kiwiirc.com/ip.178.131.30.175) has quit (Ping timeout: 240 seconds)
2020-10-06 21:13:17	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-06 21:13:27	squirrel	grahamg: you can use typing.get_origin and typing.get_args
2020-10-06 21:14:40	han-solo	amo: mgedmin: doesn't work as i expected ':)
2020-10-06 21:14:50	grahamg	oh, beautiful! thanks squirrel!
2020-10-06 21:15:13	amo	han-solo, how does it fail?
2020-10-06 21:16:15	han-solo	amo: it doesn't fail, it's just the dict for the instance become just a `__dict__`
2020-10-06 21:16:32	han-solo	er, just a `dict` and not `defaultdict`
2020-10-06 21:16:32	<--	DnzAtWrk (~DnzAtWrk@mobile-access-56735f-221.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2020-10-06 21:17:12	amo	tricky, isn't it.. i guess there's no way around __getstuffs__
2020-10-06 21:17:16	-->	Dark (~Aaron@freebsd/user/dark) has joined #python
2020-10-06 21:17:32	han-solo	ah, wait
2020-10-06 21:17:38	-->	Druid05 (uid182634@gateway/web/irccloud.com/x-ppnnytevagxfozsq) has joined #python
2020-10-06 21:17:47	bjs	amo: han-solo: what are you trying to achieve?
2020-10-06 21:17:51	-->	honigkuchen (~honigkuch@ip5f5b9b83.dynamic.kabel-deutschland.de) has joined #python
2020-10-06 21:18:00	-->	Morteza24 (b2831eaf@gateway/web/cgi-irc/kiwiirc.com/ip.178.131.30.175) has joined #python
2020-10-06 21:18:18	amo	bjs, just a crazy idea from the discussion about ruby dynamic methods
2020-10-06 21:18:30	han-solo	bjs: https://bpaste.net/72AA
2020-10-06 21:18:33	<--	AcTiVaTe (~activate@host-08q2w0u39gommnxnj0.pdv6.tnz1.zeelandnet.nl) has quit (Quit: Leaving)
2020-10-06 21:18:33	-->	P1ro_ (~quassel@gentoo/user/p1ro) has joined #python
2020-10-06 21:18:44	han-solo	but to change the dict type of instance
2020-10-06 21:18:55	<--	Super_Feeling (~Super_Fee@103.108.4.50) has quit (Quit: Leaving)
2020-10-06 21:20:01	-->	AcTiVaTe (~activate@host-08q2w0u39gommnxnj0.pdv6.tnz1.zeelandnet.nl) has joined #python
2020-10-06 21:20:36	-->	mumixam (~m@unaffiliated/mumixam) has joined #python
2020-10-06 21:21:06	han-solo	welp, i gotta run
2020-10-06 21:21:09	<--	P1ro (~quassel@gentoo/user/p1ro) has quit (Ping timeout: 260 seconds)
2020-10-06 21:21:09	amo	o/
2020-10-06 21:21:13	han-solo	later
2020-10-06 21:21:38	-->	lle-bout (~lle-bout@37.173.156.249) has joined #python
2020-10-06 21:21:39	bjs	han-solo: I'm not sure __prepare__ will work because doesn't it get turned into a dict at the end?
2020-10-06 21:21:40	bjs	Hmm
2020-10-06 21:22:48	<--	mirrorbird (~psutcliff@2a00:801:2d5:9d73:ff00:6553:d451:a276) has quit (Quit: Leaving)
2020-10-06 21:22:56	<--	smartsirius (~smartsiri@2a02:8070:18b:b120:3372:6cb2:a792:de3) has quit (Remote host closed the connection)
2020-10-06 21:23:12	-->	spew (uid195861@gateway/web/irccloud.com/x-srtpfsrzrguwlscu) has joined #python
2020-10-06 21:23:44	<--	mitch-_- (~mitch-_-@65.171.84.141) has quit (Quit: Leaving)
2020-10-06 21:24:03	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-06 21:24:05	han-solo	bjs: yeah, it seems so. I didn't think about that ':)
2020-10-06 21:24:18	<--	lle-bout (~lle-bout@37.173.156.249) has quit (Client Quit)
2020-10-06 21:24:48	-->	lle-bout (~lle-bout@37.173.156.249) has joined #python
2020-10-06 21:24:49	-->	def_jam (~eblip@unaffiliated/eblip) has joined #python
2020-10-06 21:25:00	-->	eb0t_ (~eblip@unaffiliated/eblip) has joined #python
2020-10-06 21:25:11	bjs	han-solo: you can get what you want with a custom __getattr__ though on the metaclass
2020-10-06 21:25:43	<--	eb0t (~eblip@unaffiliated/eblip) has quit (Ping timeout: 240 seconds)
2020-10-06 21:26:11	bjs	(except then it won't work when you lookup via the instance if you wanted to add methods dynamically,  you need to do that by adding __getattr__ to the class)
2020-10-06 21:26:28	amo	bjs, yeah, but not by any means, which was the challenge ^
2020-10-06 21:26:30	amo	^^
2020-10-06 21:26:34	amo	other*
2020-10-06 21:26:41	<--	eblip (~eblip@unaffiliated/eblip) has quit (Ping timeout: 265 seconds)
2020-10-06 21:28:23	-->	minhaj-sixbyte (~sixbyte@103.138.145.127) has joined #python
2020-10-06 21:28:24	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 240 seconds)
2020-10-06 21:28:30	<--	minhaj-sixbyte (~sixbyte@103.138.145.127) has quit (Max SendQ exceeded)
2020-10-06 21:28:46	-->	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has joined #python
2020-10-06 21:28:58	-->	minhaj-sixbyte (~sixbyte@103.138.145.127) has joined #python
2020-10-06 21:29:19	<--	minhaj-sixbyte (~sixbyte@103.138.145.127) has quit (Max SendQ exceeded)
2020-10-06 21:29:29	-->	biermic (~biermic@193-80-12-83.adsl.highway.telekom.at) has joined #python
2020-10-06 21:29:55	-->	Blankspace (~abcd@unaffiliated/blankspace) has joined #python
2020-10-06 21:30:08	-->	minhaj-sixbyte (~sixbyte@103.138.145.127) has joined #python
2020-10-06 21:30:15	-->	blacknred0 (uid195511@gateway/web/irccloud.com/x-bpoahxzeylbtzudr) has joined #python
2020-10-06 21:30:16	<--	Deusdeorum (~Deusdeoru@unaffiliated/deusdeorum) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-06 21:30:17	<--	minhaj-sixbyte (~sixbyte@103.138.145.127) has quit (Max SendQ exceeded)
2020-10-06 21:30:18	-->	azi` (~azi@176.76.240.222) has joined #python
2020-10-06 21:30:22	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Ping timeout: 256 seconds)
2020-10-06 21:30:51	-->	minhaj-sixbyte (~sixbyte@103.138.145.127) has joined #python
2020-10-06 21:30:55	azi`	I have a package that I am developing. I usually import it from ipython as "from foo import *" . Now as I changed the code I'd like to be able to relaod the modules in the package
2020-10-06 21:30:58	azi`	is there a way to do this?
2020-10-06 21:31:06	azi`	importlib is not helping me
2020-10-06 21:31:10	<--	minhaj-sixbyte (~sixbyte@103.138.145.127) has quit (Max SendQ exceeded)
2020-10-06 21:31:35	amo	reload adhoc?
2020-10-06 21:31:42	-->	lobaco (~andre@190.114.149.125) has joined #python
2020-10-06 21:31:45	<--	ThePortWhisperer (~ThePortWh@unaffiliated/theportwhisperer) has quit (Ping timeout: 240 seconds)
2020-10-06 21:31:50	-->	minhaj-sixbyte (~sixbyte@103.138.145.127) has joined #python
2020-10-06 21:31:59	<--	minhaj-sixbyte (~sixbyte@103.138.145.127) has quit (Max SendQ exceeded)
2020-10-06 21:31:59	<--	__marco (~marco@195.218.6.205) has quit (Remote host closed the connection)
2020-10-06 21:32:55	<--	Carduus (~Carduus@pc199.phh.uni-kiel.de) has quit (Quit: leaving)
2020-10-06 21:33:04	<--	a-l-e (~a-l-e@pool1-14.cgn.as8758.net) has quit (Remote host closed the connection)
2020-10-06 21:33:15	-->	Carduus (~Carduus@pc199.phh.uni-kiel.de) has joined #python
2020-10-06 21:33:31	-->	a-l-e (~a-l-e@pool1-14.cgn.as8758.net) has joined #python
2020-10-06 21:34:03	azi`	amo: what do you mean
2020-10-06 21:34:55	amo	azi`, do you want to reload the module while your program is running?
2020-10-06 21:34:58	<--	Morteza24 (b2831eaf@gateway/web/cgi-irc/kiwiirc.com/ip.178.131.30.175) has quit (Ping timeout: 256 seconds)
2020-10-06 21:35:11	-->	hyper_dave (~hyper_dav@197.156.107.106) has joined #python
2020-10-06 21:35:14	amo	just to clarify what you mean by "reloading"
2020-10-06 21:35:15	<--	lamiastella (~mona@c-71-232-26-109.hsd1.ma.comcast.net) has quit (Quit: Leaving.)
2020-10-06 21:35:17	azi`	amo: yes in the ipython shell
2020-10-06 21:35:55	<--	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has left #python
2020-10-06 21:35:57	-->	titular_human (~ericfiore@24.102.148.69.res-cmts.sm.ptd.net) has joined #python
2020-10-06 21:35:58	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Ping timeout: 272 seconds)
2020-10-06 21:36:16	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-06 21:36:18	<--	appinv (~appinv@unaffiliated/appinventormu) has quit (Read error: Connection reset by peer)
2020-10-06 21:36:40	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2020-10-06 21:36:55	<--	ficepystat (ficepystat@gateway/vpn/privateinternetaccess/ficepystat) has quit (Remote host closed the connection)
2020-10-06 21:37:01	amo	azi`, from imp import reload; import yourstuff (NOT *); reload(yourstuff)
2020-10-06 21:37:37	amo	i know that works in jupyter because i use it all the time
2020-10-06 21:37:51	azi`	yes this works
2020-10-06 21:38:00	azi`	it gets messy when you use the * tho
2020-10-06 21:38:07	amo	then don't use *
2020-10-06 21:38:09	-->	ficepystat (ficepystat@gateway/vpn/privateinternetaccess/ficepystat) has joined #python
2020-10-06 21:38:29	azi`	old habits die hard. I was hoping there is a solution in my case
2020-10-06 21:38:40	amo	you can also use "import yourstuff as ys"
2020-10-06 21:38:47	amo	and shorten things to ys.foo
2020-10-06 21:39:07	amo	reload(ys)
2020-10-06 21:39:34	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-06 21:39:44	-->	SwiftMatt (~Objective@2601:282:4300:3e:504b:bd35:1660:58d1) has joined #python
2020-10-06 21:39:59	man_in_shack	honestly reloading modules is a bit of a mess too
2020-10-06 21:40:11	amo	absolutely, don't rely on it
2020-10-06 21:40:13	man_in_shack	if you remove or rename stuff, old stuff is usually still there
2020-10-06 21:40:23	<--	Blankspace (~abcd@unaffiliated/blankspace) has quit (Read error: Connection reset by peer)
2020-10-06 21:40:36	bjs	azi`: reloading modules is tricky and full of caveats in Python. e.g. if you go `some_obj = your_module.Foo()` then reloading your_module doesn't affect some_obj
2020-10-06 21:40:36	-->	s8548a (~s8548a@unaffiliated/s8548a) has joined #python
2020-10-06 21:40:36	grym	hot reloading is not safe
2020-10-06 21:40:41	grym	like, in general
2020-10-06 21:40:41	<--	TimMc (~timmc@wikipedia/phyzome) has left #python
2020-10-06 21:40:43	-->	Daewar (~tabin@84.70.8.122) has joined #python
2020-10-06 21:40:54	azi`	yeah that's more of a practical thing that is driving me crazy
2020-10-06 21:41:14	azi`	i implement a function, load the module after some work and realize there is a bug in the function
2020-10-06 21:41:15	amo	actually, i don't think it'd be very hard to improve reload() considerably with little effort - maybe a neat job for a GSoC student
2020-10-06 21:41:29	azi`	now I have to exit everything, reload the module, re-create the work variables and re-try
2020-10-06 21:41:59	-->	drznpy1 (~drznpy@2-238-108-195.ip243.fastwebnet.it) has joined #python
2020-10-06 21:42:07	<--	drznpy1 (~drznpy@2-238-108-195.ip243.fastwebnet.it) has quit (Client Quit)
2020-10-06 21:42:09	<--	TDT (~user@unaffiliated/tdt) has quit (Remote host closed the connection)
2020-10-06 21:42:17	<--	rigid (~rigid@unaffiliated/rigid) has quit (Ping timeout: 260 seconds)
2020-10-06 21:42:26	-->	TDT (~user@unaffiliated/tdt) has joined #python
2020-10-06 21:42:28	-->	drznpy4 (~drznpy@2-238-108-195.ip243.fastwebnet.it) has joined #python
2020-10-06 21:42:38	<--	rowbee (~augh@theguntretort.com) has quit (Remote host closed the connection)
2020-10-06 21:42:50	-->	rowbee (~augh@theguntretort.com) has joined #python
2020-10-06 21:42:53	<--	drznpy (~drznpy@2-238-108-195.ip243.fastwebnet.it) has quit (Read error: Connection reset by peer)
2020-10-06 21:42:53	--	drznpy4 is now known as drznpy
2020-10-06 21:42:55	-->	XsiSec (~xsisec@h-155-4-130-154.NA.cust.bahnhof.se) has joined #python
2020-10-06 21:43:08	-->	rigid (~rigid@unaffiliated/rigid) has joined #python
2020-10-06 21:43:24	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-06 21:43:27	<--	ficepystat (ficepystat@gateway/vpn/privateinternetaccess/ficepystat) has quit (Ping timeout: 256 seconds)
2020-10-06 21:43:47	<--	miller (~miller@2001:470:6823:1:49c9:beb4:bb6a:32da) has quit (Read error: Connection reset by peer)
2020-10-06 21:43:55	-->	Beanzilla (~Beanzilla@unaffiliated/beanzilla) has joined #python
2020-10-06 21:44:05	<--	a-l-e (~a-l-e@pool1-14.cgn.as8758.net) has quit (Remote host closed the connection)
2020-10-06 21:44:27	-->	miller (~miller@2001:470:6823:1:d26:2246:eaa4:8f21) has joined #python
2020-10-06 21:44:33	-->	a-l-e (~a-l-e@pool1-14.cgn.as8758.net) has joined #python
2020-10-06 21:44:45	<--	jay-m_ (~jay-m@41.205.30.141) has quit (Ping timeout: 240 seconds)
2020-10-06 21:45:21	-->	Wr4i7h (~abc@a85-139-110-118.cpe.netcabo.pt) has joined #python
2020-10-06 21:46:46	-->	snackoverflow (~audioburn@unaffiliated/theology) has joined #python
2020-10-06 21:47:04	<--	a-l-e (~a-l-e@pool1-14.cgn.as8758.net) has quit (Remote host closed the connection)
2020-10-06 21:47:41	-->	a-l-e (~a-l-e@pool1-14.cgn.as8758.net) has joined #python
2020-10-06 21:48:41	<--	jackiiilong (~textual@60.10.23.150) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-06 21:49:15	<--	eldowan (~kvirc@unaffiliated/eldowan) has quit (Ping timeout: 272 seconds)
2020-10-06 21:51:19	<--	rmmk (Username@179.223.95.42) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-10-06 21:52:26	twb	in scrapy, my only choices are pickle and marshal.  pickle is just bad.  Is marshal better, or worse?
2020-10-06 21:53:07	twb	The pickle docs say "marshal is crap don't use it"
2020-10-06 21:53:44	-->	fargos (~kvirc@87.123.234.142) has joined #python
2020-10-06 21:53:44	<--	markopasha (~cc@88.230.167.140) has quit (Quit: WeeChat 2.9)
2020-10-06 21:53:47	amo	twb, what kind of data do you want to write to disk?
2020-10-06 21:53:49	twb	I can see scrapy is at least setting pickle protocol=4 (the least bad one)
2020-10-06 21:54:04	twb	amo: I don't even know, some kind of internal state crap of this giant mess of twisted classes
2020-10-06 21:54:22	amo	...?
2020-10-06 21:54:30	twb	amo: ultimately the data is HTTP queries and responses
2020-10-06 21:55:14	-->	omnivg (~Thunderbi@ip-80-113-51-149.ip.prioritytelecom.net) has joined #python
2020-10-06 21:55:23	-->	spiri (~spiri@unaffiliated/spiri) has joined #python
2020-10-06 21:55:53	-->	blip- (~blip-@unaffiliated/blip-) has joined #python
2020-10-06 21:56:00	<--	awmv (uid282297@gateway/web/irccloud.com/x-fanulpmbhreekhdl) has quit (Quit: Connection closed for inactivity)
2020-10-06 21:56:02	<--	jnewt_ (~jnewt@136.37.186.196) has quit (Ping timeout: 240 seconds)
2020-10-06 21:56:03	amo	twb, last time i needed to write a "giant mess" of internal state, i implemented __repr__ on the classes i needed saved and just wrote those as str
2020-10-06 21:56:05	-->	fnaticrisk (~fnaticris@177.203.230.90) has joined #python
2020-10-06 21:56:17	amo	reload by reading the files and eval(line)
2020-10-06 21:56:21	-->	umask077 (~Thunderbi@pool-108-30-55-100.nycmny.fios.verizon.net) has joined #python
2020-10-06 21:56:22	<--	umask077 (~Thunderbi@pool-108-30-55-100.nycmny.fios.verizon.net) has quit (Excess Flood)
2020-10-06 21:56:30	twb	amo: I am not implementing this middleware, I'm just trying to use it
2020-10-06 21:56:46	-->	umask077 (~Thunderbi@pool-108-30-55-100.nycmny.fios.verizon.net) has joined #python
2020-10-06 21:56:46	<--	umask077 (~Thunderbi@pool-108-30-55-100.nycmny.fios.verizon.net) has quit (Excess Flood)
2020-10-06 21:57:11	twb	https://docs.scrapy.org/en/latest/topics/settings.html#scheduler-disk-queue  is what I'm looking at
2020-10-06 21:57:13	fargos	Is there something built-in that converts x seconds to HHMMSS but omits 0 values? for example 61s in only MMSS?
2020-10-06 21:57:36	-->	umask077 (~Thunderbi@pool-108-30-55-100.nycmny.fios.verizon.net) has joined #python
2020-10-06 21:57:45	twb	fargos: I think for that last bit you would need to write an if/else
2020-10-06 21:57:46	-->	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-bvnogsmsztwpmvnt) has joined #python
2020-10-06 21:57:46	<--	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-bvnogsmsztwpmvnt) has quit (Excess Flood)
2020-10-06 21:58:02	-->	vimal (~vimal@2a02:a210:a1c2:3e00:1bdb:1561:f83e:b) has joined #python
2020-10-06 21:58:20	-->	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-xtjgmyynrwcfrryg) has joined #python
2020-10-06 21:58:20	<--	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-xtjgmyynrwcfrryg) has quit (Excess Flood)
2020-10-06 21:58:35	twb	fargos: last time I wanted something like that, I used postgresql's built-in age() function which returns things like "172 years 4 mons 8:17:33.222"
2020-10-06 21:58:45	--	Staunch is now known as Stboonch
2020-10-06 21:58:52	-->	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-qnhelhrcdvjxmjdt) has joined #python
2020-10-06 21:58:53	<--	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-qnhelhrcdvjxmjdt) has quit (Excess Flood)
2020-10-06 21:58:53	-->	lamiastella (~mona@96-67-5-125-static.hfc.comcastbusiness.net) has joined #python
2020-10-06 21:58:54	twb	fargos: the "arrow" library might have something for this
2020-10-06 21:58:58	-->	cd (~cd@unaffiliated/cd) has joined #python
2020-10-06 21:59:05	-->	Barbosa_ (~barbosa@177.148.189.176) has joined #python
2020-10-06 21:59:25	-->	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-gkxttqvzogwapbuv) has joined #python
2020-10-06 21:59:25	<--	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-gkxttqvzogwapbuv) has quit (Excess Flood)
2020-10-06 21:59:26	BtbN	Or just call lstrip('0') on the resulting string.
2020-10-06 21:59:49	amo	twb, i found it much less confusing and reproducible when i could just rebuild the classes
2020-10-06 21:59:50	twb	BtbN: sensible
2020-10-06 21:59:59	-->	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-cvixnfwbnuecvyyr) has joined #python
2020-10-06 21:59:59	<--	Pidgeotto (drowsyivy@gateway/shell/tilde.team/x-cvixnfwbnuecvyyr) has quit (Excess Flood)
2020-10-06 22:00:18	-->	bwitt (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-06 22:00:31	-->	ramsub07 (8168602c@gateway/web/cgi-irc/kiwiirc.com/ip.129.104.96.44) has joined #python
2020-10-06 22:00:35	fargos	Yes, then I'll fiddle with the string.
2020-10-06 22:00:52	amo	twb, i think you need pickle when you want to store recursive datastructures and the like
2020-10-06 22:01:12	<--	Anticom (~Anticom@ip-178-200-101-235.hsi07.unitymediagroup.de) has quit (Quit: Leaving)
2020-10-06 22:01:25	ramsub07	hi. how do i effectively convert a profit matrix into cost matrix, given there are 100k rows ?
2020-10-06 22:01:42	twb	You are right that if you want somethign more complicated than "lists, dicts, unicode strings and some number-ish things", you can't just json
2020-10-06 22:01:45	-->	legola (~legola@unaffiliated/legola) has joined #python
2020-10-06 22:01:55	<--	Barbosa (~barbosa@177.148.189.176) has quit (Ping timeout: 272 seconds)
2020-10-06 22:02:03	ramsub07	basically they're numpy array. I'm using this function https://software.clapper.org/munkres/api/index.html#munkres.make_cost_matrix , which is pythonic and crashes my program every time
2020-10-06 22:02:09	amo	ramsub07, what is the difference between a profit matrix and a cost matrix..?
2020-10-06 22:02:16	twb	pickle is... not ideal, but nor is a full-blown ORM
2020-10-06 22:02:24	ramsub07	amo you want to maximise profit, minimise cost. inverse
2020-10-06 22:02:39	amo	ramsub07, and in terms of math?
2020-10-06 22:02:56	<--	memelover (~memelover@47.19.105.250) has quit (Quit: Leaving)
2020-10-06 22:03:28	ramsub07	well, theroretically, cost = inf - profit
2020-10-06 22:03:44	amo	infinity - profit?
2020-10-06 22:03:46	amo	o.O
2020-10-06 22:03:49	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2020-10-06 22:04:04	<--	a-l-e (~a-l-e@pool1-14.cgn.as8758.net) has quit (Remote host closed the connection)
2020-10-06 22:04:07	grym	twb: there are nice-ish stories about sane serialization with things like marshmallow and its attendant helpers, but replacing the guts of a big tangly ecosystem with that seems nontrivial
2020-10-06 22:04:08	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-06 22:04:09	amo	you'll end up bankrupt in no time
2020-10-06 22:04:19	ramsub07	amo i don't work with finance lol
2020-10-06 22:04:23	twb	grym: right
2020-10-06 22:04:32	<--	plutoniix (~q@ppp-223-24-166-134.revip6.asianet.co.th) has quit (Quit: Leaving)
2020-10-06 22:04:33	twb	grym: that's why my initial question was very narrow: "pickle or marshal?"
2020-10-06 22:04:40	-->	a-l-e (~a-l-e@pool1-14.cgn.as8758.net) has joined #python
2020-10-06 22:04:41	twb	grym: and I think pickle's docs answered that
2020-10-06 22:04:50	amo	ramsub07, me neither :D
2020-10-06 22:04:50	<--	mr_ab9 (~mr_ab@unaffiliated/nezzario) has quit (Ping timeout: 260 seconds)
2020-10-06 22:05:20	twb	Given this codebase is *also* using dbm, and I want to add in a real RDBMS for something else, it's pretty ugh
2020-10-06 22:05:20	-->	donaldkbrown (~donaldkbr@2601:680:c880:a6b0:c1f9:a1fb:cc63:f40) has joined #python
2020-10-06 22:05:45	twb	I mean: scrapy by default uses *both* pickle and dbm, to store different things, and I want to store a third thing in maria
2020-10-06 22:06:07	amo	maria?
2020-10-06 22:06:31	-->	hemstock (~hemstock@62-156-207.netrun.cytanet.com.cy) has joined #python
2020-10-06 22:06:59	-->	hubutm20 (~hubutm20@p200300eb471cea00fc6fc07aff4364cf.dip0.t-ipconnect.de) has joined #python
2020-10-06 22:07:07	twb	amo: mysql
2020-10-06 22:07:11	-->	detseg (~segv@71-147-44-107.lightspeed.livnmi.sbcglobal.net) has joined #python
2020-10-06 22:07:11	<--	Dantalion (~Dantalion@217-123-73-108.cable.dynamic.v4.ziggo.nl) has quit (Ping timeout: 256 seconds)
2020-10-06 22:07:28	<--	davor (~davor@unaffiliated/davor) has quit (Quit: Bye)
2020-10-06 22:07:33	amo	ramsub07, isn't profit = revenue - cost or something like that?
2020-10-06 22:07:41	twb	Oracle bought Sun so they could point to MySQL and say "look, see how crap life is when you don't buy Oracle?"
2020-10-06 22:07:53	twb	Maria is the fork that doesn't have any oracle in it
2020-10-06 22:08:12	amo	that's a horrible name for a db, sorry
2020-10-06 22:08:19	ramsub07	yes i'm actually trying to solve an optimization problem. for me profit = 3D IoU. cost = 1 - profit (? )
2020-10-06 22:08:22	amo	"i need to put my things in maria"
2020-10-06 22:08:22	twb	That's OK it's a crap database :-)
2020-10-06 22:08:34	amo	ugh
2020-10-06 22:08:35	grym	twb: "utf"
2020-10-06 22:08:35	grym	:<
2020-10-06 22:08:47	-->	Batzy (~Batzy@unaffiliated/batzy) has joined #python
2020-10-06 22:08:54	-->	Dantalion (~Dantalion@217-123-73-108.cable.dynamic.v4.ziggo.nl) has joined #python
2020-10-06 22:09:21	<--	fflori (~fflori@nat-wlan-uzh-89-206-64-013.uzh.ch) has quit (Read error: Connection reset by peer)
2020-10-06 22:09:28	amo	so it's not just the name that is horrible :D
2020-10-06 22:09:39	amo	great
2020-10-06 22:09:40	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-06 22:09:44	<--	dumb_moth (~moth@c-73-83-145-12.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2020-10-06 22:09:55	twb	it doesn't even know how to UTC properly
2020-10-06 22:10:18	<--	_Warl0ck (~warl0ck@c-73-83-145-12.hsd1.wa.comcast.net) has quit (Ping timeout: 258 seconds)
2020-10-06 22:10:30	 *	twb glares at python <3.9 and mouths "just like you"
2020-10-06 22:10:47	<--	azi` (~azi@176.76.240.222) has quit (Quit: Lost terminal)
2020-10-06 22:10:57	-->	ryansmccoy (~ryansmcco@193.37.254.27) has joined #python
2020-10-06 22:11:00	amo	ramsub07, wait.. optimization problem?
2020-10-06 22:11:11	amo	ramsub07, what are you actually trying to achieve?
2020-10-06 22:11:13	-->	d3sync (~d3sync@unaffiliated/d3sync) has joined #python
2020-10-06 22:11:26	ramsub07	yes, optimal track to trajectory assignment
2020-10-06 22:11:31	<--	bloony (~bloony@185.90.212.132) has quit (Quit: WeeChat 2.9)
2020-10-06 22:11:34	amo	in english?
2020-10-06 22:11:37	-->	rememberYou (~user@unaffiliated/rememberyou) has joined #python
2020-10-06 22:12:05	-->	cthulchu_ (~Cthulchu@69.172.160.196) has joined #python
2020-10-06 22:12:13	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2020-10-06 22:12:14	SnoopJ	the question doesn't sound like a Python problem, it sounds like a finance problem
2020-10-06 22:12:45	Wooble	well I mean they started with the statement that a python function working with a numpy array crashes their program every time...
2020-10-06 22:13:17	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-06 22:13:22	Wooble	(not sure why people are asking for an explanation of the larger problem instead of a traceback :) )
2020-10-06 22:13:34	-->	dumb_moth (~moth@c-73-83-145-12.hsd1.wa.comcast.net) has joined #python
2020-10-06 22:13:34	<--	a-l-e (~a-l-e@pool1-14.cgn.as8758.net) has quit (Remote host closed the connection)
2020-10-06 22:14:03	SnoopJ	yea seeing the code and full error report is the fastest way to get help here, help us help you ramsub07
2020-10-06 22:14:06	-->	a-l-e (~a-l-e@pool1-14.cgn.as8758.net) has joined #python
2020-10-06 22:14:06	<--	d3sync|2 (~d3sync@unaffiliated/d3sync) has quit (Ping timeout: 240 seconds)
2020-10-06 22:14:06	twb	ramsub07: did you already reduce your problem to a minimal recipe, and pastebin that?
2020-10-06 22:15:14	ramsub07	actually i've a huge matrix, which has IOUs of prediction with ground truth. One prediction can only be matched with one ground truth. I want to use munkres algorith, https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.linear_sum_assignment.html for which, I'm trying to create the cost matrix
2020-10-06 22:15:35	-->	ukwiz (~dma@2a02:8010:6009:0:8055:ff6c:e38f:4ad6) has joined #python
2020-10-06 22:15:37	ramsub07	higher the IoU better the candidate. but the definition of "cost" in numpy is quite the opposite
2020-10-06 22:15:40	-->	_Warl0ck (~warl0ck@c-73-83-145-12.hsd1.wa.comcast.net) has joined #python
2020-10-06 22:15:53	amo	IOU = unit interval?
2020-10-06 22:15:55	SnoopJ	numpy has no such definition
2020-10-06 22:15:58	-->	vrach (uid181202@gateway/web/irccloud.com/x-kliwermxubvwkswt) has joined #python
2020-10-06 22:16:00	<--	blip- (~blip-@unaffiliated/blip-) has quit (Remote host closed the connection)
2020-10-06 22:16:09	SnoopJ	amo, intersection over union, I believe
2020-10-06 22:16:12	-->	crusoe (~drJack@ppp046177200076.access.hol.gr) has joined #python
2020-10-06 22:16:17	ramsub07	since IoUs are in between, (0,1) i'm thinking if subtracting 1 from the IoU matrix and then using it as cost matrix
2020-10-06 22:16:18	ukwiz	How can I update an env to ue a new version of puthon?
2020-10-06 22:16:26	ramsub07	Yes, intersection over union, sorry didn't expand
2020-10-06 22:16:28	SnoopJ	ukwiz, make a new venv
2020-10-06 22:16:33	ukwiz	^^^use
2020-10-06 22:16:35	grym	ukwiz: delete and recreate
2020-10-06 22:17:01	ukwiz	if it is already in use in a project?
2020-10-06 22:17:08	SnoopJ	ramsub07, let's back up here. What is your question? You asked a question about converting matrices, which doesn't seem topical here, I don't think we can help with that. You also mentioned a crash. We can help with that, but only if you help us by providing the error report...
2020-10-06 22:17:20	SnoopJ	ukwiz, "in use?"
2020-10-06 22:17:29	-->	Peanut (~paul@a83-163-168-1.adsl.xs4all.nl) has joined #python
2020-10-06 22:17:30	Wooble	ukwiz: newpython -m venv --upgrade you_env might work. I wouldn't trust it.
2020-10-06 22:17:44	ramsub07	SnoopJ there is no error, it just gets killed
2020-10-06 22:17:46	<--	vimal (~vimal@2a02:a210:a1c2:3e00:1bdb:1561:f83e:b) has quit (Remote host closed the connection)
2020-10-06 22:17:48	grym	ukwiz: venvs are designed to be recreatable at will
2020-10-06 22:17:49	<--	carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) has quit (Ping timeout: 246 seconds)
2020-10-06 22:18:04	Wooble	ramsub07: is the OOM killer logging that it killed it for you?
2020-10-06 22:18:14	grym	ukwiz: and your own project code should not live inside them, of course
2020-10-06 22:18:24	-->	gelignite (~gelignite@55d493e0.access.ecotel.net) has joined #python
2020-10-06 22:18:36	ukwiz	I have an env for a project which uses 3.6, and I want it to use 3.8
2020-10-06 22:18:41	<--	appinv (~appinv@unaffiliated/appinventormu) has quit (Ping timeout: 260 seconds)
2020-10-06 22:18:52	grym	ukwiz: make a new venv with 3.8 and run your code with it.
2020-10-06 22:19:03	ramsub07	the code that gets killed
2020-10-06 22:19:08	ramsub07	https://dpaste.com/GZ992XCHJ
2020-10-06 22:19:16	ramsub07	Wooble can you tell me how to check that?
2020-10-06 22:19:16	SnoopJ	ramsub07, will you please answer Wooble's direct question?
2020-10-06 22:20:03	Peanut	Hi - I've got a numpy ndarray, shape(10000,256) and I would like to sum parts of it in the direction of axis 0, so that I end up with a shorter (1000,256) - so a block sum. I've tried several things with np.split and np.append, but so far haven't found a neat solution. Any hints perhaps?
2020-10-06 22:20:03	Wooble	ramsub07: stack overflow suggests grep -i 'killed process' /var/log/messages (I have no idea iuf every distro logs to the same place)
2020-10-06 22:20:17	SnoopJ	Peanut, there is not just one such sum, can you explain how your blocks are defined to get you from 10000 to 1000?
2020-10-06 22:20:30	Wooble	ramsub07: (might be in syslog instead)
2020-10-06 22:20:37	-->	vimal (~vimal@2a02:a210:a1c2:3e00:1bdb:1561:f83e:b) has joined #python
2020-10-06 22:26:04	--	irc: disconnected from server
2020-10-20 15:38:30	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-10-20 15:38:30	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-10-20 15:38:30	--	Topic set by nedbat (~nedbat@python/psf/nedbat) on Thu, 20 Aug 2020 03:18:59
2020-10-20 15:38:30	--	Channel #python: 1771 nicks (0 ops, 0 voices, 1771 normals)
2020-10-20 15:38:33	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-10-20 15:38:34	-->	zpe (~zpe@host-95-197-99-71.mobileonline.telia.com) has joined #python
2020-10-20 15:38:43	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 15:39:19	<--	tethroar (~tethroar@95.149.17.213) has quit (Ping timeout: 256 seconds)
2020-10-20 15:39:40	-->	Tanvir (~tanvir@wikimedia/wikitanvir) has joined #python
2020-10-20 15:40:20	amo_	choosealicense.com/no-permission
2020-10-20 15:40:33	kosh	yeah default is deny all
2020-10-20 15:41:00	<--	otozori (~smanched@67-220-3-33.fttp.usinternet.com) has quit (Ping timeout: 260 seconds)
2020-10-20 15:41:04	amo_	"ask the maintainers nicely to add a license", "don't use the software", "negotiate a private license - bring a lawyer"
2020-10-20 15:41:24	-->	very_sneaky (~very_snea@45.67.96.6) has joined #python
2020-10-20 15:41:34	amr00t	guy's please I don't know why my script get killed randomly. I am getting host names for over a million IPs but somewhere in the middle it gets killed can someone tell me if this has to do with the multi threading? What should I do to prevent this? Here is my code https://bpa.st/YMYA
2020-10-20 15:42:05	-->	unluckyshrubbery (~unluckysh@unaffiliated/unluckyshrubbery) has joined #python
2020-10-20 15:42:15	<--	ho0po3 (~ho0po3@5.107.137.103) has quit (Quit: Leaving)
2020-10-20 15:42:22	<--	arboch (~smanched@67-220-3-33.fttp.usinternet.com) has quit (Ping timeout: 256 seconds)
2020-10-20 15:42:23	bjs	amr00t: what makes you say it's getting killed?
2020-10-20 15:43:10	amr00t	bjs: I see Killed as the last output when program stops
2020-10-20 15:43:55	mgedmin	amr00t: what's the exit status when the script gets killed?
2020-10-20 15:44:08	kosh	amr00t, if you are using linux run dmesg and see if the OOM killer terminated your program
2020-10-20 15:44:15	amr00t	[!] Error in url https://127.0.0.1
2020-10-20 15:44:15	amr00t	Killed
2020-10-20 15:44:19	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 15:44:24	bjs	amr00t: can you show us the full script?
2020-10-20 15:44:24	-->	aw1 (~aw1@unaffiliated/aw1) has joined #python
2020-10-20 15:44:42	kosh	looking up over a million IPs though is REALLY extreme
2020-10-20 15:44:43	bjs	amr00t: and have you checked dmesg to see if it was the OS killing it
2020-10-20 15:45:01	kosh	run a local caching dns server and query that
2020-10-20 15:45:01	amr00t	bjs I am not aware of that
2020-10-20 15:45:01	-->	venmx (~bertie@82-132-235-205.dab.02.net) has joined #python
2020-10-20 15:45:18	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Quit: leaving)
2020-10-20 15:45:23	han-solo	check dmesg
2020-10-20 15:45:28	<--	barometz (~dominic@pdpc/supporter/active/nazgjunk) has quit (Remote host closed the connection)
2020-10-20 15:45:34	han-solo	or /var/log/message or friends
2020-10-20 15:45:35	nubonix	if this is the output of model.evaluate from tensorflow, does this mean my model is 90% accurate or less than 1%? `1032/1032 [==============================] - 1s 871us/step - loss: 1.5084 - accuracy: 0.9022`
2020-10-20 15:45:49	nubonix	assuming i didnt overfit
2020-10-20 15:45:50	amr00t	bjs: 314871.523098] Out of memory: Kill process 10508 (python3) score 858 or sacrifice child
2020-10-20 15:45:58	amr00t	that is the output of dmesg
2020-10-20 15:46:02	bjs	amr00t: well that answers your question
2020-10-20 15:46:38	amr00t	[314871.523167] Killed process 10508 (python3), UID 0, total-vm:3347060kB, anon-rss:829528kB, file-rss:0kB, shmem-rss:0kB
2020-10-20 15:46:42	<--	aaii (~aaii@unaffiliated/aaii) has quit (Read error: Connection reset by peer)
2020-10-20 15:47:12	-->	zahlman (~zahlman@toroon4432w-lp130-05-64-229-229-12.dsl.bell.ca) has joined #python
2020-10-20 15:47:22	-->	arboch (~smanched@67-220-3-33.fttp.usinternet.com) has joined #python
2020-10-20 15:47:24	amr00t	bjs: thanks so I should reduce the threads? I thought normally the OS would manage the threads
2020-10-20 15:47:31	bjs	amr00t: you ran Python with sudo?
2020-10-20 15:47:36	<--	nicholosophy (~nicholoso@unaffiliated/nicholosophy) has quit (Read error: Connection reset by peer)
2020-10-20 15:47:37	bjs	amr00t: it's not the threads -- you ran out of memory
2020-10-20 15:48:00	-->	barometz (~dominic@pdpc/supporter/active/nazgjunk) has joined #python
2020-10-20 15:48:08	<--	duderono_ (~duderonom@c-73-231-57-101.hsd1.ca.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-20 15:48:15	<--	hyper_dave (~hyper_dav@197.156.103.151) has quit (Read error: Connection reset by peer)
2020-10-20 15:48:34	--	ihatemyisp is now known as python2
2020-10-20 15:48:42	-->	hyper_dave (~hyper_dav@197.156.103.151) has joined #python
2020-10-20 15:48:45	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 258 seconds)
2020-10-20 15:49:20	-->	somedude (b0ca2307@gateway/web/cgi-irc/kiwiirc.com/ip.176.202.35.7) has joined #python
2020-10-20 15:49:24	kosh	amr00t, lots of threads arn't going to help you in the first place, run a local caching dns server and then query that and there is no reason to use more than a few threads for that
2020-10-20 15:49:32	kosh	amr00t, and your problem is memory not threads
2020-10-20 15:49:38	-->	KarmenJello (~karmenjel@cpc95910-rdng25-2-0-cust515.15-3.cable.virginm.net) has joined #python
2020-10-20 15:50:16	-->	medard (~medard@unaffiliated/medard) has joined #python
2020-10-20 15:51:11	dale	kosh: If you're making millions of DNS queries, and you spend a big part of your time waiting on responses, multi-threading is one way to parallelize that waiting, right?
2020-10-20 15:51:13	<--	plutoniix (~q@175.176.222.7) has quit (Quit: Leaving)
2020-10-20 15:51:36	-->	deadmarshal (~deadmarsh@95.38.105.211) has joined #python
2020-10-20 15:51:41	kosh	dale, you will just overload the remote server and it will close connections
2020-10-20 15:51:55	kosh	dale, if you run a local caching dns server then running more threads won't really help
2020-10-20 15:52:06	<--	rogersm_ (~rogersm@92.59.121.108) has quit
2020-10-20 15:52:19	dale	kosh: Close connections?  Are you assuming your resolver is having to resort to TCP?
2020-10-20 15:52:46	kosh	dale, I am assuming that if you flood the remote system it will cut you off at some point for DOS protection
2020-10-20 15:53:15	dale	Yeah, admittedly I have no idea what kind of throttling is found in, say, big ISP servers or something like Google or Cloudflare DNS.
2020-10-20 15:53:50	<--	mcsontos (~mcsontos@ip-78-45-212-253.net.upcbroadband.cz) has quit (Quit: Leaving)
2020-10-20 15:53:54	kosh	I would probably have no more than 4-10 outstanding requests at a time
2020-10-20 15:54:10	-->	mcsontos (~mcsontos@ip-78-45-212-253.net.upcbroadband.cz) has joined #python
2020-10-20 15:54:29	-->	Nact (~l@117.156-67-87.adsl-dyn.isp.belgacom.be) has joined #python
2020-10-20 15:54:47	kosh	but the correct way to do this is a local caching server, it is easy to setup and will cut traffic
2020-10-20 15:54:58	dale	Seems like Google limits you to 1000 queries/second/IP.  https://developers.google.com/speed/public-dns/docs/isp
2020-10-20 15:55:17	amirouche	is there a way when calling subprocess.run to way that the child process is finished?
2020-10-20 15:55:28	amirouche	I can see I can do that with Popen.wait
2020-10-20 15:55:44	<--	somedude (b0ca2307@gateway/web/cgi-irc/kiwiirc.com/ip.176.202.35.7) has quit (Quit: Connection closed)
2020-10-20 15:56:14	kosh	subprocess.run is blocking, it waits for the child to complete
2020-10-20 15:56:21	-->	plutoniix (~q@175.176.222.7) has joined #python
2020-10-20 15:56:47	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined #python
2020-10-20 15:57:25	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Remote host closed the connection)
2020-10-20 15:57:55	<--	TikityTik (~TikityTik@unaffiliated/tikitytik) has quit (Ping timeout: 260 seconds)
2020-10-20 15:58:23	<--	cdown (~cdown@163.114.131.1) has quit (Remote host closed the connection)
2020-10-20 15:58:31	amirouche	kosh: you are correct, thanks!
2020-10-20 15:59:09	<--	deadmarshal (~deadmarsh@95.38.105.211) has quit (Ping timeout: 256 seconds)
2020-10-20 15:59:36	nubonix	dale wont they recaptcha before that though?
2020-10-20 15:59:50	dale	nubonix: Ha
2020-10-20 16:00:18	nubonix	dale ?
2020-10-20 16:01:01	dale	nubonix: Oh, I'm sorry, I thought that was a joke.  Surely... Google DNS doesn't start issuing reCAPTCHA challenges somehow?
2020-10-20 16:01:04	<--	hiroaki (~hiroaki@ip4d176049.dynamic.kabel-deutschland.de) has quit (Ping timeout: 256 seconds)
2020-10-20 16:01:29	<--	braincrash (~braincras@bl5-42-100.dsl.telepac.pt) has quit (Ping timeout: 256 seconds)
2020-10-20 16:01:32	nubonix	oh okay, you are talking about dns and not search requests
2020-10-20 16:02:05	nubonix	but ill still allow that as a joke >_<
2020-10-20 16:02:07	mgedmin	google DNS rate limiting is how I discovered my apache was acting as an open proxy due to a comedy of errors
2020-10-20 16:02:12	dale	nubonix: Yeah, I was talking strictly about DNS queries.
2020-10-20 16:02:25	<--	d4rkforce (~darkforce@pdpc/supporter/student/d4rkforce) has quit (Quit: leaving)
2020-10-20 16:02:43	nubonix	mgedmin, well thats no fun... why take down one of my proxies?
2020-10-20 16:03:07	mgedmin	because it's not fun when random DNS requests get dropped
2020-10-20 16:03:13	nubonix	mgedmin, be part of my web scraping
2020-10-20 16:03:37	nubonix	surely cant be that bad
2020-10-20 16:03:43	nubonix	kidding kidding
2020-10-20 16:03:54	-->	fflori (~fflori@nat-wlan-uzh-89-206-64-027.uzh.ch) has joined #python
2020-10-20 16:04:21	-->	bariscant (~bariscant@81.213.188.124) has joined #python
2020-10-20 16:04:38	<--	bariscant (~bariscant@81.213.188.124) has quit (Remote host closed the connection)
2020-10-20 16:04:40	acetakwas	amo_, kosh, supakeen, mgedmin: Thanks. I'm the maintainer and I just want to know if I need to include a LICENSE file, add content (what content) or leave it blank.
2020-10-20 16:04:41	<--	enko (~enko@unaffiliated/enko) has quit (Read error: Connection reset by peer)
2020-10-20 16:04:52	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 16:05:00	nubonix	dale that is interesting tho.. so if using google as the search engine... cant go to more than 1k websites per second?
2020-10-20 16:05:02	-->	enko (~enko@unaffiliated/enko) has joined #python
2020-10-20 16:05:06	nubonix	on a single ip ofc
2020-10-20 16:05:19	mgedmin	acetakwas: define "need"? there's no _technical_ need; and IANAL so I cannot say if there's a legal need
2020-10-20 16:05:34	<--	KarmenJello (~karmenjel@cpc95910-rdng25-2-0-cust515.15-3.cable.virginm.net) has quit (Remote host closed the connection)
2020-10-20 16:05:39	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-20 16:05:43	-->	cdown (~cdown@89.32.122.5) has joined #python
2020-10-20 16:05:47	amo_	acetakwas, if you want people to use your code, add a license
2020-10-20 16:05:56	amo_	otherwise don't
2020-10-20 16:06:04	acetakwas	No, it's just private code resused across projects within the company.
2020-10-20 16:06:14	acetakwas	So definitely not to be used outside.
2020-10-20 16:06:14	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 16:06:20	-->	lucad111 (~lucad111@linaro/lucad111) has joined #python
2020-10-20 16:06:33	acetakwas	I wanted to know if such situations have a type of LICENSE applicable.
2020-10-20 16:07:01	nubonix	acetakwas as ive been told several times, a lawyer is the best way to protect code
2020-10-20 16:07:37	<--	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has left #python
2020-10-20 16:07:52	amo_	if it's "definitely" not to be used outside, you might want to put your code in a more private place
2020-10-20 16:08:02	<--	ThePortWhisperer (~ThePortWh@unaffiliated/theportwhisperer) has quit (Ping timeout: 260 seconds)
2020-10-20 16:08:09	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 16:08:14	acetakwas	amo_: It is in a "private place".
2020-10-20 16:08:23	acetakwas	The question is not being answered.
2020-10-20 16:08:27	nedbat	acetakwas: you don't need a LICENSE
2020-10-20 16:08:34	acetakwas	nedbat: Thanks.
2020-10-20 16:08:34	amo_	is that place sanctioned by your company?
2020-10-20 16:08:39	acetakwas	amo_: Yes.
2020-10-20 16:09:05	amo_	then you should be in the clear
2020-10-20 16:09:20	acetakwas	The only reason I'm asking this in the first place is that, with packaging, "setuptools" advices to create a file called "LICENSE"
2020-10-20 16:09:28	acetakwas	So I didn't know what to write in the file.
2020-10-20 16:09:28	amo_	otherwise ask your lawyer or some random dudes and dudettes on the internet
2020-10-20 16:09:34	acetakwas	I'll just leave it blank.
2020-10-20 16:09:36	dale	nubonix: Assuming you're using Google DNS, and you're going to 1k *different* sites per second (or you somehow have no local DNS caches), then yeah, your DNS will presumably just mysteriously stop working.
2020-10-20 16:09:48	kosh	nubonix, your local computer caches addresses, you would need to go to enough websites to generated 1K different lookups/second
2020-10-20 16:09:54	kosh	nubonix, which would be INSANE
2020-10-20 16:10:13	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined #python
2020-10-20 16:10:39	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 246 seconds)
2020-10-20 16:10:45	-->	youngOSCP (~youngOSCP@gateway/tor-sasl/youngoscp) has joined #python
2020-10-20 16:11:20	<--	reynir (~reynir@unaffiliated/reynir) has quit (Ping timeout: 260 seconds)
2020-10-20 16:11:38	dale	Note that the URL I provided is for ISPs who want to hand name resolution off to Google.  If you're an ISP forwarding requests from your customers, 1,000 queries/second is easier to hit.
2020-10-20 16:11:51	-->	cdown_ (~cdown@89.32.122.5) has joined #python
2020-10-20 16:12:02	kosh	easier but still not that common
2020-10-20 16:12:11	<--	arboch (~smanched@67-220-3-33.fttp.usinternet.com) has quit (Ping timeout: 256 seconds)
2020-10-20 16:12:15	<--	zpe (~zpe@host-95-197-99-71.mobileonline.telia.com) has quit (Ping timeout: 256 seconds)
2020-10-20 16:12:23	-->	arboch (~smanched@67-220-3-33.fttp.usinternet.com) has joined #python
2020-10-20 16:12:32	kosh	even my router can do dns caching
2020-10-20 16:13:34	-->	reynir (~reynir@unaffiliated/reynir) has joined #python
2020-10-20 16:13:51	-->	Abrax (~Abrax@unaffiliated/abrax) has joined #python
2020-10-20 16:14:28	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 272 seconds)
2020-10-20 16:14:37	--	cdown_ is now known as cdown
2020-10-20 16:15:09	-->	jbooker (5af01ea9@90.240.30.169) has joined #python
2020-10-20 16:15:15	nubonix	kosh, well, i dont have 1k different websites per second that im looking for, but i do have 100m+ urls that i am looking for at 1.5k/second
2020-10-20 16:15:27	-->	CiD2 (~CiD2@unaffiliated/jespunya) has joined #python
2020-10-20 16:15:38	jbooker	Can someone help me with a scoping issue? I'm modifying a sphinx extension and I'm strugglign to get a config variable
2020-10-20 16:15:43	<--	truthr (~truthr@unaffiliated/truthr) has quit (Read error: Connection reset by peer)
2020-10-20 16:15:47	kosh	nubonix, and those 100m urls are all from different domains?
2020-10-20 16:15:56	nubonix	kosh, no same domain
2020-10-20 16:16:24	mgedmin	jbooker: pastebin the code and the error?
2020-10-20 16:16:24	kosh	nubonix, then you don't need lots of dns requests, you only need a couple in total
2020-10-20 16:16:32	jbooker	Here is a paste of the relevant bit of code and the error: https://bpa.st/FQDA
2020-10-20 16:16:33	<--	SpinTronix (~SpinTroni@2001:7c0:205f:8002::bf) has quit (Read error: Connection reset by peer)
2020-10-20 16:16:38	kosh	nubonix, you would look it up once and then use that
2020-10-20 16:16:42	jbooker	mgedmin: too fast for me!
2020-10-20 16:16:48	nubonix	kosh oh okay
2020-10-20 16:16:56	nubonix	kosh good good
2020-10-20 16:17:22	<--	netcrash (~charmande@97.245.60.94.rev.vodafone.pt) has quit (Ping timeout: 240 seconds)
2020-10-20 16:17:22	<--	Nintenuendo (~Nintenuen@unaffiliated/nintenuendo) has quit (Quit: Can't IRC with this seat belt on.)
2020-10-20 16:17:26	jbooker	I have the config variable set up in the setup(app) method
2020-10-20 16:17:29	mgedmin	jbooker: your `def req_status(argument):` is missing a `self,` argument
2020-10-20 16:17:32	nubonix	kosh still gotta find a ton of proxies.... which has been quite the struggle.... hopefully my new network card can help with that...
2020-10-20 16:17:34	jbooker	it just appears to be scoping
2020-10-20 16:17:49	jbooker	can I add that in there without affecting the 'argument' though?
2020-10-20 16:17:50	-->	SpinTronix (~SpinTroni@HSI-KBW-095-208-203-151.hsi5.kabel-badenwuerttemberg.de) has joined #python
2020-10-20 16:17:54	-->	Nintenuendo (~Nintenuen@unaffiliated/nintenuendo) has joined #python
2020-10-20 16:17:58	jbooker	I don't know if the `argument` is positional
2020-10-20 16:18:01	<--	SuperLag (~akulbe@unaffiliated/superlag) has quit (Ping timeout: 240 seconds)
2020-10-20 16:18:24	-->	neibo (~neibo@156.red-88-10-6.dynamicip.rima-tde.net) has joined #python
2020-10-20 16:18:25	kosh	nubonix, why do you need a ton of proxies?
2020-10-20 16:18:33	<--	ihristov (55c48532@gateway/web/cgi-irc/kiwiirc.com/ip.85.196.133.50) has quit (Quit: Ping timeout (120 seconds))
2020-10-20 16:18:38	nubonix	kosh the site rate limiting to 5k requests per day
2020-10-20 16:18:40	-->	XsiSec (~xsisec@h-155-4-128-9.NA.cust.bahnhof.se) has joined #python
2020-10-20 16:18:45	jbooker	`C:\WORK\sphinx-reqs\source\anotherfile.rst:4: WARNING: Error in "requirement" directive:
2020-10-20 16:18:54	jbooker	i guess it is, I'll try putting self after argument
2020-10-20 16:19:01	jbooker	but I thought the convention was to put it first
2020-10-20 16:19:03	kosh	nubonix, ah so people like you are why I had to put in so much time to protect some of the sites I used to run
2020-10-20 16:19:06	nubonix	kosh actually tbh idk, thats what the discontinued api offered
2020-10-20 16:19:18	kosh	nubonix, because just one scraper generated more traffic than thousands of users
2020-10-20 16:19:18	-->	SuperLag (~akulbe@unaffiliated/superlag) has joined #python
2020-10-20 16:19:35	nubonix	kosh, well, this site big enough im sure they can handle it, but yes
2020-10-20 16:19:43	-->	Atque (~Atque@unaffiliated/atque) has joined #python
2020-10-20 16:19:44	mgedmin	jbooker: self always goes first
2020-10-20 16:19:46	jbooker	mgedmin: I moved the self after argument and it seems ok
2020-10-20 16:19:58	jbooker	I can't put self first...
2020-10-20 16:20:00	kosh	nubonix, so it is not yours, you are not paying for it but you are entitled to cost them money because they are big
2020-10-20 16:20:01	nubonix	kosh 21tb ina day is quite alot
2020-10-20 16:20:17	jbooker	mgedmin: I thought that was the convention, but I break Sphinx's option checking if I put it first
2020-10-20 16:20:54	kosh	nubonix, if they had a robots.txt or equiv did you follow it?
2020-10-20 16:20:55	nubonix	kosh, sure why not if i can profit
2020-10-20 16:21:06	nubonix	kosh how do you think i found the urls?
2020-10-20 16:21:24	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Remote host closed the connection)
2020-10-20 16:21:29	mgedmin	jbooker: I'm not personally familiar with how custom Sphinx directives work; where is the req_status called?
2020-10-20 16:21:35	nubonix	kosh they dont disallow it, they just ask for recaptcha at a certain point
2020-10-20 16:21:36	kosh	nubonix, but did it have limits or other stuff on indexing things?
2020-10-20 16:21:48	nubonix	kosh as i stated earlier, limits are not presented
2020-10-20 16:22:00	jbooker	mgedmin: it seems to be called from within the SphinxDirective class. hold on I'll paste a bit more
2020-10-20 16:22:03	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-20 16:22:07	kosh	nubonix, I remember putting things in robots.txt to not index and if someone hit that I would have the server insta ban them
2020-10-20 16:22:27	jbooker	mgedmin: https://bpa.st/IRHQ
2020-10-20 16:22:39	-->	thiras_ (~thiras@unaffiliated/thiras) has joined #python
2020-10-20 16:22:42	nubonix	kosh well ive sent a few hundred thousand requests on my ip and im not banned
2020-10-20 16:22:43	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2020-10-20 16:23:01	nubonix	kosh so pre sure they arent banning me
2020-10-20 16:23:25	jbooker	option_spec contains a `status` option, which specifies a method to validate the values in the option, but I want to use a configurable list of choices. I had it configured with a fixed list before
2020-10-20 16:24:10	-->	hubutm20 (~hubutm20@p200300eb471a2c00e1dc7b94c1d6737a.dip0.t-ipconnect.de) has joined #python
2020-10-20 16:24:11	jbooker	so within the `req_status()` method I need to get access to the environment. which requires access to the Directive object callign it
2020-10-20 16:24:12	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Read error: Connection reset by peer)
2020-10-20 16:24:47	mgedmin	jbooker: oh, I see!  can you initialize self.option_spec in the directive's __init__?  then you can store a bound method in it
2020-10-20 16:24:48	<--	PantelicGR3 (pantelicgr@gateway/shell/matrix.org/x-guggeqfzxhzqbzjc) has quit (Quit: killed)
2020-10-20 16:24:48	<--	lnxw37d4 (lnxw37d4ma@gateway/shell/matrix.org/x-ptvuhwxuhfxasuxj) has quit (Quit: killed)
2020-10-20 16:24:48	<--	ssbr (ssbrmatrix@python/site-packages/ssbr) has quit (Quit: killed)
2020-10-20 16:24:48	<--	psydruid (psydruidma@gateway/shell/matrix.org/x-oprbmexkbiobupsb) has quit (Quit: killed)
2020-10-20 16:24:48	<--	leibniz[m] (leibnizmat@gateway/shell/matrix.org/x-tgrgpiczdnfaakvw) has quit (Quit: killed)
2020-10-20 16:24:48	<--	notafile (notafilema@gateway/shell/matrix.org/x-zewbggeopmajobcv) has quit (Quit: killed)
2020-10-20 16:24:49	<--	hsiktas[m] (hsiktasmat@gateway/shell/matrix.org/x-icdlnorsjqgkpxaw) has quit (Quit: killed)
2020-10-20 16:24:49	<--	mattcen[m] (mattcenmat@gateway/shell/matrix.org/x-tupdgvbghvzlsuko) has quit (Quit: killed)
2020-10-20 16:24:49	<--	finn[m] (finn0matri@gateway/shell/matrix.org/x-andmzvamuucdfrxk) has quit (Quit: killed)
2020-10-20 16:24:50	<--	kellogs[m] (kellogsmat@gateway/shell/matrix.org/x-gmzskgdcomgokniv) has quit (Quit: killed)
2020-10-20 16:24:50	<--	TiD91 (dittidmatr@gateway/shell/matrix.org/x-rsqbchhrmsjvwqgm) has quit (Quit: killed)
2020-10-20 16:24:52	<--	Evidlo (evidlomatr@purduelug/evidlo) has quit (Quit: killed)
2020-10-20 16:24:53	<--	Ganwell (ganwellmat@gateway/shell/matrix.org/x-botyvltcummekkfg) has quit (Quit: killed)
2020-10-20 16:24:55	<--	Natureshadow (nikmatrixt@gateway/shell/matrix.org/x-hpyujxbpxooysktg) has quit (Quit: killed)
2020-10-20 16:24:56	<--	morguldir (criminalma@gateway/shell/matrix.org/x-jwqtyhxmgikfdgew) has quit (Quit: killed)
2020-10-20 16:24:57	<--	m_thinkofher (thinkofher@gateway/shell/matrix.org/x-lfcomxhuwugtveel) has quit (Quit: killed)
2020-10-20 16:25:02	<--	meain (meainmatri@gateway/shell/matrix.org/x-mmlhyggkxyklathx) has quit (Quit: killed)
2020-10-20 16:25:02	<--	DefB (defiancepo@gateway/shell/matrix.org/x-minyoolefitxkqmu) has quit (Quit: killed)
2020-10-20 16:25:06	<--	greg_logan (gloganmatr@gateway/shell/matrix.org/x-tbbwyztsgagydwqv) has quit (Quit: killed)
2020-10-20 16:25:06	<--	iambrian (iwanaucamp@gateway/shell/matrix.org/x-qnlmitovarqayjyi) has quit (Quit: killed)
2020-10-20 16:25:07	<--	Sofi (sofomatrix@gateway/shell/matrix.org/x-bletdgfqytpmxyns) has quit (Quit: killed)
2020-10-20 16:25:08	<--	Orimendix (zeturicmat@gateway/shell/matrix.org/x-tgjgvjtaeifsyfwt) has quit (Quit: killed)
2020-10-20 16:25:11	<--	thejonny (thejonnybr@gateway/shell/matrix.org/x-vesfiemdulrexwym) has quit (Quit: killed)
2020-10-20 16:25:12	<--	mattcen_ (mattcenm1@gateway/shell/matrix.org/x-lecjzntlynqfqxho) has quit (Quit: killed)
2020-10-20 16:25:12	<--	Alpha3031[m] (alpha3031m@wikipedia/Alpha3031) has quit (Quit: killed)
2020-10-20 16:25:12	<--	HarryGuerrilla[m (harryguerr@gateway/shell/matrix.org/x-vwhvvfvxvkjunqer) has quit (Quit: killed)
2020-10-20 16:25:14	<--	rtcms (rtcmsmatri@gateway/shell/matrix.org/x-vhranbvynjyeucrp) has quit (Quit: killed)
2020-10-20 16:25:14	<--	Schicko (nicotymatr@gateway/shell/matrix.org/x-wlvwuizdfuyuscua) has quit (Quit: killed)
2020-10-20 16:25:14	<--	secstate (secstatema@gateway/shell/matrix.org/x-tjmxhyncjufsyyqc) has quit (Quit: killed)
2020-10-20 16:25:14	<--	nihilazo (nihilazoma@gateway/shell/matrix.org/x-oybdwgyjgiaqufzl) has quit (Quit: killed)
2020-10-20 16:25:23	nubonix	kosh something i suppose i should ask, it says # slow down Yahoo, new line, then it says User-Agent: Slurrp, new line, Crawl-delay: 5, is this just for the Slurrp user-agent/yahoo or is this for everyone?
2020-10-20 16:25:55	<--	toboRlivE (~toboRlivE@136.61.220.168) has quit (Remote host closed the connection)
2020-10-20 16:26:12	kosh	nubonix, I would have to look at the standard again
2020-10-20 16:26:15	-->	toboRlivE (~toboRlivE@136.61.220.168) has joined #python
2020-10-20 16:26:15	nubonix	kosh the urls im asking for are NOT disallowed, searches are, but ive already got the urls without searching so
2020-10-20 16:26:32	nubonix	thats what sitemaps are for :) kosh
2020-10-20 16:26:42	<--	thiras (~thiras@unaffiliated/thiras) has quit (Ping timeout: 260 seconds)
2020-10-20 16:26:42	jbooker	mgedmin: I will have to go and read up about that, I've not overridden the __init__ of a class before
2020-10-20 16:27:04	-->	truthr (~truthr@unaffiliated/truthr) has joined #python
2020-10-20 16:27:08	<--	thiras_ (~thiras@unaffiliated/thiras) has quit (Client Quit)
2020-10-20 16:27:09	<--	appinv (~appinv@unaffiliated/appinventormu) has quit (Ping timeout: 264 seconds)
2020-10-20 16:27:40	-->	doev (~xyz@207.180.208.66) has joined #python
2020-10-20 16:27:45	<--	mavrix (~mavrix@unaffiliated/mavrix) has quit (Ping timeout: 264 seconds)
2020-10-20 16:27:52	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 16:28:09	<--	FLHerne (~flh@kde/developer/flherne) has quit (Ping timeout: 246 seconds)
2020-10-20 16:28:28	nubonix	kosh at any given time ive only got about 1k proxies...so it'll take me a month to download the data instead of 1 day, but w/e i guess
2020-10-20 16:28:31	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2020-10-20 16:28:50	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-20 16:29:19	-->	zfigz (~Adium@76-198-158-124.lightspeed.tukrga.sbcglobal.net) has joined #python
2020-10-20 16:29:22	-->	zorgo (~zorgo@141.143.213.42) has joined #python
2020-10-20 16:29:46	-->	Aryan (~Aryan@unaffiliated/aryan) has joined #python
2020-10-20 16:29:52	-->	FLHerne (~flh@kde/developer/flherne) has joined #python
2020-10-20 16:30:09	nubonix	kosh and btw ur not going to get me with the morality trip...so dont bother
2020-10-20 16:30:15	-->	mavrix (~mavrix@unaffiliated/mavrix) has joined #python
2020-10-20 16:30:21	jbooker	mgedmin: from the docs: `Option validator functions take a single parameter, the option argument (or None if not given), and should validate it or convert it to the proper form.`
2020-10-20 16:30:44	kosh	nubonix, I already understand that, but people like you are also why so many internet features have had to be removed because they are abused
2020-10-20 16:31:03	<--	Abrax (~Abrax@unaffiliated/abrax) has quit (Read error: Connection reset by peer)
2020-10-20 16:31:05	<--	djancak (~djancak@unaffiliated/djancak) has quit (Read error: Connection reset by peer)
2020-10-20 16:31:15	nubonix	kosh, well then publicly provide the info and we wont have to
2020-10-20 16:31:33	-->	djancak (~djancak@unaffiliated/djancak) has joined #python
2020-10-20 16:31:49	nubonix	that way the problem isnt exponential
2020-10-20 16:31:51	-->	Abrax (~Abrax@unaffiliated/abrax) has joined #python
2020-10-20 16:32:01	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 240 seconds)
2020-10-20 16:32:32	nubonix	100m/5k is.... more years than i have to live..so
2020-10-20 16:33:50	-->	schumaml (~schumaml@dslb-094-217-079-017.094.217.pools.vodafone-ip.de) has joined #python
2020-10-20 16:34:53	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 16:35:04	awmv_	https://bpa.st/NMJQ
2020-10-20 16:35:22	awmv_	I have a working regex but re.search and re.match work differently. I dont understand it
2020-10-20 16:36:00	awmv_	https://regex101.com/r/KUVb17/4
2020-10-20 16:36:01	mgedmin	re.match is implicitly anchored at the beginning of a string
2020-10-20 16:36:40	--	python2 is now known as python3
2020-10-20 16:37:07	mgedmin	your r2 wants to have something preceded by something else, so it can't possibly match at the beginning of the string
2020-10-20 16:37:07	mgedmin	so it matches nothign
2020-10-20 16:37:09	-->	ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) has joined #python
2020-10-20 16:37:28	<--	rf-n00b (rf-n00b@gateway/vpn/privateinternetaccess/rf-n00b) has quit (Ping timeout: 260 seconds)
2020-10-20 16:38:08	-->	rf-n00b (rf-n00b@gateway/vpn/privateinternetaccess/rf-n00b) has joined #python
2020-10-20 16:38:10	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 16:38:22	awmv_	OK. That's good to know. re.search ignores part of the regex though
2020-10-20 16:38:57	awmv_	the regex pattern excludes %; and d;
2020-10-20 16:39:08	-->	sagax (~sagax_nb@213.138.71.146) has joined #python
2020-10-20 16:39:11	awmv_	re.search still includes it in the match
2020-10-20 16:39:17	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:40:11	mgedmin	pastebin please, because in my experiments it doesn't
2020-10-20 16:40:12	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:40:45	mgedmin	also?  you're using list(filter(...)), so you don't see the part that matches; all you see is the strings that have a match in them somewhere
2020-10-20 16:41:48	-->	davepdot_ (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:42:09	-->	semeion (~semeion@unaffiliated/semeion) has joined #python
2020-10-20 16:42:28	<--	davepdot_ (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:42:52	<--	rabliatu (~quassel@2600:8800:a680:1400::e258) has quit (Ping timeout: 240 seconds)
2020-10-20 16:43:00	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:43:17	-->	rabliatu (~quassel@2600:8800:a680:1400::2710) has joined #python
2020-10-20 16:43:23	-->	duderonomy (~duderonom@c-73-231-57-101.hsd1.ca.comcast.net) has joined #python
2020-10-20 16:43:27	-->	cdown_ (~cdown@163.114.131.1) has joined #python
2020-10-20 16:43:43	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:44:10	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:44:52	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:45:03	-->	mystic (~mystic@cable-178-148-99-253.dynamic.sbb.rs) has joined #python
2020-10-20 16:45:08	awmv_	https://bpa.st/YZYQ
2020-10-20 16:45:18	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:45:52	-->	lz0 (~lz0@c83-253-144-17.bredband.comhem.se) has joined #python
2020-10-20 16:45:52	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 258 seconds)
2020-10-20 16:45:54	awmv_	Oh I don't see the match just the string that has a match?
2020-10-20 16:46:00	--	cdown_ is now known as cdown
2020-10-20 16:46:07	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:46:33	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:47:33	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:47:49	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:47:56	mgedmin	yes; use re.findall() to see just the matches
2020-10-20 16:48:19	-->	morguldir (criminalma@gateway/shell/matrix.org/x-qzsawzmlmeyzchjg) has joined #python
2020-10-20 16:48:19	-->	Evidlo (evidlomatr@purduelug/evidlo) has joined #python
2020-10-20 16:48:19	-->	notafile (notafilema@gateway/shell/matrix.org/x-xnlenrprnnuuabda) has joined #python
2020-10-20 16:48:20	-->	ssbr (ssbrmatrix@python/site-packages/ssbr) has joined #python
2020-10-20 16:48:20	-->	leibniz[m] (leibnizmat@gateway/shell/matrix.org/x-iubjlkogdjnbcexy) has joined #python
2020-10-20 16:48:20	-->	TiD91 (dittidmatr@gateway/shell/matrix.org/x-ukymcigwizclevlo) has joined #python
2020-10-20 16:48:20	-->	m_thinkofher (thinkofher@gateway/shell/matrix.org/x-cfnwqpfmohmvbzjf) has joined #python
2020-10-20 16:48:20	-->	lnxw37d4 (lnxw37d4ma@gateway/shell/matrix.org/x-crwphkmgvfrosaji) has joined #python
2020-10-20 16:48:20	-->	thejonny (thejonnybr@gateway/shell/matrix.org/x-cknaiwpczvvqpfnc) has joined #python
2020-10-20 16:48:20	-->	mattcen[m] (mattcenmat@gateway/shell/matrix.org/x-colnbwigihbmumsy) has joined #python
2020-10-20 16:48:20	-->	psydruid (psydruidma@gateway/shell/matrix.org/x-pvfpsaadgrgcnmsj) has joined #python
2020-10-20 16:48:20	-->	Ganwell (ganwellmat@gateway/shell/matrix.org/x-lutabiyxalssvdmr) has joined #python
2020-10-20 16:48:20	-->	Sofi (sofomatrix@gateway/shell/matrix.org/x-rayralmthiqtjmam) has joined #python
2020-10-20 16:48:20	-->	nihilazo (nihilazoma@gateway/shell/matrix.org/x-sbjmjryxjhfbwlul) has joined #python
2020-10-20 16:48:20	-->	Schicko (nicotymatr@gateway/shell/matrix.org/x-hdeahytcsspevjhb) has joined #python
2020-10-20 16:48:20	-->	Alpha3031[m] (alpha3031m@wikipedia/Alpha3031) has joined #python
2020-10-20 16:48:21	-->	rtcms (rtcmsmatri@gateway/shell/matrix.org/x-giqjabflmqpsfmdw) has joined #python
2020-10-20 16:48:21	-->	iambrian (iwanaucamp@gateway/shell/matrix.org/x-zztinwxflklbnbxk) has joined #python
2020-10-20 16:48:21	-->	hsiktas[m] (hsiktasmat@gateway/shell/matrix.org/x-kxldbtoxiyqqqedi) has joined #python
2020-10-20 16:48:21	-->	kellogs[m] (kellogsmat@gateway/shell/matrix.org/x-mzhjbenvtfbpdfad) has joined #python
2020-10-20 16:48:21	-->	PantelicGR3 (pantelicgr@gateway/shell/matrix.org/x-rpubstkvgxhbqqjs) has joined #python
2020-10-20 16:48:21	-->	HarryGuerrilla[m (harryguerr@gateway/shell/matrix.org/x-gxnbimdorgbxfpjs) has joined #python
2020-10-20 16:48:21	-->	mattcen_ (mattcenm1@gateway/shell/matrix.org/x-xytnassmnhwqifbt) has joined #python
2020-10-20 16:48:21	-->	greg_logan (gloganmatr@gateway/shell/matrix.org/x-kfzcenzipydistrw) has joined #python
2020-10-20 16:48:21	-->	Natureshadow (nikmatrixt@gateway/shell/matrix.org/x-yhmffjqycizvnxdc) has joined #python
2020-10-20 16:48:21	-->	meain (meainmatri@gateway/shell/matrix.org/x-bhlsqbweekevlfwa) has joined #python
2020-10-20 16:48:21	-->	DefB (defiancepo@gateway/shell/matrix.org/x-bhhziemuilwlowsw) has joined #python
2020-10-20 16:48:40	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:48:46	awmv_	Doesn't change a thing
2020-10-20 16:49:13	<--	rabliatu (~quassel@2600:8800:a680:1400::2710) has quit (Remote host closed the connection)
2020-10-20 16:49:41	<--	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-10-20 16:49:41	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 16:50:11	-->	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has joined #python
2020-10-20 16:50:16	<--	sandra_96 (~sandra_96@c-86a170d5.05-229-6c756e3.bbcust.telenor.se) has quit (Quit: Leaving)
2020-10-20 16:51:32	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:51:33	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-20 16:52:25	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:52:25	-->	biermic (~biermic@193-80-12-83.adsl.highway.telekom.at) has joined #python
2020-10-20 16:52:31	<--	Atque (~Atque@unaffiliated/atque) has quit (Quit: ...)
2020-10-20 16:52:45	CiD2	Hello, I'm trying to implement some unittests to validate a function that internally has a `for` loop that iterate the a list that's the `return_value` of a mocked function. Then, for each element of the list it executes a function foo() with the element as a parameter. Does anyone know how can I mock the foo() function to provide dynamically the mocked return_value depending on the element provided as input?
2020-10-20 16:52:45	CiD2	Thanks
2020-10-20 16:52:48	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:53:21	mgedmin	amo_: I meant use re.findall() instead of filter()
2020-10-20 16:53:33	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:53:42	-->	NerosTie2 (~Neros@adijon-655-1-29-148.w90-56.abo.wanadoo.fr) has joined #python
2020-10-20 16:54:05	-->	ct16k (~ryan@79.115.159.78) has joined #python
2020-10-20 16:54:13	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 244 seconds)
2020-10-20 16:54:24	<--	NerosTie (~Neros@astrasbourg-554-1-278-213.w109-217.abo.wanadoo.fr) has quit (Ping timeout: 246 seconds)
2020-10-20 16:54:25	--	NerosTie2 is now known as NerosTie
2020-10-20 16:55:01	-->	|\n (~x0a@unaffiliated/siberiannerd) has joined #python
2020-10-20 16:55:08	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:56:09	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Ping timeout: 272 seconds)
2020-10-20 16:56:09	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:56:20	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:56:53	man_in_shack	CiD2: map()? or comprehension syntax?
2020-10-20 16:57:13	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:57:16	<--	arboch (~smanched@67-220-3-33.fttp.usinternet.com) has quit (Read error: Connection reset by peer)
2020-10-20 16:57:26	|\n	willing it to be working on 2 and 3 versions, having a list of [1,2,,3] - how do i re.compile it with "|" joint pieces, where absent item should be r'epsilon^' ?
2020-10-20 16:57:41	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 16:58:08	-->	pryr (~pryr@ec2-3-7-141-252.ap-south-1.compute.amazonaws.com) has joined #python
2020-10-20 16:58:18	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 16:58:52	-->	braincrash (~braincras@bl5-42-100.dsl.telepac.pt) has joined #python
2020-10-20 16:59:05	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2020-10-20 16:59:05	CiD2	man_in_shack, I don't know what's comprehension syntax and never used the map() function. Do you have an example?
2020-10-20 16:59:22	-->	royal_screwup21 (52254809@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.72.9) has joined #python
2020-10-20 16:59:36	awmv_	find all doesn't work on lists
2020-10-20 16:59:48	-->	somedude (b0ca2307@gateway/web/cgi-irc/kiwiirc.com/ip.176.202.35.7) has joined #python
2020-10-20 17:00:00	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 17:00:09	awmv_	I'd have to iterate over the list then
2020-10-20 17:00:13	mgedmin	awmv_: yes
2020-10-20 17:00:13	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-20 17:00:18	<--	Streaker (~Streaker@unaffiliated/streaker) has quit (Ping timeout: 260 seconds)
2020-10-20 17:00:29	-->	Rudd0 (~Rudd0@185.189.115.103) has joined #python
2020-10-20 17:00:57	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 17:01:26	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 17:02:21	-->	smanched (~smanched@67-220-3-33.fttp.usinternet.com) has joined #python
2020-10-20 17:02:21	-->	ouyes (~ouyes@117.89.135.158) has joined #python
2020-10-20 17:02:25	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 17:02:36	-->	Lord_of_Life_ (~Lord@46.217.197.229) has joined #python
2020-10-20 17:02:41	ouyes	what is the correct way to end a process start by subprocess.Popen
2020-10-20 17:02:43	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 17:03:06	<--	smanched (~smanched@67-220-3-33.fttp.usinternet.com) has quit (Read error: Connection reset by peer)
2020-10-20 17:03:09	ouyes	I started a process tcpdump via python subprocess.Popen, how to safely end it?
2020-10-20 17:03:12	supakeen	By calling `proc.terminate()`.
2020-10-20 17:03:25	supakeen	Where proc is the process you got returned by Popen.
2020-10-20 17:03:27	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 17:03:49	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Ping timeout: 260 seconds)
2020-10-20 17:03:57	--	Lord_of_Life_ is now known as Lord_of_Life
2020-10-20 17:04:01	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 17:04:06	ouyes	supakeen, tcpdump will write files, do I need to check the exit code of the process after I call process.terminate()?
2020-10-20 17:04:24	supakeen	You should call `wait()` with a timeout after calling `terminate()`.
2020-10-20 17:04:38	ouyes	supakeen, how to call wait?
2020-10-20 17:04:45	supakeen	.wait() on the process object.
2020-10-20 17:04:49	supakeen	https://docs.python.org/3/library/subprocess.html#subprocess.Popen.wait
2020-10-20 17:04:52	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 17:04:53	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 17:05:13	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 17:05:38	-->	ellcs (~ellcs@200116b8686e5c0062f677fffebe55f5.dip.versatel-1u1.de) has joined #python
2020-10-20 17:05:44	man_in_shack	CiD2: help(map) is very useful
2020-10-20 17:06:04	<--	Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.comhem.se) has quit (Ping timeout: 256 seconds)
2020-10-20 17:06:11	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-20 17:06:17	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 17:06:35	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 17:07:09	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 17:07:11	ouyes	supakeen, I am reading it thanks a lot man
2020-10-20 17:08:35	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 17:08:52	awmv_	This worked: [m.group(0) for l in source for m in [r2.search(l)] if m]
2020-10-20 17:09:43	-->	LondonAppDev (Thunderbir@gateway/vpn/privateinternetaccess/londonappdev) has joined #python
2020-10-20 17:11:06	<--	LondonAppDev (Thunderbir@gateway/vpn/privateinternetaccess/londonappdev) has quit (Client Quit)
2020-10-20 17:11:09	-->	a11g0R (~mariusz@public-gprs548195.centertel.pl) has joined #python
2020-10-20 17:11:27	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 17:11:46	<--	ahadi (~ahadi@i5E86AFA6.versanet.de) has quit (Ping timeout: 265 seconds)
2020-10-20 17:11:57	-->	jinsun (~quassel@171.49.131.22) has joined #python
2020-10-20 17:11:58	-->	walbo (7caa031f@gateway/web/cgi-irc/kiwiirc.com/ip.124.170.3.31) has joined #python
2020-10-20 17:12:53	-->	ahadi (~ahadi@i5E86AFA6.versanet.de) has joined #python
2020-10-20 17:13:08	-->	srandon111 (~srandon11@5.102.15.61) has joined #python
2020-10-20 17:14:36	<--	jinsun (~quassel@171.49.131.22) has quit (Client Quit)
2020-10-20 17:16:04	f8e4	https://docs.pytest.org/en/stable/goodpractices.html#tests-as-part-of-application-code how to import in test_app things from app.py?
2020-10-20 17:16:12	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 256 seconds)
2020-10-20 17:16:33	<--	saint_ (~saint_@unaffiliated/saint-/x-0540772) has quit (Quit: ZZZzzz…)
2020-10-20 17:16:33	<--	finkata1 (~finkata@83.222.188.39) has quit (Read error: Connection reset by peer)
2020-10-20 17:17:10	-->	finkata1 (~finkata@83.222.188.39) has joined #python
2020-10-20 17:17:36	Cheaterman	Bliblibli buddiez I hope y'all doing goodie today
2020-10-20 17:17:43	-->	doh (~j@gateway/tor-sasl/doh) has joined #python
2020-10-20 17:17:50	Cheaterman	QQ - AIUI flake8 on its own isn't really sufficient right? Most people use pylint on top?
2020-10-20 17:18:06	Cheaterman	Other tools to recommend (other than mypy) for static analysis/linting/etc?
2020-10-20 17:18:10	<--	ellcs (~ellcs@200116b8686e5c0062f677fffebe55f5.dip.versatel-1u1.de) has quit (Ping timeout: 244 seconds)
2020-10-20 17:18:38	-->	edlinde (~edlinde@183.83.146.241) has joined #python
2020-10-20 17:19:00	<--	royal_screwup21 (52254809@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.72.9) has quit (Quit: Connection closed)
2020-10-20 17:19:27	<--	Gerula (~Gerula@unaffiliated/gerula) has quit (Quit: Leaving)
2020-10-20 17:19:35	Cheaterman	OTOH, perhaps it makes more sense to use pylint on its own?
2020-10-20 17:19:43	Cheaterman	Or should I use both?
2020-10-20 17:20:03	Cheaterman	(also, I'd expect one to have a plugin to run the other or something?)
2020-10-20 17:20:11	Cheaterman	(like pytest seems to have a pylint plugin)
2020-10-20 17:20:11	supakeen	It's just dependent on what you want your code to conform to.
2020-10-20 17:20:25	supakeen	pylint can do some additional checks and if used together with other linters you tend to turn off the things that the other linters talk about.
2020-10-20 17:20:30	Cheaterman	supakeen: That's probably something I wanna learn more about
2020-10-20 17:20:32	Cheaterman	I see!
2020-10-20 17:20:47	-->	Spicyfella (~Spicyfell@195.122.215.90) has joined #python
2020-10-20 17:20:50	supakeen	I have a small list of things turned on in pylint (or a large list of things turned off) and for that I like it.
2020-10-20 17:20:51	<--	david2 (~david2@212-186-25-215.cable.dynamic.surfer.at) has quit (Quit: WeeChat 2.9)
2020-10-20 17:20:54	Cheaterman	But AIUI flake8 is "kinda weak"? Like pylint seems to be more strict by default?
2020-10-20 17:21:01	supakeen	For example: I like a warning for methods that use no 'self'.
2020-10-20 17:21:14	Cheaterman	Oh, interesting, like "this should be a function" ?
2020-10-20 17:21:14	-->	Gerula (~Gerula@unaffiliated/gerula) has joined #python
2020-10-20 17:21:27	supakeen	Yes, that's how it can be interpreted.
2020-10-20 17:21:42	zamba	what kind of inotify solution can one use for windows?
2020-10-20 17:21:44	supakeen	pylint does a lot more than flake8; my general setup (pre-commit) is to run black, flake8, pylint, pytest.
2020-10-20 17:21:55	Cheaterman	Pretty cool indeed. IIRC there's also cyclomatic complexity analysis in pylint, and while it might be overkill, it'd be good for steering my dev team in the right direction
2020-10-20 17:21:57	supakeen	But I've turned off things in both flake8 and pylint.
2020-10-20 17:22:05	Cheaterman	they tend to output plenty of spaghetti, and I'm out of pesto :-)
2020-10-20 17:22:14	supakeen	There's also things that the default pylint is just annoying for like 'too few public methods' and such.
2020-10-20 17:22:31	Cheaterman	supakeen: Hahaha, "black flake8 pylint pytest" → all the things that I had in mind so that's good to know!
2020-10-20 17:22:37	Cheaterman	Ah, interesting, didn't even realize that was a thing
2020-10-20 17:22:44	supakeen	https://github.com/supakeen/pinnwand/blob/master/.pylintrc#L57 is what I have turned off.
2020-10-20 17:23:16	Cheaterman	supakeen: QQ on that note, does pylint cover some (most, all?) of the things covered by flake8
2020-10-20 17:23:18	<--	bpalmer (~user@unaffiliated/bpalmer) has left #python ("ERC (IRC client for Emacs 27.1)")
2020-10-20 17:23:18	-->	auosun0 (~auosun@112.0.146.209) has joined #python
2020-10-20 17:23:20	Cheaterman	or is it realistic that I'll use/need both
2020-10-20 17:23:21	supakeen	(for that project)
2020-10-20 17:23:33	supakeen	It can, I believe you don't need flake8 if you setup pylint correctly.
2020-10-20 17:23:43	Cheaterman	Sounds excellent, that's probably what I'm looking for
2020-10-20 17:23:55	supakeen	Though I feel it's easier to configure flake8 than pylint so I prefer flake8 to do some things and then turn them off in pylint.
2020-10-20 17:24:00	supakeen	But, all personal :)
2020-10-20 17:24:21	Cheaterman	Got plenty of experience with flake8, but my team proved it's insufficient to offer the kind of conformity I want
2020-10-20 17:24:48	Cheaterman	Yeah I love flake8 in general :-) just it seems like it needs "more checks" and that's where pylint comes in
2020-10-20 17:25:00	supakeen	I don't know, we only have the 'conformity' in that everyone on the team needs to be able to understand code and that's hard to put in any linter :)
2020-10-20 17:25:08	supakeen	(and the usual black setup)
2020-10-20 17:25:12	<--	somedude (b0ca2307@gateway/web/cgi-irc/kiwiirc.com/ip.176.202.35.7) has quit (Quit: Connection closed)
2020-10-20 17:25:30	<--	auosun (~auosun@112.0.146.209) has quit (Ping timeout: 260 seconds)
2020-10-20 17:25:31	--	auosun0 is now known as auosun
2020-10-20 17:25:43	Cheaterman	Hahahahaha, yeah - we don't use black yet, and team is a bit young (they don't yet have a feel for what "team won't understand" - and/or what "they won't understand themselves in 2 months")
2020-10-20 17:26:35	Cheaterman	I'm hoping linters will somewhat help organize the whole thing, but obviously as you noted, it's not a silver bullet :-) - on that note, I think I'm gonna both have a pre-commit hook with pylint, and a CI step
2020-10-20 17:26:46	Cheaterman	Two opportunities to deny commits if they don't look good
2020-10-20 17:26:57	-->	mirrorbird (~psutcliff@m83-187-163-53.cust.tele2.se) has joined #python
2020-10-20 17:27:45	Cheaterman	(also we don't unit test things yet - that's mostly my fault, I didn't convince them well enough, and didn't finish writing my document about MVVM/TDD with Kivy...)
2020-10-20 17:28:24	Cheaterman	(think of Kivy like Flask, it's a micro framework that doesn't get in the way, except Flask has flask-sqlalchemy and other things that will drive people to decouple things at least a little... generally sufficient for coverage)
2020-10-20 17:29:00	Cheaterman	(in Kivy we have no such thing :-) if nobody raises their voice and says "hey we need automated tests, the regression spam is a disaster both for QA and for us devs", nothing will happen)
2020-10-20 17:30:23	graingert	supakeen: Cheaterman: there's a project for pylint to drop all the rules that overlap with flake8 and others
2020-10-20 17:30:28	Cheaterman	(... and devs will make absolutely everything tightly coupled to the view, which literally makes testing impossible)
2020-10-20 17:30:55	Cheaterman	graingert: That's interesting! OTOH I feel like the other option (of just dropping flake8 and replacing it with pylint) is appealing too
2020-10-20 17:31:02	graingert	nah
2020-10-20 17:31:04	graingert	flake8 good
2020-10-20 17:31:07	Cheaterman	Ah! do tell
2020-10-20 17:31:18	graingert	flake8 is good...?
2020-10-20 17:31:24	graingert	that's all there is to it
2020-10-20 17:31:29	graingert	use both
2020-10-20 17:31:32	<--	|\n (~x0a@unaffiliated/siberiannerd) has left #python
2020-10-20 17:31:39	Cheaterman	Yeah it is! That's not what I'm saying - if all flake8 features are covered by pylint, it doesn't make sense to use both does it?
2020-10-20 17:31:49	<--	Aryan (~Aryan@unaffiliated/aryan) has quit (Quit: leaving)
2020-10-20 17:31:53	graingert	but there's only *some* overlap
2020-10-20 17:31:57	Cheaterman	Aaaaaaaah :-)
2020-10-20 17:31:57	graingert	not complete overlap
2020-10-20 17:32:03	Cheaterman	Thanks - that's what I was wondering about
2020-10-20 17:32:08	graingert	and they're looking to *remove* all the overlap
2020-10-20 17:32:20	Cheaterman	Okay - so the future is definitely "use both" and not "one size fits all"
2020-10-20 17:32:22	<--	jimgray__ (~weechat@unaffiliated/jimgray) has quit (Ping timeout: 272 seconds)
2020-10-20 17:32:43	Cheaterman	Good to know :-) thanks
2020-10-20 17:32:52	-->	ashwinvis (~avmo@h-96-225.A880.priv.bahnhof.se) has joined #python
2020-10-20 17:33:07	<--	walbo (7caa031f@gateway/web/cgi-irc/kiwiirc.com/ip.124.170.3.31) has quit (Quit: Connection closed)
2020-10-20 17:33:17	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 17:33:34	graingert	https://github.com/PyCQA/pylint/issues/3512
2020-10-20 17:33:45	graingert	and also "use black"
2020-10-20 17:34:21	Cheaterman	Yeah, I didn't get around to it yet (bit like unit testing my GUI apps...) but that's definitely on the meny
2020-10-20 17:34:24	Cheaterman	menu*
2020-10-20 17:34:48	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Remote host closed the connection)
2020-10-20 17:34:52	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 17:35:25	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-20 17:36:07	Cheaterman	https://cheaterman.doc.digitalfactoryparis.com/scalable-kivy/tdd.html that's the menu BTW
2020-10-20 17:36:20	Cheaterman	But well this document really needs some love, didn't touch it for like six months
2020-10-20 17:36:40	Cheaterman	(I spend time doing things so I don't have time to teach things...)
2020-10-20 17:37:27	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 246 seconds)
2020-10-20 17:38:01	<--	Stanley00 (~stanley00@unaffiliated/stanley00) has quit
2020-10-20 17:38:12	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 17:38:46	Cheaterman	(and by "teach" I mean both my team and myself, obviously :-) )
2020-10-20 17:40:14	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 256 seconds)
2020-10-20 17:40:18	-->	Streaker (~Streaker@unaffiliated/streaker) has joined #python
2020-10-20 17:41:23	-->	Mrbuck (~Mrbuck@gateway/tor-sasl/mrbuck) has joined #python
2020-10-20 17:43:02	-->	devster31 (~devster@host-95-234-102-108.retail.telecomitalia.it) has joined #python
2020-10-20 17:43:39	<--	dropheaders (~dropheade@240d:1a:ac3:1f01:ba27:ebff:fe61:1bd8) has quit (Quit: WeeChat 2.9)
2020-10-20 17:44:32	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2020-10-20 17:44:33	<--	jbooker (5af01ea9@90.240.30.169) has quit (Remote host closed the connection)
2020-10-20 17:44:37	<--	devster (~devster@host-79-20-190-220.retail.telecomitalia.it) has quit (Ping timeout: 256 seconds)
2020-10-20 17:45:42	-->	dropheaders (~dropheade@240d:1a:ac3:1f01:ba27:ebff:fe61:1bd8) has joined #python
2020-10-20 17:46:19	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-20 17:48:05	-->	bolovanos_ (~bolovanos@185.8.239.54) has joined #python
2020-10-20 17:48:55	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 17:49:50	<--	i9zO5AP (~BQcdf9eiZ@gateway/tor-sasl/ai9zo5ap) has quit (Quit: WeeChat 2.9)
2020-10-20 17:49:50	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 17:50:03	<--	Gerula (~Gerula@unaffiliated/gerula) has quit (Remote host closed the connection)
2020-10-20 17:50:10	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 17:50:11	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 17:50:18	amo_	i'm just experimenting with a highpass 5th order butterworth to compensate for nonlinear base drift.. i've checked the fft of the data and figured that i could identify the frequency of interests (the ones of the peaks) by argrelmax
2020-10-20 17:50:40	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Ping timeout: 246 seconds)
2020-10-20 17:50:47	<--	n000g (~NRG@unaffiliated/n000g) has quit (Quit: ZNC 1.7.5 - https://znc.in)
2020-10-20 17:51:10	amo_	i also figured that if i find the first relativ minimum of the fft, i could identify a good frequency for the filter cutoff
2020-10-20 17:51:30	amo_	but alas, there's still too much removed of the interesting frequencies
2020-10-20 17:52:56	amo_	problem is that these interesting frequencies are at 10 of ~7500 and i really can't go much lower with the filter..
2020-10-20 17:53:08	-->	n000g (~NRG@unaffiliated/n000g) has joined #python
2020-10-20 17:53:21	amo_	any suggestions?
2020-10-20 17:54:56	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 17:56:42	<--	PantelicGR3 (pantelicgr@gateway/shell/matrix.org/x-rpubstkvgxhbqqjs) has quit (Quit: Idle for 30+ days)
2020-10-20 17:58:05	-->	pradhvan (uid244250@gateway/web/irccloud.com/x-xssqygzalezkgvbn) has joined #python
2020-10-20 17:58:08	<--	dvx (~dvx@5.181.92.64) has quit (Ping timeout: 256 seconds)
2020-10-20 17:59:16	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 256 seconds)
2020-10-20 18:00:09	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2020-10-20 18:00:26	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-20 18:00:53	-->	Leonarbro (~Leonet@S01067824af93741c.cg.shawcable.net) has joined #python
2020-10-20 18:02:50	<--	Deyaa (uid190709@gateway/web/irccloud.com/x-iyrgarhmatixqsvt) has quit (Quit: Connection closed for inactivity)
2020-10-20 18:03:04	<--	wleslie (~verte@python/site-packages/verte) has quit (Quit: ~~~ Crash in JIT!)
2020-10-20 18:04:27	<--	Forsythe (Forsythe@gateway/vpn/privateinternetaccess/forsythe) has quit (Ping timeout: 265 seconds)
2020-10-20 18:04:55	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 18:06:46	-->	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has joined #python
2020-10-20 18:07:53	-->	Gerula (~Gerula@unaffiliated/gerula) has joined #python
2020-10-20 18:08:01	-->	tralala (~user@unaffiliated/tralala) has joined #python
2020-10-20 18:08:29	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 18:08:41	-->	wallace_mu (~wallace_m@pool-173-79-208-61.washdc.fios.verizon.net) has joined #python
2020-10-20 18:09:45	<--	zalt__ (~devp@unaffiliated/lambda443) has quit (Ping timeout: 264 seconds)
2020-10-20 18:10:15	<--	appinv (~appinv@unaffiliated/appinventormu) has quit (Read error: Connection reset by peer)
2020-10-20 18:10:43	-->	phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has joined #python
2020-10-20 18:10:45	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2020-10-20 18:10:48	-->	b3h3m0th (uid26288@gateway/web/irccloud.com/x-jygpbgfovvgvemnv) has joined #python
2020-10-20 18:10:56	-->	Deknos (~deknos@unaffiliated/menace) has joined #python
2020-10-20 18:11:23	<--	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has quit (Ping timeout: 256 seconds)
2020-10-20 18:11:42	<--	palasso_ (~palasso@unaffiliated/palasso) has quit (Ping timeout: 260 seconds)
2020-10-20 18:11:52	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:12:37	-->	Barones (~Barones@2804:7f3:8982:f364:c896:23d4:b69c:8c30) has joined #python
2020-10-20 18:12:43	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:13:05	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:14:05	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:15:35	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:16:22	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:16:45	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:16:47	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 18:16:53	<--	Horzagger (~stockthx@unaffiliated/horzagger) has quit (Quit: Жизнь прекрасна)
2020-10-20 18:17:51	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:19:01	<--	mo2000 (emmo@shell.mo2000.de) has quit (Ping timeout: 246 seconds)
2020-10-20 18:19:07	-->	davepdot_ (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:19:50	<--	davepdot_ (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:20:25	<--	chwang (~chwang@li1001-23.members.linode.com) has quit (Quit: ZNC 1.7.2+deb3 - https://znc.in)
2020-10-20 18:20:25	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:21:27	-->	davepdot_ (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:21:27	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:21:46	<--	Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) has quit (Ping timeout: 264 seconds)
2020-10-20 18:21:46	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 272 seconds)
2020-10-20 18:22:00	rendar	any help to get these values of x described here with numpy? I can't find the right function in the numpy documentation! -> https://www.wolframalpha.com/input/?i=0.3*1.4%5Ex-0.8*1.3%5Ex-0.3%2B0.4%3D0
2020-10-20 18:22:18	<--	davepdot_ (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:22:49	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:22:57	<--	Buntspecht (~user@unaffiliated/siracusa) has quit (Read error: Connection reset by peer)
2020-10-20 18:22:59	<--	LionBar (~l@gateway/tor-sasl/lionbar) has quit (Ping timeout: 240 seconds)
2020-10-20 18:23:27	-->	chwang (~chwang@li1001-23.members.linode.com) has joined #python
2020-10-20 18:23:27	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:23:48	-->	Buntspecht (~user@unaffiliated/siracusa) has joined #python
2020-10-20 18:23:58	-->	Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.comhem.se) has joined #python
2020-10-20 18:24:01	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:24:41	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:24:53	<--	plutoniix (~q@175.176.222.7) has quit (Quit: Leaving)
2020-10-20 18:25:09	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:25:31	-->	LionBar (~l@gateway/tor-sasl/lionbar) has joined #python
2020-10-20 18:26:19	-->	Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) has joined #python
2020-10-20 18:27:09	-->	Horzagger (~stockthx@unaffiliated/horzagger) has joined #python
2020-10-20 18:27:39	<--	PeRy_SoY (~pi@gateway/tor-sasl/perysoy/x-95510193) has quit (Ping timeout: 240 seconds)
2020-10-20 18:27:44	<--	aball (~mammal@2603-8080-f740-00c5-5da6-7322-2dc6-62e4.res6.spectrum.com) has quit (Ping timeout: 244 seconds)
2020-10-20 18:27:58	-->	zalt__ (~devp@unaffiliated/lambda443) has joined #python
2020-10-20 18:28:13	-->	timkofu (~timkofu@105.160.115.157) has joined #python
2020-10-20 18:28:15	timkofu	Hi
2020-10-20 18:29:17	amo_	hi timkofu
2020-10-20 18:29:36	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Ping timeout: 246 seconds)
2020-10-20 18:29:47	-->	PeRy_SoY (~pi@gateway/tor-sasl/perysoy/x-95510193) has joined #python
2020-10-20 18:30:24	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined #python
2020-10-20 18:30:30	<--	rf-n00b (rf-n00b@gateway/vpn/privateinternetaccess/rf-n00b) has quit (Ping timeout: 244 seconds)
2020-10-20 18:31:09	-->	aball (~mammal@2603-8080-f740-00c5-9142-b9d9-9c03-1fc6.res6.spectrum.com) has joined #python
2020-10-20 18:31:25	-->	bbenz (~brent@dsl-50-5-35-82.fuse.net) has joined #python
2020-10-20 18:31:37	<--	ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) has quit (Ping timeout: 246 seconds)
2020-10-20 18:31:47	f8e4	wrote a circular store which combines deque + list advantages; good for insert front and index access in middle: https://bpa.st/QVEQ
2020-10-20 18:32:00	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Ping timeout: 265 seconds)
2020-10-20 18:32:14	-->	mo2000 (emmo@shell.mo2000.de) has joined #python
2020-10-20 18:32:22	-->	Onepamopa (~Onepamopa@unaffiliated/onepamopa) has joined #python
2020-10-20 18:32:45	f8e4	list explodes on insert0; deque explodes if index middle; circular never explodes but underperforms on types <10e3
2020-10-20 18:33:14	Onepamopa	Guys, how to utilize argparse in a way that will allow me to use the value of a previous argument to set a number of required arguments ?
2020-10-20 18:33:37	<--	al2o3-cr (~al2o3-cr@unaffiliated/gr33n7007h) has quit (Quit: WeeChat 2.9)
2020-10-20 18:34:02	Onepamopa	for example - have 2-3 "global" arguments, and use the value of the 4th argument to set additional arguments
2020-10-20 18:34:18	<--	Horzagger (~stockthx@unaffiliated/horzagger) has quit (Quit: Жизнь прекрасна)
2020-10-20 18:34:58	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 18:35:06	-->	davepdot_ (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:35:07	<--	Buntspecht (~user@unaffiliated/siracusa) has quit (Ping timeout: 258 seconds)
2020-10-20 18:35:25	bjs	f8e4: looks nice. I wonder how much deque really explodes on middle accesses for real world loads
2020-10-20 18:35:55	<--	davepdot_ (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:36:05	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-20 18:36:17	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:36:41	f8e4	bjs: deque benchmark_getset 82929.150ms # VS circular benchmark_getset 2657.717ms
2020-10-20 18:36:51	-->	Buntspecht (~user@unaffiliated/siracusa) has joined #python
2020-10-20 18:36:52	f8e4	on 1e6 items; its mad explode; worth it
2020-10-20 18:37:02	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:37:08	f8e4	thats a 40x increase
2020-10-20 18:37:08	bjs	f8e4: this is just some more numbers,  it's not representative of real work loads :)
2020-10-20 18:37:09	bjs	but yes
2020-10-20 18:38:19	-->	abm (~abm@088156141202.dynamic-2-waw-k-3-1-0.vectranet.pl) has joined #python
2020-10-20 18:38:30	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 18:38:32	bjs	f8e4: most queue usages don't need random access, so it's hard to know if it's really "worth it"
2020-10-20 18:38:36	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 18:38:42	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:38:42	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2020-10-20 18:38:58	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-20 18:39:22	<--	medard (~medard@unaffiliated/medard) has quit (Quit: Leaving)
2020-10-20 18:39:23	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:39:41	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-10-20 18:39:55	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:40:06	-->	lawr3nce (~lawr3nce@gateway/tor-sasl/lawr3nce) has joined #python
2020-10-20 18:40:27	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-20 18:40:30	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:40:42	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 256 seconds)
2020-10-20 18:42:05	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:43:06	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 265 seconds)
2020-10-20 18:43:07	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:43:13	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:44:34	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:44:34	-->	davepdot_ (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:44:47	-->	rf-n00b (rf-n00b@gateway/vpn/privateinternetaccess/rf-n00b) has joined #python
2020-10-20 18:45:05	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Ping timeout: 272 seconds)
2020-10-20 18:45:10	<--	davepdot_ (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:45:11	<--	truthr (~truthr@unaffiliated/truthr) has quit (Quit: #politics-uncensored Rizon, Disco is life  https://www.youtube.com/watch?v=y1tZUmCyFxM)
2020-10-20 18:46:19	<--	appinv (~appinv@unaffiliated/appinventormu) has quit (Read error: Connection reset by peer)
2020-10-20 18:46:21	-->	vuoto (~vuoto@customer-212-237-101-103.ip4.gigabit.dk) has joined #python
2020-10-20 18:48:32	-->	xinzi (~Rackham@unaffiliated/horzagger) has joined #python
2020-10-20 18:49:21	<--	BillyZane (BillyZane@gateway/vpn/privateinternetaccess/billyzane) has quit (Ping timeout: 264 seconds)
2020-10-20 18:49:22	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:49:54	<--	ahadi (~ahadi@i5E86AFA6.versanet.de) has quit (Ping timeout: 246 seconds)
2020-10-20 18:50:09	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:50:24	<--	Spicyfella (~Spicyfell@195.122.215.90) has quit (Quit: Leaving)
2020-10-20 18:50:39	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:50:40	<--	Jak_o_Shadows (~Jak@unaffiliated/jak-o-shadows/x-0479135) has quit (Ping timeout: 240 seconds)
2020-10-20 18:51:25	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:51:54	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:52:03	-->	ahadi (~ahadi@89.244.124.67) has joined #python
2020-10-20 18:52:36	<--	deeman (~deeman@gateway/tor-sasl/deeman) has quit (Remote host closed the connection)
2020-10-20 18:52:37	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:52:59	-->	deeman (~deeman@gateway/tor-sasl/deeman) has joined #python
2020-10-20 18:53:10	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:53:21	-->	palasso (~palasso@unaffiliated/palasso) has joined #python
2020-10-20 18:53:30	-->	jigubigule (~jigubigul@2001:1c06:19ca:cc00:3d8e:9080:9c29:e7a7) has joined #python
2020-10-20 18:53:35	-->	Buntspecht_ (~user@unaffiliated/siracusa) has joined #python
2020-10-20 18:53:46	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:54:09	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:54:09	-->	BillyZane (BillyZane@gateway/vpn/privateinternetaccess/billyzane) has joined #python
2020-10-20 18:55:12	-->	amber72 (47722182@pool-71-114-33-130.washdc.fios.verizon.net) has joined #python
2020-10-20 18:55:12	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:55:26	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 18:55:56	-->	EvilPyro (~EvilPyro@unaffiliated/evilpyro) has joined #python
2020-10-20 18:56:02	zamba	i want to perform bit interleaving in python.. how can i do that?
2020-10-20 18:56:16	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-20 18:56:16	zamba	simply and of course: fast
2020-10-20 18:56:40	zamba	basically i have 2048-bytes blocks of binary data that should be interleaved into 2 1024-bytes blocks
2020-10-20 18:56:58	<--	Buntspecht (~user@unaffiliated/siracusa) has quit (Ping timeout: 260 seconds)
2020-10-20 18:57:01	--	Buntspecht_ is now known as Buntspecht
2020-10-20 18:57:08	zamba	all even bits should go into the first 1024-byte block and the odd bits should go into the other
2020-10-20 18:57:09	supakeen	that sounds the reverse of interleaving?
2020-10-20 18:57:12	EvilPyro	hello! is there a way to rewrite this loop in a clean way? https://pastebin.com/raw/iJQ1FcZz  btw both lists are sorted initially
2020-10-20 18:57:13	infobob	https://bpaste.net/3VQQ (repasted for EvilPyro)
2020-10-20 18:57:14	<--	nabil_ (~nabil@105.102.126.226) has quit (Ping timeout: 272 seconds)
2020-10-20 18:57:29	zamba	supakeen: yeah, sorry.. de-interleave :)=
2020-10-20 18:57:32	<--	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has quit (Ping timeout: 246 seconds)
2020-10-20 18:58:13	-->	rememberYou (~user@unaffiliated/rememberyou) has joined #python
2020-10-20 18:58:50	<--	TGTBTZ (~TGTBTZ@s17612523584.blix.com) has quit (Ping timeout: 260 seconds)
2020-10-20 18:59:00	rememberYou	does it is true? http://ix.io/2BmE/python
2020-10-20 18:59:10	<--	bigRoo (~user@131.236.55.62) has quit (Remote host closed the connection)
2020-10-20 18:59:21	amber72	Can someone help me with this code...I am not sure what is incorrect. The error is that the program is not comparing ALL the inputs at the end, but only one-by-one, so I should I fix this? https://bpa.st/DV3Q
2020-10-20 18:59:32	-->	wishbone (~wishbone@pool-108-55-114-19.hrbgpa.fios.verizon.net) has joined #python
2020-10-20 18:59:43	-->	al2o3-cr (~gr33n7007@unaffiliated/gr33n7007h) has joined #python
2020-10-20 18:59:49	supakeen	zamba: Bunch of shifts really, no better way to do it unless you're ok with turning them into a string of 1's and 0's first.
2020-10-20 19:00:16	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 19:00:22	zamba	supakeen: could numpy help out with this?
2020-10-20 19:00:35	supakeen	I am not familiar with numpy but it might have things for this!
2020-10-20 19:00:43	zamba	if i create a string of 1s and 0s, that is
2020-10-20 19:00:53	zamba	or rather, list of 0s and 1s
2020-10-20 19:02:40	-->	ellcs (~ellcs@200116b8686e5c0062f677fffebe55f5.dip.versatel-1u1.de) has joined #python
2020-10-20 19:03:02	<--	Sadale (~Sadale@unaffiliated/sadale) has quit (Ping timeout: 260 seconds)
2020-10-20 19:03:11	amo_	zamba, odd and even bits? are you talking of indexes or 0s and 1s?
2020-10-20 19:03:22	zamba	amo_: 0s and 1s
2020-10-20 19:03:26	-->	sdoherty (sdoherty@nat/redhat/x-gzwphijarjwpxwbs) has joined #python
2020-10-20 19:03:27	han-solo	EvilPyro: maybe `zip` ?
2020-10-20 19:03:45	amo_	zamba, you could easily do that in numpy with where, i think
2020-10-20 19:04:26	-->	Sadale (~Sadale@unaffiliated/sadale) has joined #python
2020-10-20 19:04:30	zamba	amo_: first i need to get this into a numpy array
2020-10-20 19:04:38	supakeen	If you do that you can do this more easily with something such as `zip(*[a, b for a, b in zip(string_10s, string_of10s[1:]])`.
2020-10-20 19:04:41	supakeen	Will work.
2020-10-20 19:04:44	supakeen	But eh not pretty.
2020-10-20 19:04:53	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 19:04:53	EvilPyro	han-solo, you can imagine the lists as if they were dicts since they are tuple lists, the first tuple part is like the key, both lists may have different keys
2020-10-20 19:05:00	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 256 seconds)
2020-10-20 19:05:01	han-solo	rememberYou: Yes
2020-10-20 19:05:24	rememberYou	thanks, I had a doubt :p
2020-10-20 19:05:25	EvilPyro	thats why i iterate that way if t1 != t2
2020-10-20 19:05:25	zamba	supakeen: was that for me?
2020-10-20 19:05:48	amo_	zamba, np.fromite
2020-10-20 19:05:51	amo_	fromiter
2020-10-20 19:05:56	supakeen	zamba: Yes, it's a solution if you are ok with turning them into strings of 1's and 0's.
2020-10-20 19:06:01	<--	supakeen (~user@python/site-packages/supakeen) has quit (Quit: WeeChat 2.9)
2020-10-20 19:06:04	han-solo	EvilPyro: can we see a sample of the list ?
2020-10-20 19:06:39	-->	supakeen (~user@python/site-packages/supakeen) has joined #python
2020-10-20 19:06:46	EvilPyro	[("lemon", 88), ("banana", 5), ("carrot", 0)]
2020-10-20 19:07:00	zamba	amo_: but is numpy fast enough for this?
2020-10-20 19:07:02	zamba	amo_: wouldn't shift operations be quicker?
2020-10-20 19:07:07	amo_	no idea.
2020-10-20 19:07:10	EvilPyro	well, that but sorted xDD
2020-10-20 19:07:23	han-solo	EvilPyro: Sure, what you want out of it ?
2020-10-20 19:07:27	-->	TGTBTZ (~TGTBTZ@234.92-221-65.customer.lyse.net) has joined #python
2020-10-20 19:07:30	<--	Rangar (~Rangar@2404:4404:1406:1b00:e8fa:fccd:f813:1c73) has quit (Ping timeout: 260 seconds)
2020-10-20 19:07:39	amo_	but i'd say if anything can do it "normally", it's numpy
2020-10-20 19:07:42	<--	honigkuchen (~honigkuch@ip5f5b9b83.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-10-20 19:08:04	zamba	amo_: my iterator is a block of 2048 bytes.. how can numpy turn that into a list of bits?
2020-10-20 19:08:04	amo_	also there's np.right_shift
2020-10-20 19:08:13	amo_	no idea if that could help
2020-10-20 19:08:15	Asmodee	rememberYou: it remembers me what I have seen yesterday ^^ I would also have answered yes
2020-10-20 19:08:30	<--	lawr3nce (~lawr3nce@gateway/tor-sasl/lawr3nce) has quit (Quit: Leaving)
2020-10-20 19:08:40	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 19:09:09	-->	dmiles (dmiles@c-73-67-179-188.hsd1.wa.comcast.net) has joined #python
2020-10-20 19:09:10	zamba	amo_: https://schlameel.com/2017/06/09/interleaving-and-de-interleaving-data-with-python/ this looks interesting
2020-10-20 19:09:10	supakeen	zamba: https://bpa.st/raw/XVLA like so.
2020-10-20 19:09:21	supakeen	(fix the off by one that's in there)
2020-10-20 19:09:26	EvilPyro	han-solo, the example code i passed works. I just want to know if it could be cleaner
2020-10-20 19:09:26	supakeen	but that's an approach one could take
2020-10-20 19:09:56	-->	burakcank (~burakcank@31.141.85.228) has joined #python
2020-10-20 19:10:01	-->	vdamewood (~vdamewood@unaffiliated/vdamewood) has joined #python
2020-10-20 19:10:01	supakeen	(or pad it to a multiple of 8 at least)
2020-10-20 19:10:20	amo_	zamba, nice find
2020-10-20 19:10:27	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2020-10-20 19:10:29	zamba	supakeen: hm.. it looks like it's working, but it's not something i can understand or debug :)
2020-10-20 19:10:40	supakeen	Hehe, that's why I said it wouldn't be pretty :)
2020-10-20 19:10:42	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-20 19:10:45	zamba	hehe
2020-10-20 19:10:51	amo_	and most certainly beats supakeen's zip in terms of performance
2020-10-20 19:10:59	EvilPyro	han-solo, it computes the sum of products between tuples that have the same first tuple value
2020-10-20 19:10:59	zamba	but first i need to create the numpy array
2020-10-20 19:12:11	amo_	i'd implement both as test for correctness against each other
2020-10-20 19:12:11	<--	ellcs (~ellcs@200116b8686e5c0062f677fffebe55f5.dip.versatel-1u1.de) has quit (Ping timeout: 260 seconds)
2020-10-20 19:12:39	f8e4	bjs: i found: https://github.com/vwas2/learning_python/blob/main/circular_buffer.py
2020-10-20 19:12:44	amo_	never hurts to have a reference implementation
2020-10-20 19:12:59	<--	[SLB] (~slabua@unaffiliated/slabua) has quit (Ping timeout: 256 seconds)
2020-10-20 19:13:51	zamba	amo_: yes, but how can i convert the bytes into a bit array?
2020-10-20 19:14:23	han-solo	EvilPyro: Okay, maybe not a zip then
2020-10-20 19:14:51	zamba	hm, maybe bitstring
2020-10-20 19:16:44	-->	[SLB] (~slabua@unaffiliated/slabua) has joined #python
2020-10-20 19:17:42	amber72	Can someone help me with this code...I am not sure what is incorrect. The error is that the program is not comparing ALL the inputs at the end, but only one-by-one, so I should I fix this? https://bpa.st/DV3Q
2020-10-20 19:17:54	supakeen	zamba: Is this more readable: https://bpa.st/raw/WGIQ
2020-10-20 19:17:56	supakeen	It's the 'classic' way ;)
2020-10-20 19:18:11	amo_	hi amber72
2020-10-20 19:18:27	amber72	hi amo_!
2020-10-20 19:18:27	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Quit: Bin weg.)
2020-10-20 19:18:44	<--	jackiiilong (~textual@60.10.23.171) has quit (Ping timeout: 256 seconds)
2020-10-20 19:18:54	--	amo_ is now known as amo
2020-10-20 19:19:37	<--	deeman (~deeman@gateway/tor-sasl/deeman) has quit (Remote host closed the connection)
2020-10-20 19:20:32	-->	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has joined #python
2020-10-20 19:20:34	han-solo	EvilPyro: although, can we see a sample input and output ?
2020-10-20 19:21:38	<--	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has quit (Client Quit)
2020-10-20 19:22:06	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 19:22:06	zamba	supakeen: what is the type of b?
2020-10-20 19:22:26	bjs	amber72: I'd expect you'd have to compare the value to gnum or snum, but you don't
2020-10-20 19:22:29	bjs	amber72: is that right?
2020-10-20 19:22:34	-->	dvx (~dvx@5.181.92.64) has joined #python
2020-10-20 19:22:35	-->	deeman (~deeman@gateway/tor-sasl/deeman) has joined #python
2020-10-20 19:22:41	-->	nabil (~nabil@105.101.95.98) has joined #python
2020-10-20 19:22:53	supakeen	zamba: https://bpa.st/raw/V3SQ
2020-10-20 19:23:28	amber72	bjs: I want to compare all the values the user inputs and store the largest in gnum and the smallest in snum Not sure how though.
2020-10-20 19:23:41	amo	amber72, why don't you put all inputs into a list and use max() and min()?
2020-10-20 19:23:46	EvilPyro	han-solo, [("a", 8), ("b", 90), ("x" 7)] and [("a", 4), ("x" 2)]  outputs 46 because 8*4+7*2 = 46
2020-10-20 19:23:59	amber72	amo: How can I do a list?
2020-10-20 19:24:00	bjs	amber72: well you can just keep track as you go right, if the current is larger than gsum, then the new gsum is that value
2020-10-20 19:24:14	bjs	amber72: but that's not what your code says, it only compares it with the previous value, not the largest so far
2020-10-20 19:24:20	amo	amber72, values = []
2020-10-20 19:24:27	amo	amber72, then values.append(num)
2020-10-20 19:24:29	<--	fweht (uid404746@gateway/web/irccloud.com/x-rjmutrhsltqeceab) has quit (Quit: Connection closed for inactivity)
2020-10-20 19:24:39	zamba	supakeen: hm, no.. i don't think we're there just yet
2020-10-20 19:24:48	EvilPyro	han-solo, btw the solution i provided is linear, i know i could just convert something to a set/dict etc etc but that would be less performant
2020-10-20 19:24:56	-->	nabil_ (~nabil@105.101.73.105) has joined #python
2020-10-20 19:24:59	amo	amber72, then listen to bjs ;)
2020-10-20 19:25:28	amber72	amo: Okay, thank you, but I can't use that because my teacher will not allow us to use anything than stuff we have learned.=D
2020-10-20 19:26:13	bjs	amber72: imagine doing this on paper,  and comparing with what your code says to do
2020-10-20 19:26:19	amo	pff. teachers like that.. *rant*
2020-10-20 19:26:38	bjs	amber72: you would just keep track of the largest and smallest "so far" as you go through the numbers.
2020-10-20 19:26:50	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 260 seconds)
2020-10-20 19:26:51	<--	jaziz (~jaziz@unaffiliated/jaziz) has quit (Ping timeout: 260 seconds)
2020-10-20 19:27:00	<--	amber72 (47722182@pool-71-114-33-130.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2020-10-20 19:27:20	han-solo	EvilPyro: Okay
2020-10-20 19:27:30	-->	amber72 (47722182@pool-71-114-33-130.washdc.fios.verizon.net) has joined #python
2020-10-20 19:28:12	-->	tethroar (~tethroar@95.149.17.213) has joined #python
2020-10-20 19:28:14	<--	nabil (~nabil@105.101.95.98) has quit (Ping timeout: 260 seconds)
2020-10-20 19:28:17	<--	Mrbuck (~Mrbuck@gateway/tor-sasl/mrbuck) has quit (Quit: WeeChat 2.9)
2020-10-20 19:29:49	-->	ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) has joined #python
2020-10-20 19:30:06	-->	dcaro (~dcaro@32.227.106.212.dynamic.jazztel.es) has joined #python
2020-10-20 19:30:44	<--	sandeepk (~sandeepk@117.199.94.77) has quit (Ping timeout: 256 seconds)
2020-10-20 19:31:16	-->	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has joined #python
2020-10-20 19:31:43	han-solo	EvilPyro: there won't be any duplicate as `[('x', 2), ('x', 3)]` ?
2020-10-20 19:32:08	han-solo	https://bpa.st/45ZA # i'd probably try something like that, and maybe benchmark ?
2020-10-20 19:33:15	<--	PaulGit (~PaulGit@znc.paulg.it) has quit (Quit: ZNC 1.8.1 - https://znc.in)
2020-10-20 19:33:20	<--	phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has quit (Ping timeout: 272 seconds)
2020-10-20 19:33:30	-->	CookieM (~tomek@r-45-155-148-237.gpon.bialnet.pl) has joined #python
2020-10-20 19:33:47	<--	velonwine (uid469113@gateway/web/irccloud.com/x-auwizuyjywplhyzj) has quit (Quit: Connection closed for inactivity)
2020-10-20 19:34:23	-->	sdwrage (~textual@38.111.183.30) has joined #python
2020-10-20 19:34:26	<--	dcaro (~dcaro@32.227.106.212.dynamic.jazztel.es) has quit (Client Quit)
2020-10-20 19:34:41	-->	dcaro (~dcaro@32.227.106.212.dynamic.jazztel.es) has joined #python
2020-10-20 19:34:54	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 19:35:10	EvilPyro	han-solo, yep, thats what i said about transforming things to dict/set. The problem with that is that the cost isn't linear (if dicts are hashmaps in python then it might but either case, its doing at least 3 traversals)
2020-10-20 19:35:14	vbgunz	I may have found a bug with os.path.ismount and pathlib.Path().is_mount() ... if you bind / to a nested directory within '/' e.g., /mnt/tmp ... the two former methods return False. but mountpoint and lsblk does indeed show it as a mount point. is there another more reliable way to detect a mount? using subprocess to call mountpoint is pretty slow :(
2020-10-20 19:35:25	<--	dcaro (~dcaro@32.227.106.212.dynamic.jazztel.es) has quit (Client Quit)
2020-10-20 19:36:08	han-solo	EvilPyro: still you could benchmark :) and i'd say the one using `dict` is bit more readable ?
2020-10-20 19:36:12	vbgunz	hmm, this might be it https://bugs.python.org/issue29707 , I'll give it a look
2020-10-20 19:36:18	EvilPyro	han-solo, i was expecting a way to express my code with a generator of some kind, because it feels like it might be possible
2020-10-20 19:36:31	EvilPyro	han-solo, yeah, i agree
2020-10-20 19:36:44	-->	bitmask (~bitmask@2601:84:c702:f500:8035:c710:1b8c:25) has joined #python
2020-10-20 19:36:51	EvilPyro	but I'm restricted to linear cost and one traversal
2020-10-20 19:37:01	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-20 19:37:43	<--	tgamblin (~tgamblin@CPE64777de11593-CM64777de11590.cpe.net.cable.rogers.com) has quit (Quit: Leaving)
2020-10-20 19:38:20	-->	PaulGit (~PaulGit@znc.paulg.it) has joined #python
2020-10-20 19:38:24	<--	fflori (~fflori@nat-wlan-uzh-89-206-64-027.uzh.ch) has quit (Ping timeout: 260 seconds)
2020-10-20 19:38:25	han-solo	well, you are going to sort this list, so there's that ?
2020-10-20 19:38:25	vbgunz	damn no answer and I think it'll stay as is
2020-10-20 19:38:38	han-solo	or are you getting the sorted version ?
2020-10-20 19:38:43	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 19:39:03	EvilPyro	han-solo? both lists are sorted
2020-10-20 19:39:19	EvilPyro	thats why a linear solution is possible, like the one i posted
2020-10-20 19:39:30	han-solo	Okay ':)
2020-10-20 19:39:36	-->	tgamblin (~tgamblin@cpe64777de11593-cm64777de11590.cpe.net.cable.rogers.com) has joined #python
2020-10-20 19:40:00	<--	sazawal (~sazawal@182.77.100.15) has quit (Quit: Leaving)
2020-10-20 19:40:32	-->	sazawal (~sazawal@182.77.100.15) has joined #python
2020-10-20 19:40:40	<--	TGTBTZ (~TGTBTZ@234.92-221-65.customer.lyse.net) has quit (Quit: WeeChat 2.9)
2020-10-20 19:41:03	han-solo	and yes, dict lookups are fast
2020-10-20 19:41:33	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2020-10-20 19:41:35	<--	burakcank (~burakcank@31.141.85.228) has quit (Ping timeout: 265 seconds)
2020-10-20 19:41:42	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 246 seconds)
2020-10-20 19:41:48	EvilPyro	yeah, are they O(1) or O(logn)?
2020-10-20 19:41:57	EvilPyro	average
2020-10-20 19:41:59	<--	semeion (~semeion@unaffiliated/semeion) has quit (Quit: WeeChat 2.9)
2020-10-20 19:42:13	mgedmin	O(1) expected time
2020-10-20 19:42:31	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-20 19:42:34	EvilPyro	either way using them in this solution just adds 2 traversals, so even if the cost is linear its not valid
2020-10-20 19:42:36	EvilPyro	:c
2020-10-20 19:43:43	<--	epony (epony@unaffiliated/epony) has quit (Quit: reconf)
2020-10-20 19:43:52	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 19:43:55	-->	sandeepk (~sandeepk@117.199.90.10) has joined #python
2020-10-20 19:45:30	<--	tgamblin (~tgamblin@cpe64777de11593-cm64777de11590.cpe.net.cable.rogers.com) has quit (Quit: Leaving)
2020-10-20 19:45:54	<--	unlink2 (~unlink2@p200300ebcf3c54001b9e8be0a8d0c9c4.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2020-10-20 19:46:10	-->	jackiiilong (~textual@60.10.194.48) has joined #python
2020-10-20 19:46:37	-->	tgamblin (~tgamblin@cpe64777de11593-cm64777de11590.cpe.net.cable.rogers.com) has joined #python
2020-10-20 19:47:16	-->	RougeR (~RougeR@unaffiliated/rouger) has joined #python
2020-10-20 19:47:24	-->	unlink2 (~unlink2@p200300ebcf3c54001b9e8be0a8d0c9c4.dip0.t-ipconnect.de) has joined #python
2020-10-20 19:47:46	<--	auosun (~auosun@112.0.146.209) has quit (Quit: Ping timeout (120 seconds))
2020-10-20 19:48:13	-->	auosun (~auosun@112.0.146.209) has joined #python
2020-10-20 19:48:26	<--	Guest20 (~textual@103.215.168.1) has quit (Quit: ZZZzzz…)
2020-10-20 19:48:45	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 264 seconds)
2020-10-20 19:49:25	<--	rand233 (~lurk233@58.20.30.109) has quit (Quit: bye bye)
2020-10-20 19:49:50	-->	rand233 (~lurk233@58.20.30.109) has joined #python
2020-10-20 19:51:53	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 19:52:43	<--	palooka-jock (~mike@45.126.44.146) has quit (Quit: WeeChat 1.9.1)
2020-10-20 19:52:58	-->	Deyaa (uid190709@gateway/web/irccloud.com/x-kezrgqqyqbqqmmsj) has joined #python
2020-10-20 19:54:09	<--	[SLB] (~slabua@unaffiliated/slabua) has quit (Read error: Connection reset by peer)
2020-10-20 19:54:41	-->	[SLB] (~slabua@unaffiliated/slabua) has joined #python
2020-10-20 19:54:42	<--	AcTiVaTe (~activate@host-08q2w0u39gommnxnj0.pdv6.tnz1.zeelandnet.nl) has quit (Read error: Connection reset by peer)
2020-10-20 19:55:03	<--	seankndy (~seankndy@2607:f498:4002:1:7514:daf4:4946:6c6c) has quit (Ping timeout: 244 seconds)
2020-10-20 19:56:04	-->	epony (epony@unaffiliated/epony) has joined #python
2020-10-20 19:56:25	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Ping timeout: 246 seconds)
2020-10-20 19:56:25	-->	urodna (~urodna@unaffiliated/urodna) has joined #python
2020-10-20 19:56:49	<--	epony (epony@unaffiliated/epony) has quit (Max SendQ exceeded)
2020-10-20 19:57:52	-->	epony (epony@unaffiliated/epony) has joined #python
2020-10-20 19:58:40	<--	jackiiilong (~textual@60.10.194.48) has quit (Ping timeout: 272 seconds)
2020-10-20 19:58:49	-->	costrouc (~Thunderbi@23-115-65-146.lightspeed.knvltn.sbcglobal.net) has joined #python
2020-10-20 20:00:12	-->	zro (~zro@wikimedia/zro) has joined #python
2020-10-20 20:01:12	<--	stranac (~stranac@195.29.239.126) has quit (Read error: Connection reset by peer)
2020-10-20 20:01:20	RougeR	hello
2020-10-20 20:01:38	RougeR	I am having an issue with multiple stream handlers in my flask application
2020-10-20 20:01:59	RougeR	i have the following code: https://bpa.st/IN2Q
2020-10-20 20:02:21	RougeR	unless i set root_looger.handler = []
2020-10-20 20:02:40	RougeR	my logs are duplicated due to multiple handlers being setup automatically
2020-10-20 20:02:58	<--	edlinde (~edlinde@183.83.146.241) has quit (Quit: edlinde)
2020-10-20 20:03:18	mgedmin	if you're adding handlers on a non-root logger and don't want duplicates, set propagate = False on the same non-root logger
2020-10-20 20:03:21	RougeR	ive read the flask docs and tried to implement the removing_default handler spec
2020-10-20 20:03:21	RougeR	https://flask.palletsprojects.com/en/1.1.x/logging/
2020-10-20 20:03:44	RougeR	mgedmin, ive also tried that, it didnt work. the only thing that worked was setting the handlers to an empty array
2020-10-20 20:03:46	mgedmin	but here it looks like you're setting up the root logger?
2020-10-20 20:03:54	RougeR	correct
2020-10-20 20:03:56	mgedmin	ah, don't call basicConfig()!
2020-10-20 20:04:01	mgedmin	it doesn't do anything useful
2020-10-20 20:04:13	RougeR	oh okay, should i just assign the level and datefmt manually
2020-10-20 20:04:25	mgedmin	if you don't like the defaults, yes
2020-10-20 20:04:25	-->	AcTiVaTe (~activate@host-08q2w0u39gommnxnj0.pdv6.tnz1.zeelandnet.nl) has joined #python
2020-10-20 20:04:26	RougeR	i.e logger.datefmt =
2020-10-20 20:04:34	RougeR	okay, let me try that
2020-10-20 20:04:40	-->	zenware (~zenware@165.22.225.117) has joined #python
2020-10-20 20:04:41	mgedmin	datefmt is an attribute of the formatter
2020-10-20 20:04:51	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 20:05:07	RougeR	right, okay so set it on the json formatter instead
2020-10-20 20:05:19	<--	AcTiVaTe (~activate@host-08q2w0u39gommnxnj0.pdv6.tnz1.zeelandnet.nl) has quit (Remote host closed the connection)
2020-10-20 20:05:21	RougeR	yeah that makes sense
2020-10-20 20:05:36	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 20:05:47	-->	courrier (~courrier@147.210.204.164) has joined #python
2020-10-20 20:05:50	-->	AcTiVaTe (~activate@host-08q2w0u39gommnxnj0.pdv6.tnz1.zeelandnet.nl) has joined #python
2020-10-20 20:06:06	RougeR	okay 2 mins will write n test
2020-10-20 20:06:35	<--	Lord_of_Life (~Lord@46.217.197.229) has quit (Changing host)
2020-10-20 20:06:35	-->	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined #python
2020-10-20 20:07:36	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 20:08:08	doev	In a pandas dataframe I want to delete every column, where the value (in that column) for row 2 is NaN. Any idea?
2020-10-20 20:08:35	doev	First task will be to select the rows ... I think.
2020-10-20 20:08:56	-->	bmurt (~hmm@c-76-99-78-62.hsd1.pa.comcast.net) has joined #python
2020-10-20 20:09:01	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 20:09:22	-->	zeden (~user@unaffiliated/zeden) has joined #python
2020-10-20 20:10:14	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 256 seconds)
2020-10-20 20:10:28	<--	dreamon (~dreamon@unaffiliated/dreamon) has quit (Ping timeout: 260 seconds)
2020-10-20 20:10:47	-->	efie (~efie@78.35.12.162) has joined #python
2020-10-20 20:11:19	Cheaterman	QQ, __del__ basically offers zero guarantees to ever be called, right?
2020-10-20 20:11:27	-->	Amanas (~Amanas@cpe-24-162-249-230.nc.res.rr.com) has joined #python
2020-10-20 20:11:32	Cheaterman	In particular, I'm in a exotic environment (Android) which does its own memory cleanups
2020-10-20 20:11:58	Cheaterman	(context: https://github.com/kivy/kivy/blob/master/kivy/core/camera/camera_android.py#L44 )
2020-10-20 20:12:22	Cheaterman	(if camera isn't .release()'d by an app before being reacquired, it'll crash in .startPreview() )
2020-10-20 20:12:27	-->	Haudegen (~quassel@91.114.49.10) has joined #python
2020-10-20 20:12:31	<--	tethroar (~tethroar@95.149.17.213) has quit (Ping timeout: 256 seconds)
2020-10-20 20:13:03	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-20 20:13:19	mgedmin	yeah
2020-10-20 20:13:38	<--	sdwrage (~textual@38.111.183.30) has quit (Ping timeout: 256 seconds)
2020-10-20 20:14:26	RougeR	eyy
2020-10-20 20:14:31	RougeR	mgedmin, works
2020-10-20 20:14:37	<--	pvdp665564 (~pvdp@180-150-101-81.b49665.bne.static.aussiebb.net) has quit (Remote host closed the connection)
2020-10-20 20:14:51	RougeR	not finished ofc
2020-10-20 20:14:53	RougeR	just mocked up
2020-10-20 20:14:54	RougeR	https://bpa.st/IDMA
2020-10-20 20:15:12	RougeR	thank you so much for helping, got really stuck gettign my head round python logging
2020-10-20 20:15:19	<--	bbenz (~brent@dsl-50-5-35-82.fuse.net) has quit (Quit: leaving)
2020-10-20 20:15:39	han-solo	doev: `df.columns[df.iloc[1].isna()].tolist()` ?
2020-10-20 20:15:49	<--	mcsontos (~mcsontos@ip-78-45-212-253.net.upcbroadband.cz) has quit (Quit: Leaving)
2020-10-20 20:15:56	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Ping timeout: 258 seconds)
2020-10-20 20:16:00	-->	sdwrage (~textual@38.111.183.30) has joined #python
2020-10-20 20:16:34	RougeR	looks like code gold
2020-10-20 20:16:36	RougeR	looks like code golf
2020-10-20 20:16:39	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-20 20:16:57	mgedmin	python logging is ... special
2020-10-20 20:17:17	-->	tethroar (~tethroar@95.149.17.213) has joined #python
2020-10-20 20:17:24	RougeR	mgedmin, mmm so i've read. I've resisted digging into it untill now. I sort of get it now i think
2020-10-20 20:17:40	RougeR	it kind of makes sense from a high level, but the implementation is confusing
2020-10-20 20:17:41	-->	djcaston (~djcaston@pool-71-188-85-134.cmdnnj.east.verizon.net) has joined #python
2020-10-20 20:17:44	mgedmin	it's pretty good, but it takes effort to learn
2020-10-20 20:17:50	f8e4	i strugle to find usecase for a set(); member checks are fast in dict too
2020-10-20 20:17:51	RougeR	yeah, ikwym
2020-10-20 20:18:09	RougeR	i come from the ruby world, and tbh i just remember grabbing a logger and being off on my merry way
2020-10-20 20:18:30	han-solo	f8e4: if it's a [1,2,3,4,3], it doesn't make sense to make a dict, right ?
2020-10-20 20:18:50	RougeR	im very glad i sat down to take the time to fix logging in my app, i was using decorators and manually passing a logger around at points
2020-10-20 20:19:00	RougeR	obviously not the right way
2020-10-20 20:19:07	-->	Macuser (~Macuser@unaffiliated/macuser) has joined #python
2020-10-20 20:19:14	bjs	f8e4: if you have a set of things, but no values, then it's not really a dict
2020-10-20 20:19:26	RougeR	i need task logging and application logging in the same context
2020-10-20 20:19:41	bjs	f8e4: sets come with operations that dict's don't have (union, intersection, difference etc) and are notionally a different type
2020-10-20 20:19:41	RougeR	ive got it setup now though, or will do once i integrate the changes
2020-10-20 20:19:51	bjs	f8e4: (even if underneath, Python's sets and dicts are very similar)
2020-10-20 20:19:59	<--	dan2wik (dan2wik@unaffiliated/dan2wik) has quit (Quit: quit has dan2wik!)
2020-10-20 20:19:59	<--	PacKetSlayer (PacketSlay@hellomouse/member/packetslayer) has quit (Quit: Woosh!)
2020-10-20 20:21:02	<--	jjmojojjmojo (~jj@097-102-202-235.res.spectrum.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-20 20:21:30	f8e4	bjs how are dicts implemented underneath? cmemblob?
2020-10-20 20:22:16	-->	Betal (~Betal@unaffiliated/betal) has joined #python
2020-10-20 20:22:42	-->	bwitt (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has joined #python
2020-10-20 20:22:46	f8e4	the a in DT checks are both equally fast; yes set() got extra methods conveninece; and mem advtanage; but all sets can be maps by adding idnetity: v:v
2020-10-20 20:23:01	<--	efie (~efie@78.35.12.162) has quit (Quit: Leaving)
2020-10-20 20:23:13	-->	dreamon (~dreamon@unaffiliated/dreamon) has joined #python
2020-10-20 20:23:57	doev	han-solo: thank you. Why every, I understand your command but I can't find it by myyelf :| This is the working command: df[df.columns[~df.iloc[1].isna()].tolist()]
2020-10-20 20:24:56	-->	dodocrypto (~dodocrypt@unaffiliated/dodocrypto) has joined #python
2020-10-20 20:25:09	doev	so the trick was, to fetch the row, filter all values that are not nan, and then use a list of the column indices to filter the df.
2020-10-20 20:25:43	f8e4	bjs makes sense thank you
2020-10-20 20:25:44	han-solo	cool
2020-10-20 20:26:21	f8e4	han-solo oh uniqueness yes
2020-10-20 20:26:46	<--	epony (epony@unaffiliated/epony) has quit (Quit: QUIT)
2020-10-20 20:27:02	-->	methyl (~methyl@2601:249:100:49:a093:eb32:a7b5:c784) has joined #python
2020-10-20 20:27:03	<--	EvilPyro (~EvilPyro@unaffiliated/evilpyro) has quit (Quit: Leaving)
2020-10-20 20:27:17	dodocrypto	https://pastebin.com/q7LFzsH9
2020-10-20 20:27:19	infobob	https://bpaste.net/R5LQ (repasted for dodocrypto)
2020-10-20 20:27:19	dodocrypto	hi guys
2020-10-20 20:27:24	han-solo	doev: looks like you don't need a `.tolist` for this
2020-10-20 20:27:28	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 20:27:30	dodocrypto	what is wrong with this code :(
2020-10-20 20:27:45	han-solo	`df[df.columns[~df.iloc[1].isna()]]` # seems to work too
2020-10-20 20:28:16	<--	bmurt (~hmm@c-76-99-78-62.hsd1.pa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-20 20:28:29	<--	helderc (~helderc@S010664777d8ff843.cg.shawcable.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-10-20 20:28:35	--	[IdeaToReal] is now known as [civic]
2020-10-20 20:28:55	-->	guish (~guish@45.176.34.130) has joined #python
2020-10-20 20:29:38	han-solo	dodocrypto: It seems like you are iterating over the value `result` which is a string ?
2020-10-20 20:30:00	han-solo	and you are not using the value `i`
2020-10-20 20:30:10	-->	RangerBob (~brian@pool-173-72-244-228.clppva.fios.verizon.net) has joined #python
2020-10-20 20:30:19	<--	methyl__ (~methyl@2601:249:100:49:a093:eb32:a7b5:c784) has quit (Ping timeout: 260 seconds)
2020-10-20 20:30:20	-->	Blankspace (~abcd@unaffiliated/blankspace) has joined #python
2020-10-20 20:31:11	doev	han-solo: yes, tolist is not needed.
2020-10-20 20:32:03	<--	rand233 (~lurk233@58.20.30.109) has quit (Quit: bye bye)
2020-10-20 20:32:10	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 260 seconds)
2020-10-20 20:32:17	dodocrypto	oh
2020-10-20 20:32:20	dodocrypto	let me check
2020-10-20 20:33:03	-->	LeoTheNarwhal (3efb2a8c@62-251-42-140.ip.xs4all.nl) has joined #python
2020-10-20 20:33:06	LeoTheNarwhal	Hi all
2020-10-20 20:33:41	LeoTheNarwhal	I have a question, i'm trying to get a reverse dns -zone- for a given ipv4 or ipv6 network
2020-10-20 20:34:12	--	[civic] is now known as [Ikea]
2020-10-20 20:34:45	<--	Buntspecht (~user@unaffiliated/siracusa) has quit (Quit: Bye!)
2020-10-20 20:34:52	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 20:34:59	LeoTheNarwhal	lets say i have the following IPv6 prefix: 2a00:1450:4000::/37 then i want to convert it to the reverse zone: 0.4.0.5.4.1.0.0.a.2.ip6.arpa
2020-10-20 20:35:08	LeoTheNarwhal	how would i be able to do this in python?
2020-10-20 20:35:43	LeoTheNarwhal	i can get the full reverse ptr record for a given prefix, in my case that would be 0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.5.4.1.0.0.a.2.ip6.arpa
2020-10-20 20:36:11	dodocrypto	han-solo,
2020-10-20 20:36:16	LeoTheNarwhal	but i want to split that at the /37 boundary so i only get the network part of this reverse zone
2020-10-20 20:37:13	-->	ephysthos (~ephysthos@194.152.145.75) has joined #python
2020-10-20 20:38:00	amo	LeoTheNarwhal, what would be the algorithm for this?
2020-10-20 20:38:02	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-20 20:38:02	-->	Baikonur (baikonur@hilla.kapsi.fi) has joined #python
2020-10-20 20:38:34	LeoTheNarwhal	amo i have no idea, the point to getting the full reverse ptr address is something like
2020-10-20 20:38:58	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 20:39:09	-->	methyl_ (~methyl@2601:249:100:49:59b0:4a18:ced5:efbd) has joined #python
2020-10-20 20:39:22	LeoTheNarwhal	import ipaddress \n ipaddress.IPv6Network("2a00:1450:400e:80e::200e/37", strict=False).reverse_pointer
2020-10-20 20:39:27	SnoopJ	yep
2020-10-20 20:39:37	<--	Neele (uid424041@gateway/web/irccloud.com/x-eddiywgkcyclrgiw) has quit (Quit: Connection closed for inactivity)
2020-10-20 20:40:00	LeoTheNarwhal	that would give me: 0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.5.4.1.0.0.a.2.ip6.arpa, but the last step is cutting this at the /37 boundary
2020-10-20 20:40:06	LeoTheNarwhal	and i have no idea how to do this
2020-10-20 20:40:14	<--	methyl (~methyl@2601:249:100:49:a093:eb32:a7b5:c784) has quit (Ping timeout: 260 seconds)
2020-10-20 20:40:23	-->	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has joined #python
2020-10-20 20:40:28	<--	b3h3m0th (uid26288@gateway/web/irccloud.com/x-jygpbgfovvgvemnv) has quit (Quit: Connection closed for inactivity)
2020-10-20 20:41:03	amo	LeoTheNarwhal, if you split the address with split(".") and list[-12:] parts?
2020-10-20 20:41:32	LeoTheNarwhal	how did you convert /37 to -12?
2020-10-20 20:41:44	amo	i counted the thing you posted above..
2020-10-20 20:42:30	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 240 seconds)
2020-10-20 20:42:36	Wooble	sounds mathemtically sound. :P
2020-10-20 20:42:36	amo	<.<
2020-10-20 20:43:13	LeoTheNarwhal	could do an integer divison like 37/4 = 9.25 that would be 10 excluding the ip6.arpa parts
2020-10-20 20:43:24	<--	a11g0R (~mariusz@public-gprs548195.centertel.pl) has left #python
2020-10-20 20:43:25	-->	Hanii (~Hanii@2a00:23c5:c587:6d00:2904:31ae:313f:b1c2) has joined #python
2020-10-20 20:44:10	LeoTheNarwhal	every part between the dots represent a nibble of 4, so 37 / 4 would give an integer of 10 adding 2 for ip6.arpa
2020-10-20 20:44:38	LeoTheNarwhal	may give that a try
2020-10-20 20:44:38	amo	glad i could be of service ;)
2020-10-20 20:45:04	-->	dantoac (~dantoac@201.186.232.230) has joined #python
2020-10-20 20:45:38	<--	amber72 (47722182@pool-71-114-33-130.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2020-10-20 20:46:16	man_in_shack	".".join(reverse_pointer.rsplit(".", 12)[1:])
2020-10-20 20:47:22	gcbirzan	LeoTheNarwhal: The problem is that network cannot be represented by one DNS zone.
2020-10-20 20:48:04	-->	gandalfdwite (~gandalfdw@49.207.221.0) has joined #python
2020-10-20 20:48:15	man_in_shack	^
2020-10-20 20:48:28	gcbirzan	The network starts at 2a00:1450:4000:: and ends at 2a00:1450:4800:: (well, before, really, but won't be typing all those fs :))
2020-10-20 20:48:46	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2020-10-20 20:48:48	dodocrypto	https://pastebin.com/8Qj4SSdy
2020-10-20 20:48:49	infobob	https://bpaste.net/YBEA (repasted for dodocrypto)
2020-10-20 20:48:51	gcbirzan	So you'll need 8 zones, 2a00:1450:4000:: 2a00:1450:4100:: 2a00:1450:4200:: and so on
2020-10-20 20:48:57	dodocrypto	hi guys how do you run command
2020-10-20 20:49:00	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-20 20:49:03	man_in_shack	but also: is that really how ipv6 works with arpa addresses?
2020-10-20 20:49:05	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 20:49:06	gcbirzan	Yeah.
2020-10-20 20:49:17	man_in_shack	that just seems silly
2020-10-20 20:49:23	dodocrypto	cmd = "chage --mindays 7 $result"
2020-10-20 20:49:29	<--	dvx (~dvx@5.181.92.64) has quit (Remote host closed the connection)
2020-10-20 20:49:31	dodocrypto	will it work han-solo
2020-10-20 20:49:32	dodocrypto	?
2020-10-20 20:50:08	gcbirzan	man_in_shack: In IPv4 we do every 8 bits, here it's every 4. *shrugs*
2020-10-20 20:50:16	man_in_shack	depends what you mean by "work", dodocrypto
2020-10-20 20:50:17	gcbirzan	I mean, this is definitely more flexible.
2020-10-20 20:50:23	Wooble	dodocrypto: you should probably use shutil.split() to split command lines in general, but if you want that $ to mean something, no.
2020-10-20 20:50:44	LeoTheNarwhal	>>> d = ".".join(c[-math.ceil(a.prefixlen / 4)-2:])>>> d'0.4.0.5.4.1.0.0.a.2.ip6.arpa'
2020-10-20 20:50:44	gcbirzan	man_in_shack: and, I guess, it's easier to follow, since you have every hex digit, rather than every two
2020-10-20 20:50:52	Wooble	dodocrypto: err, shlex, not shutil, sorry.
2020-10-20 20:50:52	dodocrypto	what do you mean guys
2020-10-20 20:50:52	LeoTheNarwhal	this works :)
2020-10-20 20:51:00	gcbirzan	LeoTheNarwhal: But that's not correct.
2020-10-20 20:51:07	man_in_shack	why are you even scanning the shadow file?
2020-10-20 20:51:13	dodocrypto	i mean how to run that result in subprocess
2020-10-20 20:51:20	LeoTheNarwhal	gcbirzan why noy
2020-10-20 20:51:23	LeoTheNarwhal	not
2020-10-20 20:51:29	dodocrypto	there is two result there root and another
2020-10-20 20:51:32	Wooble	dodocrypto: if $result is supposed to be a shell variable, passing the string "$result" to some program is unlikely to be what you meant.
2020-10-20 20:51:32	<--	RougeR (~RougeR@unaffiliated/rouger) has quit (Remote host closed the connection)
2020-10-20 20:51:40	dodocrypto	i want it cmd = 'blabla $result'
2020-10-20 20:51:42	gcbirzan	LeoTheNarwhal: See above, that network cannot be represented by one zone
2020-10-20 20:51:53	gcbirzan	LeoTheNarwhal: The netmask must be divisible by 4
2020-10-20 20:51:57	-->	RougeR (~RougeR@unaffiliated/rouger) has joined #python
2020-10-20 20:52:05	dodocrypto	Wooble is python result
2020-10-20 20:52:13	man_in_shack	and why even use a basic grep and cut with Popen("/bin/sh")?
2020-10-20 20:52:17	Wooble	dodocrypto: like you want the bytes $,r,e,s,u,l,t to end up on argv in the child process?
2020-10-20 20:52:18	dodocrypto	result variable i mean
2020-10-20 20:52:23	-->	methyl__ (~methyl@c-73-210-224-53.hsd1.il.comcast.net) has joined #python
2020-10-20 20:52:30	<--	gandalfdwite (~gandalfdw@49.207.221.0) has quit (Ping timeout: 260 seconds)
2020-10-20 20:52:33	dodocrypto	result = root
2020-10-20 20:52:34	-->	epony (epony@unaffiliated/epony) has joined #python
2020-10-20 20:52:40	<--	tethroar (~tethroar@95.149.17.213) has quit (Ping timeout: 256 seconds)
2020-10-20 20:52:56	LeoTheNarwhal	gcbirzan, it doesnt have to be divisible by 4 because i do a math.ceil
2020-10-20 20:53:03	dodocrypto	result = "root" , cmd = "chage --mindays 7 $result"
2020-10-20 20:53:04	--	methyl__ is now known as methyl
2020-10-20 20:53:06	-->	nate30 (cf6b9b24@207.107.155.36) has joined #python
2020-10-20 20:53:12	dodocrypto	will this work ?
2020-10-20 20:53:14	gcbirzan	LeoTheNarwhal: Okay, let's get to the X. What are you trying to achieve?
2020-10-20 20:53:15	-->	Wetmelon (~Wetmelon@066-169-041-035.res.spectrum.com) has joined #python
2020-10-20 20:53:25	dodocrypto	i just know print (result) work
2020-10-20 20:53:28	nate30	Is there an equivilent to concurrent.futures.as_completed in multiprocessing.pool ?
2020-10-20 20:53:33	dodocrypto	but not sure in other command
2020-10-20 20:53:34	dodocrypto	:(
2020-10-20 20:53:36	<--	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has quit (Ping timeout: 265 seconds)
2020-10-20 20:53:52	han-solo	dodocrypto: https://bpaste.net/KYEA
2020-10-20 20:53:53	-->	SaraDt (82e1f4ce@unaffiliated/saradt) has joined #python
2020-10-20 20:53:59	LeoTheNarwhal	gcbirzan i have some reverse dns zones in my dns server, i want to add reverse pointer records to the according zone in my DNS server.
2020-10-20 20:54:17	-->	orpheu (~nbraz@80.249.216.146) has joined #python
2020-10-20 20:54:26	LeoTheNarwhal	So i need the record name part (That would be the host part of the reverse dns pointer) and the zone that would be the network part of the reverse pointer
2020-10-20 20:54:30	han-solo	`cmd = f'chage --mindays 7 {uname}'`
2020-10-20 20:54:45	<--	mirrorbird (~psutcliff@m83-187-163-53.cust.tele2.se) has quit (Ping timeout: 264 seconds)
2020-10-20 20:54:51	dodocrypto	yeah that's the one that i am asking han-solo
2020-10-20 20:54:52	SaraDt	Hi humanoids. I'm starting a thread and saving it in a variable: t = threading.Thread(target = SerialListener, args = [port.device]). Now I exit my program and it still runs, so I want to add an "on exit kill the thread". How do I forcefully kill a thread, when I have a reference to it, from when it was created?
2020-10-20 20:54:56	man_in_shack	han-solo: you're far more patient with me
2020-10-20 20:54:57	dodocrypto	<han-solo> `cmd = f'chage --mindays 7 {uname}'`
2020-10-20 20:54:58	gcbirzan	LeoTheNarwhal: Okay, but your netmask is 37
2020-10-20 20:54:59	dodocrypto	let metry
2020-10-20 20:55:02	man_in_shack	*than me
2020-10-20 20:55:05	 *	man_in_shack = tired
2020-10-20 20:55:13	dodocrypto	wait
2020-10-20 20:55:15	han-solo	man_in_shack: ':)
2020-10-20 20:55:18	gcbirzan	LeoTheNarwhal: And for that netmask there is no ONE zone in which all the hosts lie.
2020-10-20 20:55:51	<--	code-witch (~code-witc@150.129.88.5) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-20 20:55:57	man_in_shack	gcbirzan: hosts shouldn't lie. they should only tell the truth
2020-10-20 20:56:03	LeoTheNarwhal	gcbirzan, okay i can understand that
2020-10-20 20:56:07	grym	SaraDt: send it a signal.  you can't kill threads directly
2020-10-20 20:56:09	LeoTheNarwhal	so how would i fix that
2020-10-20 20:56:20	-->	manuels8 (~manuels@80.211.205.88) has joined #python
2020-10-20 20:56:22	gcbirzan	LeoTheNarwhal: Well, first of all, do you _have_ these zones?
2020-10-20 20:56:27	Wooble	dodocrypto: there's literally no reason for you to put your command in a single string. Just write out ["chage", "--mindays", "7", uname]
2020-10-20 20:56:35	gcbirzan	I mean, 37 is a weird prefix to begin with :)
2020-10-20 20:56:46	LeoTheNarwhal	gcbirzan, nope its a google zone i used for example
2020-10-20 20:56:49	<--	methyl_ (~methyl@2601:249:100:49:59b0:4a18:ced5:efbd) has quit (Ping timeout: 272 seconds)
2020-10-20 20:56:54	LeoTheNarwhal	im working with /48 zones myself :)
2020-10-20 20:56:58	gcbirzan	Well, then that's easy.
2020-10-20 20:57:03	gcbirzan	Since you won't be having this problem there :)
2020-10-20 20:57:06	manuels8	def _resample_dataframe(resample=None:str):        ->     SyntaxError: invalid syntax
2020-10-20 20:57:14	manuels8	why is this a problem in pyhton 3.8
2020-10-20 20:57:26	han-solo	it's `x: type = value`
2020-10-20 20:57:30	<--	efm (~efm@vpn.tummy.com) has quit (Quit: Konversation terminated!)
2020-10-20 20:57:55	gcbirzan	LeoTheNarwhal: I mean, generally, I'd make zones based on the allocation, so you'd need to do this from the beginning, not ad hoc
2020-10-20 20:58:12	man_in_shack	should probably also do resample:Optional[str]=None
2020-10-20 20:58:22	man_in_shack	cos type-checkers are annoying ;)
2020-10-20 20:58:33	manuels8	🤦 thank you han-solo
2020-10-20 20:58:51	gcbirzan	LeoTheNarwhal: Then, you'd just the floor, instead of ceiling, to find out the correct mask/number of letters.
2020-10-20 20:59:06	-->	kabooHD (~Thunderbi@ubo63.univ-brest.fr) has joined #python
2020-10-20 20:59:12	<--	RougeR (~RougeR@unaffiliated/rouger) has quit (Read error: Connection reset by peer)
2020-10-20 20:59:17	gcbirzan	LeoTheNarwhal: So for 37 it'd be 10 (37/4 with ceil), which has a corresponding zone
2020-10-20 20:59:28	-->	RougeR (~RougeR@unaffiliated/rouger) has joined #python
2020-10-20 20:59:31	gcbirzan	eh, you get the point
2020-10-20 20:59:48	man_in_shack	han-solo: i didn't realise startswith ()can take a tuple like that
2020-10-20 21:00:30	<--	djcaston (~djcaston@pool-71-188-85-134.cmdnnj.east.verizon.net) has quit (Quit: djcaston)
2020-10-20 21:00:31	gcbirzan	In other news, the python 3.8 ipaddress has a bug with IPNetwork and reverse_pointer
2020-10-20 21:00:31	man_in_shack	cool stuff
2020-10-20 21:00:33	han-solo	man_in_shack: Yeah, i learned that recently too :)
2020-10-20 21:00:38	<--	karab44 (karab44@unaffiliated/karab44) has quit (Ping timeout: 260 seconds)
2020-10-20 21:00:57	<--	MikeDebian (~none@bl12-167-178.dsl.telepac.pt) has quit (Remote host closed the connection)
2020-10-20 21:01:01	gcbirzan	I'm guessing it's not so much a bug as a lack of feature, since it's not documented for IPNetwork
2020-10-20 21:01:18	-->	MikeDebian (~none@bl12-167-178.dsl.telepac.pt) has joined #python
2020-10-20 21:01:22	man_in_shack	so document it, then report the bug (:
2020-10-20 21:01:36	<--	zeden (~user@unaffiliated/zeden) has quit (Quit: WeeChat 2.9)
2020-10-20 21:01:48	gcbirzan	Searching through python issues is its own hell
2020-10-20 21:02:14	man_in_shack	well then submit a bug report for the issue tracker being difficult to use
2020-10-20 21:02:28	gcbirzan	Just make a new issue and let the developers figure out if it's a duplicate? :)
2020-10-20 21:02:34	-->	bmurt (~hmm@c-76-99-78-62.hsd1.pa.comcast.net) has joined #python
2020-10-20 21:02:38	wallace_mu	anyone has experience on concurrent.futures.as_completed(futures)? do I have to put the whole array(whatever big they are) in to memory(futures array)  before loop this, but I am worried about if the futures array is toooo big, it will cause some issue, what' s the best practice
2020-10-20 21:02:39	-->	zeden (~user@unaffiliated/zeden) has joined #python
2020-10-20 21:03:03	gcbirzan	wallace_mu: You have to put all of them, yes.
2020-10-20 21:03:10	dodocrypto	aww i am confused
2020-10-20 21:03:10	wallace_mu	yikes ok
2020-10-20 21:03:17	<--	orpheu (~nbraz@80.249.216.146) has quit (Ping timeout: 272 seconds)
2020-10-20 21:03:17	gcbirzan	wallace_mu: What problems are you expecting?
2020-10-20 21:03:28	-->	su__deep (~sudeep@182.69.192.239) has joined #python
2020-10-20 21:03:29	wallace_mu	memory overflow maybe?
2020-10-20 21:03:33	-->	BiblicalViolence (~quinn@23.252.223.91) has joined #python
2020-10-20 21:03:37	bjs	wallace_mu: why is that yikes, there's no other way to achieve the as_completed logic than to hand them all of them.  But maybe you don't want as_completed
2020-10-20 21:03:39	<--	Gerula (~Gerula@unaffiliated/gerula) has quit (Quit: Leaving)
2020-10-20 21:03:41	-->	bancroft (~bancroft@bras-base-mtrlpq3015w-grc-01-70-30-166-21.dsl.bell.ca) has joined #python
2020-10-20 21:03:47	dodocrypto	https://pastebin.com/4nz0jvWY
2020-10-20 21:03:47	infobob	https://bpaste.net/K2IQ (repasted for dodocrypto)
2020-10-20 21:03:49	bjs	wallace_mu: maybe you want a Pool of some kind?
2020-10-20 21:03:52	dodocrypto	how to call result
2020-10-20 21:03:53	dodocrypto	:(
2020-10-20 21:03:57	amo	oh man, i must stop experimenting with filters.. i'm producing more modern art than anything useful
2020-10-20 21:04:03	dodocrypto	`cmd = how han solo
2020-10-20 21:04:11	dodocrypto	can you give an example
2020-10-20 21:04:13	bjs	dodocrypto: what do you mean "call result"?
2020-10-20 21:04:17	dodocrypto	hey bjs
2020-10-20 21:04:17	wallace_mu	bjs: would pool behave same as as)complete? i am pretty new to this
2020-10-20 21:04:19	<--	bmurt (~hmm@c-76-99-78-62.hsd1.pa.comcast.net) has quit (Client Quit)
2020-10-20 21:04:29	man_in_shack	oh for funk's sake
2020-10-20 21:04:32	bjs	wallace_mu: no,  but maybe you don't really want as_complete
2020-10-20 21:04:37	dodocrypto	result = stdout.decode('utf-8')
2020-10-20 21:04:37	dodocrypto	     with subprocess.Popen(['/bin/sh' , '-c' , 'chage --mindays 7' , f"{result}"] , stdout = subprocess.PIPE ) as temp:
2020-10-20 21:04:39	<--	Wetmelon (~Wetmelon@066-169-041-035.res.spectrum.com) has quit (Read error: Connection reset by peer)
2020-10-20 21:04:48	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 21:04:50	-->	guardian (~guardian@planet-d.net) has joined #python
2020-10-20 21:04:57	doev	what does the yellow marked "2" mean in this dataframe? https://imgur.com/0CJwhhO
2020-10-20 21:05:02	bjs	dodocrypto: yes I can see the code,  what's your question?
2020-10-20 21:05:07	man_in_shack	you took the lovely code han-solo wrote for you and took the LEAST important thing out of it
2020-10-20 21:05:10	wallace_mu	bjs: my function inside future is network bounded, so i would expect to work on the result as soon as anyone returned
2020-10-20 21:05:20	dodocrypto	how to run variable result
2020-10-20 21:05:39	zahlman	what do you mean "run"?
2020-10-20 21:05:43	man_in_shack	dodocrypto: i'd suggest you learn what a string is
2020-10-20 21:05:43	--	[Ikea] is now known as [reportWha]L
2020-10-20 21:05:45	dodocrypto	i mean i want to put $result
2020-10-20 21:05:56	gcbirzan	wallace_mu: The other issue you might run into is that the service you're connecting to won't allow you to do as many requests as you want to do in total, at the same time.
2020-10-20 21:06:01	zahlman	what do you mean "put"?
2020-10-20 21:06:02	NoImNotNineVolt	result()
2020-10-20 21:06:13	bjs	dodocrypto: put it where?
2020-10-20 21:06:18	man_in_shack	and this should probably be a shell script, not a python script
2020-10-20 21:06:27	dodocrypto	'/bin/sh' , '-c' , 'chage --mindays 7' , f"{result}" in here
2020-10-20 21:06:27	bjs	dodocrypto: you have some code, does this code not do what you want?
2020-10-20 21:06:30	<--	su__deep (~sudeep@182.69.192.239) has left #python
2020-10-20 21:06:32	dodocrypto	'/bin/sh' , '-c' , 'chage --mindays 7' , $result in here
2020-10-20 21:06:37	bjs	dodocrypto: isn't it already there? I see a f"{result}" right there
2020-10-20 21:06:37	dodocrypto	'/bin/sh' , '-c' , 'chage --mindays 7' , $result
2020-10-20 21:06:37	wallace_mu	gcbirzan: true, but it turns out that's not issue for now
2020-10-20 21:06:40	man_in_shack	i mean, if you're going to keep grepping with shell, just stop trying to use python
2020-10-20 21:06:43	dodocrypto	'/bin/sh' , '-c' , 'chage --mindays 7' , '$result'
2020-10-20 21:06:44	bjs	(although isn't that better spelled as just   result ?)
2020-10-20 21:06:45	-->	hussam (uid193284@gateway/web/irccloud.com/x-toxrgpcmeerozrts) has joined #python
2020-10-20 21:06:47	dodocrypto	but it can't
2020-10-20 21:06:52	bjs	dodocrypto: why can't it?
2020-10-20 21:06:58	gcbirzan	wallace_mu: If running out of memory is an issue but this isn't, something is terribly wrong :P
2020-10-20 21:07:00	bjs	dodocrypto: you're being very cryptic. You have code.  What happens when you run it?
2020-10-20 21:07:03	bjs	dodocrypto: you've not even told us ...
2020-10-20 21:07:28	gcbirzan	wallace_mu: I mean, it depends on when you do the work, really, but you could do most of the work outside the list of awaitables.
2020-10-20 21:07:37	man_in_shack	bjs: he wants to know how to add the result to the argument that follows -c
2020-10-20 21:07:47	bjs	wallace_mu: I would definitely use a Pool here.  Do work in chunks at a time and let the Pool handle it
2020-10-20 21:07:47	dodocrypto	https://pastebin.com/7U3EcFhH
2020-10-20 21:07:49	infobob	https://bpaste.net/327A (repasted for dodocrypto)
2020-10-20 21:07:50	dodocrypto	this is the result
2020-10-20 21:07:55	man_in_shack	and he keeps using pastebin.com
2020-10-20 21:07:59	dodocrypto	it seem nothing printed in the in
2020-10-20 21:08:07	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 21:08:14	<--	lagothrix (~lagothrix@unaffiliated/lagothrix) has quit (Ping timeout: 260 seconds)
2020-10-20 21:08:25	-->	code-witch (~code-witc@150.129.88.5) has joined #python
2020-10-20 21:08:27	dodocrypto	'/bin/sh' , '-c' , 'chage --mindays 7' , '$result'
2020-10-20 21:08:29	-->	g0d-byte (~g0d-byte@2001:b07:ae5:76d1:dfcf:6d24:6d09:4032) has joined #python
2020-10-20 21:08:37	<--	BiblicalViolence (~quinn@23.252.223.91) has left #python
2020-10-20 21:08:39	dodocrypto	i mean you know like in print ( result )
2020-10-20 21:08:40	wallace_mu	bjs: i will defnitely google that, thanks
2020-10-20 21:08:53	bjs	wallace_mu: there's a bunch of Pool's in concurrent.futures
2020-10-20 21:08:57	dodocrypto	it print the value
2020-10-20 21:09:00	NoImNotNineVolt	result()
2020-10-20 21:09:01	bjs	wallace_mu: I'm not sure where you're getting your futures from ?
2020-10-20 21:09:05	bjs	NoImNotNineVolt: stop :)
2020-10-20 21:09:07	dodocrypto	result()
2020-10-20 21:09:09	-->	Beanzilla (~Beanzilla@unaffiliated/beanzilla) has joined #python
2020-10-20 21:09:10	dodocrypto	thank you
2020-10-20 21:09:24	wallace_mu	gcbirzan: it's from processing a csv file and for each row i need to do api call
2020-10-20 21:09:32	wallace_mu	sorry it's for bjs: ^
2020-10-20 21:09:34	gcbirzan	wallace_mu: Anyway, for the network case, or if there's some memory allocation happening before the first await that you'd like to... not run all at once, you can take a look at this: https://gist.github.com/gcbirzan/42abcdc9e54abe92b3901cc0cfc4dbab
2020-10-20 21:09:40	man_in_shack	NoImNotNineVolt:  what is this, lisp?
2020-10-20 21:09:58	NoImNotNineVolt	man_in_shack: that's how you run result, isn't it?
2020-10-20 21:10:05	man_in_shack	brackets around everything! especially nothing!
2020-10-20 21:10:05	NoImNotNineVolt	assuming result is callable, of course.
2020-10-20 21:10:08	<--	Deusdeorum (~Deusdeoru@unaffiliated/deusdeorum) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-20 21:10:14	dodocrypto	nah it won't
2020-10-20 21:10:15	bjs	wallace_mu: a Pool will say, start $N threads, and then in each thread grab one of the rows and process it
2020-10-20 21:10:20	Wooble	NoImNotNineVolt: it's a string.
2020-10-20 21:10:29	NoImNotNineVolt	how does one run a string? what does that even mean?
2020-10-20 21:10:34	wallace_mu	gcbirzan: got it,thx, will check soon
2020-10-20 21:10:37	gcbirzan	wallace_mu: We use it for dealing with devices that should support the equivalent of http pipelining/imap command tags, but they break after 100 :)
2020-10-20 21:10:40	man_in_shack	NoImNotNineVolt: english clearly isn't dodocrypto's first language
2020-10-20 21:10:40	amo	NoImNotNineVolt, eval(string)
2020-10-20 21:10:41	bjs	wallace_mu: then you can read out those chunks as they complete (perhaps not row-by-row exactly in the order they complete, but close)
2020-10-20 21:10:47	NoImNotNineVolt	subprocess.Popen(['/bin/sh' , '-c' , f"chage --mindays 7 {result}"] , stdout = subprocess.PIPE )
2020-10-20 21:10:53	Wooble	NoImNotNineVolt: I'd suggest going back and reading the context but tbh you'll just wish you hadn't. :)
2020-10-20 21:11:01	dodocrypto	yeah
2020-10-20 21:11:02	man_in_shack	amo: don't give him ideas
2020-10-20 21:11:02	dodocrypto	:(
2020-10-20 21:11:05	han-solo	https://bpa.st/VCOA
2020-10-20 21:11:08	amo	man_in_shack, sorry :D
2020-10-20 21:11:14	wallace_mu	bjs: so, i can start to working on the result return from thread as soon as which ever is completed?
2020-10-20 21:11:15	dodocrypto	guys how to call variable in subporcess.Popen
2020-10-20 21:11:17	dodocrypto	:(
2020-10-20 21:11:19	wallace_mu	bjs: the order does't matter
2020-10-20 21:11:23	NoImNotNineVolt	dodocrypto: try updating your "with" to what i just provided.
2020-10-20 21:11:24	bjs	dodocrypto: you already do, you just put it in the wrong place it seems
2020-10-20 21:11:37	bjs	dodocrypto: if you want it to be part of the argument after -c then it needs to go in as part of that argument not as a separate one
2020-10-20 21:11:57	<--	dantoac (~dantoac@201.186.232.230) has quit (Ping timeout: 256 seconds)
2020-10-20 21:12:00	Wooble	dodocrypto: you just pass the variable.  result, not "$result", or f"{result}" (which works, but is silly)
2020-10-20 21:12:17	man_in_shack	or you do exactly what han-solo did
2020-10-20 21:12:26	man_in_shack	cos that's some nice coding
2020-10-20 21:12:37	-->	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has joined #python
2020-10-20 21:12:48	NoImNotNineVolt	agreed :P
2020-10-20 21:12:52	man_in_shack	overkill to use python for it when you can just write a shellscript with grep, like you did before :P
2020-10-20 21:13:07	NoImNotNineVolt	also agreed. i'd use sed :P
2020-10-20 21:13:12	-->	Gerula (~Gerula@unaffiliated/gerula) has joined #python
2020-10-20 21:13:19	dodocrypto	sorry guys please bare with me
2020-10-20 21:13:19	dodocrypto	  with subprocess.Popen(['/bin/sh' , '-c' , 'chage --mindays 7 result' ] , stdout = subprocess.PIPE ) as temp:
2020-10-20 21:13:21	NoImNotNineVolt	or awk.
2020-10-20 21:13:27	-->	kish (~oracle@unaffiliated/oracle) has joined #python
2020-10-20 21:13:29	dodocrypto	how to put this result ?
2020-10-20 21:13:33	bjs	dodocrypto: you forgot the f
2020-10-20 21:13:36	man_in_shack	dodocrypto: <han-solo> https://bpa.st/VCOA
2020-10-20 21:13:38	<--	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has quit (Quit: WeeChat 2.9)
2020-10-20 21:13:42	NoImNotNineVolt	the f and the curly braces.
2020-10-20 21:13:42	bjs	dodocrypto: f"chage --mindays 7 {result}"
2020-10-20 21:13:43	-->	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has joined #python
2020-10-20 21:14:00	bjs	dodocrypto: this will make 1 string, that will get passed as the 2nd argument to 'sh'
2020-10-20 21:14:00	man_in_shack	honestly f"" this guy
2020-10-20 21:14:24	bjs	dodocrypto: but we've talked about this many times in the past,  this code is really not very good. You're just writing shell scripts but in a .py file
2020-10-20 21:14:47	bjs	dodocrypto: if you want to use Python, then you should _use Python_ and not just call subprocess on every other line to do menial things.  especially here, where you run a shell for no reason
2020-10-20 21:14:56	bjs	you're doing shell scripting in a .py file when you don't even need the shell!
2020-10-20 21:15:35	-->	bmurt (~hmm@c-76-99-78-62.hsd1.pa.comcast.net) has joined #python
2020-10-20 21:15:37	man_in_shack	there should really never be a reason to do subprocess.Popen(['/bin/sh']), unless you're writing a terminal gui
2020-10-20 21:15:57	-->	medard (~medard@unaffiliated/medard) has joined #python
2020-10-20 21:16:13	f8e4	why l[-1:10:1] last element not l[1] and all following ?
2020-10-20 21:16:24	<--	dethos (~dethos@95.172.177.165) has quit (Ping timeout: 260 seconds)
2020-10-20 21:16:43	f8e4	seems like if first is -, then always index never slicing
2020-10-20 21:16:46	man_in_shack	f8e4: because negative indexes count from the end
2020-10-20 21:17:00	dodocrypto	with subprocess.Popen(['/bin/sh' , '-c' , 'f"chage --mindays 7 {result}"' ] , stdout = subprocess.PIPE ) as temp:
2020-10-20 21:17:04	dodocrypto	like this bjs
2020-10-20 21:17:13	dodocrypto	i am trying to learn guys
2020-10-20 21:17:14	dodocrypto	:(
2020-10-20 21:17:15	-->	helderc (~helderc@S010664777d8ff843.cg.shawcable.net) has joined #python
2020-10-20 21:17:23	f8e4	man_in_shack i see
2020-10-20 21:17:23	dodocrypto	it give me error
2020-10-20 21:17:28	bjs	dodocrypto: what's the error?
2020-10-20 21:17:38	bjs	dodocrypto: oh you put extra quotes around it
2020-10-20 21:17:45	<--	timkofu (~timkofu@105.160.115.157) has quit (Quit: leaving)
2020-10-20 21:17:45	-->	lobaco (~andre@190.114.149.125) has joined #python
2020-10-20 21:17:57	man_in_shack	bjs: i'm starting to think he's doing this deliberately
2020-10-20 21:17:57	bjs	dodocrypto: not 'f"chage ... {result}"'  but f"chage ... {result}"
2020-10-20 21:18:00	dodocrypto	. /bin/sh: fchage --mindays 7 {result}: command not found
2020-10-20 21:18:28	-->	dethos (~dethos@95.172.177.165) has joined #python
2020-10-20 21:18:42	bjs	dodocrypto: if you want to learn Python then I recommend *learning Python*, not using Python to run the shell to run the shell commands you have. It's kind of pointless and Python isn't doing anything here
2020-10-20 21:18:44	-->	corshine (~corshine@unaffiliated/xcorshinex) has joined #python
2020-10-20 21:18:53	man_in_shack	generally not a good idea to write code you don't understand (:
2020-10-20 21:19:07	bjs	dodocrypto: this is just a shell script but bad. Literally! It's shell language being run by the shell,  but you're writing it inside a .py file so takes 2x as many lines and is 10x uglier
2020-10-20 21:19:14	-->	CodePoint (~CodePoint@99-89-92-208.lightspeed.tukrga.sbcglobal.net) has joined #python
2020-10-20 21:19:26	<--	neibo (~neibo@156.red-88-10-6.dynamicip.rima-tde.net) has quit (Quit: leaving)
2020-10-20 21:19:31	<--	easter_egg (~jeffry@unaffiliated/ayr-ton) has quit (Quit: EOF)
2020-10-20 21:19:41	-->	helderc_ (~helderc@S010664777d8ff843.cg.shawcable.net) has joined #python
2020-10-20 21:19:51	-->	court_jester (~jeffry@unaffiliated/ayr-ton) has joined #python
2020-10-20 21:20:00	<--	vuoto (~vuoto@customer-212-237-101-103.ip4.gigabit.dk) has quit (Quit: WeeChat 2.9-dev)
2020-10-20 21:20:01	dodocrypto	bjs is just a quick hack
2020-10-20 21:20:03	dodocrypto	:(
2020-10-20 21:20:15	CodePoint	is it possible to reference an object with type hints within a member function of that same object in python?
2020-10-20 21:20:19	dodocrypto	i can write it but for now i just reverse it
2020-10-20 21:20:19	man_in_shack	clearly not "quick", dodocrypto
2020-10-20 21:20:28	dodocrypto	:(
2020-10-20 21:20:32	grym	CodePoint: yes
2020-10-20 21:20:33	<--	ashwinvis (~avmo@h-96-225.A880.priv.bahnhof.se) has quit (Read error: No route to host)
2020-10-20 21:20:36	dodocrypto	wait if result has 2 value
2020-10-20 21:20:43	dodocrypto	how do we do another one ?
2020-10-20 21:20:49	CodePoint	grym: python wont let me do that directly, do I need to use a NewType alias?
2020-10-20 21:20:49	-->	ashwinvis (~avmo@h-96-225.A880.priv.bahnhof.se) has joined #python
2020-10-20 21:21:09	grym	CodePoint: you can do it that way; i _think_ `from __future__ import annotations` helps, but i don't remember
2020-10-20 21:21:10	bjs	CodePoint: `def f(self, other: ThisClass) -> None` you mean this gives you a NameError and you want to resolve it?
2020-10-20 21:21:23	CodePoint	huh...
2020-10-20 21:21:27	bjs	CodePoint: you can put the name of the class in quotes to solve forward-references
2020-10-20 21:21:30	bjs	if that's what you meant
2020-10-20 21:21:33	CodePoint	I'll see what I can do with that.  Thanks grym
2020-10-20 21:21:37	dodocrypto	bear with me guys
2020-10-20 21:21:41	<--	ashwinvis (~avmo@h-96-225.A880.priv.bahnhof.se) has quit (Client Quit)
2020-10-20 21:21:47	dodocrypto	i am learning alot too from this
2020-10-20 21:21:47	amite	Hi All, quick question, I normally in a cluster use pdsh command to pull required data from a number of servers. I would like to avoid using subprocess and run pdsh command to do that. pdsh essentially does ssh(password less) to get the required data. Any idea what python interface or library I can use to do the same? t
2020-10-20 21:21:49	dodocrypto	:(
2020-10-20 21:22:01	bjs	dodocrypto: I think you should spend some time learning how processes and the shell works before trying to dump shell scripts into subprocess calls inside Python
2020-10-20 21:22:02	dodocrypto	result contain root and dodocrypto
2020-10-20 21:22:24	bjs	dodocrypto: because understanding e.g. argv and how shell expansion work are really important in being able to translate into subprocess calls
2020-10-20 21:22:53	<--	helderc (~helderc@S010664777d8ff843.cg.shawcable.net) has quit (Ping timeout: 272 seconds)
2020-10-20 21:22:55	bjs	dodocrypto: and none of your calls require 'sh' or any shell really!
2020-10-20 21:22:58	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Remote host closed the connection)
2020-10-20 21:22:58	han-solo	dodocrypto: you shouldn't run code you don't understand. The other scary thing is, you are running as root
2020-10-20 21:22:58	--	helderc_ is now known as helderc
2020-10-20 21:23:49	-->	leitz (~leitz@c-174-56-144-2.hsd1.sc.comcast.net) has joined #python
2020-10-20 21:23:52	dodocrypto	i am using centos to test code and debugging with virtualbox han-solo
2020-10-20 21:23:59	dodocrypto	bjs
2020-10-20 21:24:05	dodocrypto	how to loop result
2020-10-20 21:24:05	dodocrypto	?
2020-10-20 21:24:10	han-solo	Okay
2020-10-20 21:24:15	dodocrypto	for line in result:
2020-10-20 21:24:21	dodocrypto	hmm is not
2020-10-20 21:24:27	dodocrypto	it print word by word :(
2020-10-20 21:24:35	bjs	dodocrypto: it does? isn't result a string
2020-10-20 21:24:47	dodocrypto	let me try again
2020-10-20 21:24:52	bjs	dodocrypto: you should read the Python tutorial to see what you can do with strings.
2020-10-20 21:25:05	dodocrypto	i went all of it
2020-10-20 21:25:08	man_in_shack	https://bpa.st/7IZQ  << you can write this whole thing in one line of shell script
2020-10-20 21:25:10	dodocrypto	but my head is dumb
2020-10-20 21:25:18	<--	Amanas (~Amanas@cpe-24-162-249-230.nc.res.rr.com) has quit (Ping timeout: 246 seconds)
2020-10-20 21:25:37	man_in_shack	chage doesn't take multiple user arguments? easy, just add -n1 to the xargs part
2020-10-20 21:25:47	<--	SaraDt (82e1f4ce@unaffiliated/saradt) has quit (Remote host closed the connection)
2020-10-20 21:25:51	dodocrypto	thank you man_in_shack
2020-10-20 21:25:55	amo	kosh, InPhase, SnoopJ - i got it figured out - nonlinear base trend compensation :)
2020-10-20 21:26:08	man_in_shack	https://bpa.st/QQ2Q
2020-10-20 21:26:30	--	python3 is now known as pantsu
2020-10-20 21:27:12	amo	https://www.dropbox.com/s/dj1cnwnzvb3uulb/nonlinear%20base%20adjusted%20threshold.png?dl=0
2020-10-20 21:27:17	-->	djcaston (~djcaston@pool-71-188-85-134.cmdnnj.east.verizon.net) has joined #python
2020-10-20 21:27:19	dodocrypto	for line in result:
2020-10-20 21:27:21	<--	guish (~guish@45.176.34.130) has quit (Quit: Leaving)
2020-10-20 21:27:27	dodocrypto	but let me learn this python man_in_shack
2020-10-20 21:27:32	dodocrypto	how to loop that
2020-10-20 21:27:32	man_in_shack	ew dropbox
2020-10-20 21:27:41	amo	ew yourself :p
2020-10-20 21:27:45	grym	amo: boink boink boink boink.
2020-10-20 21:27:51	dodocrypto	it print the whole word
2020-10-20 21:27:53	amo	grym \o/
2020-10-20 21:27:55	<--	hyper_dave (~hyper_dav@197.156.103.151) has quit (Ping timeout: 265 seconds)
2020-10-20 21:27:59	man_in_shack	yeah, it'll do that
2020-10-20 21:28:01	dodocrypto	not root or dodocrypto
2020-10-20 21:28:30	dodocrypto	result = stdout.decode('utf-8')
2020-10-20 21:28:30	dodocrypto	     for line in result:
2020-10-20 21:28:38	-->	Jerrynicki (~niklas@p200300f5770b090090edd5d2a320bdd4.dip0.t-ipconnect.de) has joined #python
2020-10-20 21:28:56	han-solo	dodocrypto: 'foo\nbar\nbaz' # now how do you split that ?
2020-10-20 21:29:01	CodePoint	grym: importing __future__.annotations worked, thanks
2020-10-20 21:29:15	han-solo	into `['foo', 'bar', 'baz']`
2020-10-20 21:29:22	grym	CodePoint: woooo
2020-10-20 21:29:27	-->	jarthur (~jarthur@70.114.215.149) has joined #python
2020-10-20 21:29:32	-->	miique (~miique@181.46.139.165) has joined #python
2020-10-20 21:29:46	man_in_shack	han-solo: pretty sure he's still using Popen for grep ... :P
2020-10-20 21:29:53	<--	auosun (~auosun@112.0.146.209) has quit (Quit: Ping timeout (120 seconds))
2020-10-20 21:29:53	dodocrypto	cmd = cmd.split()?
2020-10-20 21:30:10	han-solo	man_in_shack: yeah sadly
2020-10-20 21:30:14	<--	Betal (~Betal@unaffiliated/betal) has quit (Read error: Connection reset by peer)
2020-10-20 21:30:19	bjs	dodocrypto: are you guessing? or have you read the documentation to see what split() does, and what arguments it might take etc
2020-10-20 21:30:31	-->	hyper_dave (~hyper_dav@196.191.53.210) has joined #python
2020-10-20 21:30:57	amo	grym, i'm so happy i figured this out :)
2020-10-20 21:31:01	man_in_shack	help(str.split)
2020-10-20 21:31:14	grym	amo: i'm not above victory printouts :)
2020-10-20 21:31:46	<--	sdwrage (~textual@38.111.183.30) has quit (Ping timeout: 256 seconds)
2020-10-20 21:31:48	amo	haha.. i haven't put it all together in a function yet, it's still in rough cells
2020-10-20 21:31:59	grym	gross :)
2020-10-20 21:32:14	amo	one sec..
2020-10-20 21:32:40	man_in_shack	help(amo)
2020-10-20 21:33:17	dodocrypto	i really don't get it
2020-10-20 21:33:18	<--	LeoTheNarwhal (3efb2a8c@62-251-42-140.ip.xs4all.nl) has quit (Remote host closed the connection)
2020-10-20 21:33:19	grym	amo.__doc__ == ''
2020-10-20 21:33:25	dodocrypto	why for line in result
2020-10-20 21:33:37	 *	amo raises an exception
2020-10-20 21:33:39	dodocrypto	print word instead of root and the rest
2020-10-20 21:33:40	<--	philr (~phil@ppp14-2-99-231.adl-apt-pir-bras32.tpg.internode.on.net) has quit (Ping timeout: 240 seconds)
2020-10-20 21:33:43	dodocrypto	:(
2020-10-20 21:34:04	dodocrypto	mind to point me guys
2020-10-20 21:34:06	dodocrypto	the code
2020-10-20 21:34:23	man_in_shack	<dodocrypto> cmd = cmd.split()?    << you're so close already
2020-10-20 21:34:44	han-solo	https://docs.python.org/3/library/stdtypes.html#str.split
2020-10-20 21:34:50	-->	Ergo (~ergo@91.238.59.144) has joined #python
2020-10-20 21:34:50	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 21:34:56	han-solo	they even have examples
2020-10-20 21:35:08	man_in_shack	reading is like 99% of coding
2020-10-20 21:35:10	<--	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has left #python
2020-10-20 21:36:10	-->	sdwrage (~textual@38.111.183.30) has joined #python
2020-10-20 21:36:23	rememberYou	hi guys, do you know what the clean way to use **kwargs with default values? This is what I'm doing right now: http://ix.io/2Bnn/python
2020-10-20 21:36:34	dodocrypto	yeah
2020-10-20 21:36:36	dodocrypto	it split
2020-10-20 21:36:37	dodocrypto	it work
2020-10-20 21:36:39	dodocrypto	thank yu
2020-10-20 21:36:43	dodocrypto	thank you finally
2020-10-20 21:36:53	dodocrypto	result = result.strip()
2020-10-20 21:37:04	dodocrypto	than for line in result:
2020-10-20 21:37:12	man_in_shack	rememberYou: what's not clean about that?
2020-10-20 21:37:13	han-solo	no...
2020-10-20 21:37:21	ssbr_	dodocrypto: you might want to use a pastebin like bpaste.net
2020-10-20 21:37:27	rememberYou	the thing is that I have a class that take can take a lot of hyper-parameters in the `__init__` function because these hyper parameters need to be pass to an API and with my class I would like to define some default values for these hyper parameters
2020-10-20 21:37:54	amo	grym, bpa.st/PNLA
2020-10-20 21:38:02	amo	i hope that's complete
2020-10-20 21:38:14	-->	KarmenJello (~karmenjel@cpc95910-rdng25-2-0-cust515.15-3.cable.virginm.net) has joined #python
2020-10-20 21:38:28	-->	Rapture (~Rapture@2601:1c2:5102:6d00:958d:5412:33c1:4814) has joined #python
2020-10-20 21:38:30	grym	amo: zero functions, no docstring, no tests.
2020-10-20 21:38:34	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 21:38:42	amo	grym, it's *raw* from my experiments!
2020-10-20 21:38:44	grym	amo: back to the desk-prison!
2020-10-20 21:38:47	amo	you're the first to see it!
2020-10-20 21:38:50	rememberYou	man_in_shack: well, it's essentially about the documentation with mypy. I though use something like `__init__(self, var1='foo', var2='bar', **kwargs)` to make things more clear.
2020-10-20 21:38:57	<--	corshine (~corshine@unaffiliated/xcorshinex) has quit (Quit: WeeChat 2.9)
2020-10-20 21:39:09	dodocrypto	finally learn something today
2020-10-20 21:39:09	man_in_shack	rememberYou: if you want, use __init__(self, *, foo="default for foo", bar="default for bar", **kwargs)
2020-10-20 21:39:10	rememberYou	so well, if the first solution it's fine, I'm happy with that; it's just the first time that I'm doing this kind of thing :p
2020-10-20 21:39:11	dodocrypto	thank you guys
2020-10-20 21:39:50	rememberYou	man_in_shack: thanks, does these two versions are both same?
2020-10-20 21:40:10	man_in_shack	rememberYou: the * means "following arguments are keyword only"
2020-10-20 21:40:57	man_in_shack	i.e. you can't do Example("foovalue", "barvalue"), you'd have to do Example(foo="foovalue", bar="barvalue")
2020-10-20 21:41:05	rememberYou	ah nice. What I like with your second version is that probably that mypy will prefer this one to indicate types
2020-10-20 21:42:17	Wooble	rememberYou: the thing you started with was, I believe, a reasonable py2 idiom.
2020-10-20 21:42:29	man_in_shack	^
2020-10-20 21:42:52	man_in_shack	also reasonable for an api translation layer, imho
2020-10-20 21:42:59	Wooble	(tbh if you're going to pass on **kwargs to another thing it might still be reasonable.)
2020-10-20 21:44:35	man_in_shack	sleep time for man_in_shacks
2020-10-20 21:44:46	doev	I read a df from a excel sheet. Most cells in the origin  contains a time hh:mm, but the result sometimes contains a date and a time (whyever). Is tehre a command to convert everything to hh:mm?
2020-10-20 21:45:11	rememberYou	Wooble: I am not sure to get it; the purpose of my class is to take as long as parameters than the API that will be call using. Instead that we want to give some default values that we don't agree with the default ones with the API that we using :p
2020-10-20 21:45:48	<--	al2o3-cr (~gr33n7007@unaffiliated/gr33n7007h) has quit (Quit: WeeChat 2.9)
2020-10-20 21:45:50	amo	grym, https://www.dropbox.com/s/i6509s95e6peyep/modern%20art.png?dl=0 <- courtesy of hilbert :D
2020-10-20 21:46:13	-->	spiri (~spiri@unaffiliated/spiri) has joined #python
2020-10-20 21:46:36	SnoopJ	amo, @accidental__art for sure
2020-10-20 21:46:43	-->	irc_user (uid423822@gateway/web/irccloud.com/x-dfebbsighvffakyp) has joined #python
2020-10-20 21:46:43	amo	that's what you get when you put an analytic signal through a blender and plt.plot(noisy, instantaneous_frenquency)
2020-10-20 21:46:55	amo	xD
2020-10-20 21:47:19	Wooble	rememberYou: are you calling the API like some_api_function(**kwargs)? replacing that with some_api_function(val=val, val2=val2, **kwargs) might get ugly.
2020-10-20 21:47:20	SnoopJ	matplotlib is just so eager to draw lines for you, I wish it wasn't
2020-10-20 21:47:35	SnoopJ	'bo' is way more sane as a first default than 'b-'
2020-10-20 21:47:41	SnoopJ	although I could live with 'bo-'
2020-10-20 21:48:12	amo	i somehow expected something else entirely, but my journey with analytic signals ended right there
2020-10-20 21:48:16	rememberYou	Wooble: yeah unfortunately that what I plan to do right now. I guess that I should stick with the default values from the API then? And maybe indicate to the user that some default values aren't recommended?
2020-10-20 21:49:19	Wooble	rememberYou: I mean uglier than replacing them with .setdefault() like you're doing now. if the defaults are bad and it makes sense for your business logic to replace them, by all means replace them.
2020-10-20 21:50:32	rememberYou	yeah, the API that I use is for a "general case", and we working on a specific case that why. Thanks for sharing your opinion btw, I will do that
2020-10-20 21:51:23	<--	courrier (~courrier@147.210.204.164) has quit (Quit: Leaving)
2020-10-20 21:51:47	<--	markopasha (~cc@88.230.157.61) has quit (Quit: WeeChat 2.9)
2020-10-20 21:52:07	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined #python
2020-10-20 21:52:49	amo	SnoopJ, while i was experimenting with tap sizes for various filters i stumbled over another piece of accidental art: https://www.dropbox.com/s/6p2egx62s181ckm/fancy%20taps.png?dl=0
2020-10-20 21:53:19	<--	SlicerDicer (slicerdice@pdpc/supporter/monthlygold/slicerdicer) has quit (Remote host closed the connection)
2020-10-20 21:53:33	-->	Jonopoly (~Jonopoly@unaffiliated/jonopoly) has joined #python
2020-10-20 21:53:36	amo	it was the first but not the last interesting piece in that series
2020-10-20 21:53:37	-->	SlicerDicer (slicerdice@pdpc/supporter/monthlygold/slicerdicer) has joined #python
2020-10-20 21:54:13	<--	SlicerDicer (slicerdice@pdpc/supporter/monthlygold/slicerdicer) has quit (Remote host closed the connection)
2020-10-20 21:54:16	admin123	why do we sometimes see empty squares, unicode?
2020-10-20 21:54:23	<--	mystic (~mystic@cable-178-148-99-253.dynamic.sbb.rs) has quit (Remote host closed the connection)
2020-10-20 21:54:30	-->	SlicerDicer (slicerdice@pdpc/supporter/monthlygold/slicerdicer) has joined #python
2020-10-20 21:54:40	grym	admin123: you're missing a font
2020-10-20 21:54:42	grym	(probably)
2020-10-20 21:54:45	<--	dethos (~dethos@95.172.177.165) has quit (Ping timeout: 264 seconds)
2020-10-20 21:54:45	<--	spiri (~spiri@unaffiliated/spiri) has quit (Ping timeout: 260 seconds)
2020-10-20 21:55:47	<--	jay-m_ (~jay-m@41.205.30.141) has quit (Ping timeout: 256 seconds)
2020-10-20 21:55:49	-->	Amanas (~Amanas@cpe-24-162-249-230.nc.res.rr.com) has joined #python
2020-10-20 21:55:57	-->	Wr4i7h (~abc@a85-139-110-118.cpe.netcabo.pt) has joined #python
2020-10-20 21:56:12	-->	Lando-SpacePimp (~Lando@unaffiliated/lando-spacepimp) has joined #python
2020-10-20 21:56:13	-->	jay-m_ (~jay-m@41.205.30.141) has joined #python
2020-10-20 21:56:23	<--	causasui (~causasui@wikipedia/causa-sui) has quit (Ping timeout: 240 seconds)
2020-10-20 21:56:27	admin123	grym: so I'm doing pillow stuff, I'm using a trutype font (https://pillow.readthedocs.io/en/stable/reference/ImageFont.html#PIL.ImageFont.truetype) but when the string is multiline (https://pillow.readthedocs.io/en/stable/reference/ImageDraw.html#PIL.ImageDraw.ImageDraw.multiline_textsize) I see empty squares at the end of every line
2020-10-20 21:56:31	-->	legola (~legola@unaffiliated/legola) has joined #python
2020-10-20 21:56:46	-->	dethos (~dethos@95.172.177.165) has joined #python
2020-10-20 21:56:56	grym	admin123: ah! i was expecting high codepoint tofu
2020-10-20 21:57:22	grym	admin123: maybe you're drawing carriage returns..? what OS are you on
2020-10-20 21:57:56	Wooble	CR getting rendered as a square seems like a weird bug if so...
2020-10-20 21:58:26	SnoopJ	amo, funky moiré going on there, the twitter account would definitely RT that
2020-10-20 21:58:49	grym	yeah.  i have to _ask_ to visualize whitespace, usually
2020-10-20 21:58:57	CodePoint	grym: you summoned me?
2020-10-20 21:59:01	CodePoint	;)
2020-10-20 21:59:14	grym	CodePoint: yeah what's all this whitespace nonsense then
2020-10-20 21:59:45	CodePoint	hmm, let me catch up
2020-10-20 21:59:47	Wooble	well OK I don't know if it's a bug per se but it does seem to render \n as a box. :/
2020-10-20 21:59:50	admin123	grym: dev on osx, api is linux. same behavior on both
2020-10-20 22:00:12	grym	admin123: welp, i'm out of easy ideas :P
2020-10-20 22:00:43	CodePoint	Wooble: what is doing the rendering?
2020-10-20 22:00:48	Wooble	CodePoint: pillow
2020-10-20 22:01:13	-->	Betal (~Betal@unaffiliated/betal) has joined #python
2020-10-20 22:01:20	CodePoint	Wooble: in a teminal?
2020-10-20 22:01:26	Deyaa	I'm using exec the function return nothing even if the exec(code) code has typos .. what is the problem?
2020-10-20 22:01:33	<--	Jonopoly (~Jonopoly@unaffiliated/jonopoly) has quit (Quit: WeeChat 2.9)
2020-10-20 22:01:34	amo	SnoopJ, i don't think it's a moire.. it was the result of something like "for t in range(20, 1000, 20): filt = signal.firwin(t, 10/len(a)); filtered = signal.lfilter(filt, 1, noisy), plt.plot(filtered[t:])
2020-10-20 22:01:34	-->	blip- (~blip-@unaffiliated/blip-) has joined #python
2020-10-20 22:01:51	-->	radkos (~radkos@213.91.182.188) has joined #python
2020-10-20 22:01:58	-->	spiri (~spiri@unaffiliated/spiri) has joined #python
2020-10-20 22:02:04	<--	kish (~oracle@unaffiliated/oracle) has quit (Remote host closed the connection)
2020-10-20 22:02:07	SnoopJ	sure
2020-10-20 22:02:07	admin123	I might have to share a cloneable example on git
2020-10-20 22:02:21	-->	rpgio (~blackcat@toroon0954w-lp130-01-142-112-186-215.dsl.bell.ca) has joined #python
2020-10-20 22:02:23	radkos	if I have /tmp/dirone/dirtwo hwo can I cut the string to /tmp/dirone - if the delimiter is '/'
2020-10-20 22:02:35	CodePoint	Wooble: so... you're using an image processing library to... render a font?
2020-10-20 22:02:46	<--	manuels8 (~manuels@80.211.205.88) has left #python ("The Lounge - https://thelounge.chat")
2020-10-20 22:02:49	han-solo	Deyaa: can we see what your code is ?
2020-10-20 22:02:55	han-solo	also exec doesn't return anything, i think
2020-10-20 22:02:58	amo	SnoopJ, do overlapping plots count as moire?
2020-10-20 22:03:04	<--	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has quit (Ping timeout: 260 seconds)
2020-10-20 22:03:05	han-solo	it just executes the code against, dicts given
2020-10-20 22:03:16	-->	kish (~oracle@unaffiliated/oracle) has joined #python
2020-10-20 22:03:28	grym	amo: https://xkcd.com/1814/
2020-10-20 22:03:30	Wooble	CodePoint: well, admin123 is. I assume they're trying to add text to an image which is what I checked with. :)
2020-10-20 22:03:31	<--	medard (~medard@unaffiliated/medard) has quit (Quit: Leaving)
2020-10-20 22:03:46	-->	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined #python
2020-10-20 22:03:50	CodePoint	... huh
2020-10-20 22:04:12	han-solo	radkos: `pathlib.Path('/tmp/dirone/dirtwo').parent`
2020-10-20 22:04:25	Deyaa	han-solo: okay wait a minute  I'm using my phone
2020-10-20 22:04:32	SnoopJ	amo, they can
2020-10-20 22:04:32	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined #python
2020-10-20 22:04:53	CodePoint	the only advice I can give without spending an hour doing my own work on it is this: make sure the font isn't being processed by anything other than your image library.
2020-10-20 22:04:54	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 22:04:56	han-solo	or the `os` equivalent, i guess
2020-10-20 22:05:04	amo	grym, haha :p i know what a moiré pattern is in principle, but overlapping plots could just look like one?
2020-10-20 22:05:09	CodePoint	operating systems and terminals like to mess with it.
2020-10-20 22:05:59	-->	corshine (~corshine@unaffiliated/xcorshinex) has joined #python
2020-10-20 22:06:18	<--	sharksauce (~sharksauc@unaffiliated/sharksauce) has quit (Remote host closed the connection)
2020-10-20 22:06:40	amo	i guess that's more a philosophical question..
2020-10-20 22:06:49	-->	Sembei (~Sembei@unaffiliated/sembei) has joined #python
2020-10-20 22:07:14	CodePoint	amo: Kno Thyself.
2020-10-20 22:07:31	-->	st8less (~st8less@2603:a060:11fd:0:149e:8518:62e1:ca1b) has joined #python
2020-10-20 22:08:25	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 22:08:33	-->	cthulchu (~Cthulchu@69.172.160.196) has joined #python
2020-10-20 22:08:52	SnoopJ	amo, I think you're right though, that this is not actually an example of moiré. It does remind me of thin film effects though, because of the colors.
2020-10-20 22:08:56	-->	yakiza (4fa700a0@ppp079167000160.access.hol.gr) has joined #python
2020-10-20 22:09:22	<--	lz0 (~lz0@c83-253-144-17.bredband.comhem.se) has quit (Ping timeout: 244 seconds)
2020-10-20 22:09:37	admin123	CodePoint: Wooble my guess is the ImageDraw.multiline_text() splits on \n but does not strip them.
2020-10-20 22:09:54	amo	SnoopJ, true, it looks like a bubble film :)
2020-10-20 22:10:07	yakiza	Hello people I am attempting to build my first application with a TDD approach and my first  functionality  is the user creation /user/add on my api since this adds the user to the database dont I have to mock? is this the right way to go for TDD?
2020-10-20 22:11:01	CodePoint	Wooble: honestly, come to think of it, I would strip all whitespace from the string ends... your newline will have new coordinates on the image,.
2020-10-20 22:11:13	-->	sharksauce (~sharksauc@unaffiliated/sharksauce) has joined #python
2020-10-20 22:11:33	<--	Fauve (~Fauve@unaffiliated/fauve) has quit (Ping timeout: 264 seconds)
2020-10-20 22:11:41	CodePoint	coord_of_str1 - (font_height + padding) maybe?
2020-10-20 22:11:43	-->	b3h3m0th (uid26288@gateway/web/irccloud.com/x-dvlplobujlldykjf) has joined #python
2020-10-20 22:11:59	CodePoint	*coord_of_str1[y]
2020-10-20 22:12:00	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Remote host closed the connection)
2020-10-20 22:12:46	Wooble	yakiza: depends. the django testing tools (and pytest-django) for example will let you run the creation in a transaction so you can make assertions about it, and then roll it all back when you're done.
2020-10-20 22:13:24	yakiza	Wooble I looked up online and I foudn the mock library isnt that a better approach?
2020-10-20 22:13:36	<--	zorgo (~zorgo@141.143.213.42) has quit (Quit: Leaving)
2020-10-20 22:14:22	-->	Neele (uid424041@gateway/web/irccloud.com/x-mtfeicytlqujhfou) has joined #python
2020-10-20 22:14:56	-->	edd_lc (~edd_lc@85-250-110-184.bb.netvision.net.il) has joined #python
2020-10-20 22:15:33	amo	yakiza, if you use django, you should use django
2020-10-20 22:15:42	-->	phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has joined #python
2020-10-20 22:15:46	-->	PacKetSlayer (PacketSlay@hellomouse/member/packetslayer) has joined #python
2020-10-20 22:16:10	Wooble	I mean you can mock with django and use a similar transaction approach in non-django, that was only an example.
2020-10-20 22:16:29	<--	vdamewood (~vdamewood@unaffiliated/vdamewood) has quit (Quit: Life beckons.)
2020-10-20 22:16:33	-->	dan2wik (dan2wik@gateway/shell/hellomouse/x-vgkhaaxbxdquszxi) has joined #python
2020-10-20 22:16:41	-->	davetoo (~davetoo_@c-98-35-189-110.hsd1.ca.comcast.net) has joined #python
2020-10-20 22:16:42	InPhase	amo: Looks like a solid result.  Which method did you use for that?
2020-10-20 22:17:25	amo	InPhase, i calculated the baseline with the approach i posted earlier to bpaste (the one grym complained about ;) )
2020-10-20 22:17:36	yakiza	Okay I fget it since I use django why introduce this and not got the django way
2020-10-20 22:18:00	amo	InPhase, the threshold function is one that works only on flat data
2020-10-20 22:18:02	<--	corshine (~corshine@unaffiliated/xcorshinex) has quit (Quit: WeeChat 2.9)
2020-10-20 22:18:28	-->	XHFHX (~XHFHX@2a02:908:5c0:bfe0:30c8:b648:489e:8751) has joined #python
2020-10-20 22:18:38	amo	InPhase, the algorithm for that is basically: sort the data, smooth it, diff, find max of diff - that's the threshold
2020-10-20 22:19:04	-->	roc91 (~roc91@72-48-250-28.dyn.grandenetworks.net) has joined #python
2020-10-20 22:19:22	-->	deekej (~deekej@128.0.185.178) has joined #python
2020-10-20 22:19:22	amo	i invented that myself
2020-10-20 22:19:22	amo	so no promises
2020-10-20 22:19:47	Wooble	yakiza: tbh I'm not sure there's a definitive correct balance between the "mock all of the things" vs "mocking is the worst" factions.
2020-10-20 22:19:57	admin123	CodePoint: https://github.com/python-pillow/Pillow/blob/9a93f6ee45a95c3ff56b3ed5809481ab8e798985/src/PIL/ImageDraw.py#L269 should I be making sure it's a string or binary?
2020-10-20 22:20:05	<--	alx (~alx@119246134143.ctinets.com) has quit (Quit: Leaving)
2020-10-20 22:20:43	XHFHX	Hi there. I currently try to run a command as a subprocess which runs into an interactive state but I am not interested in that. The command will terminate itself when run in a shell and piping it to > /dev/null omits any input. If I try subprocess.call() I am stuck at the interactive part of the process - how can I overcome this? Setting stdin/etc to subproces.DEVNULL as advised on SA does not
2020-10-20 22:20:45	XHFHX	help
2020-10-20 22:20:58	-->	corshine (~corshine@unaffiliated/xcorshinex) has joined #python
2020-10-20 22:21:00	<--	Barbosa_ (~barbosa@177.30.105.117) has quit (Ping timeout: 240 seconds)
2020-10-20 22:21:02	<--	Barones (~Barones@2804:7f3:8982:f364:c896:23d4:b69c:8c30) has quit (Ping timeout: 272 seconds)
2020-10-20 22:21:09	<--	corshine (~corshine@unaffiliated/xcorshinex) has quit (Client Quit)
2020-10-20 22:21:54	amo	why is everyone trying to run shell scripts from python..
2020-10-20 22:22:11	-->	corshine (~corshine@unaffiliated/xcorshinex) has joined #python
2020-10-20 22:22:20	<--	corshine (~corshine@unaffiliated/xcorshinex) has quit (Client Quit)
2020-10-20 22:22:20	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-10-20 22:22:22	XHFHX	amo: need an interpreter of another language ;)
2020-10-20 22:23:31	<--	Sembei (~Sembei@unaffiliated/sembei) has quit (Ping timeout: 260 seconds)
2020-10-20 22:23:46	InPhase	amo: Well, it at least worked nicely in that dataset.  Now I guess you need to stress-test it on a variety of real data.  :)
2020-10-20 22:23:53	-->	corshine (~corshine@unaffiliated/xcorshinex) has joined #python
2020-10-20 22:23:57	<--	RougeR (~RougeR@unaffiliated/rouger) has quit (Ping timeout: 258 seconds)
2020-10-20 22:23:58	-->	RougeRR (~RougeR@unaffiliated/rouger) has joined #python
2020-10-20 22:24:24	doev	How can I apply (and store the result) into an column by using the column number?
2020-10-20 22:24:26	amo	InPhase, indeed. i'm hoping for some really nice worst cases this week to see if everything holds together
2020-10-20 22:25:35	InPhase	amo: The problem of baseline removal is easiest when your baseline has a clean frequency space separation like that.  You could also simulate some more random low frequency drifts with less consistent properties and test on that.
2020-10-20 22:25:59	<--	corshine (~corshine@unaffiliated/xcorshinex) has quit (Client Quit)
2020-10-20 22:26:05	-->	Sembei (~Sembei@unaffiliated/sembei) has joined #python
2020-10-20 22:26:22	amo	InPhase, good idea, any one-liner handy for random frequency changes?
2020-10-20 22:26:26	-->	Barbosa (~barbosa@177.30.105.117) has joined #python
2020-10-20 22:26:51	amo	maybe rfft on some random array?
2020-10-20 22:26:57	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-20 22:27:42	InPhase	One second.  :)
2020-10-20 22:28:52	<--	roc91 (~roc91@72-48-250-28.dyn.grandenetworks.net) has quit (Quit: Leaving)
2020-10-20 22:28:54	-->	babygnu (~robert@gateway/tor-sasl/babygnu) has joined #python
2020-10-20 22:29:07	-->	Anticom (~Anticom@87.190.49.75) has joined #python
2020-10-20 22:30:13	-->	tethroar (~tethroar@95.149.17.213) has joined #python
2020-10-20 22:30:13	-->	roc91 (~roc91@72-48-250-28.dyn.grandenetworks.net) has joined #python
2020-10-20 22:30:27	InPhase	amo: Here.  Add your signal to this and try again:  https://bpa.st/4PKQ
2020-10-20 22:30:51	-->	Saukk (~Saukk@2001:998:f9:2914:1c59:9bb5:b94c:4) has joined #python
2020-10-20 22:31:11	InPhase	amo: You have your low frequency drifts, plus noise going all the way to higher frequencies.
2020-10-20 22:31:28	guardian	hello, is it possible to derive from string.Template so as to recognize {foo} as an identifier? I tried setting delimiter to the empty string and defining braceidpattern without success
2020-10-20 22:31:35	amo	InPhase, thanks, i'll check it out :)
2020-10-20 22:31:41	-->	yohnnyjoe (~yohnnyjoe@c-73-163-139-169.hsd1.dc.comcast.net) has joined #python
2020-10-20 22:32:14	guardian	nevermind setting the delimiter to '' works :)
2020-10-20 22:32:15	InPhase	amo: This is what backgrounds in EEG signals look like, which is why I have it on hand.  It's also the functional form for typical electronic noise.
2020-10-20 22:33:33	<--	kabooHD (~Thunderbi@ubo63.univ-brest.fr) has quit (Ping timeout: 258 seconds)
2020-10-20 22:33:42	-->	TikityTik (~TikityTik@unaffiliated/tikitytik) has joined #python
2020-10-20 22:34:07	InPhase	amo: The low frequencies are the stronger, but there is mathematically no well defined cut-off in the power spectrum.  This is therefore probably a worst-case scenario for you.  But if you have well defined higher frequency behavior on top of it, there's still a human-visible threshold you can pick.
2020-10-20 22:34:08	<--	XsiSec (~xsisec@h-155-4-128-9.NA.cust.bahnhof.se) has quit (Remote host closed the connection)
2020-10-20 22:34:16	-->	panikovsky (~panikovsk@87.117.60.168) has joined #python
2020-10-20 22:34:53	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 22:35:05	amo	InPhase, hrhr.. very cool :) i think i need to rework my code into a function first for further experiments
2020-10-20 22:35:41	<--	d3sync (~d3sync@unaffiliated/d3sync) has quit (Read error: Connection reset by peer)
2020-10-20 22:36:01	InPhase	amo: Other forms of noise will be easier to deal with, of course.  But you did the easiest, now try what is probably the hardest, and if that fails to work nice, your suitability is somewhere in the middle I guess.
2020-10-20 22:37:07	-->	kabooHD (~Thunderbi@ubo63.univ-brest.fr) has joined #python
2020-10-20 22:38:09	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 22:38:13	-->	rippa (~rippa@ppp-vpdn-37.1.85.157.yarnet.ru) has joined #python
2020-10-20 22:38:47	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-20 22:39:19	<--	Blankspace (~abcd@unaffiliated/blankspace) has quit (Read error: Connection reset by peer)
2020-10-20 22:40:54	<--	hyper_dave (~hyper_dav@196.191.53.210) has quit (Ping timeout: 256 seconds)
2020-10-20 22:41:11	XHFHX	Is there a way to check if a subprocess is in an interactive state?
2020-10-20 22:41:50	-->	d3sync (~d3sync@unaffiliated/d3sync) has joined #python
2020-10-20 22:43:03	-->	hyper_dave (~hyper_dav@196.191.53.247) has joined #python
2020-10-20 22:43:17	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 260 seconds)
2020-10-20 22:46:07	SnoopJ	XHFHX, what does "interactive state" mean in this case? You can poll() it to see if it's still running, and then send stuff into its stdin.
2020-10-20 22:46:29	<--	lobaco (~andre@190.114.149.125) has quit (Ping timeout: 272 seconds)
2020-10-20 22:46:36	<--	yakiza (4fa700a0@ppp079167000160.access.hol.gr) has quit (Remote host closed the connection)
2020-10-20 22:46:57	<--	kabooHD (~Thunderbi@ubo63.univ-brest.fr) has quit (Ping timeout: 258 seconds)
2020-10-20 22:47:18	XHFHX	Snoop3: I have process which terminates by itself when run in a shell but when I run it in subprocess/popen it will not exit by itself and I don't know why this happens
2020-10-20 22:47:52	bjs	XHFHX: are you sure you're passing exactly the same arguments etc ?
2020-10-20 22:48:13	edd_lc	XHFHX: maybe it's checking for tty?
2020-10-20 22:48:15	-->	bolovanos__ (~bolovanos@185.8.239.54) has joined #python
2020-10-20 22:48:15	CodePoint	o/ thanks grym.  I'm off for now.
2020-10-20 22:48:18	<--	CodePoint (~CodePoint@99-89-92-208.lightspeed.tukrga.sbcglobal.net) has quit (Quit: WeeChat 2.8)
2020-10-20 22:48:22	-->	cthulchu_ (~cthulchu@69.172.160.196) has joined #python
2020-10-20 22:48:39	-->	Naan` (~naan@unaffiliated/naan) has joined #python
2020-10-20 22:49:06	<--	yohnnyjoe (~yohnnyjoe@c-73-163-139-169.hsd1.dc.comcast.net) has quit (Quit: yohnnyjoe)
2020-10-20 22:49:17	XHFHX	bjs: yeah, i see the same I/O except that the command does not terminate by itself
2020-10-20 22:49:21	<--	Naan (~naan@unaffiliated/naan) has quit (Ping timeout: 240 seconds)
2020-10-20 22:49:34	XHFHX	edd_lc: how can I check this?
2020-10-20 22:49:45	-->	yohnnyjoe (~yohnnyjoe@c-73-163-139-169.hsd1.dc.comcast.net) has joined #python
2020-10-20 22:49:57	-->	hnOsmium0001 (uid453710@gateway/web/irccloud.com/x-uufhwubdezwfmvks) has joined #python
2020-10-20 22:50:04	-->	fstd_ (~fstd@unaffiliated/fisted) has joined #python
2020-10-20 22:50:17	-->	mandeep (uid394387@gateway/web/irccloud.com/x-bpgxjhbpixuxuepf) has joined #python
2020-10-20 22:50:34	bjs	XHFHX: the program is allowed to check if stdout/stdin refer to terminals or files or whatever, and do something different accordingly
2020-10-20 22:50:37	-->	mahdiiiix (~mahdi@89.196.236.150) has joined #python
2020-10-20 22:50:44	<--	mahdiiiix (~mahdi@89.196.236.150) has quit (Remote host closed the connection)
2020-10-20 22:50:47	wallace_mu	what's the most popular python unittest library for now? been years not working in python project, trying to catch up
2020-10-20 22:50:53	bjs	XHFHX: but your behaviour is backwards from what programs would usuall do in that case
2020-10-20 22:50:53	bjs	wallace_mu: pytest
2020-10-20 22:50:54	grym	wallace_mu: pytest
2020-10-20 22:51:00	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-10-20 22:51:02	wallace_mu	Thx!
2020-10-20 22:51:14	grym	wallace_mu: it'll run unittest tests too.  nose* is suuuuper dead
2020-10-20 22:51:31	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Remote host closed the connection)
2020-10-20 22:51:32	edd_lc	XHFHX: best thing is something like docs or output. how a python code check for this, i don't know.
2020-10-20 22:51:43	-->	RjAHDtUk (~zKcjTgTe@gateway/tor-sasl/zkcjtgte) has joined #python
2020-10-20 22:51:53	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2020-10-20 22:51:59	<--	lavendereyes (~lavendere@gateway/tor-sasl/lavendereyes) has quit (Ping timeout: 240 seconds)
2020-10-20 22:52:11	<--	bolovanos_ (~bolovanos@185.8.239.54) has quit (Ping timeout: 272 seconds)
2020-10-20 22:52:22	-->	lavendereyes (~lavendere@gateway/tor-sasl/lavendereyes) has joined #python
2020-10-20 22:52:30	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-20 22:53:05	XHFHX	edd_lc: docs are not really present for the executable - how could i check/debug the output except for ?$
2020-10-20 22:53:08	SnoopJ	pytest +1
2020-10-20 22:53:32	-->	kabooHD (~Thunderbi@ubo63.univ-brest.fr) has joined #python
2020-10-20 22:54:00	<--	QRealm (~qrealm@unaffiliated/qrealm) has quit (Ping timeout: 272 seconds)
2020-10-20 22:54:12	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 264 seconds)
2020-10-20 22:54:16	--	fstd_ is now known as fstd
2020-10-20 22:55:08	-->	LondonAppDev (Thunderbir@gateway/vpn/privateinternetaccess/londonappdev) has joined #python
2020-10-20 22:55:33	<--	dreamon (~dreamon@unaffiliated/dreamon) has quit (Ping timeout: 260 seconds)
2020-10-20 22:55:39	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-20 22:56:18	<--	KarmenJello (~karmenjel@cpc95910-rdng25-2-0-cust515.15-3.cable.virginm.net) has quit (Remote host closed the connection)
2020-10-20 22:56:24	-->	no_gravity (~no_gravit@unaffiliated/no-gravity/x-0632109) has joined #python
2020-10-20 22:56:35	-->	orbyt_ (~orbyt@172.92.4.78) has joined #python
2020-10-20 22:56:48	no_gravity	How can I get join to work when not all values are strings?
2020-10-20 22:56:50	<--	jay-m_ (~jay-m@41.205.30.141) has quit (Ping timeout: 256 seconds)
2020-10-20 22:57:16	tos9	no_gravity: what do you want it to do to the non-strings?
2020-10-20 22:57:31	no_gravity	tos9: Convert them to strings
2020-10-20 22:57:39	<--	Haudegen (~quassel@91.114.49.10) has quit (Quit: Bin weg.)
2020-10-20 22:57:42	no_gravity	tos9: Like PHP or JS would do.
2020-10-20 22:57:46	LondonAppDev	Hola... For the `mode` parameter in the `open()` function, does it matter in which the mode characters are passed matter? For example, is `+w` the same as `w+`? (after testing, both work equally). If the order doens't matter, is there a suggested order?
2020-10-20 22:57:48	tos9	no_gravity: good, then do that :) -- separator.join(str(thing) for thing in things)
2020-10-20 22:58:04	tos9	no_gravity: Python is a bit more strongly typed than those.
2020-10-20 22:58:14	bjs	and likes it be a little more explicit
2020-10-20 22:58:18	no_gravity	I see. Thats ugly.
2020-10-20 22:58:26	tos9	no_gravity: It's generally a good thing.
2020-10-20 22:58:34	tos9	no_gravity: this is a common source of bugs in those languages.
2020-10-20 22:58:41	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Remote host closed the connection)
2020-10-20 22:58:45	-->	PoaB (~Thunderbi@134.3.91.178) has joined #python
2020-10-20 22:58:47	-->	tiwula (~lane@70.89.246.241-Busname-UT.hfc.comcastbusiness.net) has joined #python
2020-10-20 22:58:50	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-20 22:59:01	no_gravity	I beg to differ.
2020-10-20 22:59:17	-->	amber72 (47722182@pool-71-114-33-130.washdc.fios.verizon.net) has joined #python
2020-10-20 22:59:24	Yhg1s	LondonAppDev: order doesn't matter. The order is usually r/w/a first, '+' second, 'b' or 't' or 'U' last.
2020-10-20 22:59:24	tos9	Fair enough. Well, regardless, this is what Python does.
2020-10-20 22:59:56	bjs	no_gravity: are you arguing that this *doesnt* cause bugs in those languages?
2020-10-20 23:00:02	no_gravity	Will write a function then ... how could it be called realJoin()? niceJoin()?
2020-10-20 23:00:10	<--	kabooHD (~Thunderbi@ubo63.univ-brest.fr) has quit (Ping timeout: 256 seconds)
2020-10-20 23:00:12	-->	gelignite (~gelignite@55d45b0f.access.ecotel.net) has joined #python
2020-10-20 23:00:14	tos9	no_gravity: Call it what you'd like.
2020-10-20 23:00:27	no_gravity	bjs: I very rarely see bugs that would have been caught by stricter types.
2020-10-20 23:00:30	-->	cd (~cd@unaffiliated/cd) has joined #python
2020-10-20 23:00:32	bjs	no_gravity: really?
2020-10-20 23:00:36	amber72	I still have no idea how to fix this because it is one error after another. Can someone help me fix it. https://bpa.st/WEGQ
2020-10-20 23:00:42	bjs	no_gravity: `def strjoin(sep, thing): return sep.join(map(str, thing))`
2020-10-20 23:00:51	<--	rpgio (~blackcat@toroon0954w-lp130-01-142-112-186-215.dsl.bell.ca) has quit (Ping timeout: 246 seconds)
2020-10-20 23:00:51	<--	PoaB (~Thunderbi@134.3.91.178) has quit (Client Quit)
2020-10-20 23:01:00	snatcher	what's the fastest/correct way to check if list contains exact dict object? id(dd) in (id(d) for d in ds) ?
2020-10-20 23:01:06	bjs	no_gravity: it's pretty common to bump into things that could've been caught with stricter types, in all languages
2020-10-20 23:01:18	bjs	snatcher: `if any(d is dd for d in ds)`
2020-10-20 23:01:24	XHFHX	no_gravity: i beg to differ - the more a project grows the more strict typing is a win
2020-10-20 23:01:42	-->	lobaco (~andre@190.114.149.125) has joined #python
2020-10-20 23:02:31	no_gravity	XHFHX: I keep a list of bugs that we encounter. Those make pretty much 0%.
2020-10-20 23:02:32	-->	StormBolt (3e4ecd54@unaffiliated/mn-) has joined #python
2020-10-20 23:03:19	StormBolt	I have an np.array([1,4,5]). I need to check if 4 exists in that array, and if true, what index value it has. How can I do this?
2020-10-20 23:03:27	bjs	no_gravity: neat,  but that probably puts you in the minority.
2020-10-20 23:03:33	edd_lc	+1 for types in larger teams
2020-10-20 23:03:49	StormBolt	I tried with np.where(arr == 4)  but it didnt seem to work
2020-10-20 23:04:21	user3456	try using one '=' sign
2020-10-20 23:04:22	SnoopJ	StormBolt, np.argwhere(arr == 4) will tell you the indices
2020-10-20 23:04:38	SnoopJ	if you wanted to test if there is such a value, you could do (arr == 4).any()
2020-10-20 23:04:46	no_gravity	bjs: I don't know. When I watch other developers and teams, I usually see the same. The time is spent of bugs that arise from the interplay of different parts of the system. Like "Oh! When we have more cars then drivers in this module than *that* module will send an API request over there but because that waits for enough drivers..."
2020-10-20 23:04:50	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 23:04:57	SnoopJ	but just going straight for argwhere() works too, because it will return an empty array if there are none.
2020-10-20 23:04:59	-->	adder` (~adder@unaffiliated/adder) has joined #python
2020-10-20 23:05:15	XHFHX	no_gravity: you should try it out at least - for me the autocomplete alone is worth doing static typing ;)
2020-10-20 23:05:18	<--	drymer (~drymer@unaffiliated/drymer) has quit (Read error: Connection reset by peer)
2020-10-20 23:05:33	edd_lc	XHFHX: don't know. at low level process management, relying on exit codes is good.
2020-10-20 23:05:36	no_gravity	bjs: Time spent on bugs like "Oh, x should have been a string" is pretty much zero.
2020-10-20 23:06:10	-->	drymer (~drymer@unaffiliated/drymer) has joined #python
2020-10-20 23:06:31	StormBolt	SnoopJ what does it return if value 4 doesnt exist
2020-10-20 23:06:33	StormBolt	?
2020-10-20 23:06:38	<--	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has quit (Ping timeout: 260 seconds)
2020-10-20 23:06:46	SnoopJ	StormBolt, an empty array, as I said
2020-10-20 23:07:07	StormBolt	ah i didnt see your second line, thanks
2020-10-20 23:07:30	-->	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has joined #python
2020-10-20 23:07:40	<--	venmx (~bertie@82-132-235-205.dab.02.net) has quit (Read error: Connection reset by peer)
2020-10-20 23:07:48	amber72	I still have no idea how to fix this because it is one error after another. Can someone help me fix it. https://bpa.st/WEGQ
2020-10-20 23:08:36	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 23:08:39	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Ping timeout: 272 seconds)
2020-10-20 23:08:47	bjs	amber72: you didn't say what was wrong with it.
2020-10-20 23:09:10	-->	Naan (~naan@unaffiliated/naan) has joined #python
2020-10-20 23:09:17	XHFHX	edd_lc: this line is causing problem, jumps into an interactive state here https://github.com/python/cpython/blob/6d883fbe14751b58d9ed2fd708322613d8931035/Lib/subprocess.py#L1890 any ideas how to "jump" over the interactive state here?
2020-10-20 23:09:29	bjs	no_gravity: fair enough, but like I said this probably puts you in a minority.  A huge amount of dumb errors make it into production, and cause all sorts of issues :)
2020-10-20 23:09:48	<--	nate30 (cf6b9b24@207.107.155.36) has quit (Remote host closed the connection)
2020-10-20 23:09:59	no_gravity	bjs: Interesting that we have such different experiences.
2020-10-20 23:10:12	bjs	e.g. languages without simple array-bounds checks (something even relatively dumb languages like Python can manage) cause a not insignificant chunk of the CVE space
2020-10-20 23:10:15	amber72	bjs: To start, it is making me type -99 twice to stop the program. It also is not giving the correct small and largest numbers.
2020-10-20 23:10:22	<--	Naan` (~naan@unaffiliated/naan) has quit (Ping timeout: 256 seconds)
2020-10-20 23:10:41	bjs	amber72: can you show me you running it and typing the numbers and the output?  like pastebin the terminal output
2020-10-20 23:10:45	no_gravity	bjs: How can a type error even make it into production? What would be an example of such an error that slips through all tests and then BOOMS in production?
2020-10-20 23:10:46	bjs	amber72: because I can't see what you see
2020-10-20 23:10:49	Wooble	probably bjs's experience is unique or typescript would be popular. </sarcasm>
2020-10-20 23:11:00	<--	aw1 (~aw1@unaffiliated/aw1) has quit (Ping timeout: 256 seconds)
2020-10-20 23:11:21	bjs	no_gravity: heh you should ask people who use Excel, or JavaScript or whatever whether they understand all the string conversions it does
2020-10-20 23:12:14	-->	aw1 (~aw1@unaffiliated/aw1) has joined #python
2020-10-20 23:12:19	-->	EvilPyro (~EvilPyro@unaffiliated/evilpyro) has joined #python
2020-10-20 23:12:23	bjs	no_gravity: or worse, is when it *doesn't* explode, like those array-out-of-bounds ones ;)
2020-10-20 23:12:58	<--	Tanvir (~tanvir@wikimedia/wikitanvir) has quit (Ping timeout: 272 seconds)
2020-10-20 23:13:12	EvilPyro	Matplotlib question, I'm plotting some values with plt.bar([i for i in range(0, len(x_data))], x_data), how can i set the bars to be side by side? I mean no spacing between bars
2020-10-20 23:13:16	bjs	clearly biologists don't understand the string conversions excel do heh
2020-10-20 23:13:39	XHFHX	no_gravity: e.g. passing a string of a file path instead of an file like object to a method is an error that could happen in production w/o type checking
2020-10-20 23:13:54	<--	dodocrypto (~dodocrypt@unaffiliated/dodocrypto) has quit (Read error: Connection reset by peer)
2020-10-20 23:14:18	no_gravity	XHFHX: And how would it pass the tests?
2020-10-20 23:15:28	<--	rifoerster (~rifo@p50995cae.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2020-10-20 23:15:58	XHFHX	no_gravity: even w/ 100% test coverage you do not check every possible branch so its still possible. trust me, I have 100% coverage on my production code and it happend to me
2020-10-20 23:16:35	SnoopJ	EvilPyro, you probably need to set the `width` keyword argument appropriately. This example from the gallery is probably the closest thing: https://matplotlib.org/3.1.3/gallery/lines_bars_and_markers/barchart.html#sphx-glr-gallery-lines-bars-and-markers-barchart-py
2020-10-20 23:17:04	no_gravity	XHFHX: 100% coverage? Even a first manual try will fail if you pass an object instead of a string.
2020-10-20 23:17:05	<--	amber72 (47722182@pool-71-114-33-130.washdc.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2020-10-20 23:17:26	XHFHX	no_gravity: actually b/c of this endless possibilities of branches I recently got more into Haskell which forces a more stateless approach in programming
2020-10-20 23:17:35	-->	amber72 (47722182@pool-71-114-33-130.washdc.fios.verizon.net) has joined #python
2020-10-20 23:18:10	amber72	bjs: Here it is... https://bpa.st/WOBQ
2020-10-20 23:18:19	-->	linuxconformer (5410eb84@84.16.235.132) has joined #python
2020-10-20 23:18:23	XHFHX	no_gravity: not if your method gets called at frame #20 b/c of some weird state that you haven't though of
2020-10-20 23:18:31	no_gravity	I think I found the perfect name for the join function: def join(seperator,data): ...
2020-10-20 23:18:55	linuxconformer	hey yall, im getting "ERROR: ERROR: Could not find a version that matches vine==1.3.0, ==5.0.0" when i try to do anything with pipenv
2020-10-20 23:19:01	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2020-10-20 23:19:01	linuxconformer	any idea what's going on?
2020-10-20 23:19:15	Wooble	no_gravity: not implode()?
2020-10-20 23:19:25	no_gravity	Wooble: join is shorter.
2020-10-20 23:19:33	<--	jw4 (~jw4@unaffiliated/jw4) has quit (Quit: tot siens)
2020-10-20 23:19:49	bjs	amber72: oh it errors?
2020-10-20 23:20:06	<--	tethroar (~tethroar@95.149.17.213) has quit (Ping timeout: 246 seconds)
2020-10-20 23:20:06	no_gravity	The function in its whole beauty: def join(seperator, data): return seperator.join(map(str, data.values()))
2020-10-20 23:20:13	amber72	bjs: Yeah, not sure why. Very confusing
2020-10-20 23:20:18	bjs	amber72: it looks like your file contains a weird character on line 4
2020-10-20 23:20:25	-->	Steeve (~steve@unaffiliated/steeve) has joined #python
2020-10-20 23:20:55	<--	ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) has quit (Remote host closed the connection)
2020-10-20 23:22:09	<--	Trashlord (~trash@wikipedia/Sentient-Planet) has quit (Quit: "True ignorance is not the absence of knowledge, but the refusal to acquire it.")
2020-10-20 23:22:32	-->	Aryan (~Aryan@unaffiliated/aryan) has joined #python
2020-10-20 23:23:02	-->	jw4 (~jw4@unaffiliated/jw4) has joined #python
2020-10-20 23:23:21	<--	Macuser (~Macuser@unaffiliated/macuser) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-20 23:23:51	<--	diogenese (~diogenese@diogenese.velotech.net) has quit (Quit: Has anybody seen the bridge?)
2020-10-20 23:23:54	-->	Newami (~Newami@ip70-179-45-125.sd.sd.cox.net) has joined #python
2020-10-20 23:24:08	-->	diogenese (~diogenese@diogenese.velotech.net) has joined #python
2020-10-20 23:24:50	bjs	amber72: (I mean just given the error message that is). I can't see any such weird character on line 4 of the original paste. Did you change the file?
2020-10-20 23:25:19	bjs	amber72: you said something about having to input -99 twice, but now are showing me this SyntaxError ... so I'm a little confused.  Did the error change since the paste?
2020-10-20 23:25:25	-->	rcm888 (~rcm888___@94.140.230.72) has joined #python
2020-10-20 23:25:52	amber72	bjs: I copied and pasted the code into this compiler from another. That is the error, but now it is showing all these syntax errors because I copied and pasted.
2020-10-20 23:26:03	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Ping timeout: 246 seconds)
2020-10-20 23:26:05	amber72	One second and I will send another output
2020-10-20 23:26:25	-->	kof (~kof@103.101.196.4) has joined #python
2020-10-20 23:26:25	bjs	amber72: did you use some fancy copy & paste that turned quotes into fancy quotes or something?
2020-10-20 23:26:36	edd_lc	XHFHX: you can provide a tty to processes. python's pty package will create a tty for you to supply as stdin/stdout/err for a subprocess. ive never used it. `import subprocess, pty; _, s = pty.openpty(); subprocess.Popen(['/usr/bin/something'], stdin=s, stdout=s, stderr=s).communicate(timeout=3)`
2020-10-20 23:26:38	bjs	it's always a hazard with programming, those fancy quotes :)
2020-10-20 23:26:40	-->	greedom (~greedom@i5E86B3B6.versanet.de) has joined #python
2020-10-20 23:26:49	amber72	bjs: I honestly have no idea!:')
2020-10-20 23:27:18	Wooble	amber72: BTW is there a specific reason you're still using python 2 in 2020? Especially with things that look like print function but aren't?
2020-10-20 23:27:40	-->	ThePortWhisperer (~ThePortWh@unaffiliated/theportwhisperer) has joined #python
2020-10-20 23:27:40	bjs	amber72: what are you using to edit the code? and what version of Python are you using?
2020-10-20 23:27:50	<--	no_gravity (~no_gravit@unaffiliated/no-gravity/x-0632109) has quit (Quit: leaving)
2020-10-20 23:27:52	amber72	It is for my class...I did not choose it Wooble
2020-10-20 23:27:53	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2020-10-20 23:28:10	-->	venmx (~bertie@82-132-235-205.dab.02.net) has joined #python
2020-10-20 23:28:11	amber72	bjs: I think python 3
2020-10-20 23:28:31	edd_lc	Wooble: maybe he works for one of the largest international banking groups. coughjpmorgancough
2020-10-20 23:28:31	Wooble	py3 can't print that PEP-263 error.
2020-10-20 23:28:42	Wooble	edd_lc: doing homework for them? :P
2020-10-20 23:28:43	<--	Newami (~Newami@ip70-179-45-125.sd.sd.cox.net) has quit (Ping timeout: 256 seconds)
2020-10-20 23:28:45	amber72	bjs: I am using the jdoodle and gdb comiler
2020-10-20 23:28:56	edd_lc	Wooble: :D
2020-10-20 23:29:19	bjs	amber72: oh i see what happened, you're using python2 not python3 and you had – not -
2020-10-20 23:29:40	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-20 23:29:50	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-10-20 23:30:02	bjs	amber72: is jdoodle some online thing?
2020-10-20 23:30:14	-->	quartzmage (nick_x@gateway/vpn/protonvpn/nickx/x-67731737) has joined #python
2020-10-20 23:30:23	amber72	bjs: Yes, an online compiler my teacher game me
2020-10-20 23:30:29	XHFHX	edd_lc: this runs into a timeout :/ so I am still stuck in my interactive state
2020-10-20 23:30:42	<--	venmx (~bertie@82-132-235-205.dab.02.net) has quit (Read error: Connection reset by peer)
2020-10-20 23:30:56	-->	metalerk (~metalerk@fixed-189-203-228-41.totalplay.net) has joined #python
2020-10-20 23:31:08	<--	EvilPyro (~EvilPyro@unaffiliated/evilpyro) has quit (Quit: Leaving)
2020-10-20 23:31:20	<--	youngOSCP (~youngOSCP@gateway/tor-sasl/youngoscp) has quit (Quit: youngOSCP)
2020-10-20 23:31:44	edd_lc	XHFHX: when you run it interactively, does it require an input to proceed/exit? communicate has an input argument you can try use to solve that. there's always pexpect but we don't talk about pexpect
2020-10-20 23:31:53	-->	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has joined #python
2020-10-20 23:32:07	bjs	amber72: it appears to have python2 and python3 options.  Anyway, if you use - not – it'll work
2020-10-20 23:32:15	bjs	amber72: – is some fancy dash
2020-10-20 23:32:29	amber72	bjs: Okay
2020-10-20 23:33:08	bjs	amber72: but i really recommend having a version of Python on your own machine and running things yourself, it's much quicker and better than using some weird online editor
2020-10-20 23:33:18	bjs	especially when your browser tries to autocorrect dashes and quotes :)
2020-10-20 23:33:18	-->	mikecmpbll (~mikecmpbl@ruby/staff/mikecmpbll) has joined #python
2020-10-20 23:33:18	edd_lc	communicate(input="begone!", timeout=3). or, if you don't care about graceful shutdown, let it timeout and die. catch the timeout exception and treat it as expected and correct flow. log.info("All good! Moving on.")
2020-10-20 23:33:24	-->	tethroar (~tethroar@95.149.17.213) has joined #python
2020-10-20 23:33:50	-->	braket (~ket@unaffiliated/braket) has joined #python
2020-10-20 23:34:00	<--	rf-n00b (rf-n00b@gateway/vpn/privateinternetaccess/rf-n00b) has quit (Ping timeout: 272 seconds)
2020-10-20 23:34:07	<--	braket (~ket@unaffiliated/braket) has left #python
2020-10-20 23:34:10	<--	phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has quit (Ping timeout: 256 seconds)
2020-10-20 23:34:15	XHFHX	edd_lc: I found this one which could match https://stackoverflow.com/a/17712430 as the default behaviour to exit the launched command is hitting Ctrl+D - but I don't know what closing the pipe means here and how this can be archived
2020-10-20 23:34:18	-->	rf-n00b (rf-n00b@gateway/vpn/privateinternetaccess/rf-n00b) has joined #python
2020-10-20 23:34:50	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-20 23:34:56	-->	brainium (~brainium@unaffiliated/brainium) has joined #python
2020-10-20 23:35:05	-->	phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has joined #python
2020-10-20 23:35:31	<--	luischi (~textual@178.red-83-43-199.dynamicip.rima-tde.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-20 23:35:56	-->	efm (~efm@vpn.tummy.com) has joined #python
2020-10-20 23:35:59	-->	Tadasssss (540fbe1a@gateway/web/cgi-irc/kiwiirc.com/ip.84.15.190.26) has joined #python
2020-10-20 23:36:10	<--	Anticom (~Anticom@87.190.49.75) has quit (Quit: Leaving)
2020-10-20 23:36:30	<--	RjAHDtUk (~zKcjTgTe@gateway/tor-sasl/zkcjtgte) has quit (Quit: RjAHDtUk)
2020-10-20 23:36:47	<--	srandon111 (~srandon11@5.102.15.61) has quit (Quit: leaving)
2020-10-20 23:37:03	Tadasssss	hey #python, does anybody know if it is possible to set a Proxy for the whole computer and not only for http request? Don't know where to start so anything is helpful
2020-10-20 23:37:33	edd_lc	XHFHX: try s.close() before calling communicate
2020-10-20 23:38:04	Wooble	Tadasssss: roughly "use a VPN" but is this python-specific?
2020-10-20 23:38:05	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-20 23:38:17	<--	Naan (~naan@unaffiliated/naan) has quit (Quit: Leaving)
2020-10-20 23:38:33	ssbr_	Tadasssss: it's possible to set a network proxy, but can only be done in an OS-specific way and will have very little to do with Python.
2020-10-20 23:38:53	Tadasssss	Doesn't necessarily have to be Python, but I would prefer doing it with Python:) I have considered using VPN but it is not the best choice for my case...
2020-10-20 23:39:08	ssbr_	what's the difference between what you're doing and a VPN?
2020-10-20 23:39:19	ssbr_	I actually thought you were basically asking how to set up a VPN in Python.
2020-10-20 23:39:19	XHFHX	edd_lc: s from openpty() is an integer so it can't be closed :/
2020-10-20 23:39:30	edd_lc	Tadasssss: you can use `ip route` to add a new routing rule for 0.0.0.0/0
2020-10-20 23:39:39	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-20 23:39:51	<--	andy-b (~abritting@66.129.88.50) has quit (Ping timeout: 258 seconds)
2020-10-20 23:40:50	edd_lc	XHFHX: try the Popen object's stdin.close()
2020-10-20 23:41:07	Tadasssss	@ssbr_ yeah that's basically what I'm asking...
2020-10-20 23:41:13	Tadasssss	edd_lc, looking into https://pypi.org/project/pyroute2/ thanks!
2020-10-20 23:41:37	<--	zahlman (~zahlman@toroon4432w-lp130-05-64-229-229-12.dsl.bell.ca) has quit (Ping timeout: 260 seconds)
2020-10-20 23:41:58	grym	Tadasssss: wireguard's even got kernel support now
2020-10-20 23:42:28	-->	fflori (~fflori@194.230.147.232) has joined #python
2020-10-20 23:42:47	XHFHX	edd_lc: raises Attribute Error b/c p.stdin seems to be None. Setting setin to subprocess.PIPE and running p.stdin.close() raises ValueError: flush of closed file during communicate()
2020-10-20 23:43:17	-->	RjAHDtUk (~zKcjTgTe@gateway/tor-sasl/zkcjtgte) has joined #python
2020-10-20 23:43:19	Tadasssss	It would be best if I could control it with Python or Bash or any other language, because I need to scale it and VPN distributions won't work I guess?
2020-10-20 23:44:41	<--	amber72 (47722182@pool-71-114-33-130.washdc.fios.verizon.net) has quit (Remote host closed the connection)
2020-10-20 23:44:42	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 265 seconds)
2020-10-20 23:44:49	LondonAppDev	Yhg1s: Thank you for confirming regarding open mode!
2020-10-20 23:45:26	-->	faLUCE (~paolo@83.137.6.205) has joined #python
2020-10-20 23:46:28	<--	yohnnyjoe (~yohnnyjoe@c-73-163-139-169.hsd1.dc.comcast.net) has quit (Remote host closed the connection)
2020-10-20 23:46:32	<--	lobaco (~andre@190.114.149.125) has quit (Remote host closed the connection)
2020-10-20 23:46:58	-->	yohnnyjoe (~yohnnyjoe@c-73-163-139-169.hsd1.dc.comcast.net) has joined #python
2020-10-20 23:47:23	edd_lc	XHFHX: well, if the command exits on stdin.close() (after using PIPE), and you have its expected behavior (it exited, created some artifact, etc), the exceptions in python don't matter. they're just execution flow indicators
2020-10-20 23:47:25	-->	Nik98 (4d7d30c1@77.125.48.193) has joined #python
2020-10-20 23:47:48	bancroft	Question, do the type annotations add runtime checking?
2020-10-20 23:48:06	edd_lc	handle them by saying "hey, i expected this. great!" and mission accomplished
2020-10-20 23:48:13	edd_lc	bancroft: no
2020-10-20 23:48:30	faLUCE	hello. shlex.split("this\is\a\directory foo") returns ["thisisadirectory", "foo"] <--- how can I avoid to remove the slashes ?
2020-10-20 23:48:58	Nik98	Hi, i have package named "my_package", the tests folder are not in the code. How should i do imports from one tests file to another? this wont work, no? "from tests.utils import ..."
2020-10-20 23:48:58	tos9	faLUCE: \i isn't a valid escape sequence
2020-10-20 23:49:12	tos9	faLUCE: You mean \\i, or to use a raw string, or generally it's good to avoid using shlex.split entirely.
2020-10-20 23:49:27	faLUCE	tos I see
2020-10-20 23:49:29	faLUCE	thanks
2020-10-20 23:50:15	<--	blip- (~blip-@unaffiliated/blip-) has quit (Remote host closed the connection)
2020-10-20 23:50:29	bjs	faLUCE: note that \ isn't the path separator on Unix
2020-10-20 23:50:35	bjs	so shlex will think it's an escape
2020-10-20 23:50:36	faLUCE	tos9: what could I use to convert "this\is\a\directory foo" into a valid sequence string for split() ?
2020-10-20 23:50:36	<--	djcaston (~djcaston@pool-71-188-85-134.cmdnnj.east.verizon.net) has quit (Quit: djcaston)
2020-10-20 23:50:45	bancroft	edd_lc: can you go into more detail then just no? how does it work? is it basically ignored like a comment?
2020-10-20 23:50:51	bjs	faLUCE: is this for Windows?
2020-10-20 23:50:53	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-10-20 23:50:56	faLUCE	bjs: portable
2020-10-20 23:51:46	bjs	faLUCE: just don't call shlex on Windows
2020-10-20 23:51:54	faLUCE	what could I call instead?
2020-10-20 23:51:55	bjs	you (shouldn't) need it
2020-10-20 23:52:12	-->	jtfidje (~jtfidje@85.109-247-240.customer.lyse.net) has joined #python
2020-10-20 23:52:16	-->	andy-b (~abritting@66.129.88.50) has joined #python
2020-10-20 23:52:21	<--	N0Lif3 (~N0Lif3@unaffiliated/n0lif3) has quit (Ping timeout: 260 seconds)
2020-10-20 23:52:22	bjs	faLUCE: what are you doing? are you trying to pass something to subprocess?
2020-10-20 23:52:28	faLUCE	bjs: yes
2020-10-20 23:52:37	faLUCE	a string with a command
2020-10-20 23:52:50	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2020-10-20 23:52:52	bjs	faLUCE: all subprocess will do on Windows is re-join the splitted string back into the original string
2020-10-20 23:52:58	bjs	faLUCE: so you may as well just pass that string if you're on Windows
2020-10-20 23:53:26	<--	tiwula (~lane@70.89.246.241-Busname-UT.hfc.comcastbusiness.net) has quit (Read error: Connection reset by peer)
2020-10-20 23:53:26	faLUCE	bjs: this is weird. Do you mean that I have to use shlex.split on unix and the string on windows?
2020-10-20 23:53:41	<--	Aryan (~Aryan@unaffiliated/aryan) has quit (Quit: leaving)
2020-10-20 23:53:49	bjs	faLUCE: I mean Windows and Unix aren't the same and shlex is for Unix
2020-10-20 23:53:49	XHFHX	edd_lc: sadly it does not create an artifact this way :/
2020-10-20 23:53:58	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-20 23:53:58	-->	tiwula (~lane@70.89.246.241-Busname-UT.hfc.comcastbusiness.net) has joined #python
2020-10-20 23:54:28	<--	Aaron (~dark@freebsd/user/aaron) has quit (Ping timeout: 260 seconds)
2020-10-20 23:54:51	faLUCE	bjs: I see, but what if I pass   mystring = 'this\is\a\directory\exec  " param 1 "   "param 2 with spaces"'  to subprocess on windows ?
2020-10-20 23:54:52	<--	greedom (~greedom@i5E86B3B6.versanet.de) has quit (Quit: Konversation terminated!)
2020-10-20 23:54:57	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Remote host closed the connection)
2020-10-20 23:56:04	-->	banisterfiend (~textual@ruby/staff/banisterfiend) has joined #python
2020-10-20 23:56:07	<--	linuxconformer (5410eb84@84.16.235.132) has quit (Remote host closed the connection)
2020-10-20 23:56:10	<--	jarthur (~jarthur@70.114.215.149) has quit (Read error: Connection reset by peer)
2020-10-20 23:56:11	-->	jjmojojjmojo (~jj@097-102-202-235.res.spectrum.com) has joined #python
2020-10-20 23:57:08	-->	jarthur (~jarthur@cpe-70-114-215-149.austin.res.rr.com) has joined #python
2020-10-20 23:57:18	-->	greedom (~greedom@2001:16b8:2eeb:cc00:16c6:8014:1a3b:7520) has joined #python
2020-10-20 23:57:37	<--	tethroar (~tethroar@95.149.17.213) has quit (Ping timeout: 256 seconds)
2020-10-20 23:57:40	<--	Muimi (~ReedK0@113.235.189.72) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-10-20 23:58:46	bjs	faLUCE: Windows doesn't do any shell splitting. So ... like that :)
2020-10-20 23:58:57	edd_lc	bancroft: it's called type hinting. by default, IDEs will read it and auto-complete/warn. linters and input validators (such as pydantic) can make use of it. you can add type checking to your python code but i've never done that
2020-10-20 23:59:03	<--	Tadasssss (540fbe1a@gateway/web/cgi-irc/kiwiirc.com/ip.84.15.190.26) has quit (Quit: Connection closed)
2020-10-20 23:59:18	<--	phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has quit (Ping timeout: 246 seconds)
2020-10-20 23:59:18	-->	jay-m_ (~jay-m@129.0.205.1) has joined #python
2020-10-20 23:59:29	faLUCE	bjs: but it seems that in this way I can't call subprocess.run() on windwows
2020-10-20 23:59:53	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Ping timeout: 256 seconds)
2020-10-21 00:00:14	-->	Naan (~naan@unaffiliated/naan) has joined #python
2020-10-21 00:00:31	edd_lc	XHFHX: other than waiting a short while for it (or better, yet, trying to poll its intended outcome), im out of ideas. container?
2020-10-21 00:01:29	-->	sertsa (~sertsa@209.140.9.215) has joined #python
2020-10-21 00:02:11	-->	approaching236 (~approachi@2600:1700:f3c0:97b0:d940:5dce:8df4:245) has joined #python
2020-10-21 00:02:17	-->	pressure679 (~naamik@194.177.250.82) has joined #python
2020-10-21 00:02:21	<--	sandeepk (~sandeepk@117.199.90.10) has quit (Remote host closed the connection)
2020-10-21 00:02:23	-->	led1 (~Thunderbi@217.66.160.14) has joined #python
2020-10-21 00:02:27	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Quit: [IRSSI])
2020-10-21 00:02:52	StormBolt	SnoopJ is there any smart way to check if np.argwhere(a==4) returns empty array or not? I need it in an if statement. I put if np.argwhere(a==4)!=[]: and I got logger warning. If I put it as if len(np.argwhere(a==4))==1:, my loop time increases by 30seconds rip
2020-10-21 00:02:59	-->	dtcrshr (~dtcrshr@unaffiliated/datacrusher) has joined #python
2020-10-21 00:03:09	<--	ssbr_ (~scorchsab@python/site-packages/ssbr) has quit (Remote host closed the connection)
2020-10-21 00:03:22	-->	ssbr_ (~scorchsab@python/site-packages/ssbr) has joined #python
2020-10-21 00:03:30	grym	StormBolt: if np.argwhere(a==4).any(), i think
2020-10-21 00:03:46	-->	varunwachaspati (0debc550@ec2-13-235-197-80.ap-south-1.compute.amazonaws.com) has joined #python
2020-10-21 00:04:42	bjs	faLUCE: why not?
2020-10-21 00:04:44	Nik98	Hi, i have package named "my_package", the tests folder are not in the code. How should i do imports from one tests file to another? this wont work, no? "from tests.utils import ..."
2020-10-21 00:04:55	grym	Nik98: pytest will be fine with that
2020-10-21 00:04:55	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 00:05:10	-->	plexigras (plexigras@gateway/vpn/privateinternetaccess/plexigras) has joined #python
2020-10-21 00:05:27	<--	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2020-10-21 00:05:55	Nik98	Only if ill run with the cwd as "tests" not?
2020-10-21 00:06:04	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2020-10-21 00:06:49	faLUCE	bjs: because it requires an array
2020-10-21 00:06:53	grym	Nik98: `myvenv/bin/python -m pytest /project/root/tests/`
2020-10-21 00:06:59	faLUCE	bjs: I can't pass a string to it
2020-10-21 00:07:00	XHFHX	edd_lc: yeah, with polling it works. really hacky but well... :D
2020-10-21 00:07:04	Nik98	And if i want to run specific file?
2020-10-21 00:07:22	grym	Nik98: -m pytest /project/root/tests/test_foo.py
2020-10-21 00:07:34	grym	or -k or whatever to search matching tests by name, etc.
2020-10-21 00:07:39	<--	tesseract (~tesseract@2a01:e0a:599:6450:79f5:290e:faad:3b66) has quit (Quit: Leaving)
2020-10-21 00:07:40	Nik98	Im working with pycharm and it also does not recognize the imports (because there are no such package as tests). There is a solution for that at the python level and not at pytest level?
2020-10-21 00:07:56	-->	Guest20 (~textual@103.215.168.1) has joined #python
2020-10-21 00:08:03	grym	Nik98: give tests/ an __init__.py
2020-10-21 00:08:05	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 00:08:06	-->	alx (~alx@119246134143.ctinets.com) has joined #python
2020-10-21 00:08:13	<--	ssbr_ (~scorchsab@python/site-packages/ssbr) has quit (Ping timeout: 258 seconds)
2020-10-21 00:08:18	grym	Nik98: tell pycharm that your test runner is pytest.  then right click on the tests directory and select "run tests"
2020-10-21 00:08:43	StormBolt	grym that works, but was even slower than len(). loop went up another 20s
2020-10-21 00:08:48	Nik98	Yes, it will work, but the imports will be "red" (cant find these package)
2020-10-21 00:09:05	grym	Nik98: pycharm can be stupid, that's ok
2020-10-21 00:09:18	-->	Sheilong (uid293653@gateway/web/irccloud.com/x-ftxlshtfjorkikim) has joined #python
2020-10-21 00:09:28	grym	you migth also just need to rehash your pycharm environment thing, which a restart usually handles
2020-10-21 00:09:37	grym	StormBolt: that surprises me
2020-10-21 00:10:00	-->	oalmlov (c0a51504@192.165.21.4) has joined #python
2020-10-21 00:10:21	grym	StormBolt: but .argwhere().size >0 should be ok
2020-10-21 00:10:27	-->	elosant (~elosant@gateway/tor-sasl/elosant) has joined #python
2020-10-21 00:10:30	bjs	faLUCE: who said?
2020-10-21 00:10:35	Nik98	ty
2020-10-21 00:10:39	<--	Nik98 (4d7d30c1@77.125.48.193) has quit (Remote host closed the connection)
2020-10-21 00:10:41	grym	StormBolt: though that will test incorrectly, heh
2020-10-21 00:11:13	XHFHX	btw: creating a NamedTemporaryFile and writing something to it doesnt seem to actually save it into the file when performing a cat on the file - only once its closed (but this would delete the NamedTemporaryFile) - whats the best approach here?
2020-10-21 00:11:29	-->	platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) has joined #python
2020-10-21 00:11:41	faLUCE	bjs: let's try
2020-10-21 00:12:35	<--	palasso (~palasso@unaffiliated/palasso) has quit (Quit: No Ping reply in 180 seconds.)
2020-10-21 00:12:51	edd_lc	XHFHX: output isn't immediately flushed to disk. use the object's flush method to immediately flush and write to disk.
2020-10-21 00:13:09	SnoopJ	StormBolt, check .size on the result
2020-10-21 00:13:42	XHFHX	edd_lc: thank you once again! :)
2020-10-21 00:14:00	-->	yakiza (4fa700a0@ppp079167000160.access.hol.gr) has joined #python
2020-10-21 00:14:06	-->	heyitsrama (~heyitsram@c-24-6-105-253.hsd1.ca.comcast.net) has joined #python
2020-10-21 00:14:10	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined #python
2020-10-21 00:14:22	<--	led1 (~Thunderbi@217.66.160.14) has quit (Quit: led1)
2020-10-21 00:14:30	yakiza	Hello people Iread somewher ethis -- > common software development what does this refer to ?
2020-10-21 00:14:30	edd_lc	XHFHX: cheers
2020-10-21 00:14:40	<--	elosant (~elosant@gateway/tor-sasl/elosant) has quit (Client Quit)
2020-10-21 00:14:52	-->	elosant (~elosant@gateway/tor-sasl/elosant) has joined #python
2020-10-21 00:15:06	<--	elosant (~elosant@gateway/tor-sasl/elosant) has quit (Client Quit)
2020-10-21 00:15:18	-->	elosant (~elosant@gateway/tor-sasl/elosant) has joined #python
2020-10-21 00:15:30	-->	han-solo_ (~han-solo@unaffiliated/han-solo) has joined #python
2020-10-21 00:15:30	-->	audio (~audioburn@unaffiliated/theology) has joined #python
2020-10-21 00:15:32	<--	RougeRR (~RougeR@unaffiliated/rouger) has quit (Remote host closed the connection)
2020-10-21 00:15:44	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-21 00:15:57	-->	RougeRR (~RougeR@unaffiliated/rouger) has joined #python
2020-10-21 00:16:29	<--	han-solo_ (~han-solo@unaffiliated/han-solo) has left #python
2020-10-21 00:16:38	<--	approaching236 (~approachi@2600:1700:f3c0:97b0:d940:5dce:8df4:245) has quit (Ping timeout: 260 seconds)
2020-10-21 00:16:48	-->	ellcs (~ellcs@200116b8686e5c0062f677fffebe55f5.dip.versatel-1u1.de) has joined #python
2020-10-21 00:16:56	-->	plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) has joined #python
2020-10-21 00:17:17	heyitsrama	Are sets considered to be unordered because of the dictionary that is used to hash each value within the set? It seems that the "ordering" of the values within a set are dependent on the values that are used to make the set.
2020-10-21 00:18:01	<--	elosant (~elosant@gateway/tor-sasl/elosant) has quit (Client Quit)
2020-10-21 00:18:10	varunwachaspati	hi, I am trying to figure out how to effectively do speculative HTTP request retry in Python. Basically wait for sometime for the original HTTP request to finish but if it doesn't, then launch a similar request and proceed with whichever returns first. Have a slow downstream service and need to improve latency. Not a python expert but GIL might be
2020-10-21 00:18:11	varunwachaspati	a problem here right, to do this effectively ?
2020-10-21 00:18:11	SnoopJ	heyitsrama, dictionaries are never "used to hash" anywhere in Python
2020-10-21 00:18:13	-->	elosant (~elosant@gateway/tor-sasl/elosant) has joined #python
2020-10-21 00:18:22	-->	jsdallas (~jsdallas@ec2-52-26-176-9.us-west-2.compute.amazonaws.com) has joined #python
2020-10-21 00:18:42	<--	cliluw (~cliluw@unaffiliated/cliluw) has quit (Ping timeout: 260 seconds)
2020-10-21 00:19:19	-->	santosh (6787c80e@wikipedia/Santosh) has joined #python
2020-10-21 00:19:58	heyitsrama	SnoopJ: from the documentation `The set classes are implemented using dictionaries.` https://docs.python.org/2/library/sets.html
2020-10-21 00:20:11	heyitsrama	damn i was looking at 2 documentation. >.>
2020-10-21 00:20:15	grym	heyitsrama: not any more, particularly; lots of stuff's changed since then
2020-10-21 00:20:37	SnoopJ	heyitsrama, sets are basically dictionaries without values, yes. This doesn't change what I said, the computation of a hash is a separate concept altogether
2020-10-21 00:21:03	-->	locsmif (~none@unaffiliated/locsmif) has joined #python
2020-10-21 00:21:07	heyitsrama	yeah i see what you mean by that SnoopJ.
2020-10-21 00:21:15	XHFHX	btw: was there some google conspiracy to push python2 docs in google b/c til recently the first link to the docs was always 2.7 for me
2020-10-21 00:21:19	faLUCE	bjs: are you sure that I can do subprocess.run(mystring)  where mystring = 'this\is\a\directory\exec  " param 1 "   "param 2 with spaces"' on windows?
2020-10-21 00:21:32	SnoopJ	heyitsrama, anyway the possibility of collisions means that it's hard to give either of these structures a definite order.
2020-10-21 00:21:48	StormBolt	grym SnoopJ yeah np.size works. Loop takes 85s with size, with ==[] comparison it takes 65, but python warns about this: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error
2020-10-21 00:21:49	SnoopJ	dicts do preserve the *insertion* order, though
2020-10-21 00:22:02	-->	qlixed (~qlixed@2800:810:471:8ae8:e670:b8ff:fe53:9ebd) has joined #python
2020-10-21 00:22:19	grym	if you need always _sorted_ collections, there is https://github.com/grantjenks/python-sortedcontainers
2020-10-21 00:22:21	SnoopJ	StormBolt, not sure what loop you're talking about, but loops are almost always an antipattern when using numpy, because Python's loops are miserably slow in comparison.
2020-10-21 00:22:49	<--	Deyaa (uid190709@gateway/web/irccloud.com/x-kezrgqqyqbqqmmsj) has quit (Quit: Connection closed for inactivity)
2020-10-21 00:23:57	<--	schumaml (~schumaml@dslb-094-217-079-017.094.217.pools.vodafone-ip.de) has quit (Ping timeout: 260 seconds)
2020-10-21 00:26:16	-->	al2o3-cr (~al2o3-cr@unaffiliated/gr33n7007h) has joined #python
2020-10-21 00:27:24	-->	pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) has joined #python
2020-10-21 00:27:27	-->	_Max (uid438748@gateway/web/irccloud.com/x-mnhedabwerxfpdfj) has joined #python
2020-10-21 00:27:30	<--	santosh (6787c80e@wikipedia/Santosh) has quit (Ping timeout: 256 seconds)
2020-10-21 00:28:27	<--	Streaker (~Streaker@unaffiliated/streaker) has quit (Ping timeout: 272 seconds)
2020-10-21 00:28:41	<--	esselfe (~steph@unaffiliated/esselfe) has quit (Ping timeout: 265 seconds)
2020-10-21 00:29:22	nanonyme	I kind of wonder why they didn't make sets ordered while making dicts ordered. There's some hints that it might improve Python bytecode determinism
2020-10-21 00:29:40	<--	oalmlov (c0a51504@192.165.21.4) has quit (Remote host closed the connection)
2020-10-21 00:29:43	<--	zeden (~user@unaffiliated/zeden) has quit (Quit: WeeChat 2.9)
2020-10-21 00:29:48	<--	thoros (~thoros@194-96-55-156.hdsl.highway.telekom.at) has quit (Quit: WeeChat 2.9)
2020-10-21 00:29:55	-->	Andrew (~aickem@stu-116-155-171-184.champlain.edu) has joined #python
2020-10-21 00:29:56	<--	impermanence (c01c0142@gateway/web/cgi-irc/kiwiirc.com/ip.192.28.1.66) has quit (Quit: Connection closed)
2020-10-21 00:30:27	<--	plexigras (plexigras@gateway/vpn/privateinternetaccess/plexigras) has quit (Ping timeout: 258 seconds)
2020-10-21 00:30:28	grym	nanonyme: i assert without proof that the implementation codepaths are not as shared as you'd suspect
2020-10-21 00:30:44	-->	insurrect (b0ca2307@gateway/web/cgi-irc/kiwiirc.com/ip.176.202.35.7) has joined #python
2020-10-21 00:30:44	-->	escanor (uid387784@gateway/web/irccloud.com/x-tncuggztfotmhfqt) has joined #python
2020-10-21 00:30:45	_Max	Hey, I have two lists and I want to return an element of a second list given the first list. For example, if the input is 'A'(which is the first list), I want to return 'C' from second list. Some ideas?
2020-10-21 00:31:23	-->	djcaston (~djcaston@pool-71-188-85-134.cmdnnj.east.verizon.net) has joined #python
2020-10-21 00:31:24	nanonyme	grym, that's quite possibly true. This is though something they bumped to while trying to make bytecode reproducible. Unordered sets break a lot of things
2020-10-21 00:31:29	insurrect	_MAx list2[list1.index('A')]
2020-10-21 00:31:34	<--	yakiza (4fa700a0@ppp079167000160.access.hol.gr) has quit (Remote host closed the connection)
2020-10-21 00:32:36	-->	dreamon (~dreamon@unaffiliated/dreamon) has joined #python
2020-10-21 00:32:36	<--	faLUCE (~paolo@83.137.6.205) has quit (Quit: Konversation terminated!)
2020-10-21 00:32:42	bjs	faLUCE: I mean that string is invalid syntax isn't it? but with the string you mean, yeah
2020-10-21 00:32:52	nanonyme	Just guaranteeing you get consistent order on iteration after insertions would be huge. It doesn't need to have insertion order
2020-10-21 00:32:56	-->	fernando_ (~phpnewbie@189.62.69.251) has joined #python
2020-10-21 00:33:04	bjs	_Max: It's not clear how you got C from A
2020-10-21 00:33:21	-->	plexigras (~plexigras@p200300e79f2878f270ef0e6901326985.dip0.t-ipconnect.de) has joined #python
2020-10-21 00:33:30	bjs	_Max: do you have some examples?
2020-10-21 00:33:38	<--	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has quit (Ping timeout: 240 seconds)
2020-10-21 00:34:00	<--	AlanMD_ (~alan@193.105.140.131) has quit (Ping timeout: 265 seconds)
2020-10-21 00:34:02	<--	fernando_ (~phpnewbie@189.62.69.251) has left #python
2020-10-21 00:34:53	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 00:35:08	-->	gmaggior (~gmaggior_@host-87-18-177-159.retail.telecomitalia.it) has joined #python
2020-10-21 00:35:25	<--	pressure679 (~naamik@194.177.250.82) has quit (Quit: Lost terminal)
2020-10-21 00:36:06	<--	nubonix (~quassel@2601:1c2:4a02:4c00:f005:31b8:3f47:de1c) has quit (Ping timeout: 244 seconds)
2020-10-21 00:36:22	-->	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has joined #python
2020-10-21 00:36:40	<--	amite (63aeb0ad@99-174-176-173.lightspeed.rcsntx.sbcglobal.net) has quit (Ping timeout: 245 seconds)
2020-10-21 00:37:17	-->	nubonix (~quassel@2601:1c2:4a02:4c00:f005:31b8:3f47:de1c) has joined #python
2020-10-21 00:37:40	_Max	Given two lists: lis1:['A','B'], and list2['C', 'D'], if the input is 'A', I want to return ''C', if it is 'B; I want to return 'D', makes sense?
2020-10-21 00:38:10	-->	klxda (~klxda@2001:bc8:600:1b2e::1) has joined #python
2020-10-21 00:38:14	<--	RangerBob (~brian@pool-173-72-244-228.clppva.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2020-10-21 00:38:31	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Remote host closed the connection)
2020-10-21 00:38:32	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 00:38:52	bjs	_Max: insurect's code seems like it would work.  `list2[list1.index("A")]`  but maybe you just want a dict: d = {"A": "C", "B": "D"}  then print(d["A"]) or print(d["B"])
2020-10-21 00:39:24	grym	if i have two lists and indexes matter across both, i usually also want a dict
2020-10-21 00:39:31	-->	tethroar (~tethroar@95.149.17.213) has joined #python
2020-10-21 00:39:32	grym	or at least a list of tuples
2020-10-21 00:39:34	SnoopJ	nanonyme, I've forgotten the details but as I recall the order of dicts in 3.6 is a side effect of an underlying list structure. It's been a while since I watched Raymond Hettinger's talk on it, but I don't think that structure applies to sets
2020-10-21 00:39:38	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-21 00:39:56	<--	klxda (~klxda@2001:bc8:600:1b2e::1) has quit (Client Quit)
2020-10-21 00:40:18	han-solo	`d = dict(zip(list1, list2)); d[input]`
2020-10-21 00:40:21	-->	zeden (~user@unaffiliated/zeden) has joined #python
2020-10-21 00:40:39	-->	rogersm_ (~rogersm@92.59.121.108) has joined #python
2020-10-21 00:42:02	_Max	I tried zip but no a dict, I'll try both. thanks
2020-10-21 00:42:18	<--	ellcs (~ellcs@200116b8686e5c0062f677fffebe55f5.dip.versatel-1u1.de) has quit (Ping timeout: 260 seconds)
2020-10-21 00:42:28	f8e4	which is faster: https://bpa.st/G4ZA
2020-10-21 00:42:30	<--	Jesin (~Jesin@pool-72-66-101-18.washdc.fios.verizon.net) has quit (Quit: Leaving)
2020-10-21 00:42:36	SnoopJ	f8e4, measure it
2020-10-21 00:42:44	f8e4	i did, you reason?
2020-10-21 00:42:44	grym	f8e4: tias
2020-10-21 00:42:51	-->	Aryan (~Aryan@unaffiliated/aryan) has joined #python
2020-10-21 00:43:24	bjs	f8e4: well probably the first,  although I assume .reverse() is even faster
2020-10-21 00:43:40	-->	RangerBob (~brian@pool-173-72-244-228.clppva.fios.verizon.net) has joined #python
2020-10-21 00:43:43	f8e4	bjs reverse() is 1e3 faster;
2020-10-21 00:43:57	bjs	f8e4: for the particular input you had sure, that makes sense.
2020-10-21 00:44:03	bjs	I expect it to be a few times faster
2020-10-21 00:44:39	f8e4	the point: py here is nonintuitive: v2 is faster despite repeat append on a 1e4 len; lolf
2020-10-21 00:45:07	-->	bilb_ono (~alexmarsh@c-73-70-189-144.hsd1.ca.comcast.net) has joined #python
2020-10-21 00:45:30	grym	preallocation doesn't get you much unless you have nice promises about your memory allocations
2020-10-21 00:45:33	f8e4	it means: alwyas use (even partially) the builtin
2020-10-21 00:45:40	grym	which is why we do it in numpy and not in python
2020-10-21 00:45:44	-->	nomic (~nomic@2a00:23c6:9910:1201:7e0e:7f9c:8b13:813f) has joined #python
2020-10-21 00:45:49	<--	rogersm_ (~rogersm@92.59.121.108) has quit (Ping timeout: 260 seconds)
2020-10-21 00:45:56	SnoopJ	using the builtin here is definitely going to go faster for the simple reason that it will avoid all this slow looping
2020-10-21 00:46:17	<--	irc_user (uid423822@gateway/web/irccloud.com/x-dfebbsighvffakyp) has quit (Quit: Connection closed for inactivity)
2020-10-21 00:46:24	f8e4	SnoopJ you make no sense; both loops n times
2020-10-21 00:46:54	SnoopJ	f8e4, both of these loops are MUCH slower than the C loop that occurs when you use .reverse() or reversed()
2020-10-21 00:47:08	f8e4	oh, true
2020-10-21 00:47:12	-->	MmeQuignon (~matthieu@2a01:e0a:1ab:f090:28b1:5ff:1281:8c4b) has joined #python
2020-10-21 00:47:12	-->	aaaaaa (~ArthurStr@host-91-90-11-13.soborka.net) has joined #python
2020-10-21 00:47:19	OldFaithful	zip() looks very useful for analyzing multiple lists
2020-10-21 00:47:24	SnoopJ	I would hazard a guess that the first one is slower because it requires creation of N PyObject* that you will never use, which is all waste
2020-10-21 00:48:01	grym	OldFaithful: zip is a fine, fine thing.  and sometimes you want itertools.zip_longest
2020-10-21 00:48:07	-->	Macuser (~Macuser@unaffiliated/macuser) has joined #python
2020-10-21 00:48:18	SnoopJ	although the speed is going to depend on the implementation of list() anyway. In CPython, lists are overallocated, so .append() isn't always as expensive as you might think (but still not great)
2020-10-21 00:48:53	f8e4	SnoopJ while append preallocs sufficiently, on 2^(i+1) if len limit hit?
2020-10-21 00:49:01	jtfidje	ooh - zip_longest is a new one for me! *finding the docs..*
2020-10-21 00:49:01	<--	elosant (~elosant@gateway/tor-sasl/elosant) has quit (Quit: WeeChat 2.9)
2020-10-21 00:49:13	SnoopJ	f8e4, I don't understand the question
2020-10-21 00:49:24	bjs	f8e4: it doesn't quite double each time, if that's what you mean
2020-10-21 00:49:35	SnoopJ	Oh, yea. The first few steps are ad-hoc.
2020-10-21 00:49:36	f8e4	     * The growth pattern is:  0, 4, 8, 16, 24, 32, 40, 52, 64, 76, ...
2020-10-21 00:49:53	<--	Deknos (~deknos@unaffiliated/menace) has quit (Ping timeout: 260 seconds)
2020-10-21 00:49:53	-->	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has joined #python
2020-10-21 00:50:02	bjs	f8e4: SnoopJ: anyway you have to be careful with these microbenchmarks, I'd certainly still expect as the list grows much larger that the first to win
2020-10-21 00:50:08	bjs	f8e4: right, that's not doubling each time
2020-10-21 00:50:13	-->	ramsub07 (81686099@gateway/web/cgi-irc/kiwiirc.com/ip.129.104.96.153) has joined #python
2020-10-21 00:50:35	jtfidje	grym: nice. ty for tip there ;)
2020-10-21 00:50:45	grym	jtfidje: which one?
2020-10-21 00:50:55	bjs	f8e4: was it you who had some benchmark that claimed recursive faster?   this is why these kind of benchmarks are kind of hard to get right
2020-10-21 00:50:57	SnoopJ	bjs, yea, at some point avoiding multiple resizes will be advantageous for sure.
2020-10-21 00:51:14	jtfidje	grym: itertools.zip_longest xD
2020-10-21 00:51:22	<--	braincrash (~braincras@bl5-42-100.dsl.telepac.pt) has quit (Ping timeout: 260 seconds)
2020-10-21 00:51:23	grym	jtfidje: ah, yes.  coming soon to a python 3.10 near you, https://www.python.org/dev/peps/pep-0618/
2020-10-21 00:51:43	<--	djcaston (~djcaston@pool-71-188-85-134.cmdnnj.east.verizon.net) has quit (Quit: djcaston)
2020-10-21 00:51:45	jtfidje	grym: Aah cool!
2020-10-21 00:52:27	-->	Jesin (~Jesin@pool-72-66-101-18.washdc.fios.verizon.net) has joined #python
2020-10-21 00:52:49	<--	hyper_dave (~hyper_dav@196.191.53.247) has quit (Ping timeout: 260 seconds)
2020-10-21 00:53:55	bjs	SnoopJ: it gets worse as the list gets bigger
2020-10-21 00:54:00	-->	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has joined #python
2020-10-21 00:54:06	<--	nomic (~nomic@2a00:23c6:9910:1201:7e0e:7f9c:8b13:813f) has quit (Quit: Leaving)
2020-10-21 00:54:42	<--	zro (~zro@wikimedia/zro) has quit (Ping timeout: 256 seconds)
2020-10-21 00:54:45	-->	a11g0R (~mariusz@public-gprs548195.centertel.pl) has joined #python
2020-10-21 00:54:54	SnoopJ	bjs, the multiple resizes?
2020-10-21 00:54:58	ramsub07	Hi. I've a list list1. I'd like to create a set of tuple that would comprise of {(list[:10], list[10:]), (list[10:20], list[:10]+list[20:]...). how do I create the set without hardcoding?
2020-10-21 00:55:09	<--	rendar (~rendar@unaffiliated/rendar) has quit
2020-10-21 00:55:47	SnoopJ	ramsub07, it's not clear what the pattern is there, can you say more?
2020-10-21 00:55:51	-->	Tanvir (~tanvir@wikimedia/wikitanvir) has joined #python
2020-10-21 00:56:07	bjs	SnoopJ: for this particular case yes, because as the list gets bigger the ratio between the size and the length decreases
2020-10-21 00:56:09	<--	a11g0R (~mariusz@public-gprs548195.centertel.pl) has left #python
2020-10-21 00:56:28	-->	nate35 (cf6b9b24@207.107.155.36) has joined #python
2020-10-21 00:56:29	-->	phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has joined #python
2020-10-21 00:56:47	ramsub07	SnoopJ i want to slice the list into 10 elements (first element of the tuple) and whatever that's not included in the first element from the list as second element of the tuple
2020-10-21 00:57:30	-->	manu1511 (~manu@213162073145.public.t-mobile.at) has joined #python
2020-10-21 00:58:07	-->	hyper_dave (~hyper_dav@196.191.53.247) has joined #python
2020-10-21 00:58:20	<--	ivanf (~Ivan@unaffiliated/kferdous) has quit (Ping timeout: 240 seconds)
2020-10-21 00:58:25	-->	Buntspecht (~user@unaffiliated/siracusa) has joined #python
2020-10-21 00:59:03	<--	Aryan (~Aryan@unaffiliated/aryan) has quit (Quit: leaving)
2020-10-21 00:59:43	SnoopJ	ramsub07, my first thought is something like `{(lst[start:start+10], lst[:start+10] + lst[start+10:]) for start in range(len(lst)-10)}`, but if I'm not mistaken, the result of any of these operations won't be hashable if these are truly lists.
2020-10-21 01:00:28	ramsub07	SnoopJ would making them set(list()) make sense?
2020-10-21 01:00:29	SnoopJ	err, there's a typo in the second element of the tuple, the first operand should be lst[:start] I think
2020-10-21 01:00:38	<--	varunwachaspati (0debc550@ec2-13-235-197-80.ap-south-1.compute.amazonaws.com) has quit (Remote host closed the connection)
2020-10-21 01:01:04	SnoopJ	ramsub07, I don't understand the question. Lists are not hashable, they can't be a member of a set, nor can a tuple of list
2020-10-21 01:01:23	-->	palasso (~palasso@unaffiliated/palasso) has joined #python
2020-10-21 01:01:38	ramsub07	ah got it, nevermind, thank you! that works
2020-10-21 01:01:54	-->	lhadhazy (~Thunderbi@0526822A.dsl.pool.telekom.hu) has joined #python
2020-10-21 01:02:01	SnoopJ	n.b. that spelling assumes the list is at least 10 elements long
2020-10-21 01:02:09	-->	awaxa (awaxamatri@gateway/shell/matrix.org/x-yppgxradftroajhd) has joined #python
2020-10-21 01:02:17	<--	BestSteve (~weechat@gateway/tor-sasl/beststeve) has quit (Remote host closed the connection)
2020-10-21 01:02:26	-->	ivanf (~Ivan@unaffiliated/kferdous) has joined #python
2020-10-21 01:03:20	-->	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has joined #python
2020-10-21 01:03:37	<--	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has left #python
2020-10-21 01:03:40	-->	BestSteve (~weechat@gateway/tor-sasl/beststeve) has joined #python
2020-10-21 01:03:49	SnoopJ	pleasing visual pattern when pretty-printed over a boring input list(range(N)) though: http://ix.io/2BoD/py
2020-10-21 01:04:18	<--	snatcher (~user@gateway/tor-sasl/snatcher) has quit (Ping timeout: 240 seconds)
2020-10-21 01:04:43	<--	ivanf (~Ivan@unaffiliated/kferdous) has quit (Client Quit)
2020-10-21 01:04:56	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 01:05:03	<--	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has quit (Ping timeout: 260 seconds)
2020-10-21 01:06:54	-->	snatcher (~user@gateway/tor-sasl/snatcher) has joined #python
2020-10-21 01:07:00	<--	lhadhazy (~Thunderbi@0526822A.dsl.pool.telekom.hu) has quit (Quit: lhadhazy)
2020-10-21 01:07:08	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Quit: ChatZilla 0.9.93 [Firefox 56.0.2/20171024165158])
2020-10-21 01:07:10	f8e4	bjs why i bench: to get feel of what right/wrong in algodesign (no capi) yet
2020-10-21 01:07:17	-->	uskerine (~uskerine@189.188.78.188.dynamic.jazztel.es) has joined #python
2020-10-21 01:07:19	<--	vuoto (~vuoto@80.71.142.174) has quit (Remote host closed the connection)
2020-10-21 01:07:20	<--	boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) has quit (Ping timeout: 264 seconds)
2020-10-21 01:07:48	--	insurrect is now known as sumdud
2020-10-21 01:07:53	bjs	f8e4: you just need to be careful about doing it right.  I don't recall if it was you, but someone was here doing benchmarks for recursive things but did it wrong
2020-10-21 01:07:59	bjs	and came to the opposite conclusion
2020-10-21 01:07:59	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-10-21 01:08:04	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 01:08:49	uskerine	Hi, I try to generate an epoch timestamp from a datatime and I got an epoch time which does not match with epochconverter.com, am I doing something wrong? https://dpaste.org/QAOX
2020-10-21 01:08:58	bjs	f8e4: and in cases like this,  it's *really* hard to say whether the first ,or whether v2 will be faster, and it's going to depend on many factors, and you really need to get representative samples over a wide range of inputs to understand the space here
2020-10-21 01:09:17	f8e4	bjs sure was me, just to show what can be done in py rather c down
2020-10-21 01:10:01	bjs	f8e4: well I mean, the C was incredibly fast and the recursive Python was incredibly slow
2020-10-21 01:10:34	<--	bitmask (~bitmask@2601:84:c702:f500:8035:c710:1b8c:25) has quit (Quit: Gone to sleep...)
2020-10-21 01:10:43	<--	phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has quit (Quit: WeeChat 2.9)
2020-10-21 01:10:46	SnoopJ	in order to understand which is faster from inspection, you absolutely must know something about the implementation, too
2020-10-21 01:11:21	<--	dino82 (~deeno@unaffiliated/dino82) has quit (Remote host closed the connection)
2020-10-21 01:11:30	<--	vuoto (~vuoto@80.71.142.174) has quit (Remote host closed the connection)
2020-10-21 01:11:54	-->	gitesh (uid423739@gateway/web/irccloud.com/x-ptokpgefbxaicptb) has joined #python
2020-10-21 01:11:56	-->	fstd_ (~fstd@unaffiliated/fisted) has joined #python
2020-10-21 01:12:09	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 272 seconds)
2020-10-21 01:12:16	-->	mattshu67 (1865b989@dynamic-acs-24-101-185-137.zoominternet.net) has joined #python
2020-10-21 01:12:18	--	fstd_ is now known as fstd
2020-10-21 01:14:19	-->	zahlman (~zahlman@toroon4432w-lp130-05-64-229-229-12.dsl.bell.ca) has joined #python
2020-10-21 01:14:26	-->	bitfawkes (055aedfc@mob-5-90-237-252.net.vodafone.it) has joined #python
2020-10-21 01:14:53	<--	dethos (~dethos@95.172.177.165) has quit (Ping timeout: 246 seconds)
2020-10-21 01:15:01	f8e4	this one: https://bpa.st/IFHQ
2020-10-21 01:15:15	bjs	f8e4: yes, this paste is invalid and is wrong
2020-10-21 01:15:31	f8e4	bjs i fight you!P
2020-10-21 01:15:35	bjs	f8e4: and is a nice demonstration why believing numbers without understanding the implementation is painful
2020-10-21 01:15:45	bjs	f8e4: okay, well look at your "recursive" factorial_ function
2020-10-21 01:15:49	bjs	f8e4: notice how it *doesnt* call factorial_ ?
2020-10-21 01:15:58	<--	overyander (~overyande@209.141.208.197) has quit (Quit: Leaving)
2020-10-21 01:16:25	 *	f8e4 rekt
2020-10-21 01:16:39	Stboonch	that was beautiful
2020-10-21 01:16:44	<--	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has quit (Ping timeout: 256 seconds)
2020-10-21 01:16:51	han-solo	the purge ?
2020-10-21 01:17:13	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-10-21 01:17:18	<--	Asmodee (~Asmodee@gateway/tor-sasl/asmodee) has quit (Remote host closed the connection)
2020-10-21 01:17:23	Stboonch	no, that conversation
2020-10-21 01:17:53	jarthur	uskerine it's an interesting example. It demonstrates the danger of using the class-based zones from pytz
2020-10-21 01:18:01	jarthur	"A pytz timezone class does not represent a single offset from UTC, it represents a geographical area which, over the course of history, has probably gone through several different UTC offsets. The oldest offset for a given zone, representing the offset from before time zones were standardized (in the late 1800s, most places) is usually called "LMT" (Local Mean Time), and it is often offset from UTC by an odd number of minutes."
2020-10-21 01:18:06	han-solo	Stboonch: ah ':)
2020-10-21 01:18:15	-->	stranac (~stranac@78-2-33-22.adsl.net.t-com.hr) has joined #python
2020-10-21 01:19:38	<--	reynir (~reynir@unaffiliated/reynir) has quit (Ping timeout: 256 seconds)
2020-10-21 01:19:39	-->	reynir1 (~reynir@unaffiliated/reynir) has joined #python
2020-10-21 01:19:45	<--	edd_lc (~edd_lc@85-250-110-184.bb.netvision.net.il) has quit (Ping timeout: 272 seconds)
2020-10-21 01:20:33	--	reynir1 is now known as reynir
2020-10-21 01:21:23	-->	hoshi (~HoshiYama@accj124.neoplus.adsl.tpnet.pl) has joined #python
2020-10-21 01:21:42	<--	vuoto (~vuoto@80.71.142.174) has quit (Remote host closed the connection)
2020-10-21 01:22:16	--	[reportWha]L is now known as [freenUde]
2020-10-21 01:22:26	jarthur	uskerine the solution is to use pytz's localize method if you're using pytz's timezone classes: http://pytz.sourceforge.net/#localized-times-and-date-arithmetic
2020-10-21 01:22:53	Wooble	(or to use a better libary instead of datetime+pytz)
2020-10-21 01:23:52	Wooble	(also how can I not type "library"? I work for a library and type it many times a day :/)
2020-10-21 01:23:55	<--	bocaneri (sauvin@about/linux/staff/sauvin) has quit (Remote host closed the connection)
2020-10-21 01:23:56	-->	Dark (~dark@freebsd/user/dark) has joined #python
2020-10-21 01:24:14	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-10-21 01:25:04	-->	phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has joined #python
2020-10-21 01:25:10	<--	djancak (~djancak@unaffiliated/djancak) has quit (Read error: Connection reset by peer)
2020-10-21 01:26:44	jarthur	Yea, the 3rd-party pendulum is pretty good. datetime+zoneinfo.ZoneInfo also works well if you're on Python 3.9+ on an up to date Linux or macOS.
2020-10-21 01:26:50	<--	vuoto (~vuoto@80.71.142.174) has quit (Remote host closed the connection)
2020-10-21 01:27:19	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-10-21 01:28:11	<--	vuoto (~vuoto@80.71.142.174) has quit (Client Quit)
2020-10-21 01:28:50	-->	ELFrederich_ (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) has joined #python
2020-10-21 01:32:13	<--	ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) has quit (Ping timeout: 260 seconds)
2020-10-21 01:32:39	-->	racoon_z (~guillermo@2806:108e:14:1a3a:38c4:2321:8ca3:14c8) has joined #python
2020-10-21 01:33:36	<--	phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) has quit (Ping timeout: 246 seconds)
2020-10-21 01:34:51	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 01:36:06	-->	Streaker (~Streaker@unaffiliated/streaker) has joined #python
2020-10-21 01:36:09	-->	zpe (~zpe@host-95-197-99-71.mobileonline.telia.com) has joined #python
2020-10-21 01:36:22	-->	smanched (~smanched@67-220-3-33.fttp.usinternet.com) has joined #python
2020-10-21 01:36:22	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-10-21 01:36:38	-->	led1 (~Thunderbi@217.66.160.14) has joined #python
2020-10-21 01:37:02	<--	led1 (~Thunderbi@217.66.160.14) has quit (Client Quit)
2020-10-21 01:38:33	<--	ephysthos (~ephysthos@194.152.145.75) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2020-10-21 01:38:38	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 01:38:56	<--	Saukk (~Saukk@2001:998:f9:2914:1c59:9bb5:b94c:4) has quit (Remote host closed the connection)
2020-10-21 01:39:36	-->	Asmodee (~Asmodee@gateway/tor-sasl/asmodee) has joined #python
2020-10-21 01:39:48	<--	Guest20 (~textual@103.215.168.1) has quit (Quit: ZZZzzz…)
2020-10-21 01:40:49	-->	LionOpeter (~liron@bzq-79-179-30-182.red.bezeqint.net) has joined #python
2020-10-21 01:40:59	<--	lolidunno (~lolidunno@FL1-133-202-247-87.tky.mesh.ad.jp) has quit (Quit: h)
2020-10-21 01:41:35	-->	rogersm (~rogersm@92.59.121.108) has joined #python
2020-10-21 01:42:18	-->	mystic (~mystic@cable-178-148-99-253.dynamic.sbb.rs) has joined #python
2020-10-21 01:43:56	-->	schumaml (~schumaml@dslb-094-217-079-017.094.217.pools.vodafone-ip.de) has joined #python
2020-10-21 01:44:25	-->	burakcank (~burakcank@88.243.152.254) has joined #python
2020-10-21 01:44:27	-->	sandra_96 (~sandra_96@c-86a170d5.05-229-6c756e3.bbcust.telenor.se) has joined #python
2020-10-21 01:44:34	<--	lucad111 (~lucad111@linaro/lucad111) has quit (Quit: Leaving)
2020-10-21 01:46:22	<--	rogersm (~rogersm@92.59.121.108) has quit (Ping timeout: 272 seconds)
2020-10-21 01:49:11	<--	yohnnyjoe (~yohnnyjoe@c-73-163-139-169.hsd1.dc.comcast.net) has quit (Ping timeout: 246 seconds)
2020-10-21 01:49:46	<--	sandra_96 (~sandra_96@c-86a170d5.05-229-6c756e3.bbcust.telenor.se) has quit (Quit: Leaving)
2020-10-21 01:50:04	<--	lauxley (~lauxley@2a01:e35:2fd5:2700:dd29:a19e:b54d:804a) has quit (Remote host closed the connection)
2020-10-21 01:50:24	<--	sumdud (b0ca2307@gateway/web/cgi-irc/kiwiirc.com/ip.176.202.35.7) has quit (Quit: Connection closed)
2020-10-21 01:51:42	<--	kof (~kof@103.101.196.4) has quit
2020-10-21 01:51:52	<--	burakcank (~burakcank@88.243.152.254) has quit (Ping timeout: 256 seconds)
2020-10-21 01:52:18	<--	spithash (~spithash@gateway/tor-sasl/spithash) has quit (Ping timeout: 240 seconds)
2020-10-21 01:52:47	<--	dan2wik (dan2wik@gateway/shell/hellomouse/x-vgkhaaxbxdquszxi) has quit (Quit: quit has dan2wik!)
2020-10-21 01:52:47	<--	PacKetSlayer (PacketSlay@hellomouse/member/packetslayer) has quit (Quit: Woosh!)
2020-10-21 01:52:58	uskerine	jarthur is it needed to use pytz or shall I use something different?
2020-10-21 01:53:10	<--	manu1511 (~manu@213162073145.public.t-mobile.at) has quit (Quit: WeeChat 2.8)
2020-10-21 01:53:12	<--	bilb_ono (~alexmarsh@c-73-70-189-144.hsd1.ca.comcast.net) has quit (Quit: bilb_ono)
2020-10-21 01:53:13	<--	vuoto (~vuoto@80.71.142.174) has quit (Quit: WeeChat 2.9-dev)
2020-10-21 01:53:29	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-10-21 01:53:36	-->	spithash (~spithash@gateway/tor-sasl/spithash) has joined #python
2020-10-21 01:53:55	-->	burakcank (~burakcank@159.146.43.3) has joined #python
2020-10-21 01:54:33	uskerine	I want to convert a given date/time in New York to its epoch unix
2020-10-21 01:54:47	-->	ssbr_ (~scorchsab@python/site-packages/ssbr) has joined #python
2020-10-21 01:55:00	-->	sandra_96 (~sandra_96@c-86a170d5.05-229-6c756e3.bbcust.telenor.se) has joined #python
2020-10-21 01:55:20	<--	tethroar (~tethroar@95.149.17.213) has quit (Ping timeout: 256 seconds)
2020-10-21 01:56:01	-->	leoni (~leoni@181.23.206.162) has joined #python
2020-10-21 01:56:01	<--	spiri (~spiri@unaffiliated/spiri) has quit (Ping timeout: 260 seconds)
2020-10-21 01:56:06	-->	tethroar (~tethroar@95.149.17.213) has joined #python
2020-10-21 01:56:31	-->	waynew (~wayne@24-35-211-21.fidnet.com) has joined #python
2020-10-21 01:56:48	jarthur	You can continue to use pytz, uskerine, you would just need to use the localize() method as documented.
2020-10-21 01:58:22	jarthur	But I personally recommend pendulum instead if you're going for 3rd party libraries. It's just easier. https://pendulum.eustace.io/docs/
2020-10-21 01:58:32	-->	pabed (~pabed@46.182.202.167.c.fiberdirekt.net) has joined #python
2020-10-21 01:58:58	<--	greedom (~greedom@2001:16b8:2eeb:cc00:16c6:8014:1a3b:7520) has quit (Quit: Konversation terminated!)
2020-10-21 01:59:21	-->	edlinde (~edlinde@183.83.146.241) has joined #python
2020-10-21 02:00:20	<--	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has quit (Ping timeout: 240 seconds)
2020-10-21 02:00:24	-->	PacKetSlayer (PacketSlay@hellomouse/member/packetslayer) has joined #python
2020-10-21 02:00:40	<--	Tanvir (~tanvir@wikimedia/wikitanvir) has quit (Ping timeout: 246 seconds)
2020-10-21 02:00:49	-->	dan2wik (dan2wik@unaffiliated/dan2wik) has joined #python
2020-10-21 02:01:00	<--	Albori_ (~Albori@24.35.177.176) has quit (Quit: Albori_)
2020-10-21 02:01:03	uskerine	jarthur if I am not going for 3rd party (I thought pytz was part of python, what shall I use?)
2020-10-21 02:01:38	<--	dreamon (~dreamon@unaffiliated/dreamon) has quit (Ping timeout: 260 seconds)
2020-10-21 02:01:45	-->	AladdinMtl (1830348c@24.48.52.140) has joined #python
2020-10-21 02:02:23	<--	babygnu (~robert@gateway/tor-sasl/babygnu) has quit (Remote host closed the connection)
2020-10-21 02:02:32	AladdinMtl	Hello, do you know how can I create a virtual python environment with a specific Pipfile ?
2020-10-21 02:02:36	zamba	supakeen: the problem with your implementation is that it creates one huge int from the binary data.. but i need to create new bytes from 8-bit ints
2020-10-21 02:02:38	<--	panikovsky (~panikovsk@87.117.60.168) has quit (Quit: Leaving)
2020-10-21 02:02:42	<--	tethroar (~tethroar@95.149.17.213) has quit (Ping timeout: 256 seconds)
2020-10-21 02:02:50	-->	babygnu (~robert@gateway/tor-sasl/babygnu) has joined #python
2020-10-21 02:02:50	Wooble	uskerine: pytz is not a part of python.
2020-10-21 02:02:52	zamba	supakeen: so it needs to work in 8-bit intervals
2020-10-21 02:03:02	<--	Jigsy (~Jigsy@unaffiliated/jigsy) has quit (Disconnected by services)
2020-10-21 02:03:09	-->	Jigsy` (~Jigsy@unaffiliated/jigsy) has joined #python
2020-10-21 02:03:33	-->	Soother99 (~Soother99@116.75.90.141) has joined #python
2020-10-21 02:03:48	jarthur	uskerine only viable option for geographical zones in the Python stdlib, is if you're on Python 3.9+ on non-windows. That's using datetime with zoneinfo (which pulls from your OS' timezone database)
2020-10-21 02:04:05	-->	RedAero (54ec083e@gateway/web/cgi-irc/kiwiirc.com/ip.84.236.8.62) has joined #python
2020-10-21 02:04:14	RedAero	Hello
2020-10-21 02:04:37	uskerine	so the most "base" option is pytz?
2020-10-21 02:04:51	<--	Skybound2 (~skybound@2a02:8010:645a:0:5de2:4839:775:18be) has quit (Ping timeout: 240 seconds)
2020-10-21 02:04:51	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 02:05:02	--	Jigsy` is now known as Jigsy
2020-10-21 02:05:03	-->	contingo (~textual@213.205.240.16) has joined #python
2020-10-21 02:05:30	jarthur	uskerine not sure what you mean by base, but pendulum gives you both zones and dates in a very digestible form.
2020-10-21 02:05:33	Wooble	pytz is the 3rd party library most likely to give you a timezone no one's used for over 100 years, which has its own charm if you like to get sidetracked into reading about the history of timekeeping.
2020-10-21 02:05:38	RedAero	I've been sent a script at work which uses a weird pathing system I've never seen before... it determines a root folder (the desktop), and then concatenates "\\python_files\\foo.bar".
2020-10-21 02:05:43	uskerine	by base I mean most widely used
2020-10-21 02:05:44	<--	amstan (~amstan@aichallenge/admin/amstan) has quit (Ping timeout: 260 seconds)
2020-10-21 02:05:58	<--	tamarindo (~tamarindo@gateway/tor-sasl/tamarindo) has quit (Ping timeout: 240 seconds)
2020-10-21 02:05:59	<--	jj995 (~jdimatteo@150.12.83.34.bc.googleusercontent.com) has quit (Quit: Leaving.)
2020-10-21 02:06:12	RedAero	What do those double backslashes mean? Is \\python_files\\ something special?
2020-10-21 02:06:14	<--	vedu (~vedu@36.255.86.186) has quit (Remote host closed the connection)
2020-10-21 02:06:18	<--	deeman (~deeman@gateway/tor-sasl/deeman) has quit (Ping timeout: 240 seconds)
2020-10-21 02:06:25	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-10-21 02:06:30	--	adamantium is now known as mussolini
2020-10-21 02:06:44	<--	edlinde (~edlinde@183.83.146.241) has quit (Quit: edlinde)
2020-10-21 02:07:11	mattshu67	i would think just a simple backslash escape but i've been wrong a few times today
2020-10-21 02:07:33	RedAero	Sidenote: this script is meant to be used with Anaconda but it's basically just some selenium/chromedriver stuff
2020-10-21 02:07:38	deniska	RedAero: "\\" is how you type \ inside a python string
2020-10-21 02:08:09	RedAero	ah, so they just didn't bother to do a raw string (or use forward slashes) and just doubled them up?
2020-10-21 02:08:29	-->	amstan_ (~amstan@aichallenge/admin/amstan) has joined #python
2020-10-21 02:08:45	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 02:08:49	uskerine	https://stackoverflow.com/questions/4974712/python-setting-a-datetime-in-a-specific-timezone-without-utc-conversions
2020-10-21 02:08:56	nate35	Anyone know of a one liner to do something like so: https://repl.it/repls/PossibleStaleBases
2020-10-21 02:09:04	deniska	they didn't bother to use pathlib or os.path.join which is a proper way of concatenating paths
2020-10-21 02:09:23	-->	tethroar (~tethroar@95.149.17.213) has joined #python
2020-10-21 02:09:26	<--	bmurt (~hmm@c-76-99-78-62.hsd1.pa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 02:09:28	nate35	i.e. perform a function call on itself n times
2020-10-21 02:09:29	<--	zpe (~zpe@host-95-197-99-71.mobileonline.telia.com) has quit (Ping timeout: 246 seconds)
2020-10-21 02:09:33	-->	overyander (~overyande@209.141.208.197) has joined #python
2020-10-21 02:09:36	-->	phasetwo (~phasetwo@2601:602:8d80:4e50:ddd9:53dc:97ab:1069) has joined #python
2020-10-21 02:10:25	-->	greedom (~greedom@i5E86B3B6.versanet.de) has joined #python
2020-10-21 02:11:10	agronholm	uskerine: there's also backports.zoneinfo if you're not on py3.9 yet
2020-10-21 02:11:12	<--	amr00t (~amroot@193.32.127.151) has quit (Ping timeout: 256 seconds)
2020-10-21 02:11:13	-->	deeman (~deeman@gateway/tor-sasl/deeman) has joined #python
2020-10-21 02:11:22	<--	mixfix41 (~popebook2@unaffiliated/mixfix41) has left #python ("Leaving")
2020-10-21 02:11:36	<--	aw1 (~aw1@unaffiliated/aw1) has quit (Remote host closed the connection)
2020-10-21 02:11:41	-->	Tripknotix (~Tripknoti@ip72-193-170-90.lv.lv.cox.net) has joined #python
2020-10-21 02:12:15	-->	kidn3ys (800fb986@gateway/web/cgi-irc/kiwiirc.com/ip.128.15.185.134) has joined #python
2020-10-21 02:12:21	-->	aw1 (~aw1@unaffiliated/aw1) has joined #python
2020-10-21 02:12:50	-->	aleagori (~ale@2a02:a312:c63d:8e00:d4c4:18c8:2899:3e12) has joined #python
2020-10-21 02:13:19	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Quit: leaving)
2020-10-21 02:13:25	<--	noway96 (~noway96@73.62.200.193) has quit (Read error: Connection reset by peer)
2020-10-21 02:13:43	<--	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2020-10-21 02:14:17	Wooble	nate35: I'm not seeing where anything there is calling itself n times. :/
2020-10-21 02:14:22	f8e4	what is the bigoh for set dict list deque .clear() ? O1 they say, On imo
2020-10-21 02:14:24	kidn3ys	Hello. I'm working with pandas merge(). I'm attempting to 'left' join two datasets. If the 'left' dataset had say 10 entries and the 'right' dataset had 8, is there any reason that the resulting join would exceed 10 entries? I'm working with a larger dataset and seeing something similar but I don't understand why. =/
2020-10-21 02:15:49	-->	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has joined #python
2020-10-21 02:16:16	Wooble	f8e4: who is "they"?
2020-10-21 02:16:24	<--	greedom (~greedom@i5E86B3B6.versanet.de) has quit (Quit: Konversation terminated!)
2020-10-21 02:16:26	f8e4	https://www.ics.uci.edu/~pattis/ICS-33/lectures/complexitypython.txt, https://www.ics.uci.edu/~pattis/ICS-33/lectures/complexitypython.txt
2020-10-21 02:16:36	f8e4	https://wiki.python.org/moin/TimeComplexity
2020-10-21 02:16:47	papna	kidn3ys: Is it the case the non-matches result in a NA and multi-matches result in multiple rows?
2020-10-21 02:17:08	Wooble	f8e4: the wiki.python.org one doesn't even contain the string "clear"
2020-10-21 02:17:12	-->	greedom (~greedom@i5E86B3B6.versanet.de) has joined #python
2020-10-21 02:17:27	-->	Skybound2 (~skybound@2a02:8010:645a:0:4405:58de:5741:63ac) has joined #python
2020-10-21 02:17:32	kidn3ys	papna: wouldn't non-matches from the 'right' dataset just be discarded?
2020-10-21 02:17:52	-->	metabsd (uid209675@gateway/web/irccloud.com/x-djliqcwcwbzkalfn) has joined #python
2020-10-21 02:18:53	<--	miique (~miique@181.46.139.165) has quit (Ping timeout: 265 seconds)
2020-10-21 02:19:06	-->	tamarindo (~tamarindo@gateway/tor-sasl/tamarindo) has joined #python
2020-10-21 02:19:20	Wooble	f8e4: the uci.edu one looks correct (disclaimer: I stopped after reading the implementation of list.clear but it was what I expected.
2020-10-21 02:20:20	Wooble	f8e4: err, I guess it does decrease the reference count on each item, which is O(n) :/
2020-10-21 02:20:42	kidn3ys	papna: regarding multi-matches -- do you mean if there is a single unique element in the 'left' dataset and there are 3 entries in the 'right
2020-10-21 02:20:48	<--	greedom (~greedom@i5E86B3B6.versanet.de) has quit (Client Quit)
2020-10-21 02:20:57	kidn3ys	' dataset that it would result in additional entries for the join?
2020-10-21 02:21:07	f8e4	Wooble i think so too, their resoning is 'its like = []' lol
2020-10-21 02:21:23	<--	b3h3m0th (uid26288@gateway/web/irccloud.com/x-dvlplobujlldykjf) has quit (Quit: Connection closed for inactivity)
2020-10-21 02:21:25	<--	zfigz (~Adium@76-198-158-124.lightspeed.tukrga.sbcglobal.net) has quit (Quit: Leaving.)
2020-10-21 02:21:42	ammar2	it just depends on what you consider an operation in your complexity
2020-10-21 02:21:43	-->	greedom (~greedom@i5E86B3B6.versanet.de) has joined #python
2020-10-21 02:21:57	<--	greedom (~greedom@i5E86B3B6.versanet.de) has quit (Remote host closed the connection)
2020-10-21 02:22:03	papna	kidn3ys: No. That sounds like inner.
2020-10-21 02:22:20	kidn3ys	papna: agreed.
2020-10-21 02:22:27	<--	psachin (~psachin@103.51.232.183) has quit (Ping timeout: 256 seconds)
2020-10-21 02:22:32	kidn3ys	I suppose I can test that with some controlled data though.
2020-10-21 02:22:44	ammar2	but by their own definition, "Simple operators on integers (whose values are small: e.g., under 12 digits) like + or == are also O(1)." increasing/decreasing refcount is precisely that
2020-10-21 02:22:46	-->	greedom (~greedom@i5E86B3B6.versanet.de) has joined #python
2020-10-21 02:22:47	ammar2	and there's n of those
2020-10-21 02:22:50	ammar2	so...
2020-10-21 02:22:50	Wooble	ammar2: if you're happy with memory leaks you can write a really fast implementation. :)
2020-10-21 02:22:53	-->	lacrymology (~lacrymolo@static-176-77-25-46.ipcom.comunitel.net) has joined #python
2020-10-21 02:22:55	papna	kidn3ys: I recommend trying with the DataFrame({'a': [1,2,3]}) and DataFrame({'a': [1,1]})
2020-10-21 02:23:01	papna	kidn3ys: Right, exactly.
2020-10-21 02:23:09	kidn3ys	papna: thanks, ill play with it
2020-10-21 02:23:12	-->	jarthur_ (~jarthur@cpe-70-114-215-149.austin.res.rr.com) has joined #python
2020-10-21 02:23:19	-->	braincrash (~braincras@bl5-42-100.dsl.telepac.pt) has joined #python
2020-10-21 02:23:24	-->	yohnnyjoe (~yohnnyjoe@c-73-163-139-169.hsd1.dc.comcast.net) has joined #python
2020-10-21 02:23:24	Wooble	ammar2: I'm not mathemetician but I think 1 * n is n, not 1. :)
2020-10-21 02:23:55	ammar2	yeah exactly
2020-10-21 02:24:10	<--	jarthur (~jarthur@cpe-70-114-215-149.austin.res.rr.com) has quit (Ping timeout: 256 seconds)
2020-10-21 02:24:21	<--	carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) has quit (Ping timeout: 272 seconds)
2020-10-21 02:24:30	<--	greedom (~greedom@i5E86B3B6.versanet.de) has quit (Remote host closed the connection)
2020-10-21 02:25:12	-->	greedom (~greedom@2001:16b8:2eeb:cc00:16c6:8014:1a3b:7520) has joined #python
2020-10-21 02:25:20	-->	karab44 (~karab44@unaffiliated/karab44) has joined #python
2020-10-21 02:27:04	-->	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has joined #python
2020-10-21 02:27:04	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Remote host closed the connection)
2020-10-21 02:27:26	-->	Skeer (~Your_Dad@207.179.86.36) has joined #python
2020-10-21 02:27:48	<--	AladdinMtl (1830348c@24.48.52.140) has left #python
2020-10-21 02:27:56	kidn3ys	papna: hrm, that seems to be the case.
2020-10-21 02:28:39	-->	amr00t (~amroot@193.32.127.152) has joined #python
2020-10-21 02:29:07	<--	dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 02:29:24	-->	AlanMD (~alan@86.120.236.80) has joined #python
2020-10-21 02:29:42	-->	zro (~zro@wikimedia/zro) has joined #python
2020-10-21 02:29:57	-->	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has joined #python
2020-10-21 02:30:05	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Ping timeout: 260 seconds)
2020-10-21 02:30:12	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-21 02:30:40	<--	javi404 (~quassel@unaffiliated/javi404) has quit (Ping timeout: 240 seconds)
2020-10-21 02:30:52	-->	AlanMD_ (~alan@193.105.140.131) has joined #python
2020-10-21 02:31:28	-->	esselfe (~steph@unaffiliated/esselfe) has joined #python
2020-10-21 02:31:35	<--	corney91 (~centos@188.166.116.164) has quit (Quit: WeeChat 2.7.1)
2020-10-21 02:32:32	--	mussolini is now known as adamantium
2020-10-21 02:32:39	nate35	Wooble: Oop. Sorry, badly phrased. More so calls an operation on itself n times
2020-10-21 02:32:39	<--	Andrew (~aickem@stu-116-155-171-184.champlain.edu) has quit (Ping timeout: 256 seconds)
2020-10-21 02:32:55	<--	Soother99 (~Soother99@116.75.90.141) has quit (Ping timeout: 265 seconds)
2020-10-21 02:33:10	-->	javi404 (~quassel@unaffiliated/javi404) has joined #python
2020-10-21 02:33:39	<--	Wooble (~Wooble@unaffiliated/wooble) has quit (Quit: WeeChat 2.9)
2020-10-21 02:33:47	<--	AlanMD (~alan@86.120.236.80) has quit (Ping timeout: 256 seconds)
2020-10-21 02:34:02	<--	mattshu67 (1865b989@dynamic-acs-24-101-185-137.zoominternet.net) has quit (Remote host closed the connection)
2020-10-21 02:34:11	--	jarthur_ is now known as jarthur
2020-10-21 02:34:16	<--	MmeQuignon (~matthieu@2a01:e0a:1ab:f090:28b1:5ff:1281:8c4b) has quit (Ping timeout: 246 seconds)
2020-10-21 02:34:26	f8e4	why no tuple().copy() ?
2020-10-21 02:34:47	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 02:34:51	f8e4	(seems just not implemented)
2020-10-21 02:35:21	-->	irc_user (uid423822@gateway/web/irccloud.com/x-jjpkvgqppresuvbx) has joined #python
2020-10-21 02:35:33	<--	deekej (~deekej@128.0.185.178) has quit (Remote host closed the connection)
2020-10-21 02:35:40	-->	MmeQuignon (~matthieu@2a01:e0a:1ab:f090:608c:3b04:a63c:1221) has joined #python
2020-10-21 02:36:30	AndreasLutro	f8e4: same reason 1.copy() doesn't exist - it's an immutable type
2020-10-21 02:36:39	<--	code-witch (~code-witc@150.129.88.5) has quit (Ping timeout: 260 seconds)
2020-10-21 02:36:47	-->	rpg (~rpg@162-219-230-90.fttp.usinternet.com) has joined #python
2020-10-21 02:37:04	f8e4	AndreasLutro its a read on t; show me the write?
2020-10-21 02:37:30	emerent	what?
2020-10-21 02:37:40	AndreasLutro	f8e4: a read on what?
2020-10-21 02:38:03	bjs	f8e4: what would the copy do?  it's already immutable so there's no benefit to a (shallow) copy
2020-10-21 02:38:18	<--	doh (~j@gateway/tor-sasl/doh) has quit (Quit: Ping timeout (120 seconds))
2020-10-21 02:38:34	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 02:38:35	-->	doh (~j@gateway/tor-sasl/doh) has joined #python
2020-10-21 02:38:50	f8e4	bjs true
2020-10-21 02:39:08	<--	aw1 (~aw1@unaffiliated/aw1) has quit (Ping timeout: 264 seconds)
2020-10-21 02:39:14	<--	greedom (~greedom@2001:16b8:2eeb:cc00:16c6:8014:1a3b:7520) has quit (Quit: Konversation terminated!)
2020-10-21 02:39:53	-->	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has joined #python
2020-10-21 02:40:02	-->	greedom (~greedom@i5E86B3B6.versanet.de) has joined #python
2020-10-21 02:40:07	-->	code-witch (~code-witc@150.129.88.5) has joined #python
2020-10-21 02:40:10	SnoopJ	you could always do tuple(*tup) if you really wanted to, but as already mentioned, there's not really any point to copying a tuple
2020-10-21 02:40:21	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-10-21 02:40:22	nedbat	anyone have a Windows dev machine and want to try reproducing a funky virtualenv bug in the coverage.py test suite? :)  https://github.com/pypa/virtualenv/issues/1990
2020-10-21 02:40:47	<--	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has quit (Remote host closed the connection)
2020-10-21 02:41:02	<--	greedom (~greedom@i5E86B3B6.versanet.de) has quit (Client Quit)
2020-10-21 02:41:06	<--	sdoherty (sdoherty@nat/redhat/x-gzwphijarjwpxwbs) has quit (Quit: Leaving)
2020-10-21 02:41:47	-->	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has joined #python
2020-10-21 02:41:52	-->	greedom (~greedom@i5E86B3B6.versanet.de) has joined #python
2020-10-21 02:42:18	 *	f8e4 sees gaborbernat doing his shenanigan again
2020-10-21 02:42:23	-->	Barones (~Barones@189.50.80.77) has joined #python
2020-10-21 02:42:27	-->	rogersm (~rogersm@92.59.121.108) has joined #python
2020-10-21 02:42:52	<--	jigubigule (~jigubigul@2001:1c06:19ca:cc00:3d8e:9080:9c29:e7a7) has quit (Quit: WeeChat 2.6)
2020-10-21 02:43:09	<--	greedom (~greedom@i5E86B3B6.versanet.de) has quit (Client Quit)
2020-10-21 02:43:21	<--	efm (~efm@vpn.tummy.com) has quit (Quit: Konversation terminated!)
2020-10-21 02:43:31	-->	greedom (~greedom@2001:16b8:2eeb:cc00:16c6:8014:1a3b:7520) has joined #python
2020-10-21 02:44:55	<--	dtcrshr (~dtcrshr@unaffiliated/datacrusher) has quit (Quit: Leaving)
2020-10-21 02:45:05	-->	auk (auk@gateway/vpn/protonvpn/auk) has joined #python
2020-10-21 02:45:05	<--	greedom (~greedom@2001:16b8:2eeb:cc00:16c6:8014:1a3b:7520) has quit (Client Quit)
2020-10-21 02:45:29	-->	greedom (~greedom@2001:16b8:2eeb:cc00:16c6:8014:1a3b:7520) has joined #python
2020-10-21 02:45:56	<--	ciccio2000 (~bscuser@122.110.14.37.dynamic.jazztel.es) has quit (Ping timeout: 256 seconds)
2020-10-21 02:46:38	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-10-21 02:46:50	-->	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has joined #python
2020-10-21 02:47:03	<--	nate35 (cf6b9b24@207.107.155.36) has quit (Remote host closed the connection)
2020-10-21 02:47:20	auk	hello channel
2020-10-21 02:47:43	auk	any recommendations on tools for contained development environments?
2020-10-21 02:47:47	<--	rogersm (~rogersm@92.59.121.108) has quit (Ping timeout: 272 seconds)
2020-10-21 02:47:55	auk	like vagrant-lxc vs docker/docker-compose
2020-10-21 02:48:13	-->	miique (~miique@181.46.139.165) has joined #python
2020-10-21 02:49:06	<--	de-facto (~de-facto@gateway/tor-sasl/de-facto) has quit (Excess Flood)
2020-10-21 02:49:06	nedbat	f8e4: what does that mean?
2020-10-21 02:49:13	<--	hyper_dave (~hyper_dav@196.191.53.247) has quit (Ping timeout: 258 seconds)
2020-10-21 02:49:13	nkuttler	auk: docker works for me, will look into podman as soon as i have time
2020-10-21 02:49:21	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined #python
2020-10-21 02:49:22	<--	jw4 (~jw4@unaffiliated/jw4) has quit (Read error: Connection reset by peer)
2020-10-21 02:49:46	<--	rememberYou (~user@unaffiliated/rememberyou) has quit (Remote host closed the connection)
2020-10-21 02:50:12	Tripknotix	i know how to improve the tutorial section 11
2020-10-21 02:50:23	Tripknotix	you just gotta add links to the api calls that are discussed
2020-10-21 02:50:27	Tripknotix	like the section about textwrap
2020-10-21 02:50:34	<--	greedom (~greedom@2001:16b8:2eeb:cc00:16c6:8014:1a3b:7520) has quit (Quit: Konversation terminated!)
2020-10-21 02:50:47	auk	nkuttler, thanks. Btw i just noticed the podman-compose pkg on fedora
2020-10-21 02:50:49	<--	warpx (~warpx@88.99.13.78) has quit (Quit: Leaving...)
2020-10-21 02:50:56	Tripknotix	at the end put in parenthesis all of the discussed functions like ([.wrap()], [.fill()]
2020-10-21 02:51:07	Tripknotix	at the end of each section
2020-10-21 02:51:08	<--	Naan (~naan@unaffiliated/naan) has quit (Quit: Leaving)
2020-10-21 02:51:09	-->	Mrbuck (~Mrbuck@gateway/tor-sasl/mrbuck) has joined #python
2020-10-21 02:51:14	Tripknotix	i mean each example
2020-10-21 02:51:17	RedAero	ok this script is brilliant
2020-10-21 02:51:18	auk	nkuttler, do you know of any spots i can find good basic Dockerfiles for python development?
2020-10-21 02:51:19	-->	jw4 (~jw4@unaffiliated/jw4) has joined #python
2020-10-21 02:51:20	auk	like generic ones
2020-10-21 02:51:22	-->	greedom (~greedom@i5E86B3B6.versanet.de) has joined #python
2020-10-21 02:51:54	RedAero	it doesn't have authority to create a directory so you have to create it first, but then as it quits it removes that directory, having moved its contents elsewhere
2020-10-21 02:52:00	nkuttler	auk: not really, i had to build my own
2020-10-21 02:52:13	RedAero	so... you anytime you want to run it, you have to create the dir, only to have it be deleted
2020-10-21 02:52:21	-->	warpx (~warpx@88.99.13.78) has joined #python
2020-10-21 02:52:30	auk	nkuttler, podman-compose: "The main objective of this project is to be able to run docker-compose.yml unmodified and rootless." :D
2020-10-21 02:52:40	auk	nkuttler, ah i see
2020-10-21 02:52:47	grym	RedAero: sounds like someone's hacking together a NamedTemporaryDirectory
2020-10-21 02:52:54	-->	hyper_dave (~hyper_dav@196.191.53.249) has joined #python
2020-10-21 02:53:19	<--	RangerBob (~brian@pool-173-72-244-228.clppva.fios.verizon.net) has quit (Quit: Leaving)
2020-10-21 02:53:27	-->	sumagna (~sumagna@223.223.134.241) has joined #python
2020-10-21 02:54:04	RedAero	oh and the script is barely 150 lines and it has like 6 try: except:pass
2020-10-21 02:54:20	RedAero	the script runs, doesn't do anything, and exits
2020-10-21 02:54:36	-->	Rangar (~Rangar@2404:4404:1406:1b00:40d0:d620:fb8a:b322) has joined #python
2020-10-21 02:54:36	RedAero	someone overnight me some rum, fast
2020-10-21 02:55:09	nedbat	Tripknotix: you've been making suggestions about the tutorial for a while. i'm not sure what you want us to do with those suggestions.
2020-10-21 02:55:17	<--	sertsa (~sertsa@209.140.9.215) has quit (Quit: Leaving)
2020-10-21 02:55:35	-->	ephysthos (~ephysthos@194.152.145.75) has joined #python
2020-10-21 02:55:43	-->	masoudd (~masoudd@unaffiliated/masoudd) has joined #python
2020-10-21 02:56:20	<--	bitfawkes (055aedfc@mob-5-90-237-252.net.vodafone.it) has quit (Remote host closed the connection)
2020-10-21 02:56:43	<--	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has quit (Quit: WeeChat 2.9)
2020-10-21 02:57:32	Tripknotix	nothing i suppose
2020-10-21 02:57:52	<--	leitz (~leitz@c-174-56-144-2.hsd1.sc.comcast.net) has quit (Quit: Leaving)
2020-10-21 02:58:04	--	jess is now known as jess-o-lantern
2020-10-21 02:58:08	<--	ephysthos (~ephysthos@194.152.145.75) has quit (Client Quit)
2020-10-21 02:58:30	<--	vuoto (~vuoto@80.71.142.174) has quit (Quit: WeeChat 2.9-dev)
2020-10-21 02:59:10	<--	greedom (~greedom@i5E86B3B6.versanet.de) has quit (Quit: Konversation terminated!)
2020-10-21 03:00:05	<--	GreenBean (GreenBean@casserole.with.lightly.salted.cricket) has quit
2020-10-21 03:00:14	-->	dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net) has joined #python
2020-10-21 03:00:29	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-10-21 03:00:29	<--	vuoto (~vuoto@80.71.142.174) has quit (Client Quit)
2020-10-21 03:00:51	-->	dethos (~dethos@95.172.177.165) has joined #python
2020-10-21 03:01:02	<--	Gigiwka (~Gigiwka@95.161.223.38) has quit (Remote host closed the connection)
2020-10-21 03:01:48	-->	boB_K7IQ (~boB_K7IQ@152.44.147.180) has joined #python
2020-10-21 03:02:15	<--	ahadi (~ahadi@89.244.124.67) has quit (Ping timeout: 258 seconds)
2020-10-21 03:02:50	<--	helderc (~helderc@S010664777d8ff843.cg.shawcable.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-10-21 03:04:05	<--	zahlman (~zahlman@toroon4432w-lp130-05-64-229-229-12.dsl.bell.ca) has quit (Ping timeout: 260 seconds)
2020-10-21 03:04:16	<--	Streaker (~Streaker@unaffiliated/streaker) has quit (Read error: Connection reset by peer)
2020-10-21 03:04:20	-->	ahadi (~ahadi@i5E86AD6A.versanet.de) has joined #python
2020-10-21 03:04:21	-->	GreenBean (GreenBean@lets.celebrate.a.drunk.christmas) has joined #python
2020-10-21 03:04:51	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 03:05:12	<--	hoshi (~HoshiYama@accj124.neoplus.adsl.tpnet.pl) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 03:05:52	-->	ferdna (~ferdna@cpe-69-23-148-218.elp.res.rr.com) has joined #python
2020-10-21 03:06:33	-->	earthbreaker (~earthbrea@li778-229.members.linode.com) has joined #python
2020-10-21 03:07:47	ChrisWarrick	Tripknotix: it might be better if you put those suggestions on the bugtracker
2020-10-21 03:07:50	<--	LondonAppDev (Thunderbir@gateway/vpn/privateinternetaccess/londonappdev) has quit (Quit: LondonAppDev)
2020-10-21 03:07:52	SnoopJ	https://devguide.python.org/docquality/ is worth a look if you'd like to make your suggestions to people with the power to alter the docs
2020-10-21 03:07:53	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 03:09:14	Tripknotix	good idea ChrisWarrick
2020-10-21 03:09:29	-->	maslen (~maslen@unaffiliated/maslen) has joined #python
2020-10-21 03:10:01	grym	Tripknotix: i can give you a log of everything you've ever said if you've forgotten the issues you were having ...
2020-10-21 03:10:09	oprypin	is there any cross-platform way to access a virtualenv?
2020-10-21 03:10:20	oprypin	meaning with the exact same command line invocation
2020-10-21 03:10:33	maslen	Any opinions about which form is better? https://bpa.st/6U4Q
2020-10-21 03:10:43	oprypin	linux: venv/bin/python,  mac: venv/bin/python,  windows: venv\Scripts\python.exe  whyy
2020-10-21 03:10:58	SnoopJ	maslen, I think the second is preferable most of the time
2020-10-21 03:11:26	<--	mystic (~mystic@cable-178-148-99-253.dynamic.sbb.rs) has quit (Quit: Leaving)
2020-10-21 03:11:34	-->	skinnym (~skinnym@2601:8c0:4300:4e90:d06d:7d3:c8e9:d7c8) has joined #python
2020-10-21 03:12:35	<--	gelignite (~gelignite@55d45b0f.access.ecotel.net) has quit (Quit: Stay safe! Stay at home! Stop the chain reaction!)
2020-10-21 03:12:43	-->	Forsythe (Forsythe@gateway/vpn/privateinternetaccess/forsythe) has joined #python
2020-10-21 03:13:21	<--	CubicEarth (~CubicEart@c-67-168-1-172.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2020-10-21 03:14:47	-->	bwitt_ (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has joined #python
2020-10-21 03:14:48	-->	CubicEarth (~CubicEart@c-67-168-1-172.hsd1.wa.comcast.net) has joined #python
2020-10-21 03:14:49	<--	bwitt (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has quit (Read error: Connection reset by peer)
2020-10-21 03:15:06	RedAero	https://selenium-python.readthedocs.io/locating-elements.html#locating-by-xpath
2020-10-21 03:15:15	RedAero	am I to understand xpaths aren't 0 indexed?
2020-10-21 03:15:37	-->	fstd_ (~fstd@unaffiliated/fisted) has joined #python
2020-10-21 03:15:49	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 260 seconds)
2020-10-21 03:15:59	--	fstd_ is now known as fstd
2020-10-21 03:16:11	-->	luischi (~textual@178.red-83-43-199.dynamicip.rima-tde.net) has joined #python
2020-10-21 03:17:35	<--	cyphase (~cyphase@unaffiliated/cyphase) has quit (Ping timeout: 258 seconds)
2020-10-21 03:18:11	maslen	Thanks SnoopJ.
2020-10-21 03:18:53	graingert	oprypin: virtualenv provides a python module interface
2020-10-21 03:18:59	SnoopJ	RedAero, I believe that's right
2020-10-21 03:19:05	-->	Harlin (~hseritt@2600:1700:b6e0:2e7f:c956:13d5:f0e1:e438) has joined #python
2020-10-21 03:19:20	RedAero	fml
2020-10-21 03:19:52	oprypin	graingert, hmm even that doesn't clear up that much
2020-10-21 03:20:14	<--	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2020-10-21 03:20:23	<--	kosh (~kosh@p200300d08f0dbc00408c25c5d6117718.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-10-21 03:20:30	-->	_SKiTZO (~dark@34.80-203-30.nextgentel.com) has joined #python
2020-10-21 03:20:32	oprypin	my goal is to subsequently be able to call python on the command line
2020-10-21 03:20:39	-->	selimcan (~selimcan@178.204.250.205) has joined #python
2020-10-21 03:21:24	graingert	oprypin: https://virtualenv.pypa.io/en/stable/user_guide.html#virtualenv.cli_run
2020-10-21 03:21:42	graingert	You can do virtualenv.cli_run(...). interpreter
2020-10-21 03:22:01	<--	boB_K7IQ (~boB_K7IQ@152.44.147.180) has quit (Ping timeout: 256 seconds)
2020-10-21 03:22:01	oprypin	graingert, oh that's "virtualenv", i've been looking at "venv", which, sorry, i wasn't clear about
2020-10-21 03:22:25	SnoopJ	I think the linked function is for *creating* a venv rather than interacting with an existing one
2020-10-21 03:22:27	<--	bwitt_ (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has quit (Read error: Connection reset by peer)
2020-10-21 03:22:36	-->	bwitt (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has joined #python
2020-10-21 03:23:27	graingert	oprypin: do you have to use venv for this?
2020-10-21 03:23:44	graingert	You can use virtualenv to run venv
2020-10-21 03:23:53	oprypin	not strongly but it'd be nice to not have to install it
2020-10-21 03:23:53	<--	pro_z (~pro_z@mm-164-104-44-37.mgts.dynamic.pppoe.byfly.by) has quit (Ping timeout: 260 seconds)
2020-10-21 03:24:15	<--	Ergo (~ergo@91.238.59.144) has quit (Remote host closed the connection)
2020-10-21 03:24:15	oprypin	what i'm looking at right now is some kind of weird polyglot wildcard
2020-10-21 03:24:29	<--	burakcank (~burakcank@159.146.43.3) has quit (Ping timeout: 258 seconds)
2020-10-21 03:24:53	oprypin	the context is GitHub Actions.. i want something that works   in Bash on both Linux and Windows,  or Windows could be changed to PowerShell
2020-10-21 03:25:11	-->	cyphase (~cyphase@unaffiliated/cyphase) has joined #python
2020-10-21 03:25:36	oprypin	`venv/*/python*` matches  pythonw.exe 😩
2020-10-21 03:25:52	<--	zebrag (~inkbottle@aaubervilliers-654-1-98-110.w86-212.abo.wanadoo.fr) has quit (Quit: Konversation terminated!)
2020-10-21 03:27:15	<--	_Max (uid438748@gateway/web/irccloud.com/x-mnhedabwerxfpdfj) has quit (Quit: Connection closed for inactivity)
2020-10-21 03:27:40	-->	DeleL_ (~DeleL_@2607:fb90:5f69:582b:c969:9535:c015:e44c) has joined #python
2020-10-21 03:27:44	<--	osse (~osse@zsh/user/osse) has quit (Ping timeout: 264 seconds)
2020-10-21 03:28:07	-->	DeleL__ (~DeleL_@172.58.102.163) has joined #python
2020-10-21 03:29:29	<--	sazawal (~sazawal@182.77.100.15) has quit (Quit: Leaving)
2020-10-21 03:29:58	-->	sazawal (~sazawal@182.77.100.15) has joined #python
2020-10-21 03:30:03	-->	zebrag (~inkbottle@aaubervilliers-654-1-98-110.w86-212.abo.wanadoo.fr) has joined #python
2020-10-21 03:30:31	oprypin	hahahaha i did it
2020-10-21 03:30:50	oprypin	python=(venv/*/python*); $python foo
2020-10-21 03:31:22	-->	osse (~osse@zsh/user/osse) has joined #python
2020-10-21 03:31:30	<--	orbyt_ (~orbyt@172.92.4.78) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 03:31:36	-->	sheidan (~cobalt@lfbn-idf2-1-690-244.w86-247.abo.wanadoo.fr) has joined #python
2020-10-21 03:32:02	<--	DeleL_ (~DeleL_@2607:fb90:5f69:582b:c969:9535:c015:e44c) has quit (Ping timeout: 260 seconds)
2020-10-21 03:32:47	<--	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has quit (Remote host closed the connection)
2020-10-21 03:33:11	-->	doug89 (~doug19@2804:7f4:3883:c786:990b:a9af:3409:aab7) has joined #python
2020-10-21 03:33:22	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-10-21 03:35:03	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 03:35:35	<--	tethroar (~tethroar@95.149.17.213) has quit (Ping timeout: 246 seconds)
2020-10-21 03:36:18	<--	deeman (~deeman@gateway/tor-sasl/deeman) has quit (Ping timeout: 240 seconds)
2020-10-21 03:36:47	-->	bwitt_ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 03:36:49	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2020-10-21 03:37:01	-->	burakcank (~burakcank@159.146.43.3) has joined #python
2020-10-21 03:37:07	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-21 03:37:28	<--	jay-m_ (~jay-m@129.0.205.1) has quit (Ping timeout: 256 seconds)
2020-10-21 03:37:32	-->	deeman (~deeman@gateway/tor-sasl/deeman) has joined #python
2020-10-21 03:38:17	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 03:38:47	<--	TraubeNuss (~TraubeNus@ip-84-118-64-194.unity-media.net) has quit (Quit: TraubeNuss)
2020-10-21 03:39:22	-->	TraubeNuss (~TraubeNus@ip-84-118-64-194.unity-media.net) has joined #python
2020-10-21 03:39:54	-->	jay-m_ (~jay-m@129.0.205.1) has joined #python
2020-10-21 03:40:14	<--	bwitt (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has quit (Ping timeout: 260 seconds)
2020-10-21 03:40:43	<--	Beanzilla (~Beanzilla@unaffiliated/beanzilla) has quit (Quit: Nap time!)
2020-10-21 03:41:10	-->	gambl0re (~rickyjw@unaffiliated/gambl0re) has joined #python
2020-10-21 03:41:48	-->	zahlman (~zahlman@toroon4432w-lp130-05-64-229-229-12.dsl.bell.ca) has joined #python
2020-10-21 03:42:36	<--	Macuser (~Macuser@unaffiliated/macuser) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 03:42:37	<--	racoon_z (~guillermo@2806:108e:14:1a3a:38c4:2321:8ca3:14c8) has quit (Ping timeout: 244 seconds)
2020-10-21 03:43:32	<--	Mrbuck (~Mrbuck@gateway/tor-sasl/mrbuck) has quit (Remote host closed the connection)
2020-10-21 03:43:43	<--	fran (~fran@r186-48-133-85.dialup.adsl.anteldata.net.uy) has quit (Ping timeout: 260 seconds)
2020-10-21 03:44:00	<--	platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) has quit (Remote host closed the connection)
2020-10-21 03:44:55	-->	fran (~fran@r186-48-105-25.dialup.adsl.anteldata.net.uy) has joined #python
2020-10-21 03:45:04	<--	aslicedbanjo (~aslicedba@host86-150-115-165.range86-150.btcentralplus.com) has quit (Quit: Leaving.)
2020-10-21 03:45:53	-->	idb2020 (~IanB@cpc121552-lewi23-2-0-cust800.2-4.cable.virginm.net) has joined #python
2020-10-21 03:46:03	<--	Tripknotix (~Tripknoti@ip72-193-170-90.lv.lv.cox.net) has quit (Ping timeout: 260 seconds)
2020-10-21 03:46:40	-->	Mrbuck (~Mrbuck@gateway/tor-sasl/mrbuck) has joined #python
2020-10-21 03:47:33	<--	uskerine (~uskerine@189.188.78.188.dynamic.jazztel.es) has quit (Quit: leaving)
2020-10-21 03:48:39	-->	totallynotnate (~nate@110.138.18.157) has joined #python
2020-10-21 03:50:20	<--	RedAero (54ec083e@gateway/web/cgi-irc/kiwiirc.com/ip.84.236.8.62) has quit (Quit: Connection closed)
2020-10-21 03:50:44	-->	audiofile (~audiofile@unaffiliated/audiofile) has joined #python
2020-10-21 03:51:20	audiofile	can someone help me with this pypy issue https://bpa.st/M3JQ can't use pip on pypy3
2020-10-21 03:51:37	tos9	audiofile: What OS are you on
2020-10-21 03:51:40	tos9	And where did you get your pypy
2020-10-21 03:51:44	audiofile	linux
2020-10-21 03:51:48	audiofile	apt-get
2020-10-21 03:51:50	tos9	It appears broken
2020-10-21 03:51:56	tos9	audiofile: What distribution?
2020-10-21 03:52:00	audiofile	ubuntu
2020-10-21 03:52:17	tos9	OK yeah ubuntu/debian break Python essentially :/ and unfortunately all Python, including pypy IIRC.
2020-10-21 03:52:30	tos9	You need probably apt-get install python-pip? Probably
2020-10-21 03:52:38	audiofile	oh what oh no
2020-10-21 03:52:39	tos9	Or to get your PyPy from some other better place.
2020-10-21 03:52:49	audiofile	ok sure any other place I can install from you recommend
2020-10-21 03:53:04	tos9	pypy.org is a decent place to get it from now, given that the binaries there are the portable PyPy ones and should work wherever.
2020-10-21 03:53:12	tos9	That or pyenv
2020-10-21 03:53:14	audiofile	ok thanks i will try from there then
2020-10-21 03:53:17	tos9	np
2020-10-21 03:54:15	<--	burakcank (~burakcank@159.146.43.3) has quit (Ping timeout: 256 seconds)
2020-10-21 03:55:06	-->	dreamon (~dreamon@unaffiliated/dreamon) has joined #python
2020-10-21 03:55:41	-->	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has joined #python
2020-10-21 03:55:42	<--	gambl0re (~rickyjw@unaffiliated/gambl0re) has quit (Quit: WeeChat 2.8)
2020-10-21 03:55:42	<--	bwitt_ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has quit (Remote host closed the connection)
2020-10-21 03:55:53	-->	LKoen (~LKoen@lstlambert-657-1-123-43.w92-154.abo.wanadoo.fr) has joined #python
2020-10-21 03:56:12	<--	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has quit (Quit: shibboleth)
2020-10-21 03:56:34	<--	Hanii (~Hanii@2a00:23c5:c587:6d00:2904:31ae:313f:b1c2) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 03:56:38	-->	bilb_ono (~alexmarsh@c-73-70-189-144.hsd1.ca.comcast.net) has joined #python
2020-10-21 03:57:14	-->	bwitt (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 03:57:28	-->	ivanf (~Ivan@unaffiliated/kferdous) has joined #python
2020-10-21 03:58:53	-->	mteng (~quokka@94.6.180.128) has joined #python
2020-10-21 03:59:15	-->	Tripknotix (~Tripknoti@ip72-193-170-90.lv.lv.cox.net) has joined #python
2020-10-21 03:59:46	-->	gambl0re (~rickyjw@unaffiliated/gambl0re) has joined #python
2020-10-21 04:00:48	-->	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has joined #python
2020-10-21 04:02:22	<--	plexigras (~plexigras@p200300e79f2878f270ef0e6901326985.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-10-21 04:04:10	-->	bwitt_ (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has joined #python
2020-10-21 04:05:08	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 04:05:32	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Ping timeout: 264 seconds)
2020-10-21 04:05:32	-->	reppertj (~textual@pool-96-246-209-59.nycmny.fios.verizon.net) has joined #python
2020-10-21 04:05:35	audiofile	tos9 any idea how I should install the tar.bz2 file?
2020-10-21 04:05:41	<--	dwt (~dwt@c-98-200-58-177.hsd1.tx.comcast.net) has quit (Ping timeout: 240 seconds)
2020-10-21 04:05:44	<--	ramsub07 (81686099@gateway/web/cgi-irc/kiwiirc.com/ip.129.104.96.153) has quit (Quit: Connection closed)
2020-10-21 04:06:32	audiofile	oh nvm there's a bin/
2020-10-21 04:06:40	<--	luischi (~textual@178.red-83-43-199.dynamicip.rima-tde.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 04:06:42	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Remote host closed the connection)
2020-10-21 04:06:44	<--	YaknotiS (~YaknotiS@cpc91250-cmbg18-2-0-cust68.5-4.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2020-10-21 04:06:45	gambl0re	how come i am able to use python classes in other files if im not exporting the class?
2020-10-21 04:07:24	gambl0re	in js you do something like....export class MyClass {}. then in other file you do....import MyClass from "...."
2020-10-21 04:07:37	emerent	There is no exporting, everything is accessible
2020-10-21 04:07:52	gambl0re	what does that mean
2020-10-21 04:07:59	gambl0re	how does the file know where to find the class
2020-10-21 04:08:05	<--	bwitt (bwitt@gateway/vpn/privateinternetaccess/bwitt) has quit (Ping timeout: 260 seconds)
2020-10-21 04:08:25	emerent	you tell it where to import from
2020-10-21 04:08:26	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 04:08:35	emerent	from your.module import SomeClass
2020-10-21 04:08:45	<--	Rapture (~Rapture@2601:1c2:5102:6d00:958d:5412:33c1:4814) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 04:08:45	gambl0re	yea but how can you import if you are not exporting first?
2020-10-21 04:08:51	gambl0re	anyone know?
2020-10-21 04:09:18	-->	dwt (~dwt@c-98-200-58-177.hsd1.tx.comcast.net) has joined #python
2020-10-21 04:09:22	bjs	gambl0re: there's no such thing as exporting in Python
2020-10-21 04:09:36	bjs	gambl0re: `import foo` just runs foo.py and stuffs the global scope into the 'foo' name
2020-10-21 04:10:18	-->	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has joined #python
2020-10-21 04:10:54	<--	quartzmage (nick_x@gateway/vpn/protonvpn/nickx/x-67731737) has quit (Ping timeout: 256 seconds)
2020-10-21 04:10:57	-->	deadmarshal (~deadmarsh@164.215.243.198) has joined #python
2020-10-21 04:11:48	audiofile	that worked, thanks tos9!
2020-10-21 04:11:53	tos9	np
2020-10-21 04:12:12	-->	bwitt__ (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has joined #python
2020-10-21 04:12:14	<--	bwitt_ (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has quit (Read error: Connection reset by peer)
2020-10-21 04:12:43	<--	Tripknotix (~Tripknoti@ip72-193-170-90.lv.lv.cox.net) has quit (Read error: Connection reset by peer)
2020-10-21 04:14:04	<--	smanched (~smanched@67-220-3-33.fttp.usinternet.com) has quit (Ping timeout: 260 seconds)
2020-10-21 04:14:33	<--	dwt (~dwt@c-98-200-58-177.hsd1.tx.comcast.net) has quit (Ping timeout: 272 seconds)
2020-10-21 04:14:57	<--	manti7 (~manti7@176.10.104.94) has quit (Quit: WeeChat 2.8)
2020-10-21 04:15:47	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 260 seconds)
2020-10-21 04:16:31	<--	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has quit (Ping timeout: 246 seconds)
2020-10-21 04:17:23	-->	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has joined #python
2020-10-21 04:17:51	<--	pradhvan (uid244250@gateway/web/irccloud.com/x-xssqygzalezkgvbn) has quit (Quit: Connection closed for inactivity)
2020-10-21 04:17:51	Gustavo6046	imagine java..... now imagine java but for a living!
2020-10-21 04:17:55	Gustavo6046	aaaaaaaa
2020-10-21 04:18:00	<--	karolisl (~karolisl@78-56-11-78.static.zebra.lt) has quit (Quit: Leaving)
2020-10-21 04:19:13	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined #python
2020-10-21 04:19:29	-->	p141592_ (~p141592@broadband-46-242-11-207.ip.moscow.rt.ru) has joined #python
2020-10-21 04:19:36	<--	Neele (uid424041@gateway/web/irccloud.com/x-mtfeicytlqujhfou) has quit (Quit: Connection closed for inactivity)
2020-10-21 04:20:22	<--	sumagna (~sumagna@223.223.134.241) has quit (Quit: Bye guys)
2020-10-21 04:20:29	-->	bwitt (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 04:20:43	-->	geosmile (~geosmile@unaffiliated/geosmile) has joined #python
2020-10-21 04:21:13	--	Retr0id3 is now known as Retr0id
2020-10-21 04:22:49	<--	bwitt__ (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has quit (Ping timeout: 260 seconds)
2020-10-21 04:23:25	mgsk	Is it possible to get mypy to tell you how it made a derivation about a variable's type? in particular *where* in the code a variable's type was decided
2020-10-21 04:25:28	<--	chele (~chele@ip5b416ea2.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-10-21 04:26:42	<--	p141592_ (~p141592@broadband-46-242-11-207.ip.moscow.rt.ru) has quit
2020-10-21 04:26:43	<--	jay-m_ (~jay-m@129.0.205.1) has quit (Read error: Connection reset by peer)
2020-10-21 04:28:37	<--	dreamon (~dreamon@unaffiliated/dreamon) has quit (Ping timeout: 260 seconds)
2020-10-21 04:28:43	<--	is0ke3 (~is0ke3@unaffiliated/isokee) has quit (Quit: WeeChat 1.9.1)
2020-10-21 04:29:09	<--	StormBolt (3e4ecd54@unaffiliated/mn-) has quit (Ping timeout: 245 seconds)
2020-10-21 04:29:12	<--	aleagori (~ale@2a02:a312:c63d:8e00:d4c4:18c8:2899:3e12) has quit (Quit: Konversation terminated!)
2020-10-21 04:29:32	<--	mteng (~quokka@94.6.180.128) has left #python
2020-10-21 04:29:48	amo	InPhase, https://www.dropbox.com/s/iww5402z4jp6kl7/pinknoise_adjusted_threshold.png?dl=0 <- it seems to hold okay-ish
2020-10-21 04:29:54	amo	that noise is brutal
2020-10-21 04:30:02	-->	z01d (~zoidberg@61.ip-51-79-84.net) has joined #python
2020-10-21 04:30:24	-->	Albori (~Albori@24-35-177-176.fidnet.com) has joined #python
2020-10-21 04:30:27	-->	mteng (~quokka@94.6.180.128) has joined #python
2020-10-21 04:30:44	amo	not sure exactly what is happening on the left though
2020-10-21 04:31:06	-->	is0ke3 (~is0ke3@unaffiliated/isokee) has joined #python
2020-10-21 04:31:21	-->	Tanvir (~tanvir@wikimedia/wikitanvir) has joined #python
2020-10-21 04:32:08	z01d	Hi all, I am really confused about IF and or, and.  I have a very simple script that is not acting as I would expect and I don't understand why: http://codepad.org/HXQXxih9 can anyone explain why taht simple loop when i input 'cake' does it fail the first if statement and print out 'soup'?
2020-10-21 04:32:31	z01d	if i change or to and, it works as expected but.. i just dont know why or isn't working as i imagine it too
2020-10-21 04:32:42	<--	mteng (~quokka@94.6.180.128) has left #python
2020-10-21 04:32:42	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 260 seconds)
2020-10-21 04:33:21	bjs	z01d: `if ans == 'soup' or 'SOUP'` is like saying `if (ans == 'soup') or ('SOUP' is True)`
2020-10-21 04:33:35	bjs	z01d: maybe you meant `if ans == 'soup' or ans == 'SOUP'` ?
2020-10-21 04:34:22	grym	z01d: if you want SoUp to count too, you can `if ans.casefold() == 'soup'`
2020-10-21 04:34:29	<--	totallynotnate (~nate@110.138.18.157) has quit (Quit: WeeChat 2.9)
2020-10-21 04:34:45	-->	Siecje (~Cody@cpe98524a73fd6b-cm98524a73fd69.cpe.net.cable.rogers.com) has joined #python
2020-10-21 04:34:45	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 04:34:49	-->	totallynotnate (~nate@110.138.18.157) has joined #python
2020-10-21 04:35:12	<--	rippa (~rippa@ppp-vpdn-37.1.85.157.yarnet.ru) has quit (Quit: {#`%${%&`+'${`%&NO CARRIER)
2020-10-21 04:35:18	amo	grym, InPhase - here's a nicer version of the code: bpa.st/PMQQ
2020-10-21 04:35:25	<--	aaaaaa (~ArthurStr@host-91-90-11-13.soborka.net) has quit (Quit: leaving)
2020-10-21 04:35:36	-->	mteng (~quokka@94.6.180.128) has joined #python
2020-10-21 04:36:14	<--	dinis (~root@145.red-95-126-179.staticip.rima-tde.net) has quit (Ping timeout: 260 seconds)
2020-10-21 04:37:05	-->	jay-m_ (~jay-m@129.0.205.1) has joined #python
2020-10-21 04:37:39	-->	dinis (~root@113.red-2-142-236.dynamicip.rima-tde.net) has joined #python
2020-10-21 04:37:46	-->	spiri (~spiri@unaffiliated/spiri) has joined #python
2020-10-21 04:37:51	amo	it seems to hold even with pink noise, haven't done any big adjustments
2020-10-21 04:38:01	<--	schumaml (~schumaml@dslb-094-217-079-017.094.217.pools.vodafone-ip.de) has quit (Ping timeout: 240 seconds)
2020-10-21 04:38:14	grym	nice nice
2020-10-21 04:38:18	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 04:38:27	grym	how about a real ugly 60Hz spike :)
2020-10-21 04:38:49	z01d	bjs: ahhh its been a long time thank you for clearing that up
2020-10-21 04:38:55	amo	any suggestions about the left golf?
2020-10-21 04:39:19	amo	club
2020-10-21 04:40:39	<--	mteng (~quokka@94.6.180.128) has quit (Quit: leaving)
2020-10-21 04:40:39	-->	iflema (~user@unaffiliated/iflema) has joined #python
2020-10-21 04:40:47	OldFaithful	I'm using python in drawing software as an API.  It's running 2.7.8.  When I use a built in library function, instead of returning the expected object, it returns "IronPython.NewTypes.System.Object#IEnumerable_6$6"  ... it should be something like a Vector, with 3 floats.  How can I coerce / force an object type?
2020-10-21 04:40:56	<--	mogad0n (mogad0n@unaffiliated/mogad0n) has quit (Quit: mogad0n)
2020-10-21 04:41:25	amo	grym, got a one-liner i can add? :)
2020-10-21 04:42:27	Dark	how come amo when I run the script. nothing comes up.
2020-10-21 04:42:40	grym	amo: well, just see how it stacks up if instead of pink noise you just add a 60 hz sine wave
2020-10-21 04:42:40	amo	Dark, my code?
2020-10-21 04:42:51	Dark	yeah
2020-10-21 04:42:53	Dark	the def
2020-10-21 04:43:01	amo	because you're missing like.. everything else :D
2020-10-21 04:43:12	amo	no data, no imports
2020-10-21 04:43:16	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-21 04:43:22	-->	rogersm (~rogersm@92.59.121.108) has joined #python
2020-10-21 04:43:36	<--	sandra_96 (~sandra_96@c-86a170d5.05-229-6c756e3.bbcust.telenor.se) has quit (Quit: Leaving)
2020-10-21 04:43:36	RoseBus	hello, i'm trying to create a model to use np.odeint.  I successfully did it for one function, but now i have three functions and I don't know what to do
2020-10-21 04:43:37	<--	Barones (~Barones@189.50.80.77) has quit (Quit: Leaving)
2020-10-21 04:43:37	RoseBus	https://imgur.com/a/Ugevf6Z
2020-10-21 04:43:43	RoseBus	that's what I have to model
2020-10-21 04:43:51	amo	grym, what's so special about 60 hz?
2020-10-21 04:44:05	grym	amo: AC frequency for poorly grounded electrons
2020-10-21 04:44:17	grym	amo: oh, right, EU.  50 Hz.
2020-10-21 04:44:18	amo	okay
2020-10-21 04:44:20	amo	;)
2020-10-21 04:44:29	-->	Soother99 (~Soother99@94.198.43.56) has joined #python
2020-10-21 04:44:52	<--	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-10-21 04:44:56	<--	locsmif (~none@unaffiliated/locsmif) has quit (Quit: leaving)
2020-10-21 04:44:58	sazawal	Hi all. I want to concatenate two dataframes along axis-1 based on a particular column which is common in both the dataframes. This column has duplicate values. If I make this column as the index, it says that it cannot reindex from a duplicate axis. So, not making this column as my index, how do I specify the column label and do a concatenation?
2020-10-21 04:45:44	<--	bolovanos__ (~bolovanos@185.8.239.54) has quit (Ping timeout: 240 seconds)
2020-10-21 04:45:58	<--	CookieM (~tomek@r-45-155-148-237.gpon.bialnet.pl) has quit (Quit: Leaving)
2020-10-21 04:46:23	<--	gmaggior (~gmaggior_@host-87-18-177-159.retail.telecomitalia.it) has quit (Quit: Leaving)
2020-10-21 04:47:07	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 04:47:36	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Ping timeout: 246 seconds)
2020-10-21 04:47:37	<--	jay-m_ (~jay-m@129.0.205.1) has quit (Read error: Connection reset by peer)
2020-10-21 04:48:07	<--	rogersm (~rogersm@92.59.121.108) has quit (Ping timeout: 272 seconds)
2020-10-21 04:48:39	-->	cantstanya (~chatting@gateway/tor-sasl/cantstanya) has joined #python
2020-10-21 04:49:00	-->	impermanence (493ec188@gateway/web/cgi-irc/kiwiirc.com/ip.73.62.193.136) has joined #python
2020-10-21 04:49:23	<--	spiri (~spiri@unaffiliated/spiri) has quit (Ping timeout: 272 seconds)
2020-10-21 04:49:28	SnoopJ	sazawal, that sounds like a DataFrame.join() or pd.merge() using the `on` functionality: https://pandas.pydata.org/pandas-docs/stable/user_guide/merging.html#joining-key-columns-on-an-index
2020-10-21 04:49:34	impermanence	good way to monitor number of open files of a particular type?
2020-10-21 04:49:46	amo	grym, help me out real quick. how would i get a 60 hz sine-wave if i had a 66.66 framerate?
2020-10-21 04:50:27	grym	amo: well, you want 50 hz, but what's framerate here?
2020-10-21 04:50:34	<--	ov3rmind (~over0-7@unaffiliated/ov3rmind) has quit (Quit: Leaving)
2020-10-21 04:50:42	amo	framerate is the same
2020-10-21 04:50:55	amo	i'm recording at 66.66
2020-10-21 04:51:23	-->	Macuser (~Macuser@unaffiliated/macuser) has joined #python
2020-10-21 04:51:54	SnoopJ	impermanence, by your program, or another one?
2020-10-21 04:52:12	-->	mteng (~quokka@94.6.180.128) has joined #python
2020-10-21 04:52:14	grym	amo: that's the number of data points per second you're recording?
2020-10-21 04:52:26	amo	yes
2020-10-21 04:52:31	grym	amo: nevermind then :)
2020-10-21 04:52:59	impermanence	SnoopJ: I want my script to monitor the number of files another application currently has open
2020-10-21 04:53:05	jarthur	impermanence https://psutil.readthedocs.io/en/latest/
2020-10-21 04:53:07	impermanence	SnoopJ: SO says psutil.
2020-10-21 04:53:12	impermanence	ah.  yep.
2020-10-21 04:53:18	SnoopJ	yea psutil can do it if you know the PID
2020-10-21 04:53:19	grym	amo: my broader point was that filtering shaped noise is potentially challenging and you might want to see how well you do
2020-10-21 04:53:33	<--	totallynotnate (~nate@110.138.18.157) has quit (Quit: WeeChat 2.9)
2020-10-21 04:53:35	impermanence	SnoopJ: okay. yeah PID.  good to know.
2020-10-21 04:53:46	amo	grym, it's ecg-like, not exactly ecg (i have that too, much higher framerate)
2020-10-21 04:53:57	-->	jaziz (~jaziz@unaffiliated/jaziz) has joined #python
2020-10-21 04:54:06	jarthur	impermanence if you know what OS this will be on, there are ways of getting at it yourself, e.g. via the proc filesystem, but psutil knows all those ways so is a bit easier
2020-10-21 04:54:07	sazawal	SnoopJ, Thanks. I was only looking at the options in pd.concat. I see that merge or join could solve my problem
2020-10-21 04:54:26	-->	totallynotnate (~nate@110.138.18.157) has joined #python
2020-10-21 04:54:36	impermanence	jarthur: unfortunately I only know the kernel is linux, but not really the distro.
2020-10-21 04:54:39	SnoopJ	sazawal, that whole document is worth reading just to get a sense for what options are offered for this flavor of task
2020-10-21 04:54:40	amo	grym, i started by adding a sine-wave which worked very well - not sure exactly what else there is, except..
2020-10-21 04:54:44	impermanence	anyway I think I'm going with psutil
2020-10-21 04:54:50	jarthur	cool
2020-10-21 04:55:04	<--	totallynotnate (~nate@110.138.18.157) has quit (Client Quit)
2020-10-21 04:55:22	sazawal	SnoopJ, Right
2020-10-21 04:55:33	amo	grym, https://www.dropbox.com/s/w6dbl1ifdd3bikj/step_baseline.png?dl=0
2020-10-21 04:55:38	amo	something like that :)
2020-10-21 04:56:43	<--	deadmarshal (~deadmarsh@164.215.243.198) has left #python ("Leaving")
2020-10-21 04:57:21	-->	totallynotnate (~nate@110.138.18.157) has joined #python
2020-10-21 04:57:36	amo	still not sure how to avoid those golf-club shapes, i guess it has to do with the impulse response..?
2020-10-21 04:58:16	-->	smanched (~smanched@67-220-3-33.fttp.usinternet.com) has joined #python
2020-10-21 04:58:35	-->	jay-m_ (~jay-m@129.0.205.1) has joined #python
2020-10-21 04:59:22	grym	filters ring
2020-10-21 04:59:28	grym	there's no way around that one
2020-10-21 04:59:41	amo	i feared so :|
2020-10-21 04:59:50	SnoopJ	Gibbs phenomena?
2020-10-21 04:59:57	-->	faLUCE (~paolo@83.137.6.205) has joined #python
2020-10-21 05:00:11	<--	doug89 (~doug19@2804:7f4:3883:c786:990b:a9af:3409:aab7) has quit (Quit: Leaving)
2020-10-21 05:00:18	-->	marker5a (~quassel@67.8.244.17) has joined #python
2020-10-21 05:00:30	grym	always and forever
2020-10-21 05:00:38	impermanence	is there a pypi package I can use to write a small command line client / server monitor thingy?
2020-10-21 05:00:42	faLUCE	hello. Given mypath = "foo/bar/fred" which is a short syntax for getting "foo/bar" ? (the path without the tail)
2020-10-21 05:00:48	SnoopJ	impermanence, click is very nice for building CLIs
2020-10-21 05:00:52	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Quit: WeeChat 2.9)
2020-10-21 05:01:03	impermanence	SnoopJ: yeah I was look for something even more developed lol.
2020-10-21 05:01:09	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined #python
2020-10-21 05:01:17	SnoopJ	impermanence, more developed how?
2020-10-21 05:01:27	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-10-21 05:01:34	SnoopJ	if we know what you want that is missing from click, we can give more useful recommendations
2020-10-21 05:02:00	SnoopJ	faLUCE, pathlib.Path("foo/bar/fred").parent is Path("foo/bar")
2020-10-21 05:02:02	grym	faLUCE: pathlib.Path('foo/bar/fred').parent
2020-10-21 05:02:11	grym	and if you need the string, str(that)
2020-10-21 05:02:17	-->	a_b_m (~abm@088156141202.dynamic-2-waw-k-3-1-0.vectranet.pl) has joined #python
2020-10-21 05:02:28	faLUCE	thanks all
2020-10-21 05:02:53	marker5a	got a question...we have an application that gets bundled into an exe with pyinstaller with the intent of delivering a single file to the customer that contains everything.  in this application though, it currently reads in a file, sort of like an ini file, which describes how the application should behave.  we'd like a way to have that file loaded in at "compile" time instead of being dynamically and being required to send that "ini" file along to the
2020-10-21 05:02:53	marker5a	customer
2020-10-21 05:02:54	-->	nomic (~nomic@2a00:23c6:9910:1201:7e0e:7f9c:8b13:813f) has joined #python
2020-10-21 05:02:56	<--	Nact (~l@117.156-67-87.adsl-dyn.isp.belgacom.be) has quit (Quit: Konversation terminated!)
2020-10-21 05:03:02	-->	Streaker (~Streaker@unaffiliated/streaker) has joined #python
2020-10-21 05:03:04	-->	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has joined #python
2020-10-21 05:03:05	marker5a	any ideas?  wondering if pickle can somehow be at play with this?
2020-10-21 05:03:14	impermanence	SnoopJ: I need to write a little monitor application that takes a couple of command line arguments, does some "figuring" and prints stuff to standard out; I guess it needs to run as a very small service, i.e. run continuously?  I can't tell actually.
2020-10-21 05:03:47	amo	marker5a, you want to bake the config so that the customer can't meddle with it?
2020-10-21 05:03:50	impermanence	SnoopJ: it apparently needs to conform to the nagios API standard.  so I don't know if that means it needs to run continuously or just once as a script or as a service or what.
2020-10-21 05:03:56	marker5a	^^^ 100%
2020-10-21 05:03:57	marker5a	lol
2020-10-21 05:04:03	<--	Atlenohen (~Walter@cpe2-23-244.cable.triera.net) has quit (Read error: Connection reset by peer)
2020-10-21 05:04:14	marker5a	otherwise, I realize it's a crappy way to manage code... this is purely a customr thing
2020-10-21 05:04:17	grym	marker5a: just read it from inside yourself with importlib or pkg_resources, then
2020-10-21 05:04:20	SnoopJ	impermanence, not familiar with that standard but that just sounds like a program that enters an infinite loop, to me
2020-10-21 05:04:34	-->	Atlenohen (~Walter@cpe2-23-244.cable.triera.net) has joined #python
2020-10-21 05:04:45	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 05:04:47	grym	marker5a: and keep a copy of the ini file vendored inside your package
2020-10-21 05:04:47	amo	marker5a, you could load the config from the internet.. >.>
2020-10-21 05:04:48	impermanence	SnoopJ: yeah, but I almost doubt that is what is being requested.
2020-10-21 05:05:04	amo	not a very nice way to leash the customer, but it would definitely work
2020-10-21 05:05:08	marker5a	amo: no internet
2020-10-21 05:05:14	SnoopJ	impermanence, sounds like you need to do some requirements gathering still
2020-10-21 05:05:20	amo	then you're stuck with grym's suggestion
2020-10-21 05:05:22	<--	pantsu (~Urist@archlinux/op/pdpc.supporter.active.mrelendig) has quit (Quit: aliens)
2020-10-21 05:05:22	marker5a	grym: interesting, let me poke around with that and see how far I get
2020-10-21 05:05:38	<--	deeman (~deeman@gateway/tor-sasl/deeman) has quit (Ping timeout: 240 seconds)
2020-10-21 05:05:39	<--	abm (~abm@088156141202.dynamic-2-waw-k-3-1-0.vectranet.pl) has quit (Ping timeout: 256 seconds)
2020-10-21 05:05:52	marker5a	the hardest thing is finding how to pose the right keywords in google to get a ballpark answer
2020-10-21 05:05:54	amo	well, of course you could always encrypt it somehow..
2020-10-21 05:05:59	grym	marker5a: you'd just version a default_config.ini with your package.
2020-10-21 05:06:13	grym	marker5a: and then on init, read it and do those things
2020-10-21 05:06:14	marker5a	amo: trying to also reduce post-processing steps
2020-10-21 05:06:21	-->	deeman (~deeman@gateway/tor-sasl/deeman) has joined #python
2020-10-21 05:06:23	<--	fflori (~fflori@194.230.147.232) has quit (Read error: Connection reset by peer)
2020-10-21 05:06:24	-->	MrElendig (~Urist@archlinux/op/pdpc.supporter.active.mrelendig) has joined #python
2020-10-21 05:06:27	--	MrElendig is now known as desu
2020-10-21 05:06:28	amo	so no virus in disguise then
2020-10-21 05:06:29	marker5a	grym: ok, that makes sense... I'll give that a whirl
2020-10-21 05:06:39	marker5a	thank you both!
2020-10-21 05:06:44	amo	yw
2020-10-21 05:06:46	grym	marker5a: you will have to use importlib-resources or similar inside pyinstaller because, i think, it's not really going to be a file
2020-10-21 05:06:48	marker5a	yeah, no virus :) it's not a c# program :)
2020-10-21 05:07:14	<--	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-10-21 05:07:20	grym	so the trick where mypackage/__init__.py exposes a base path based off of __file__ fails inside zipapps and the like
2020-10-21 05:07:51	<--	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has quit (Remote host closed the connection)
2020-10-21 05:07:53	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 05:08:03	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 05:08:31	-->	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has joined #python
2020-10-21 05:09:12	SnoopJ	it looks like pyinstaller has some documentation specifically about bundling files, too
2020-10-21 05:09:31	marker5a	just saw that... spec files?
2020-10-21 05:09:41	<--	impermanence (493ec188@gateway/web/cgi-irc/kiwiirc.com/ip.73.62.193.136) has quit (Ping timeout: 256 seconds)
2020-10-21 05:09:51	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-21 05:09:53	<--	ferdna (~ferdna@cpe-69-23-148-218.elp.res.rr.com) has quit (Quit: Leaving)
2020-10-21 05:10:14	marker5a	now I'm looking at that... that seems to be a good way
2020-10-21 05:10:37	marker5a	it looks like I can just load in the file directly and maybe python interprets that as a virtual file at runtime?
2020-10-21 05:10:43	marker5a	i'll play with it and report back
2020-10-21 05:10:47	SnoopJ	it looks like they recommend pkgutil
2020-10-21 05:10:50	-->	dwt (~dwt@c-98-200-58-177.hsd1.tx.comcast.net) has joined #python
2020-10-21 05:10:55	audiofile	hi, i aliased my pypy3 bin to 'pypy3' and it works under normal user but using `sudo pypy3' I get 'no command found' what gives??
2020-10-21 05:11:29	grym	audiofile: sudo is scary, but, also, it's not reading your aliases because its executing commands as not you
2020-10-21 05:11:34	SnoopJ	audiofile, aliases aren't generally shared between users
2020-10-21 05:12:23	<--	ralonsoh (~ralonsoh@222.red-83-33-6.dynamicip.rima-tde.net) has quit (Remote host closed the connection)
2020-10-21 05:13:02	audiofile	ohhhh
2020-10-21 05:13:04	altendky	grym: (marker5a) i thought pyinstaller basically just extracted everything to a temp directory
2020-10-21 05:13:10	audiofile	how do I make it read aliases then? :)
2020-10-21 05:13:14	<--	jay-m_ (~jay-m@129.0.205.1) has quit (Ping timeout: 246 seconds)
2020-10-21 05:13:19	audiofile	I guess this is more ##linux than #python?
2020-10-21 05:13:25	altendky	grym: and that was a difference vs. pyoxidizer (that i haven't heard anything more about)
2020-10-21 05:13:29	-->	Sc0tty- (~Sc0tty-@92.40.192.149.threembb.co.uk) has joined #python
2020-10-21 05:13:30	SnoopJ	audiofile, it is, yes. It sounds more like you want a symlink than an alias, here.
2020-10-21 05:13:48	<--	dob1 (~dob1@unaffiliated/dob1) has quit (Ping timeout: 256 seconds)
2020-10-21 05:13:56	marker5a	it does break it into subs during compile time, i don't know about run time though... i thought it just behaved at that point like a native binary
2020-10-21 05:14:13	marker5a	but even if it does, that's mostly ok I think... the biggest thing is just distributing one file
2020-10-21 05:14:32	<--	Soother99 (~Soother99@94.198.43.56) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 05:16:14	amo	grym, here is all the noise i could come up with combined: https://www.dropbox.com/s/qzidsi9sx1mw4t2/pinknoise%2Bstep%2Bsine.png?dl=0
2020-10-21 05:16:19	<--	plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) has quit (Quit: WeeChat 2.9)
2020-10-21 05:16:44	<--	LionsMane (~don@w15.hai.org) has quit (Quit: Leaving.)
2020-10-21 05:16:56	<--	LKoen (~LKoen@lstlambert-657-1-123-43.w92-154.abo.wanadoo.fr) has quit (Quit: “It’s only logical. First you learn to talk, then you learn to think. Too bad it’s not the other way round.”)
2020-10-21 05:17:35	amo	i think the only spike missing is the one in the middle at the step
2020-10-21 05:17:39	-->	ov3rmind (~over0-7@unaffiliated/ov3rmind) has joined #python
2020-10-21 05:18:12	<--	code-witch (~code-witc@150.129.88.5) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 05:18:20	SnoopJ	marker5a, nah it just bundles up compiled code and handles all the machinery necessary to properly enter it.
2020-10-21 05:18:27	-->	dob1 (~dob1@unaffiliated/dob1) has joined #python
2020-10-21 05:18:51	<--	sdwrage (~textual@38.111.183.30) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 05:18:59	-->	philr (~phil@ppp14-2-99-231.adl-apt-pir-bras32.tpg.internode.on.net) has joined #python
2020-10-21 05:19:16	marker5a	SnoopJ: just sets up a minimal python environment essentially? and therefore a temp directory with the bundled files?
2020-10-21 05:20:14	<--	escanor (uid387784@gateway/web/irccloud.com/x-tncuggztfotmhfqt) has quit (Quit: Connection closed for inactivity)
2020-10-21 05:20:26	marker5a	the customer is sophisticated enough to go and f**k things up that are right in front of them, but not sophisticated enough to go finding temp directories, so I have that going for me
2020-10-21 05:20:38	SnoopJ	I don't believe it's a temporary directory but I have no experience with pyinstaller
2020-10-21 05:21:04	<--	drymer (~drymer@unaffiliated/drymer) has quit (Read error: Connection reset by peer)
2020-10-21 05:21:22	marker5a	it looks like it does from the readthedocs page (_MEIxxxxxx temp folder)
2020-10-21 05:21:22	jarthur	With the default mode, it's a directory that's shipped alongside the executable, in single-file mode it's compressed archive inside the executable that may end up in a temp space.
2020-10-21 05:21:39	SnoopJ	ahh
2020-10-21 05:21:43	marker5a	jarthur: gotcha, which is how we are currently distributing... single file
2020-10-21 05:21:43	<--	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-10-21 05:22:20	<--	sagax (~sagax_nb@213.138.71.146) has quit (Ping timeout: 244 seconds)
2020-10-21 05:22:34	-->	drymer (~drymer@unaffiliated/drymer) has joined #python
2020-10-21 05:22:38	jarthur	Either way, the package namespace will be preserved on the other side. You may end up having to give it a hint that it needs to bundle your data file along with the packages if it doesn't get picked up automatically
2020-10-21 05:23:29	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-10-21 05:24:21	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-10-21 05:24:44	<--	Adbray (~Adbray@2600:6c48:6f7f:d764:d6f3:46e9:56ca:cfd7) has quit (Quit: Ah! By Brain!)
2020-10-21 05:25:31	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 05:25:38	-->	bmurt (~hmm@c-76-99-78-62.hsd1.pa.comcast.net) has joined #python
2020-10-21 05:26:55	marker5a	jarthur: ok, cool, thanks!
2020-10-21 05:27:43	-->	Barones (~Barones@2804:7f3:8982:f364:c896:23d4:b69c:8c30) has joined #python
2020-10-21 05:27:46	-->	RedAero (54ec083e@gateway/web/cgi-irc/kiwiirc.com/ip.84.236.8.62) has joined #python
2020-10-21 05:27:52	<--	ov3rmind (~over0-7@unaffiliated/ov3rmind) has quit (Quit: Leaving)
2020-10-21 05:28:18	<--	zahlman (~zahlman@toroon4432w-lp130-05-64-229-229-12.dsl.bell.ca) has quit (Ping timeout: 258 seconds)
2020-10-21 05:28:51	RedAero	How come this is a generator and not a tuple? part_names = (sheet[f'A{x}'].value for x in range(2, sheet.max_row + 1))
2020-10-21 05:29:28	RedAero	I get that range is a generator, but doesn't the list comp evaluate itself and put the results in the tuple?
2020-10-21 05:29:29	-->	Adbray (~Adbray@2600:6c48:6f7f:d764:b4c9:59cc:571:bab9) has joined #python
2020-10-21 05:29:46	amo	RedAero, (.. for ..) is generator syntax
2020-10-21 05:30:16	RedAero	oooh that's news to me
2020-10-21 05:30:22	-->	dodobrain (~dodobrain@unaffiliated/freakabcd) has joined #python
2020-10-21 05:30:28	amo	see generator comprehensions
2020-10-21 05:30:32	RedAero	so... there's no "tuple comprehension"?
2020-10-21 05:30:35	amo	no
2020-10-21 05:30:37	-->	Precurz (~Precurz@2a01:e35:2434:4fa0:ba3f:24e2:5b9f:eac4) has joined #python
2020-10-21 05:30:41	RedAero	'cause immutable
2020-10-21 05:30:45	-->	quipa (~quipa@188.250.33.59) has joined #python
2020-10-21 05:30:47	<--	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-10-21 05:30:48	RedAero	confusing, though
2020-10-21 05:30:50	amo	generator, list, set and dict comprehensions
2020-10-21 05:31:14	RedAero	wait, set comprehension? aren't sets immutable too?
2020-10-21 05:31:16	SnoopJ	it doesn't really have anything to do with mutability
2020-10-21 05:31:22	amo	nope
2020-10-21 05:31:24	-->	ferdna (~ferdna@cpe-69-23-148-218.elp.res.rr.com) has joined #python
2020-10-21 05:31:25	RedAero	oh
2020-10-21 05:31:27	amo	sets aren't immutable
2020-10-21 05:31:29	RedAero	then why no tuple?
2020-10-21 05:31:35	AndreasLutro	RedAero: tuple(x for y in z)
2020-10-21 05:31:42	<--	Macuser (~Macuser@unaffiliated/macuser) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 05:31:52	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 05:32:13	<--	selimcan (~selimcan@178.204.250.205) has quit (Ping timeout: 260 seconds)
2020-10-21 05:32:26	SnoopJ	RedAero, it's useful to be able to define a generator as a comprehension, and list already covers most sequence usage. Plus, you can do that ^
2020-10-21 05:33:15	bjs	awmv_: yes re.search and re.match aren't the same thing
2020-10-21 05:33:26	bjs	oops
2020-10-21 05:33:37	bjs	silly laptop
2020-10-21 05:33:44	Precurz	If you need, there are FrozenSet AFAIK.
2020-10-21 05:34:01	amo	RedAero, you can easily have tuples within a generator though like ((x,y) for x,y in zip...) - generator of tuples
2020-10-21 05:34:07	bjs	RedAero: tuple comprehensions are a bit weird because they're generally full of different types
2020-10-21 05:34:35	bjs	RedAero: whereas a list or set is generally all full of the same type, so constructing them or modifying them in a loop-like setting makes sense
2020-10-21 05:34:36	nedbat	RedAero: there's no tuple comprehension because usually you know the length of a tuple when you write the code, and the positions are significant. it's not a homogenous sequence like a list is.
2020-10-21 05:34:36	-->	ov3rmind (~over0-7@unaffiliated/ov3rmind) has joined #python
2020-10-21 05:34:49	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 05:35:53	amo	now we only need a numpy array comprehension for *really* homogenous data ;)
2020-10-21 05:36:00	<--	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2020-10-21 05:36:04	AndreasLutro	not sure I agree with that, I had to change a list sequence to a tuple sequence because str.endswith only takes tuples now...
2020-10-21 05:36:13	Precurz	+1 nedbat, usualy a tuple responds to a data structure. People often misundetand them as "immutable list" since iterable and non mutable.
2020-10-21 05:36:14	nedbat	AndreasLutro: "usually" :)
2020-10-21 05:36:21	SnoopJ	amo, nah, might as well do the loop in the faster language with the provided idioms
2020-10-21 05:36:27	AndreasLutro	more likely it's just a language syntax/parser ambiguity thing
2020-10-21 05:36:27	tos9	amo: we have that, it's pypy :)
2020-10-21 05:36:41	nedbat	AndreasLutro: what is an ambiguity thing?
2020-10-21 05:36:46	Precurz	AndreasLutro, this is a Typing issue.
2020-10-21 05:37:16	AndreasLutro	nedbat: how would you differentiate a generator comprehension inside parenthesis and a tuple comprehension?
2020-10-21 05:37:16	<--	banisterfiend (~textual@ruby/staff/banisterfiend) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 05:37:26	man_in_shack	from collections import NamedTuple
2020-10-21 05:37:28	man_in_shack	problem solved
2020-10-21 05:37:32	Precurz	:)
2020-10-21 05:37:37	-->	Macuser (~Macuser@unaffiliated/macuser) has joined #python
2020-10-21 05:38:09	bjs	AndreasLutro: by having different syntax for both.  There is no tuple comprehension so generators can happily use the 'simpler' syntax
2020-10-21 05:38:32	man_in_shack	ok i'm going to have to read some backlog here cos "tuple comprehension" does not sound useful to me in any way
2020-10-21 05:38:43	bjs	if tuple comprehensions were a thing (or were likely to have been a thing) then probably a different syntax would've been chosen for generator expressions
2020-10-21 05:38:49	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2020-10-21 05:38:49	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 05:38:53	SnoopJ	I can imagine using it, but can't imagine it being a godsend over tuple(generator)
2020-10-21 05:39:12	-->	lauxley (~lauxley@2a01:e35:2fd5:2700:29a8:bd9b:4993:2555) has joined #python
2020-10-21 05:39:19	man_in_shack	^
2020-10-21 05:39:46	man_in_shack	honestly we're lucky we even have list comprehension (:
2020-10-21 05:39:59	Precurz	it's kind of strange to consider tuple generator. i mean tuple are supposed to have a fixed length (given a context)
2020-10-21 05:40:10	-->	sydbarret (~anton@unaffiliated/sydbarret) has joined #python
2020-10-21 05:40:19	amo	yeah
2020-10-21 05:40:29	man_in_shack	<RedAero> wait, set comprehension? aren't sets immutable too?   << this touches on an important point
2020-10-21 05:40:40	amo	frozenset \o/
2020-10-21 05:40:52	SnoopJ	Precurz, I mean, they *do* have a fixed length, it's just not predictable if you construct a tuple from an arbitrary generator
2020-10-21 05:40:54	man_in_shack	because tuples are immutable, you would have to generate a new tuple for every iteration of a "tuple comprehension"
2020-10-21 05:40:55	AndreasLutro	Precurz: only after it's been initialized? otherwise tuple(my_list) or tuple(*args) or tuple(x for y in z) wouldn't be allowed
2020-10-21 05:41:01	man_in_shack	it would be a crazy expensive task
2020-10-21 05:41:14	Precurz	Not sets are mutable, use frozenset instead. Maybe Enum now :)
2020-10-21 05:41:14	<--	jaziz (~jaziz@unaffiliated/jaziz) has quit (Ping timeout: 246 seconds)
2020-10-21 05:41:15	tos9	man_in_shack: not really, you'd implement them "efficiently"
2020-10-21 05:41:22	 *	man_in_shack glares at tos9
2020-10-21 05:41:24	SnoopJ	I imagine you'd do whatever tuple() currently does
2020-10-21 05:41:26	tos9	man_in_shack: (which is how the tuple constructor itself does)
2020-10-21 05:41:35	tos9	but yes they wouldn't be very useful semantically.
2020-10-21 05:41:45	man_in_shack	yeah, but the constructor knows the len() of its arguments
2020-10-21 05:41:49	man_in_shack	generators don't have len()
2020-10-21 05:41:54	SnoopJ	it doesn't if you pass an iterable
2020-10-21 05:42:03	man_in_shack	hush you, SnoopJ (:
2020-10-21 05:42:05	<--	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has quit (Remote host closed the connection)
2020-10-21 05:42:06	Precurz	SnoopJ, you may have tuples of different size, but usually tuple have a specific meaning
2020-10-21 05:42:09	tos9	man_in_shack: there are CPython tricks even for iterables
2020-10-21 05:42:15	tos9	(e.g. __length_hint__ or whatever it's called)
2020-10-21 05:42:20	altendky	'usually' for some people, not all
2020-10-21 05:42:28	<--	babygnu (~robert@gateway/tor-sasl/babygnu) has quit (Quit: Leaving)
2020-10-21 05:42:34	SnoopJ	Precurz, I agree with nedbat's statement that the common usage is "I know what goes in here, in what order"
2020-10-21 05:42:37	nedbat	AndreasLutro: that's another reason we don't have tuple comprehensions
2020-10-21 05:42:43	-->	babygnu (~robert@gateway/tor-sasl/babygnu) has joined #python
2020-10-21 05:43:16	Precurz	like (url, port), (user, passwod, host, port, dbname)
2020-10-21 05:43:40	tos9	man_in_shack: (also, in C, you can do what you want essentially) -- I don't think implementation efficiency was / is a consideration
2020-10-21 05:43:53	AndreasLutro	Precurz: just grep for "tuple(" in python's stdlib and you'll find many use-cases of "dynamic length" tuples
2020-10-21 05:44:04	nedbat	lists are like C arrays, tuples are like C structs
2020-10-21 05:44:14	Precurz	+1 nedbat
2020-10-21 05:44:22	 *	man_in_shack stares at AndreasLutro
2020-10-21 05:44:29	amo	let's be more like PHP and make some internet comprehensions!
2020-10-21 05:44:37	<--	lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) has quit (Remote host closed the connection)
2020-10-21 05:44:38	<--	aball (~mammal@2603-8080-f740-00c5-9142-b9d9-9c03-1fc6.res6.spectrum.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 05:44:39	 *	amo runs and hides
2020-10-21 05:44:40	altendky	nedbat: except somehow python's 'structs' are way easier to mess up when using than C's?  :|
2020-10-21 05:44:47	tos9	AndreasLutro: as others have pointed out, the stdlib isn't a good place to look for that really
2020-10-21 05:44:55	SnoopJ	and an instance of them can't be changed!
2020-10-21 05:44:57	man_in_shack	altendky: NamedTuple (:
2020-10-21 05:44:59	-->	aball (~mammal@2603-8080-f740-00c5-9142-b9d9-9c03-1fc6.res6.spectrum.com) has joined #python
2020-10-21 05:45:01	-->	selimcan (~selimcan@178.204.250.205) has joined #python
2020-10-21 05:45:11	tos9	AndreasLutro: (even besides the usual "the stdlib is not that high quality code") -- but it's old, and has a second meaning associated with tuples
2020-10-21 05:45:12	altendky	man_in_shack: or, you know, a class :]
2020-10-21 05:45:17	tos9	AndreasLutro: oh, that was you that pointed it out even
2020-10-21 05:45:23	man_in_shack	yah
2020-10-21 05:45:27	Precurz	I said , given a context. That means if you should provide database connection params you'll always have the same kind of tuple.
2020-10-21 05:45:27	nedbat	AndreasLutro: I just did, there aren't that many tuple( in the stdlib
2020-10-21 05:45:38	tos9	AndreasLutro: but yes some stdlib things have magic tuple-changing behavior, so sometimes you do indeed need a tuple and a tuple specifically
2020-10-21 05:45:50	man_in_shack	but NamedTuple gives you a low-resource shorthand
2020-10-21 05:45:50	tos9	(no external code generally does that)
2020-10-21 05:46:03	altendky	man_in_shack: attr.make_class?
2020-10-21 05:46:16	<--	irc_user (uid423822@gateway/web/irccloud.com/x-jjpkvgqppresuvbx) has quit (Quit: Connection closed for inactivity)
2020-10-21 05:46:20	altendky	if you really find a single line is better for describe a group of attributes
2020-10-21 05:46:32	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined #python
2020-10-21 05:46:33	tos9	the stdlib also doesn't have a good immutable list type
2020-10-21 05:46:35	man_in_shack	i said low-resource though (:
2020-10-21 05:46:43	SnoopJ	also low-functionality
2020-10-21 05:46:45	tos9	so when it needs to shove things in dict-keys it's tuples again.
2020-10-21 05:46:49	altendky	man_in_shack: is a frozen slotted class that bad?
2020-10-21 05:46:51	-->	rosmarus (~rosmarus@gateway/tor-sasl/rosmarus) has joined #python
2020-10-21 05:46:54	Precurz	https://stackoverflow.com/a/626871
2020-10-21 05:47:02	man_in_shack	Precurz: in that context, the parameters depend on the library you choose to use
2020-10-21 05:47:04	<--	Macuser (~Macuser@unaffiliated/macuser) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 05:47:09	man_in_shack	altendky: YES IT IS ;)
2020-10-21 05:47:25	altendky	man_in_shack: how bad?  (i'm checking)
2020-10-21 05:47:28	<--	idb2020 (~IanB@cpc121552-lewi23-2-0-cust800.2-4.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2020-10-21 05:47:29	AndreasLutro	smh
2020-10-21 05:47:50	man_in_shack	POINT IS, there's no benefit to tuple comprehension that can't be done with just wrapping tuple() around the generator
2020-10-21 05:47:56	man_in_shack	altendky: INCREDIBLY BAD
2020-10-21 05:48:05	tos9	man_in_shack: less caps please
2020-10-21 05:48:05	man_in_shack	WORLD-ENDING BAD
2020-10-21 05:48:10	man_in_shack	MORE CAPS
2020-10-21 05:48:10	Precurz	https://docs.python.org/3.8/tutorial/datastructures.html#tuples-and-sequences
2020-10-21 05:48:11	<--	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-10-21 05:48:18	<--	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has quit (Ping timeout: 240 seconds)
2020-10-21 05:48:25	Precurz	Capes, not caps !
2020-10-21 05:48:29	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 05:48:53	Precurz	man_in_shack, yes given a context :)
2020-10-21 05:48:57	-->	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has joined #python
2020-10-21 05:49:00	man_in_shack	Precurz reminds me of those people who point to dictionary definitions of "phobia" to say that homophobes don't FEAR the gays
2020-10-21 05:49:43	man_in_shack	we talking right tool for the right job here. if you want mutable tuples, why are you not using lists?
2020-10-21 05:49:54	<--	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has quit (Ping timeout: 246 seconds)
2020-10-21 05:50:03	tos9	hrm interesting that that still calls single-length tuples special cased
2020-10-21 05:50:07	tos9	I thought that was fixed
2020-10-21 05:50:29	<--	blaa (~bla@unaffiliated/bla) has quit (Ping timeout: 256 seconds)
2020-10-21 05:50:34	tos9	oh I guess the way it describes them they indeed are a special case
2020-10-21 05:50:45	Precurz	i mean, tuple are just namedtuples without name :)
2020-10-21 05:50:48	<--	xrogaan (~xrogaan@unaffiliated/xrogaan) has quit (Quit: Leaving)
2020-10-21 05:50:48	<--	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has quit (Remote host closed the connection)
2020-10-21 05:51:11	amo	lol..
2020-10-21 05:51:21	RedAero	Precurz: I just use a dict when a "list" needs one each of some stuff
2020-10-21 05:51:32	<--	amrx (~amrx@unaffiliated/amrx) has quit
2020-10-21 05:51:34	man_in_shack	why is there set() but no unset()? (:
2020-10-21 05:51:35	-->	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has joined #python
2020-10-21 05:51:46	RedAero	Like your (user, passwod, host, port, dbname) example, that'd be a dict
2020-10-21 05:52:04	man_in_shack	unset() would be a type that gives you all values that you DON'T add to it
2020-10-21 05:52:12	<--	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-10-21 05:52:19	RedAero	Makes my code a lot more readable 'cause I don't have to backtrack to figure out what order I put things in
2020-10-21 05:52:22	Precurz	namedtuple makes it clearer that tuples respond to a specific context. But the dev is responsible of make the proper call.
2020-10-21 05:52:30	SnoopJ	RedAero, it is often convenient to store a single record's data as a tuple, though, that's the broad point here.
2020-10-21 05:52:37	man_in_shack	"foo" in unset(["bar"]) == True
2020-10-21 05:52:39	Precurz	that could be a namedtuple :)
2020-10-21 05:53:20	<--	nurdie (~nurdie@unaffiliated/nurdie) has quit (Remote host closed the connection)
2020-10-21 05:53:24	altendky	man_in_shack: https://repl.it/@altendky/DigitalAdeptVolcano-1 what did i get wrong?
2020-10-21 05:53:32	amo	not in..?
2020-10-21 05:53:33	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 05:53:33	RedAero	SnoopJ: Sure, I'm just talking about the example, not tuples in general. That said, I so rarely use tuples I basically forget that they exist
2020-10-21 05:53:39	-->	bitmask (~bitmask@2601:84:c702:f500:d8d0:eb3c:5b15:873) has joined #python
2020-10-21 05:54:00	jarthur	I do wish tuple construction from an iterable like a generator was faster in cpython. Generator comprehensions are already pretty slow, and tuple is faster at almost everything else EXCEPT for constructing from an iterable
2020-10-21 05:54:14	<--	nomic (~nomic@2a00:23c6:9910:1201:7e0e:7f9c:8b13:813f) has quit (Quit: Leaving)
2020-10-21 05:54:25	jarthur	But that is an implementation detail that may be addressed in the future
2020-10-21 05:54:25	-->	bla (~bla@unaffiliated/bla) has joined #python
2020-10-21 05:54:27	amo	RedAero, you never have multiple returns or assign multiple variables on a line?
2020-10-21 05:54:38	Precurz	because they may not be made for it ?
2020-10-21 05:54:54	RedAero	amo: Honestly, no.
2020-10-21 05:54:54	auk	anyone have suggestions for scraping web data into structured format (csv, from mildly/implicitly structured html)?
2020-10-21 05:54:59	SnoopJ	RedAero, let's suppose you got those data back from parse_record(somestr). It would be kinda silly to build a dict for that single record if you had lots of these records
2020-10-21 05:55:01	-->	walbo (7caa031f@gateway/web/cgi-irc/kiwiirc.com/ip.124.170.3.31) has joined #python
2020-10-21 05:55:03	man_in_shack	altendky: everything, OBVIOUSLY ;)
2020-10-21 05:55:05	Precurz	tuple are fast because they are static, maybe.
2020-10-21 05:55:16	SnoopJ	indexing into them is fast, yes
2020-10-21 05:55:17	RedAero	amo: If I write a function that returns multiple values I put it in a list
2020-10-21 05:55:18	<--	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has quit (Remote host closed the connection)
2020-10-21 05:55:21	auk	something like the promises this makes: https://chrome.google.com/webstore/detail/instant-data-scraper/ofaokhiedipichpaobibbnahnkdoiiah?h
2020-10-21 05:55:33	<--	dwt (~dwt@c-98-200-58-177.hsd1.tx.comcast.net) has quit (Ping timeout: 260 seconds)
2020-10-21 05:55:51	SnoopJ	but they're also just a different kind of structure. Sequences are useful, immutability is useful. Therefore, immutable sequences are also useful :)
2020-10-21 05:55:58	<--	aball (~mammal@2603-8080-f740-00c5-9142-b9d9-9c03-1fc6.res6.spectrum.com) has quit (Remote host closed the connection)
2020-10-21 05:56:17	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Ping timeout: 258 seconds)
2020-10-21 05:56:18	-->	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has joined #python
2020-10-21 05:56:19	amo	RedAero, that sounds like very simple logic
2020-10-21 05:56:20	man_in_shack	it's also not always appropriate to use NamedTuple over Tuple
2020-10-21 05:56:23	<--	reppertj (~textual@pool-96-246-209-59.nycmny.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 05:56:30	<--	bmurt (~hmm@c-76-99-78-62.hsd1.pa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 05:56:43	<--	babygnu (~robert@gateway/tor-sasl/babygnu) has quit (Quit: Leaving)
2020-10-21 05:56:58	<--	rosmarus (~rosmarus@gateway/tor-sasl/rosmarus) has quit (Ping timeout: 240 seconds)
2020-10-21 05:57:28	man_in_shack	<RedAero> amo: If I write a function that returns multiple values I put it in a list   << when i need an internal helper method that returns multiple values, i don't wrap the return values in any syntax, which inherently returns a tuple
2020-10-21 05:57:50	amo	man_in_shack, exactly my point
2020-10-21 05:57:55	man_in_shack	but in general, you probably should be using a dict or a custom class if your function/method needs to return multiple values (:
2020-10-21 05:58:01	<--	ap4lmtree_ (~ap4lmtree@unaffiliated/ap4lmtree) has quit (Quit: Leaving)
2020-10-21 05:58:09	SnoopJ	hard disagree
2020-10-21 05:58:29	man_in_shack	SnoopJ: depends on exact context
2020-10-21 05:58:42	-->	ap4lmtree (~ap4lmtree@unaffiliated/ap4lmtree) has joined #python
2020-10-21 05:58:47	jarthur	auk take a look at scrapy and the stdlib's csv module. I'll warn, we get asked to write folks' scraping projects for them at least twice a week and you're unlikely to get someone jumping to walk you through the whole process
2020-10-21 05:59:10	SnoopJ	man_in_shack, which is at cross ends to your "probably"
2020-10-21 05:59:11	-->	NorthernSage (~NorthernS@2804:14c:3baa:4c4:403b:1826:c40:8229) has joined #python
2020-10-21 05:59:17	man_in_shack	def f(x): return somefunctionon(x), someotherfunctionon(x)     << potentially fine
2020-10-21 05:59:23	-->	aball (~mammal@2603-8080-f740-00c5-9142-b9d9-9c03-1fc6.res6.spectrum.com) has joined #python
2020-10-21 06:00:20	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-10-21 06:00:34	man_in_shack	thinking about it in terms of typing too
2020-10-21 06:00:34	-->	masoudd_ (~masoudd@unaffiliated/masoudd) has joined #python
2020-10-21 06:00:37	auk	jarthur, does scrapy have any "AI" / intelligent detection features?
2020-10-21 06:00:54	man_in_shack	def f(x) -> tuple[2], you always know exactly how many results are returned
2020-10-21 06:00:57	auk	jarthur, i remember reading about scrapy a few years ago and it looks really cool but afaik it's a more traditional scraper
2020-10-21 06:00:59	auk	no?
2020-10-21 06:01:16	man_in_shack	def f(x) -> list,  you don't necessarily know how many results are returned
2020-10-21 06:01:37	<--	Jerrynicki (~niklas@p200300f5770b090090edd5d2a320bdd4.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2020-10-21 06:01:39	<--	masoudd (~masoudd@unaffiliated/masoudd) has quit (Ping timeout: 258 seconds)
2020-10-21 06:01:47	jarthur	auk yep, it's lower level and does not do any intelligent detection, but the addition of BeautifulSoup makes it pretty easy to peel away HTML
2020-10-21 06:01:58	-->	irc_user (uid423822@gateway/web/irccloud.com/x-ccinjvlcbfblsfxt) has joined #python
2020-10-21 06:02:01	RedAero	isn't BS4 uncool to use now?
2020-10-21 06:02:13	man_in_shack	was it ever cool?
2020-10-21 06:02:19	RedAero	I remember a couple of years ago this chat wanted me to use basically anything else
2020-10-21 06:02:32	auk	jarthur, aye, i see. thanks!
2020-10-21 06:02:39	-->	dwt (~dwt@c-98-200-58-177.hsd1.tx.comcast.net) has joined #python
2020-10-21 06:02:41	altendky	RedAero: i don't do that stuff much but lxml.html is i think the alternative i've heard mentioned
2020-10-21 06:02:41	<--	Kingsy (~chris@unaffiliated/kingsy101) has left #python
2020-10-21 06:02:51	-->	Tripknotix (~Tripknoti@ip72-193-170-90.lv.lv.cox.net) has joined #python
2020-10-21 06:02:58	RedAero	but if you google "python html parser" it's the first result after the stdlib html.parser
2020-10-21 06:03:03	Precurz	Was a pleasure to be back here, going to sleep. Wish you the best !
2020-10-21 06:03:18	jarthur	night, Precurz
2020-10-21 06:03:24	catern	is there any kind of standard for Python packages installing documentation? so it's available offline instead of requiring readthedocs or something
2020-10-21 06:04:17	-->	ash_mobile (~androirc@2607:fb90:27d9:8303:4192:a971:89e4:e85) has joined #python
2020-10-21 06:04:24	man_in_shack	well it's not the same as docs.python.org, but there's always help(foo) or __doc__
2020-10-21 06:04:25	altendky	catern: RTD can build you epub and pdf and probably more i think
2020-10-21 06:04:49	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 06:04:52	jarthur	catern if you take a look at the toolchain that's used to generate the HTML docs that go up to readthedocs, sphinx, you'll see it can generate docs for a variety of different platforms, including manpages and Window Help books.
2020-10-21 06:05:01	<--	elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) has quit (Quit: A random quit message)
2020-10-21 06:05:03	catern	altendky: jarthur: ok, and is there any kind of standard for including that in a distributable Python package?
2020-10-21 06:05:18	-->	elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) has joined #python
2020-10-21 06:05:22	altendky	catern: wow, this is bad :]  https://qtrio.readthedocs.io/_/downloads/en/stable/epub/
2020-10-21 06:05:23	man_in_shack	yes. don't (:
2020-10-21 06:05:40	altendky	catern: never heard of it, no.
2020-10-21 06:05:44	ash_mobile	I don't know that much about Python but I downloaded a script that's written in Python which generates a "horse battery staple" like password. rather it's a collection of scripts in a directory that I currently have in my home directory...
2020-10-21 06:05:54	<--	Precurz (~Precurz@2a01:e35:2434:4fa0:ba3f:24e2:5b9f:eac4) has quit (Quit: Leaving)
2020-10-21 06:06:06	altendky	catern: i wouldn't even think to do anything but look at the docstrings if i was offline but had a package installed
2020-10-21 06:06:08	ash_mobile	What I don't like about this is that if I don't run the program from the directory that it's in it cannot find definitions for adjectives nouns verbs etc.
2020-10-21 06:06:25	ash_mobile	which are also files in that same directory
2020-10-21 06:06:35	altendky	ash_mobile: where did you get this from?
2020-10-21 06:06:44	ash_mobile	Hmm
2020-10-21 06:06:52	ash_mobile	One sack while I look it up
2020-10-21 06:06:53	man_in_shack	from . import uninstalledmodule
2020-10-21 06:06:56	RedAero	also, *why* did you get this
2020-10-21 06:07:07	 *	man_in_shack nods at RedAero
2020-10-21 06:07:21	-->	buttsanchez (~buttsanch@pool-100-35-51-254.nwrknj.fios.verizon.net) has joined #python
2020-10-21 06:07:23	<--	z01d (~zoidberg@61.ip-51-79-84.net) has quit (Quit: Lost terminal)
2020-10-21 06:07:34	<--	Vornicus (~Vornicus@2605:e000:1218:14eb:241f:4852:ee75:da1d) has quit (Read error: Connection reset by peer)
2020-10-21 06:07:50	<--	dwt (~dwt@c-98-200-58-177.hsd1.tx.comcast.net) has quit (Ping timeout: 246 seconds)
2020-10-21 06:07:54	<--	Dark (~dark@freebsd/user/dark) has quit (Quit: Leaving)
2020-10-21 06:08:33	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 06:08:54	ash_mobile	https://github.com/aaronbassett/Pass-phrase
2020-10-21 06:09:00	-->	Dark (~dark@freebsd/user/dark) has joined #python
2020-10-21 06:09:24	-->	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has joined #python
2020-10-21 06:09:48	-->	mirrorbird (~psutcliff@2a00:801:42b:7891:16b1:e53f:55b2:15e1) has joined #python
2020-10-21 06:09:49	-->	mogad0n (mogad0n@unaffiliated/mogad0n) has joined #python
2020-10-21 06:09:59	-->	dwt (~dwt@c-98-200-58-177.hsd1.tx.comcast.net) has joined #python
2020-10-21 06:10:20	jarthur	catern if this is for desktop/workstation software, that's usually something covered by the installer for your target operating system (e.g. installing manpages in Linux or a CHM in Windows). You might choose to make it easy on yourself and just package up the HTML version. If this is for a library or tooling to be used in a Python console, then docstrings, __doc__, etc. will do what you want.
2020-10-21 06:10:35	-->	segaplut (~jabre@89-212-212-125.dynamic.t-2.net) has joined #python
2020-10-21 06:11:14	<--	Streaker (~Streaker@unaffiliated/streaker) has quit (Ping timeout: 258 seconds)
2020-10-21 06:11:17	-->	Macuser (~Macuser@unaffiliated/macuser) has joined #python
2020-10-21 06:11:24	catern	jarthur: yes, I realized that looking up "how to install manpages with python package" will find me the conventions I want
2020-10-21 06:11:37	<--	gitesh (uid423739@gateway/web/irccloud.com/x-ptokpgefbxaicptb) has quit (Quit: Connection closed for inactivity)
2020-10-21 06:11:53	<--	contingo (~textual@213.205.240.16) has quit (Ping timeout: 260 seconds)
2020-10-21 06:12:24	ash_mobile	Anyway if I use a relative path to run a script it won't be able to find the word files. E.g. user@laptop:~$ ./Pass-phrase/pass_phrase.py
2020-10-21 06:13:03	ash_mobile	Elsa like to move the whole directory out of my home directory if anyone has any suggestions where that should go
2020-10-21 06:13:13	altendky	ash_mobile: maybe try https://github.com/aaronbassett/Pass-phrase/pull/3/files
2020-10-21 06:13:28	altendky	ash_mobile: or just put the files where it assumes you will
2020-10-21 06:13:56	<--	ivanf (~Ivan@unaffiliated/kferdous) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 06:13:56	<--	zalt__ (~devp@unaffiliated/lambda443) has quit (Ping timeout: 264 seconds)
2020-10-21 06:14:15	<--	ferdna (~ferdna@cpe-69-23-148-218.elp.res.rr.com) has quit (Quit: Leaving)
2020-10-21 06:14:20	ash_mobile	Where it "assumes" I will?
2020-10-21 06:14:23	auk	ash_mobile, are you familiar with passphraseme? i use it all the time, it's very simple but also mature/stable
2020-10-21 06:14:42	ash_mobile	I am not aware of that
2020-10-21 06:14:46	auk	i used xkcdpass before that but i trust passphraseme a lot more (cleaner code)
2020-10-21 06:14:52	-->	snackoverflow (~audioburn@unaffiliated/theology) has joined #python
2020-10-21 06:14:58	auk	ash_mobile, passphraseme does *not* do the grammar thing that Pass-phrase does
2020-10-21 06:15:05	auk	it's just random words
2020-10-21 06:15:10	auk	but i use it all the time
2020-10-21 06:15:14	ash_mobile	This particular variant of passphrase generation uses parts of speech
2020-10-21 06:15:19	jarthur	catern great. I think I've usually used a deb/rpm creator like fpm for that. For generation of the manpages, I still recommend https://www.sphinx-doc.org/en/master/  which can generate both manpages and readthedocs-style HTML for you. In the end readthedocs is just a company that offers continuous integration runner and HTML hosting. Up to the projects to use something like sphinx to actually render the documents.
2020-10-21 06:15:25	altendky	ash_mobile: see the link.  it looks in the current working directory then in ~/.pass-phrase/ (and then i added so it would look adjacent to the script file)
2020-10-21 06:15:25	-->	nomic (~nomic@2a00:23c6:9910:1201:7e0e:7f9c:8b13:813f) has joined #python
2020-10-21 06:15:26	auk	https://github.com/micahflee/passphraseme
2020-10-21 06:15:35	grym	ash_mobile: https://www.rempe.us/diceware/#eff is also pretty nice, if in-browser
2020-10-21 06:15:37	ash_mobile	Which is adjective noun verb adjective now
2020-10-21 06:15:39	grym	it works offline though
2020-10-21 06:15:50	ash_mobile	Does passphrase me have a similar capability
2020-10-21 06:15:58	<--	Sc0tty- (~Sc0tty-@92.40.192.149.threembb.co.uk) has quit (Ping timeout: 260 seconds)
2020-10-21 06:16:01	catern	jarthur: thanks, I already know about sphinx. I was just using RTD as an example of online documentation hosting
2020-10-21 06:16:02	<--	MmeQuignon (~matthieu@2a01:e0a:1ab:f090:608c:3b04:a63c:1221) has quit (Ping timeout: 272 seconds)
2020-10-21 06:16:08	jarthur	cool
2020-10-21 06:16:22	auk	ash_mobile, nope it doesn't do parts of speech or anything liek that. it's much more generic, focused on being simple and delivering good security
2020-10-21 06:16:35	-->	zalt__ (~devp@unaffiliated/lambda443) has joined #python
2020-10-21 06:16:58	<--	nomic (~nomic@2a00:23c6:9910:1201:7e0e:7f9c:8b13:813f) has quit (Client Quit)
2020-10-21 06:17:06	catern	now the trick is to find a way to install a manpage that works both when installing the package through some system package manager, and also at least puts the manpage somewhere, anywhere, when installing the python through pip
2020-10-21 06:17:12	grym	catern: i don't know of tooling that generates Info or manpage from docstrings the way that sphinx does for RTD.  unless sphinx does this and i missed it somehow
2020-10-21 06:17:13	-->	SwiftMatt (~Objective@2601:282:4300:3e:89af:9369:a760:a224) has joined #python
2020-10-21 06:17:14	catern	installing the package through pip*
2020-10-21 06:17:47	ash_mobile	Anyway I think I just cloned this rebounder to get it to work, where would you put these files?
2020-10-21 06:17:52	catern	grym: I'm not concerned about the generation, it's the installation that I'm interested in (also sphinx can generate manpages)
2020-10-21 06:17:58	grym	catern: you can dump data on install to something like $XDG_DATA_HOME or something, but that feels like a mismatch
2020-10-21 06:17:59	ash_mobile	This repo*
2020-10-21 06:18:19	<--	nullheroes (~danielvu@168.235.66.22) has quit (Quit: WeeChat 2.9)
2020-10-21 06:18:22	grym	catern: like i would not really think to look for docs there
2020-10-21 06:18:25	ash_mobile	Like I said I'm not a fan of having them in my home directory
2020-10-21 06:18:36	<--	audio (~audioburn@unaffiliated/theology) has quit (Ping timeout: 260 seconds)
2020-10-21 06:18:44	-->	quartzmage (nick_x@gateway/vpn/protonvpn/nickx/x-67731737) has joined #python
2020-10-21 06:18:56	ash_mobile	Maybe something FHS-y
2020-10-21 06:19:15	altendky	ash_mobile: their project already looks in the current working directory and that ~/whatever path and i adjusted it to also look adjacent to the script file.
2020-10-21 06:19:27	<--	segaplut (~jabre@89-212-212-125.dynamic.t-2.net) has quit (Quit: Leaving.)
2020-10-21 06:19:55	altendky	ash_mobile: if you want to improve this package and where it stores stuff i would start by making it a proper python distribution package.  after that make the files resources via importlib_resources.
2020-10-21 06:20:18	-->	Wulf4 (~Wulf@unaffiliated/wulf) has joined #python
2020-10-21 06:20:37	<--	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has quit (Ping timeout: 260 seconds)
2020-10-21 06:20:50	altendky	ash_mobile: from there if you want to shove them elsewhere then the appdirs package may guide you to useful locations.  if you want to make it a system package then maybe dig on that front.
2020-10-21 06:21:00	-->	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has joined #python
2020-10-21 06:21:00	catern	grym: yes, understandable I guess. still, I want the docs to be *somewhere*, even if that's unexpected, so at least I can say "also the docs are available offline if you look in $FOO" (this is easy if I'm installing it with a system package manager, just want to try for something that is Python-idiomatic)
2020-10-21 06:21:28	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2020-10-21 06:21:34	auk	ash_mobile, oh lol i see Pass-phrase is based on xkcdpass. Cool!
2020-10-21 06:21:36	altendky	catern: python idiomatic is to look at the source afaik if all you have done is `venv/bin/pip install thing`
2020-10-21 06:21:42	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-21 06:21:53	catern	I suppose I can just go all-in on putting all my documentation into docstrings - I can put the API documentation in a mymodule.doc submodule
2020-10-21 06:21:58	altendky	catern: or the help(thing.blue) thing
2020-10-21 06:22:31	catern	(then it would be available through help())
2020-10-21 06:22:34	<--	audiofile (~audiofile@unaffiliated/audiofile) has quit (Quit: Default Quit Message)
2020-10-21 06:22:39	altendky	catern: you can add any files you want (sphinx output to pdf or somesuch or html or...) but i'm not familiar with it being 'idiomatic' to do so
2020-10-21 06:23:30	catern	sure, so this is yet another reason to put all my documentation into docstrings, and have no documentation outside docstrings
2020-10-21 06:23:51	<--	Wulf (~Wulf@unaffiliated/wulf) has quit (Ping timeout: 256 seconds)
2020-10-21 06:23:51	--	Wulf4 is now known as Wulf
2020-10-21 06:24:09	altendky	catern: maybe, but many projects do have prose located in .rst files
2020-10-21 06:24:13	catern	since docstrings are the only idiomatic way to have offline documentation
2020-10-21 06:24:27	nedbat	catern: what about sphinx?
2020-10-21 06:24:27	altendky	even .rst files that may not directly correlate to exactly specific .py files
2020-10-21 06:24:32	catern	altendky: but there's no way to have that available offline? again, just saying this is one reason
2020-10-21 06:24:49	ash_mobile	I mean, where would _you_ put this? $HOME ?
2020-10-21 06:24:50	altendky	catern: there is, i've only said it's not idiomatic to provide it at the time people run `venv/bin/pip install thing`
2020-10-21 06:24:53	-->	orbyt_ (~orbyt@172.92.4.78) has joined #python
2020-10-21 06:25:11	altendky	ash_mobile: i would put it where the script already expects it, or use my modification, or the other further improvements i suggested
2020-10-21 06:25:20	<--	Muzer (~muzer@tim32.org) has quit (Ping timeout: 240 seconds)
2020-10-21 06:25:32	altendky	ash_mobile: it's not clear what is wrong with all the options i have mentioned (and created)
2020-10-21 06:25:36	jarthur	As for including man-pages in your Python package (not a deb or rpm, but a wheel or sdist), there are projects out there that do it, but it's not very convenient. Because it's not really supposed to write outside of your Python environment, you can end up with manpages in useless places like ./my_venv/usr/share/man. This is why it's usually done in the OS distro installer instead.
2020-10-21 06:25:50	catern	altendky: oh? what way is there to have that available offline? hopefully you aren't about to say "download a PDF ahead of time" or something :)
2020-10-21 06:26:01	ouemt	I have a 10xbig array, and I want to create 10 1xbig arrays that show when each of the 10 elements is the largest of the ten by position, so if the first element is the largest of the 10, element1 will == 1 at that index, and all the others will == 0 at that index. Is there a clean way to do this, or am I destined to write 10 if/elif cases?
2020-10-21 06:26:34	<--	sheidan (~cobalt@lfbn-idf2-1-690-244.w86-247.abo.wanadoo.fr) has quit (Ping timeout: 258 seconds)
2020-10-21 06:26:37	catern	nedbat: i'm already using sphinx, that's not the issue, the issue is making documentation available without network access, in the same way manpages are available without network access
2020-10-21 06:26:40	ash_mobile	altendky I'm taking about the script.. The whole repo
2020-10-21 06:26:50	altendky	catern: yes, i'm saying you can provide an offline doc they can download.  i'm not sure what the alternative is.  you keep asking for idiomatic and requiring non-idiomatic things.  there's simply no solution there unless `help()` is the entirety of it which is nice to have but not necessarily nice as the only option
2020-10-21 06:26:55	ash_mobile	Not just the word files
2020-10-21 06:27:04	nedbat	catern: sphinx makes html?
2020-10-21 06:27:21	altendky	ash_mobile: i would do one of the many things i said.  like make it properly installable and uploaded to pypi and then use pipx or venvs or somesuch to install it in a dedicated env.
2020-10-21 06:27:48	catern	nedbat: yes...? among other things? but html can be used without network access
2020-10-21 06:27:49	altendky	ash_mobile: or be lazy and stuck stick it in a place and symlink to it from somewhere on my PATH
2020-10-21 06:28:03	<--	bazul (bazul@128.26.63.94.rev.vodafone.pt) has quit (Remote host closed the connection)
2020-10-21 06:28:19	nedbat	catern: right, html can be used without network access, or sphinx can make other formats, like pdf
2020-10-21 06:28:22	altendky	ash_mobile: or if you really want to get formal for your OS then make an OS package and that will guide you as to where things belong
2020-10-21 06:28:48	<--	Asmodean (~Asmoedean@77.119.131.64.wireless.dyn.drei.com) has quit (Ping timeout: 272 seconds)
2020-10-21 06:28:57	<--	g0d-byte (~g0d-byte@2001:b07:ae5:76d1:dfcf:6d24:6d09:4032) has quit (Quit: Leaving)
2020-10-21 06:29:31	-->	snuffy666 (~a@92.119.17.139) has joined #python
2020-10-21 06:29:35	<--	faLUCE (~paolo@83.137.6.205) has quit (Ping timeout: 256 seconds)
2020-10-21 06:29:47	auk	ash_mobile, this might help
2020-10-21 06:29:49	auk	https://pyinstaller.readthedocs.io/en/stable/operating-mode.html
2020-10-21 06:30:15	<--	pabed (~pabed@46.182.202.167.c.fiberdirekt.net) has quit (Ping timeout: 246 seconds)
2020-10-21 06:30:17	auk	ash_mobile, AFAU it provides an easy way to package a python script up to be self-contained
2020-10-21 06:30:22	-->	Asmodean (~Asmoedean@77.119.128.213.wireless.dyn.drei.com) has joined #python
2020-10-21 06:30:49	altendky	yes pyinstaller turns 'a python program' into 'a program'.  it doesn't pick where it goes though :]
2020-10-21 06:30:56	catern	nedbat: yes, but how does that documentation get to the user? having them go to some website to download it separately is undesirable for many reasons - if it was part of the package it's always up to date, always available, etc., etc.
2020-10-21 06:31:09	catern	(well, always at the correct version, rather)
2020-10-21 06:31:10	<--	quipa (~quipa@188.250.33.59) has quit (Quit: Leaving)
2020-10-21 06:31:12	-->	contingo (~textual@213.205.240.16) has joined #python
2020-10-21 06:31:37	jarthur	catern with the OS distribution installer
2020-10-21 06:31:52	jarthur	The deb, RPM, MSI, etc
2020-10-21 06:31:56	-->	ivanf (~Ivan@unaffiliated/kferdous) has joined #python
2020-10-21 06:32:41	-->	wleslie (~verte@python/site-packages/verte) has joined #python
2020-10-21 06:32:43	catern	jarthur: sure, but I would like to include this documentation with a package installed with pip
2020-10-21 06:33:25	-->	Hail_Satan (~ye_olde@gateway/tor-sasl/goldie) has joined #python
2020-10-21 06:33:27	nedbat	catern: you can package whatever you want.  I don't know what kind of docs you want to make. Not everything fits into a docstring, or is easily found and read with the tools docstrings givee you
2020-10-21 06:33:30	catern	anyway... I think I'll just go with docs-only-in-docstrings, and have a mymodule.doc module like I said, that should work fine
2020-10-21 06:33:45	auk	altendky, aye
2020-10-21 06:33:59	-->	raxor2k (~raxor2k@ti0121a400-4785.bb.online.no) has joined #python
2020-10-21 06:34:20	raxor2k	I want an honest answer/opinion: which language is best: python, C++, JAva or #C?
2020-10-21 06:34:24	raxor2k	honest answer pls
2020-10-21 06:34:35	jarthur	catern gotcha. Yep, not what pip is supposed to be for, at least not putting it anywhere outside of a Python environment. One other option is to put it in a package location as a file and have your program able to copy the file from the package space into a temporary dir and open it.
2020-10-21 06:34:51	s_	raxor2k: they are all the best
2020-10-21 06:34:51	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 06:35:38	raxor2k	s_: but if you had to pick one, which would it be?
2020-10-21 06:35:59	s_	the one best for the job
2020-10-21 06:35:59	<--	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has quit (Ping timeout: 240 seconds)
2020-10-21 06:36:07	KirkMcDonald	raxor2k: Alas, life is not that simple.
2020-10-21 06:36:07	altendky	raxor2k: it depends, there are many opinions, #python-offtopic
2020-10-21 06:37:16	<--	RougeRR (~RougeR@unaffiliated/rouger) has quit (Read error: Connection reset by peer)
2020-10-21 06:37:46	auk	altendky, btw do you happen to know if  pyinstaller works well with python scripts that are not modules (no requirements.txt, etc)?
2020-10-21 06:38:31	auk	ash_mobile, if your main issue is 'where to put it', i don't think that's python-specific, just more of a *nix issue: https://stackoverflow.com/questions/9168432/unix-standard-directory-to-put-custom-executables-or-scripts/9168577
2020-10-21 06:38:35	altendky	auk: a requirements.txt doesn't have anything to do with being a module.  but it should be usable with whatever.  i generally recommend making a proper python distribution package first.
2020-10-21 06:38:39	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 06:39:29	-->	Muzer (~muzer@cpc96354-rdng26-2-0-cust375.15-3.cable.virginm.net) has joined #python
2020-10-21 06:39:36	<--	Tanvir (~tanvir@wikimedia/wikitanvir) has quit (Ping timeout: 246 seconds)
2020-10-21 06:40:21	jarthur	catern if you're interested in my approach with the temporary dir and opening the offline help file from your program, you can use importlib.resources.open_binary, shutil.copyfile, and tmpfile to accomplish this. Then something like click.launch() to open the file in the user's viewer.
2020-10-21 06:40:38	<--	Forsaken87 (~quassel@2a02:908:186c:a6a0:37fb:cb1a:2571:d822) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2020-10-21 06:40:46	-->	quipa (~quipa@188.250.33.59) has joined #python
2020-10-21 06:40:55	auk	altendky, ah yes i meant package not module
2020-10-21 06:41:15	-->	astronavt (~astronavt@unaffiliated/astronavt) has joined #python
2020-10-21 06:41:17	jarthur	catern unless you know your package tree is always going to be in a real directory, in which case you can just use importlib.resources.path to find out where your offline doc is for opening
2020-10-21 06:41:33	<--	RedAero (54ec083e@gateway/web/cgi-irc/kiwiirc.com/ip.84.236.8.62) has quit (Quit: Connection closed)
2020-10-21 06:41:52	altendky	auk: i expect you could `echo 'print("hello world") > x.py` and use pyinstaller on that just fine
2020-10-21 06:42:07	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-10-21 06:42:55	<--	jancoow (~jancoow@dhcp-077-251-034-091.chello.nl) has quit (Quit: Ping timeout (120 seconds))
2020-10-21 06:44:02	-->	rogersm (~rogersm@92.59.121.108) has joined #python
2020-10-21 06:44:22	-->	jancoow (~jancoow@dhcp-077-251-034-091.chello.nl) has joined #python
2020-10-21 06:45:51	<--	contingo (~textual@213.205.240.16) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 06:46:05	<--	Barones (~Barones@2804:7f3:8982:f364:c896:23d4:b69c:8c30) has quit (Remote host closed the connection)
2020-10-21 06:46:47	-->	contingo (~textual@213.205.240.16) has joined #python
2020-10-21 06:47:07	-->	ralof_ (~ralof@dynamic-077-009-089-133.77.9.pool.telefonica.de) has joined #python
2020-10-21 06:47:34	<--	rpg (~rpg@162-219-230-90.fttp.usinternet.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 17:10:37	--	irc: disconnected from server
2020-10-21 17:19:20	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-10-21 17:19:20	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-10-21 17:19:20	--	Topic set by nedbat (~nedbat@python/psf/nedbat) on Thu, 20 Aug 2020 03:18:59
2020-10-21 17:19:20	--	Channel #python: 1792 nicks (0 ops, 0 voices, 1792 normals)
2020-10-21 17:19:23	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-10-21 17:19:51	-->	abm (~abm@088156141202.dynamic-2-waw-k-3-1-0.vectranet.pl) has joined #python
2020-10-21 17:21:08	<--	jimgray__ (~weechat@unaffiliated/jimgray) has quit (Remote host closed the connection)
2020-10-21 17:21:39	-->	jimgray__ (~weechat@unaffiliated/jimgray) has joined #python
2020-10-21 17:21:52	<--	mcsontos (~mcsontos@95.82.134.252) has quit (Quit: Leaving)
2020-10-21 17:22:36	<--	earthbreaker (~earthbrea@li778-229.members.linode.com) has quit (Quit: I Break D Ert)
2020-10-21 17:22:36	<--	N3X15 (~nexis@mail.nexisonline.net) has quit (Quit: ZNC - http://znc.in)
2020-10-21 17:22:36	<--	canton7 (~canton7@about/csharp/regular/canton7) has quit (Quit: ZNC - http://znc.in)
2020-10-21 17:22:37	<--	swa_work (~swa_work@dhcp-108-168-58-228.cable.user.start.ca) has quit (Quit: ZNC - https://znc.in)
2020-10-21 17:22:38	<--	caps (~caps@li1035-171.members.linode.com) has quit (Quit: ZNC 1.8.1+deb1~bpo10+1 - https://znc.in)
2020-10-21 17:22:42	<--	bananazura (~bananazur@unaffiliated/bananazura) has quit (Quit: ZNC 1.8.1 - https://znc.in)
2020-10-21 17:22:51	-->	swa_work (~swa_work@dhcp-108-168-58-228.cable.user.start.ca) has joined #python
2020-10-21 17:22:57	-->	N3X15 (~nexis@mail.nexisonline.net) has joined #python
2020-10-21 17:22:59	-->	canton7 (canton7@about/csharp/regular/canton7) has joined #python
2020-10-21 17:23:04	-->	bananazura (~bananazur@unaffiliated/bananazura) has joined #python
2020-10-21 17:23:32	<--	sharktopus (~sharktopu@unaffiliated/sharktopus) has quit (Ping timeout: 256 seconds)
2020-10-21 17:23:41	-->	rand233 (~lurk233@58.20.30.109) has joined #python
2020-10-21 17:24:43	<--	Blukunfando (~bkf@115.red-2-137-82.dynamicip.rima-tde.net) has quit (Remote host closed the connection)
2020-10-21 17:24:44	<--	reynir (~reynir@unaffiliated/reynir) has quit (Ping timeout: 264 seconds)
2020-10-21 17:25:04	-->	earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) has joined #python
2020-10-21 17:25:15	-->	sharktopus (~sharktopu@unaffiliated/sharktopus) has joined #python
2020-10-21 17:25:22	-->	reynir (~reynir@unaffiliated/reynir) has joined #python
2020-10-21 17:26:31	-->	alx (~alx@119246134143.ctinets.com) has joined #python
2020-10-21 17:27:11	-->	osiem (~osiem@demeter.boscard.pl) has joined #python
2020-10-21 17:28:18	<--	boblee (~boblee@gateway/tor-sasl/boblee) has quit (Ping timeout: 240 seconds)
2020-10-21 17:28:24	-->	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has joined #python
2020-10-21 17:28:34	<--	zahlman (~zahlman@bras-base-toroon4432w-grc-11-174-93-5-226.dsl.bell.ca) has quit (Ping timeout: 256 seconds)
2020-10-21 17:28:35	<--	edenist (~edenist@rdns.robotprofessor.net) has quit (Ping timeout: 246 seconds)
2020-10-21 17:28:38	-->	mcsontos (~mcsontos@95.82.134.252) has joined #python
2020-10-21 17:29:08	<--	cyberlard (~cyberlard@unaffiliated/jludwig) has quit (Ping timeout: 256 seconds)
2020-10-21 17:29:21	<--	cgundersson (~christian@87.251.200.82) has quit (Ping timeout: 258 seconds)
2020-10-21 17:30:27	-->	boblee (~boblee@gateway/tor-sasl/boblee) has joined #python
2020-10-21 17:30:35	-->	cyberlard (~cyberlard@unaffiliated/jludwig) has joined #python
2020-10-21 17:30:46	<--	WalterWhitesCook (~Thunderbi@108.62.5.136) has quit (Quit: Oof)
2020-10-21 17:31:12	-->	edenist (edenist@rdns.robotprofessor.net) has joined #python
2020-10-21 17:31:52	-->	Blukunfando (~bkf@115.red-2-137-82.dynamicip.rima-tde.net) has joined #python
2020-10-21 17:32:46	<--	ouyes (~ouyes@125.70.56.206) has quit (Remote host closed the connection)
2020-10-21 17:32:54	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Quit: Bin weg.)
2020-10-21 17:33:09	<--	Jerrynicki (~niklas@p549a92f6.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2020-10-21 17:34:07	<--	Aryan (~Aryan@unaffiliated/aryan) has quit (Quit: leaving)
2020-10-21 17:34:35	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 17:34:58	<--	jackiiilong (~textual@111.63.44.26) has quit (Ping timeout: 260 seconds)
2020-10-21 17:36:42	<--	Dark (~dark@freebsd/user/dark) has quit (Ping timeout: 260 seconds)
2020-10-21 17:37:04	<--	rogersm (~rogersm@92.59.121.108) has quit
2020-10-21 17:37:18	<--	BSD (~Aaron@freebsd/user/aaron) has quit (Ping timeout: 260 seconds)
2020-10-21 17:37:40	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 17:37:54	-->	jackiiilong (~textual@60.10.23.171) has joined #python
2020-10-21 17:38:10	<--	aartist (~user@ool-18bb12e9.dyn.optonline.net) has quit (Ping timeout: 258 seconds)
2020-10-21 17:38:47	<--	Lord_of_Life (~Lord@46.217.218.115) has quit (Read error: Connection reset by peer)
2020-10-21 17:38:53	-->	DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-157.dhcp.inet.fi) has joined #python
2020-10-21 17:39:00	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2020-10-21 17:39:18	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-21 17:39:21	-->	Spicyfella (~Spicyfell@static.226.82.69.159.clients.your-server.de) has joined #python
2020-10-21 17:39:57	<--	Allegretto (~allegrett@188-143-58-130.pool.digikabel.hu) has quit (Ping timeout: 256 seconds)
2020-10-21 17:40:05	<--	reynir (~reynir@unaffiliated/reynir) has quit (Ping timeout: 258 seconds)
2020-10-21 17:40:13	-->	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined #python
2020-10-21 17:40:26	-->	Aryan (~Aryan@unaffiliated/aryan) has joined #python
2020-10-21 17:40:36	-->	wallace_mu (~wallace_m@pool-173-79-208-61.washdc.fios.verizon.net) has joined #python
2020-10-21 17:40:46	-->	Allegretto (~allegrett@188-143-58-130.pool.digikabel.hu) has joined #python
2020-10-21 17:40:49	-->	reynir (~reynir@unaffiliated/reynir) has joined #python
2020-10-21 17:41:09	<--	Aryan (~Aryan@unaffiliated/aryan) has quit (Client Quit)
2020-10-21 17:41:30	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Remote host closed the connection)
2020-10-21 17:41:57	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-21 17:41:59	-->	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has joined #python
2020-10-21 17:43:07	<--	Deyaa (uid190709@gateway/web/irccloud.com/x-ssuqvgkhhnbfbqnw) has quit (Quit: Connection closed for inactivity)
2020-10-21 17:43:33	<--	babygnu (~robert@gateway/tor-sasl/babygnu) has quit (Quit: Leaving)
2020-10-21 17:44:40	<--	digi_world (~Thunderbi@92.40.180.99.threembb.co.uk) has quit (Ping timeout: 240 seconds)
2020-10-21 17:45:02	<--	wallace_mu (~wallace_m@pool-173-79-208-61.washdc.fios.verizon.net) has quit (Ping timeout: 246 seconds)
2020-10-21 17:45:13	<--	jimgray__ (~weechat@unaffiliated/jimgray) has quit (Ping timeout: 260 seconds)
2020-10-21 17:45:18	<--	sleepingisfun (~sleepingi@168.235.93.188) has quit (Quit: hewwo)
2020-10-21 17:46:03	<--	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has left #python
2020-10-21 17:46:22	<--	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has quit (Ping timeout: 272 seconds)
2020-10-21 17:46:41	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Ping timeout: 256 seconds)
2020-10-21 17:46:46	-->	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has joined #python
2020-10-21 17:46:55	<--	blueingress (~pp_of_mm@197.1.197.35.bc.googleusercontent.com) has quit (Ping timeout: 256 seconds)
2020-10-21 17:47:05	<--	Jonopoly (~Jonopoly@unaffiliated/jonopoly) has quit (Quit: WeeChat 2.9)
2020-10-21 17:48:54	-->	wyclif (~wyclif@unaffiliated/wyclif) has joined #python
2020-10-21 17:50:16	<--	quanter (~yinxiuqu@111.8.169.189) has quit (Read error: Connection reset by peer)
2020-10-21 17:50:21	epsilonKNOT	hey yall
2020-10-21 17:50:37	epsilonKNOT	i 'm trying to figure out whats the method to install packages without doing another build phase
2020-10-21 17:50:48	epsilonKNOT	like: python install --no-build
2020-10-21 17:50:51	epsilonKNOT	or something
2020-10-21 17:50:59	-->	Leonarbro (~Leonet@S01067824af93741c.cg.shawcable.net) has joined #python
2020-10-21 17:51:45	epsilonKNOT	ah found it, --skip-build
2020-10-21 17:51:49	<--	lmmx (~lmmx@host-80-47-113-123.as13285.net) has quit (Remote host closed the connection)
2020-10-21 17:51:54	<--	nero (nero@unaffiliated/nero) has quit (Quit: ZNC 1.6.2 - http://znc.in)
2020-10-21 17:52:13	-->	lmmx (~lmmx@host-80-47-113-123.as13285.net) has joined #python
2020-10-21 17:52:21	-->	cgundersson (~christian@87.251.200.82) has joined #python
2020-10-21 17:52:25	-->	nero (nero@unaffiliated/nero) has joined #python
2020-10-21 17:53:39	<--	wyclif (~wyclif@unaffiliated/wyclif) has quit (Ping timeout: 265 seconds)
2020-10-21 17:54:41	<--	jackiiilong (~textual@60.10.23.171) has quit (Ping timeout: 256 seconds)
2020-10-21 17:55:52	-->	dasher00 (~dasher00@90.205.55.140) has joined #python
2020-10-21 17:57:09	<--	ashwinvis (~avmo@h-96-225.A880.priv.bahnhof.se) has quit (Ping timeout: 260 seconds)
2020-10-21 17:58:10	<--	mikecmpbll (~mikecmpbl@ruby/staff/mikecmpbll) has quit (Quit: inabit. zz.)
2020-10-21 17:58:42	-->	justsomeguy (~justsomeg@unaffiliated/--/x-3805311) has joined #python
2020-10-21 17:59:02	-->	Lando-SpacePimp (~Lando@unaffiliated/lando-spacepimp) has joined #python
2020-10-21 18:00:01	<--	Elladan (~elladan@unaffiliated/elladan) has quit (Quit: ZNC - http://znc.in)
2020-10-21 18:00:32	<--	Blankspace (~abcd@unaffiliated/blankspace) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2020-10-21 18:01:01	-->	jackiiilong (~textual@111.63.44.26) has joined #python
2020-10-21 18:01:59	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-21 18:02:54	-->	mat001 (~mat001@73.93.155.29) has joined #python
2020-10-21 18:03:19	<--	dasher00 (~dasher00@90.205.55.140) has quit (Ping timeout: 265 seconds)
2020-10-21 18:03:27	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-21 18:03:53	Lando-SpacePimp	Bonjourno
2020-10-21 18:03:55	<--	reynir (~reynir@unaffiliated/reynir) has quit (Ping timeout: 256 seconds)
2020-10-21 18:04:00	-->	nabil__ (~nabil@105.102.98.3) has joined #python
2020-10-21 18:04:06	<--	phasetwo (~phasetwo@2601:602:8d80:4e50:346e:a0c4:3f08:2d35) has quit (Ping timeout: 272 seconds)
2020-10-21 18:04:15	<--	Forsythe (Forsythe@gateway/vpn/privateinternetaccess/forsythe) has quit (Ping timeout: 256 seconds)
2020-10-21 18:04:33	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 18:04:35	-->	reynir (~reynir@unaffiliated/reynir) has joined #python
2020-10-21 18:05:22	-->	zahlman (~zahlman@bras-base-toroon4432w-grc-11-174-93-5-226.dsl.bell.ca) has joined #python
2020-10-21 18:06:00	<--	mat001_ (~mat001@73.93.155.29) has quit (Ping timeout: 240 seconds)
2020-10-21 18:06:40	<--	nabil_ (~nabil@105.101.149.206) has quit (Ping timeout: 240 seconds)
2020-10-21 18:07:45	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 18:08:05	<--	qbit2821 (~qbit2821@94-255-133-216.cust.bredband2.com) has quit (Ping timeout: 258 seconds)
2020-10-21 18:08:09	-->	quanter (~yinxiuqu@111.8.173.32) has joined #python
2020-10-21 18:08:34	-->	mirrorbird (~psutcliff@2a00:801:42b:7891:16b1:e53f:55b2:15e1) has joined #python
2020-10-21 18:08:50	<--	jackiiilong (~textual@111.63.44.26) has quit (Ping timeout: 246 seconds)
2020-10-21 18:09:14	-->	ashwinvis (~avmo@h-96-225.A880.priv.bahnhof.se) has joined #python
2020-10-21 18:10:20	<--	tethroar (~tethroar@95.149.17.213) has quit (Ping timeout: 264 seconds)
2020-10-21 18:10:22	-->	samuel02 (uid56682@gateway/web/irccloud.com/x-rybmjxeuuygckjmk) has joined #python
2020-10-21 18:10:29	-->	jackiiilong (~textual@60.10.23.171) has joined #python
2020-10-21 18:11:08	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 18:13:46	<--	truthr (~truthr@unaffiliated/truthr) has quit (Quit: #politics-uncensored Rizon, Disco is life  https://www.youtube.com/watch?v=y1tZUmCyFxM)
2020-10-21 18:16:55	-->	zfigz (~Adium@76-198-158-124.lightspeed.tukrga.sbcglobal.net) has joined #python
2020-10-21 18:17:55	-->	walbo (7caa031f@gateway/web/cgi-irc/kiwiirc.com/ip.124.170.3.31) has joined #python
2020-10-21 18:18:36	-->	dodobrain_ (~dodobrain@unaffiliated/freakabcd) has joined #python
2020-10-21 18:18:58	-->	Jerrynicki (~niklas@p200300f577056f00864f9e835e47bcb7.dip0.t-ipconnect.de) has joined #python
2020-10-21 18:23:29	<--	dodobrain_ (~dodobrain@unaffiliated/freakabcd) has quit (Ping timeout: 260 seconds)
2020-10-21 18:24:37	-->	malevolent_ (~quassel@188.26.203.68) has joined #python
2020-10-21 18:24:39	-->	UlrichH (~UlrichH@reverse-177-83.fdn.fr) has joined #python
2020-10-21 18:25:04	<--	Rudd0 (~Rudd0@185.189.115.103) has quit (Ping timeout: 265 seconds)
2020-10-21 18:27:28	<--	malevolent (~quassel@86.127.248.4) has quit (Ping timeout: 260 seconds)
2020-10-21 18:27:36	-->	impermanence (493ec188@gateway/web/cgi-irc/kiwiirc.com/ip.73.62.193.136) has joined #python
2020-10-21 18:28:48	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Ping timeout: 272 seconds)
2020-10-21 18:29:15	<--	monksam (~monksam@gateway/tor-sasl/monksam) has quit (Quit: leaving)
2020-10-21 18:29:25	<--	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has quit (Ping timeout: 265 seconds)
2020-10-21 18:31:53	-->	aartist (~user@ool-18bb12e9.dyn.optonline.net) has joined #python
2020-10-21 18:32:21	-->	Haudegen (~quassel@91.114.49.10) has joined #python
2020-10-21 18:32:21	<--	jackiiilong (~textual@60.10.23.171) has quit (Ping timeout: 260 seconds)
2020-10-21 18:34:33	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-21 18:34:34	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 18:35:32	-->	jackiiilong (~textual@60.10.23.171) has joined #python
2020-10-21 18:35:40	-->	ntblb (~ntblb@185.160.227.190) has joined #python
2020-10-21 18:35:57	-->	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has joined #python
2020-10-21 18:36:08	<--	reynir (~reynir@unaffiliated/reynir) has quit (Ping timeout: 264 seconds)
2020-10-21 18:36:10	<--	lmmx (~lmmx@host-80-47-113-123.as13285.net) has quit (Remote host closed the connection)
2020-10-21 18:36:39	-->	lmmx (~lmmx@host-80-47-113-123.as13285.net) has joined #python
2020-10-21 18:37:31	-->	reynir (~reynir@unaffiliated/reynir) has joined #python
2020-10-21 18:38:00	<--	aartist (~user@ool-18bb12e9.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2020-10-21 18:38:10	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 18:38:12	<--	Nact (~l@8.45-200-80.adsl-dyn.isp.belgacom.be) has quit (Quit: Konversation terminated!)
2020-10-21 18:38:29	-->	davepdot_ (~davepdoto@212.219.133.13) has joined #python
2020-10-21 18:38:33	-->	phasetwo (~phasetwo@2601:602:8d80:4e50:346e:a0c4:3f08:2d35) has joined #python
2020-10-21 18:38:35	<--	karab44 (~karab44@unaffiliated/karab44) has quit (Ping timeout: 246 seconds)
2020-10-21 18:39:21	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Ping timeout: 260 seconds)
2020-10-21 18:39:59	<--	Spiney (~matt@075-130-152-237.res.spectrum.com) has quit (Ping timeout: 246 seconds)
2020-10-21 18:40:35	<--	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has quit (Ping timeout: 256 seconds)
2020-10-21 18:41:04	-->	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has joined #python
2020-10-21 18:42:27	-->	nabil_ (~nabil@105.101.175.129) has joined #python
2020-10-21 18:42:47	<--	davepdot_ (~davepdoto@212.219.133.13) has quit (Ping timeout: 246 seconds)
2020-10-21 18:42:56	-->	admin123 (~nope@ool-2f12f6cb.dyn.optonline.net) has joined #python
2020-10-21 18:43:12	<--	phasetwo (~phasetwo@2601:602:8d80:4e50:346e:a0c4:3f08:2d35) has quit (Ping timeout: 260 seconds)
2020-10-21 18:43:50	-->	jimgray__ (~weechat@unaffiliated/jimgray) has joined #python
2020-10-21 18:44:53	<--	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has quit (Ping timeout: 265 seconds)
2020-10-21 18:45:13	<--	dpreacher (~dpreacher@49.207.202.31) has left #python
2020-10-21 18:45:33	<--	nabil__ (~nabil@105.102.98.3) has quit (Ping timeout: 260 seconds)
2020-10-21 18:47:23	<--	admin123 (~nope@ool-2f12f6cb.dyn.optonline.net) has quit (Ping timeout: 256 seconds)
2020-10-21 18:47:28	-->	sdwrage (~textual@38.111.183.30) has joined #python
2020-10-21 18:48:34	-->	vorlket (~vorlket@121.209.75.128) has joined #python
2020-10-21 18:49:45	vorlket	How do you upload/download a file to remote machine? I have a client and a server listening on port x.
2020-10-21 18:50:13	<--	sdwrage (~textual@38.111.183.30) has quit (Client Quit)
2020-10-21 18:50:21	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined #python
2020-10-21 18:50:31	-->	Saradt (82e1f4ce@unaffiliated/saradt) has joined #python
2020-10-21 18:51:01	ChrisWarrick	vorlket: with what protocol?
2020-10-21 18:51:05	gcbirzan	Assignment expression question. Can I rewrite this without the if: {values[0]: values[1] for line in s.split('\n') if (values := line.split('\t'))} ?
2020-10-21 18:51:19	--	totallynotnate is now known as notnatebtw
2020-10-21 18:51:45	vorlket	ChrisWarrick: anything. There is a tcp connection between a client and a server.
2020-10-21 18:51:54	ChrisWarrick	vorlket: step 1, don’t roll your own protocol
2020-10-21 18:51:55	bjs	gcbirzan: the if is filtering out empty lines, so you can't remove it without ending up with a different dict
2020-10-21 18:52:09	<--	lmmx (~lmmx@host-80-47-113-123.as13285.net) has quit (Ping timeout: 258 seconds)
2020-10-21 18:52:10	bjs	(or removing those entries some other way)
2020-10-21 18:52:18	ChrisWarrick	vorlket: step 2, pick an existing protocol, like http, and use libraries for that
2020-10-21 18:52:25	gcbirzan	bjs: Okay, but I don't have empty lines, I just don't know where else I can put the assignment.
2020-10-21 18:52:28	<--	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has quit (Ping timeout: 244 seconds)
2020-10-21 18:52:55	gcbirzan	{(values := line.split('\t'))[0]: values[1] for line in s.split('\n')}
2020-10-21 18:52:56	mgedmin	gcbirzan: dict(line.split('\t')[:2] for line in s.split('\n'))
2020-10-21 18:52:56	ChrisWarrick	gcbirzan: Can I help you get rid of := ?
2020-10-21 18:52:58	gcbirzan	that looks even uglier
2020-10-21 18:52:58	ChrisWarrick	gcbirzan: dict(line.split('\t') for line in s.split('\n'))
2020-10-21 18:53:22	gcbirzan	ChrisWarrick: yeah, that's a simplified example
2020-10-21 18:53:30	ChrisWarrick	gcbirzan: okay, show your real code
2020-10-21 18:53:33	gcbirzan	but, even so, I was mostly curious how people use it
2020-10-21 18:53:52	ChrisWarrick	badly
2020-10-21 18:54:03	-->	karab44 (karab44@unaffiliated/karab44) has joined #python
2020-10-21 18:54:24	gcbirzan	ChrisWarrick: And, heh, there's no point, I just needed a one off.
2020-10-21 18:54:59	gcbirzan	I have resisted the urge to use it so far... Maybe an if foo := bar():
2020-10-21 18:55:00	-->	phonemic (~phonemic@45.56.183.71) has joined #python
2020-10-21 18:55:25	Saradt	Hi humanoids. I've got a function which takes a function as input: I'm trying to pass a lambda, but I'm gettin a syntax error: def foo (callback): .. foo(lambda port, exception : del listeners[port]) .. the error is syntaxtical around the : del
2020-10-21 18:55:28	bjs	gcbirzan: maybe it's possible that := just doesn't make your code any more readable than a proper for loop
2020-10-21 18:55:38	bjs	Saradt: `del` cannot appear in a lambda
2020-10-21 18:55:46	gcbirzan	bjs: In this case, for sure.
2020-10-21 18:56:00	gcbirzan	Next up, del expression :)
2020-10-21 18:56:02	bjs	Saradt: lambdas need to be an expression, so it needs to return a value,  but `del` is a statement that has no value
2020-10-21 18:56:09	bjs	Saradt: what did you want the function to return?
2020-10-21 18:56:26	Saradt	Nothing, I just want it to delete the key from a dictionary.
2020-10-21 18:56:37	gcbirzan	In that particular case, you could use listeners.__delitem__(port)
2020-10-21 18:56:44	Saradt	It's like a callback / action.
2020-10-21 18:56:56	mgedmin	listeners.pop(port) would also work
2020-10-21 18:57:00	Saradt	Is .__delitem__ the internal method being called by del?
2020-10-21 18:57:00	<--	Jak_o_Shadows (~Jak@unaffiliated/jak-o-shadows/x-0479135) has quit (Ping timeout: 240 seconds)
2020-10-21 18:57:00	gcbirzan	Oh, right.
2020-10-21 18:57:08	gcbirzan	Use mgedmin's one.
2020-10-21 18:57:42	-->	Barones (~Barones@2804:7f3:8982:f364:c896:23d4:b69c:8c30) has joined #python
2020-10-21 18:57:46	bjs	Saradt: make a `def` or use dict.pop in the lambda
2020-10-21 18:58:07	bjs	Saradt: don't call .__delitem__ yourself, it's Python's job to call that on the right object at the right time :)
2020-10-21 18:58:46	Saradt	So just to be sure. If I wanted to pass this as the function, I'd do myDict.pop and pass that? And the callback then calls that, with the key as input.
2020-10-21 18:59:01	Saradt	(trying)
2020-10-21 18:59:15	gcbirzan	Yes, that would work. But your lambda takes 2 arguments.
2020-10-21 18:59:53	amo	Saradt, from operator import delitem
2020-10-21 18:59:56	Saradt	Yeah, did this lambda port, exception : listeners.pop(port)
2020-10-21 19:00:01	amo	could also work
2020-10-21 19:00:14	<--	youngOSCP (~youngOSCP@gateway/tor-sasl/youngoscp) has left #python
2020-10-21 19:00:19	Saradt	What is "del" then? An operator?
2020-10-21 19:00:29	amo	yes
2020-10-21 19:00:43	-->	lowarago (4d4ecc2c@cable-77-78-204-44.dynamic.telemach.ba) has joined #python
2020-10-21 19:01:07	Saradt	That makes sense then. Thanks a lot everyone, as always very helpful <3  -- gcbirzan, mgedmin, bjs, amo
2020-10-21 19:01:22	<--	mirrorbird (~psutcliff@2a00:801:42b:7891:16b1:e53f:55b2:15e1) has quit (Quit: Leaving)
2020-10-21 19:01:26	amo	yw
2020-10-21 19:01:53	-->	courrier (~courrier@147.210.204.164) has joined #python
2020-10-21 19:02:07	gcbirzan	It's a statement, operators can appear in an expression
2020-10-21 19:02:10	bjs	Saradt: well, it's a statement.
2020-10-21 19:02:52	bjs	Saradt: there's also delitem function in the operators module, defined as `def delitem(a, b): del a[b]`
2020-10-21 19:02:56	bjs	(literally)
2020-10-21 19:03:35	Saradt	Why does that exist, is that for cases like this where I need e.g. a method, not a statement?
2020-10-21 19:04:11	lowarago	Hey, I am trying to do some OCR with Python. I use easyOCR package and when in CPU only mode, it takes about 4-5 seconds to read a 12 digit number from an image of size 60x12. Very slow... So, in easyocr initialization, I enabled GPU, but now I get these errors: https://hastebin.com/cumusuhuxo.php Looks like my Nvidia GTX 1650 (4 GB VRAM) doesn't
2020-10-21 19:04:11	lowarago	have enough memory for CUDA.
2020-10-21 19:04:28	amo	there are many tutorials that refer to del as operator though, and operator.delitem basically is the "operator view" of that statement
2020-10-21 19:04:32	bjs	Saradt: I guess, I don't find it very useful
2020-10-21 19:04:35	-->	urodna (~urodna@unaffiliated/urodna) has joined #python
2020-10-21 19:04:36	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 19:04:42	amo	confusing..
2020-10-21 19:04:44	bjs	Saradt: but i guess you can use it here,  I just forgot it existed
2020-10-21 19:05:04	mgedmin	Saradt: the operators module is for people who like functional programming
2020-10-21 19:05:08	amo	Saradt, yes, operator is for all cases that take a function
2020-10-21 19:05:23	mgedmin	so you could invoke del a[b] inside an expression, like here
2020-10-21 19:05:27	amo	people who like functional programming.. like me ^ ^
2020-10-21 19:05:30	 *	mgedmin had forgotten operatos.delitem existed
2020-10-21 19:05:56	-->	lmmx (~lmmx@host-80-47-113-123.as13285.net) has joined #python
2020-10-21 19:05:58	<--	supakeen (~user@python/site-packages/supakeen) has quit (Quit: WeeChat 2.9)
2020-10-21 19:06:33	-->	supakeen (~user@python/site-packages/supakeen) has joined #python
2020-10-21 19:06:48	-->	bolovanos_ (~bolovanos@host-213-235-140-105.ip.topnet.cz) has joined #python
2020-10-21 19:07:16	lowarago	I always had issues with OCR. Either it making mistakes when reading clear text or just being slow. What alternatives do I have and how can I improve it?
2020-10-21 19:07:53	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2020-10-21 19:08:07	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-21 19:08:15	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 19:09:20	-->	sandra_96 (~sandra_96@c-86a170d5.05-229-6c756e3.bbcust.telenor.se) has joined #python
2020-10-21 19:10:00	<--	bolovanos (~bolovanos@185.8.239.54) has quit (Ping timeout: 240 seconds)
2020-10-21 19:10:37	-->	Newami (~Newami@ip70-179-45-125.sd.sd.cox.net) has joined #python
2020-10-21 19:10:46	-->	aartist (~user@ool-18bb12e9.dyn.optonline.net) has joined #python
2020-10-21 19:11:08	bjs	lowarago: pay a human
2020-10-21 19:11:42	lowarago	:D
2020-10-21 19:11:56	-->	wingsorc (~wingsorc@unaffiliated/wingsorc) has joined #python
2020-10-21 19:12:40	Saradt	There is a package that a lot of company use, which solves OCR, as bjs also said. I think it's "import Indian.workforce;"
2020-10-21 19:12:51	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 19:12:55	amo	heh
2020-10-21 19:13:09	lowarago	I am talking about number like this: 5129312841. Imagine I pass the screenshot of this number to OCR library. Very small image and very clear text. Still it makes mistakes like reads "B" instead of 8
2020-10-21 19:13:18	Saradt	Apparently even Amazone Go, the worker-free shopping thing, uses human workforce to solve cases it can't figure out.
2020-10-21 19:13:30	amo	how about mechanical turk
2020-10-21 19:13:37	-->	Kel_ (~KelMonsta@S01060492268118f0.gv.shawcable.net) has joined #python
2020-10-21 19:13:46	Saradt	lowarago does it have to be a live reading?
2020-10-21 19:14:09	lowarago	It does have to be live, but I have around 30 seconds to read it
2020-10-21 19:14:28	amo	lowarago, you could limit the range of possible outputs
2020-10-21 19:14:50	amo	if you tell your code that only numbers are acceptable outputs, there won't be any B vs 8 issues
2020-10-21 19:15:09	<--	tralala (~user@unaffiliated/tralala) has quit (Ping timeout: 272 seconds)
2020-10-21 19:15:19	<--	Kel (~KelMonsta@S01060492268118f0.gv.shawcable.net) has quit (Ping timeout: 256 seconds)
2020-10-21 19:15:21	-->	Leonarbro_ (~Leonet@S01067824af93741c.cg.shawcable.net) has joined #python
2020-10-21 19:15:23	<--	dreamon (~dreamon@unaffiliated/dreamon) has quit (Ping timeout: 240 seconds)
2020-10-21 19:15:32	<--	Heart_And_Chops (~Heart_And@S0106cc2de0099182.no.shawcable.net) has quit (Ping timeout: 258 seconds)
2020-10-21 19:16:08	<--	Kel_ (~KelMonsta@S01060492268118f0.gv.shawcable.net) has quit (Read error: Connection reset by peer)
2020-10-21 19:16:13	lowarago	Yes, but I can do that after the reading is done. Also I have noticed sometimes it mistakes a number for another number
2020-10-21 19:16:27	amo	that is a bigger issue
2020-10-21 19:16:37	-->	Kel (~KelMonsta@S01060492268118f0.gv.shawcable.net) has joined #python
2020-10-21 19:17:48	mgedmin	yes please, why isn't anyone working on OCR for screenshots?
2020-10-21 19:18:09	amo	you mean screenshot to bpaste? ^
2020-10-21 19:18:11	amo	^^
2020-10-21 19:18:13	mgedmin	it should be possible to get 100% accuracy given known fonts and rendering libraries (modulo glyphs that look identical)
2020-10-21 19:18:20	<--	Leonarbro (~Leonet@S01067824af93741c.cg.shawcable.net) has quit (Ping timeout: 240 seconds)
2020-10-21 19:18:32	man_in_shack	"should"
2020-10-21 19:18:34	<--	walbo (7caa031f@gateway/web/cgi-irc/kiwiirc.com/ip.124.170.3.31) has quit (Quit: Connection closed)
2020-10-21 19:18:43	amo	we've had that discussion before in this channel
2020-10-21 19:18:58	lowarago	What if I extract screenshots of every glyph
2020-10-21 19:19:07	amo	OCR from some ingame stream
2020-10-21 19:19:09	lowarago	Since I don't know what rendering libraries or font is used
2020-10-21 19:19:19	man_in_shack	if you have the exact fontface and know in advance the exact settings and even LIBRARY that was used to render it, then yes
2020-10-21 19:19:20	-->	phasetwo (~phasetwo@2601:602:8d80:4e50:346e:a0c4:3f08:2d35) has joined #python
2020-10-21 19:19:32	-->	morfin (~morfin@80.83.248.121) has joined #python
2020-10-21 19:19:33	morfin	hello
2020-10-21 19:19:38	amo	hello morfin
2020-10-21 19:19:38	man_in_shack	that's everything from font size to kerning to line spacing
2020-10-21 19:19:40	<--	txtsd (~txtsd@115.69.246.75) has quit (Ping timeout: 240 seconds)
2020-10-21 19:19:56	morfin	seems like there is no anonymous blocks like in C++ limiting "lifetime" of variable?
2020-10-21 19:19:58	lowarago	Yeah, but I cannot know that in timely matter :(
2020-10-21 19:20:01	man_in_shack	alternatively, convince everyone to switch to bitmap fonts (:
2020-10-21 19:20:07	amo	hmm
2020-10-21 19:20:09	<--	Stanley00 (~stanley00@unaffiliated/stanley00) has quit
2020-10-21 19:20:28	amo	lowarago, is there a portion of the input that is always in same place?
2020-10-21 19:20:37	amo	that you could use as reference?
2020-10-21 19:20:41	nedbat	morfin: comprehension variables are scoped to the comprehension, but other than that, it;'s all function scope.
2020-10-21 19:20:43	man_in_shack	last i checked there's not really any opensource ocr libraries that you can just slap an image into and get a result
2020-10-21 19:20:53	-->	txtsd (~txtsd@115.69.246.75) has joined #python
2020-10-21 19:20:58	morfin	hmm
2020-10-21 19:21:12	man_in_shack	the closest appears to be wrappers around google cloud algorithms
2020-10-21 19:21:14	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-21 19:21:16	mgedmin	exception variables are scoped to the except: block, the rest is all function scope
2020-10-21 19:21:21	nedbat	morfin: but also, C++ destructors don't exist in Python, so lifetime is a different thing anyway.
2020-10-21 19:21:23	-->	digi_world (~Thunderbi@92.40.181.45.threembb.co.uk) has joined #python
2020-10-21 19:21:29	nedbat	morfin: where did you want a limited lifetime?
2020-10-21 19:21:38	<--	derk0pf (~derk0pf@p5b2e5943.dip0.t-ipconnect.de) has quit (Ping timeout: 246 seconds)
2020-10-21 19:21:48	lowarago	Maybe this idea might work. Since the image I take of the number is always the same size and digits are always the same size/font, maybe I can take screenshot of each number and do some needle in haystack algorithm to compare
2020-10-21 19:22:06	<--	Daniel071_ (~Daniel071@119-17-132-38.771184.mel.nbn.aussiebb.net) has quit (Quit: Daniel071_)
2020-10-21 19:22:24	nedbat	lowarago: are you sure there isn't another way to get the number? What is this data you are getting?
2020-10-21 19:22:32	amo	lowarago, "needle in haystack algorithm" is called "template matching" and should work pretty well if you have good templates
2020-10-21 19:22:41	-->	sdoherty (~sdoherty@pool-96-230-23-78.bstnma.fios.verizon.net) has joined #python
2020-10-21 19:23:34	amo	just make sure you don't smudge your input image with bad filters
2020-10-21 19:23:58	lowarago	Basically, I have a tool that renders a rectangle with OpenGL inside another app's window and displays specific number. I want to read that number
2020-10-21 19:23:59	amo	you need nice and crisp contours for that to work
2020-10-21 19:24:18	lowarago	So only reverse engineering the tool that renders the number is able to give me 100% accuracy
2020-10-21 19:24:22	<--	phasetwo (~phasetwo@2601:602:8d80:4e50:346e:a0c4:3f08:2d35) has quit (Ping timeout: 260 seconds)
2020-10-21 19:24:37	<--	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has quit (Ping timeout: 260 seconds)
2020-10-21 19:24:40	<--	miique (~miique@181.46.139.165) has quit (Ping timeout: 240 seconds)
2020-10-21 19:25:08	ice9	which is better IDE, pycharm or code?
2020-10-21 19:25:12	--	Leonarbro_ is now known as Leonarbro
2020-10-21 19:25:30	<--	pombreda_ (~pombreda@host-213-213-215-213.dynamic.voo.be) has quit (Ping timeout: 256 seconds)
2020-10-21 19:25:39	amo	code?
2020-10-21 19:25:39	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Ping timeout: 240 seconds)
2020-10-21 19:27:31	amo	what code?
2020-10-21 19:27:39	mgedmin	visual studio code, presumably
2020-10-21 19:27:50	amo	ah
2020-10-21 19:27:52	 *	mgedmin can't answer, being a diehard vim user
2020-10-21 19:28:48	-->	memcorrupt (~memcpy@unaffiliated/memcorrupt) has joined #python
2020-10-21 19:29:50	<--	aartist (~user@ool-18bb12e9.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2020-10-21 19:30:23	edd_lc	vim
2020-10-21 19:30:24	-->	existx (existx@xyz.xyzxyzxyzxyzxyz.xyz) has joined #python
2020-10-21 19:30:39	-->	metabsd (uid209675@gateway/web/irccloud.com/x-urrqznyjveadtzam) has joined #python
2020-10-21 19:31:03	nedbat	ice9: it;s personal preference: try them and see what you think.  Or, they are both fine tools, just pick one and start writing Python.
2020-10-21 19:33:52	memcorrupt	hello, I've learned some FP stuff and it seems cool, but I'm not sure if python is a fine language to bring some ideas from FP into it or not, by using python to make those tools, not as a core dev. so... anyone has any opinion about this? is it worth to make fp utilities for python?
2020-10-21 19:34:09	memcorrupt	I saw pyramda, but it doesn't offer much
2020-10-21 19:34:21	bjs	memcorrupt: there are some fp utilities that are very popular.  e.g. the entire idea of decorators are higher-order functions
2020-10-21 19:34:27	nedbat	memcorrupt: what FP stuff are we talking about? There are a few different ideas
2020-10-21 19:34:31	bjs	memcorrupt: but some things don't work as well, due to the syntax and calling conventions.
2020-10-21 19:34:34	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 19:34:54	-->	derk0pf (~derk0pf@p5b2e5943.dip0.t-ipconnect.de) has joined #python
2020-10-21 19:35:57	-->	toboRlivE (~toboRlivE@136.61.220.168) has joined #python
2020-10-21 19:35:57	<--	rand233 (~lurk233@58.20.30.109) has quit (Quit: bye bye)
2020-10-21 19:36:15	<--	Saradt (82e1f4ce@unaffiliated/saradt) has quit (Ping timeout: 245 seconds)
2020-10-21 19:36:32	<--	killMercy (~sahishnu@2401:4900:519e:a200:cc:55af:4a32:bb4a) has quit (Read error: Connection reset by peer)
2020-10-21 19:36:59	-->	wyclif (~wyclif@unaffiliated/wyclif) has joined #python
2020-10-21 19:37:43	-->	stoboRlivE (~toboRlivE@136.61.220.168) has joined #python
2020-10-21 19:37:54	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 19:37:56	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-21 19:37:57	memcorrupt	bjs: yeah, I actually love decorates... though some assurance stuff (type and immutability) annoy
2020-10-21 19:38:08	-->	JesseParksalot (3e4ecd54@unaffiliated/mn-) has joined #python
2020-10-21 19:38:13	bjs	memcorrupt: in that, their existence annoys you or ?
2020-10-21 19:38:37	memcorrupt	bjs: inexistence (or non-existence?)
2020-10-21 19:39:01	amo	you easily can use immutable types
2020-10-21 19:39:03	bjs	memcorrupt: there are immutable types in Python,  and there are typecheckers
2020-10-21 19:39:20	bjs	(although the type systems they support aren't as rich as e.g. ML-like languages)
2020-10-21 19:39:30	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Read error: Connection reset by peer)
2020-10-21 19:39:36	amo	memcorrupt, what exactly do you have in mind?
2020-10-21 19:39:40	<--	lmmx (~lmmx@host-80-47-113-123.as13285.net) has quit (Ping timeout: 240 seconds)
2020-10-21 19:39:53	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-21 19:41:00	JesseParksalot	Is it possible to have nested for loop continue to next iteration on the first for loop: https://bpa.st/6ENA
2020-10-21 19:41:09	<--	toboRlivE (~toboRlivE@136.61.220.168) has quit (Ping timeout: 256 seconds)
2020-10-21 19:41:14	<--	wyclif (~wyclif@unaffiliated/wyclif) has quit (Ping timeout: 246 seconds)
2020-10-21 19:41:14	<--	edd_lc (~edd_lc@85-250-110-184.bb.netvision.net.il) has quit (Ping timeout: 246 seconds)
2020-10-21 19:42:01	amo	JesseParksalot, yes, but it's difficult. i suggest you use flags
2020-10-21 19:42:17	JesseParksalot	amo how would I use flags?
2020-10-21 19:42:24	-->	Jonopoly (~Jonopoly@unaffiliated/jonopoly) has joined #python
2020-10-21 19:42:49	-->	mirrorbird (~psutcliff@2a00:801:42b:7891:16b1:e53f:55b2:15e1) has joined #python
2020-10-21 19:43:04	amo	you set a flag, then continue or break depending on the flag
2020-10-21 19:43:23	<--	Jonopoly (~Jonopoly@unaffiliated/jonopoly) has quit (Client Quit)
2020-10-21 19:43:53	-->	waicman (~waicman@183.226.196.41) has joined #python
2020-10-21 19:44:23	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Ping timeout: 246 seconds)
2020-10-21 19:45:00	amo	like you set the flag "continue_outer" before you break the first inner loop, then check "if continue_outer" right after the first inner loop and if True, continue
2020-10-21 19:45:16	-->	Jonopoly (~Jonopoly@unaffiliated/jonopoly) has joined #python
2020-10-21 19:45:19	-->	aartist (~user@ool-18bb12e9.dyn.optonline.net) has joined #python
2020-10-21 19:45:28	JesseParksalot	ah I see okay
2020-10-21 19:45:43	JesseParksalot	true true ty
2020-10-21 19:45:48	amo	yw
2020-10-21 19:46:10	memcorrupt	amo: well, it was more about type system and immutability stuff, but it also doesn't have like a fine pattern matching like in erlang/haskell/rust and even ruby recently, neither optimizes tail-recursive, nor can have multiline lambda, nor returning things from if for example `x = if ...: long statement \n\t else if: ... \n\t else: ...`
2020-10-21 19:46:27	-->	cdown_ (~cdown@89.32.122.5) has joined #python
2020-10-21 19:47:23	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2020-10-21 19:47:27	<--	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has quit (Ping timeout: 256 seconds)
2020-10-21 19:47:52	nedbat	memcorrupt: true, Python doesn't do those things.
2020-10-21 19:47:59	-->	istlf (~istlf@193.32.127.215) has joined #python
2020-10-21 19:48:00	memcorrupt	all these things and availibity of FP-friendly semantics in other libraries make FP-like programming in python very hard
2020-10-21 19:48:09	-->	gena2x (~gena2x@cpc93786-hari17-2-0-cust3239.20-2.cable.virginm.net) has joined #python
2020-10-21 19:48:19	amo	1) you can use immutable types, as said 2) pattern matching is planned for python 3.10 3) i am sad about the lack of tail-recursion, too, but most often it's not an issue thanks to excellent iteration
2020-10-21 19:48:24	memcorrupt	about libraries, well, things can be made, but those core inherited problems... idk
2020-10-21 19:48:28	-->	ikus060 (~ikus060@173-246-15-25.qc.cable.ebox.net) has joined #python
2020-10-21 19:48:39	-->	impermanence90 (c01c0112@gateway/web/cgi-irc/kiwiirc.com/ip.192.28.1.18) has joined #python
2020-10-21 19:48:42	amo	i would disagree that functional programming in python is hard
2020-10-21 19:49:01	<--	impermanence90 (c01c0112@gateway/web/cgi-irc/kiwiirc.com/ip.192.28.1.18) has quit (Client Quit)
2020-10-21 19:49:02	nedbat	amo: pattern matching is being discussed, it might not be added.
2020-10-21 19:49:05	<--	cdown (~cdown@163.114.131.1) has quit (Ping timeout: 256 seconds)
2020-10-21 19:49:07	-->	impermanence41 (c01c0112@gateway/web/cgi-irc/kiwiirc.com/ip.192.28.1.18) has joined #python
2020-10-21 19:49:08	--	cdown_ is now known as cdown
2020-10-21 19:49:08	<--	jimgray__ (~weechat@unaffiliated/jimgray) has quit (Ping timeout: 260 seconds)
2020-10-21 19:49:12	<--	jackiiilong (~textual@60.10.23.171) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 19:49:16	man_in_shack	what type of pattern matching?
2020-10-21 19:49:21	<--	impermanence (493ec188@gateway/web/cgi-irc/kiwiirc.com/ip.73.62.193.136) has quit (Ping timeout: 260 seconds)
2020-10-21 19:49:22	amo	nedbat, whaa..!
2020-10-21 19:49:28	<--	impermanence41 (c01c0112@gateway/web/cgi-irc/kiwiirc.com/ip.192.28.1.18) has quit (Client Quit)
2020-10-21 19:49:57	nedbat	man_in_shack, amo: https://www.python.org/dev/peps/pep-0634/ status: draft
2020-10-21 19:50:19	amo	memcorrupt, well, you might be interested in Hy
2020-10-21 19:50:24	supakeen	there's a lot that i don't like and a lot i *do* like in the patma draft
2020-10-21 19:50:26	<--	vorlket (~vorlket@121.209.75.128) has quit (Quit: Leaving)
2020-10-21 19:50:34	-->	thiras (~thiras@unaffiliated/thiras) has joined #python
2020-10-21 19:50:43	<--	digi_world (~Thunderbi@92.40.181.45.threembb.co.uk) has quit (Remote host closed the connection)
2020-10-21 19:50:53	<--	k-man (~jason@unaffiliated/k-man) has quit (Ping timeout: 260 seconds)
2020-10-21 19:50:55	<--	notnatebtw (~nate@110.138.18.157) has quit (Quit: WeeChat 2.9)
2020-10-21 19:51:00	-->	digi_world (~Thunderbi@92.40.181.44.threembb.co.uk) has joined #python
2020-10-21 19:51:07	nedbat	imho, recursion doesn't need to be as central to FP as it is
2020-10-21 19:51:14	emerent	seems like the proposal is being reworked
2020-10-21 19:51:18	kosh	does anyone know of a good python tutorial that also covers basics of numpy? looking for something for scientists to use
2020-10-21 19:51:23	amo	memcorrupt, Hylang is a dialect of lisp embedded in python
2020-10-21 19:51:25	emerent	there was an older one, PEP 622
2020-10-21 19:51:53	bjs	nedbat: pattern matching seems popular and I'd be surprised (and a little sad) if it gets rejected
2020-10-21 19:51:59	bjs	it seems like the first reasonable proposal
2020-10-21 19:52:04	amo	nedbat, there are problems that are just begging for a recursive solution like tree traversal
2020-10-21 19:52:14	-->	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has joined #python
2020-10-21 19:52:17	nedbat	bjs: i haven't been following it.  i'm just pointing out the details
2020-10-21 19:52:37	amo	but yeah, in general one doesn't *need* recursion
2020-10-21 19:52:39	nedbat	amo: sure, recursive structures need recursive code. But FP jumps to recursive for iterative processes also.
2020-10-21 19:52:52	-->	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has joined #python
2020-10-21 19:52:54	<--	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has quit (Max SendQ exceeded)
2020-10-21 19:52:56	<--	digi_world (~Thunderbi@92.40.181.44.threembb.co.uk) has quit (Client Quit)
2020-10-21 19:53:12	-->	k-man (~jason@unaffiliated/k-man) has joined #python
2020-10-21 19:53:40	man_in_shack	so it's kinda like how switch/case works in bourne shell then
2020-10-21 19:54:35	-->	blueingress (~pp_of_mm@197.1.197.35.bc.googleusercontent.com) has joined #python
2020-10-21 19:54:41	han-solo	i feel it's more like the `match` from rust, than `switch/case`
2020-10-21 19:54:46	gena2x	Hello. I am trying to get current directory in python and can not...
2020-10-21 19:54:50	gena2x	gena@p50-debian:~/symlink:$ pwd; python3 -c 'import os; print(os.getcwd())'
2020-10-21 19:54:51	-->	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has joined #python
2020-10-21 19:54:55	man_in_shack	i don't know rust though (:
2020-10-21 19:55:02	gena2x	returns me:
2020-10-21 19:55:05	amo	memcorrupt, as much as i dislike how little love lambdas get in python, that's generally a non-issue
2020-10-21 19:55:11	gena2x	 /home/gena/symlink
2020-10-21 19:55:13	blueingress	j /alis
2020-10-21 19:55:19	gena2x	 /home/gena/somefolder
2020-10-21 19:55:20	-->	solarjoe4 (~solarjoe@p50873217.dip0.t-ipconnect.de) has joined #python
2020-10-21 19:55:43	gena2x	is there a pythonic way to get cwd without resolving symlinks?
2020-10-21 19:55:47	amo	memcorrupt, on the other hand, i very much like how you can turn classes into callables etc
2020-10-21 19:56:09	<--	main (~main@unaffiliated/main) has quit (Quit: im out)
2020-10-21 19:56:13	mgedmin	gena2x: os.getenv('PWD') or os.getcwd()
2020-10-21 19:56:14	han-solo	man_in_shack: https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html
2020-10-21 19:56:20	bjs	man_in_shack: I guess it's similar in style to Haskell/OCaml case/match statements
2020-10-21 19:56:20	-->	Deyaa (uid190709@gateway/web/irccloud.com/x-icztjdqwazzddqfq) has joined #python
2020-10-21 19:56:32	gena2x	os.getcwd() doesn't work.
2020-10-21 19:56:51	-->	main (~main@unaffiliated/main) has joined #python
2020-10-21 19:56:52	gena2x	I am trying to figure out of os.getenv only way or there is something more pythonic than that.
2020-10-21 19:57:06	gena2x	(see example above how it doesn't work)
2020-10-21 19:57:08	mgedmin	gena2x: and I mean that as a literal expression, use the PWD environment variable but fall back to os.getcwd()
2020-10-21 19:57:20	<--	lowarago (4d4ecc2c@cable-77-78-204-44.dynamic.telemach.ba) has quit (Remote host closed the connection)
2020-10-21 19:57:23	gena2x	ah
2020-10-21 19:57:40	amo	memcorrupt, also there is excellent introspection support like checking signatures
2020-10-21 19:57:41	-->	wallace_mu (~wallace_m@pool-173-79-208-61.washdc.fios.verizon.net) has joined #python
2020-10-21 19:57:44	mgedmin	gena2x: the kernel knows the actual directory, but not which symlink you used to chdir() there
2020-10-21 19:57:58	mgedmin	gena2x: but the shell also sets the PWD environment variable using the original path spelling you use
2020-10-21 19:58:06	amo	functions as object has a lot of benefits
2020-10-21 19:58:17	mgedmin	gena2x: but you can't rely on always being called from a shell, so it can be tricky
2020-10-21 19:58:18	gena2x	well, every task knows it's cwd
2020-10-21 19:58:28	Deyaa	I want to get country ip ranges using country name.
2020-10-21 19:58:35	-->	dreamon (~dreamon@unaffiliated/dreamon) has joined #python
2020-10-21 19:58:37	mgedmin	gena2x: actually maybe you should verify that the value of os.getenv('PWD') resolves to the same inode as os.getcwd()
2020-10-21 19:58:47	mgedmin	gena2x: I'm not aware of a function that does that existing in the stdlib
2020-10-21 19:58:47	gena2x	is this sort of known thing - I can not google anything reasonable.
2020-10-21 19:59:36	Deyaa	Please help
2020-10-21 19:59:40	gena2x	man 3 getcwd?
2020-10-21 20:00:06	<--	stranac (~stranac@195.29.239.126) has quit (Read error: Connection reset by peer)
2020-10-21 20:00:17	gena2x	or you mean python standard lib?
2020-10-21 20:01:14	mgedmin	I mean the python stdlib
2020-10-21 20:01:14	-->	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has joined #python
2020-10-21 20:01:15	gena2x	I see, thanks...
2020-10-21 20:01:21	<--	a11g0R (~mariusz@old166.internetdsl.tpnet.pl) has left #python
2020-10-21 20:01:30	mgedmin	I don't think the libc getcwd() looks at $PWD either
2020-10-21 20:02:11	bjs	libc's getcwd() should never return something with a symbolic link in it
2020-10-21 20:04:55	<--	zamba (~marius@89.162.62.78) has quit (Ping timeout: 258 seconds)
2020-10-21 20:04:55	memcorrupt	amo: recursive is used a lot in FP where it might not be necessary in python due to immutability stuff (if I'm not mistaken)...
2020-10-21 20:04:56	-->	notnatebtw (~nate@110.138.18.157) has joined #python
2020-10-21 20:04:56	memcorrupt	amo: yes, I love that callable class instance too, it helped me a lot to implement curry
2020-10-21 20:04:56	-->	Amanas (~Amanas@cpe-24-162-249-230.nc.res.rr.com) has joined #python
2020-10-21 20:04:56	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 20:04:56	gena2x	wow, right. interesting.
2020-10-21 20:04:56	-->	dv{0 (~D@190.189.217.10) has joined #python
2020-10-21 20:05:16	gena2x	Wow, even ls -ld /proc/$$/cwd return real path...
2020-10-21 20:05:35	memcorrupt	amo: "introspection support like checking signatures", ammm... idk what that is... would you tell more about it?
2020-10-21 20:05:39	-->	hussam (uid193284@gateway/web/irccloud.com/x-bofuaoiwkxqndwpq) has joined #python
2020-10-21 20:05:56	<--	dv{0 (~D@190.189.217.10) has quit (Client Quit)
2020-10-21 20:06:12	amo	memcorrupt, every callable has a signature, the parameters and annotations it can take
2020-10-21 20:06:53	memcorrupt	amo: ah, right
2020-10-21 20:07:30	amo	memcorrupt, import inspect lets you have a look at these things and you can make decisions based on that
2020-10-21 20:07:42	-->	markb1 (~mbiggers@2606-a000-111f-41fd-54f4-5c0c-e1d3-e1f1.inf6.spectrum.com) has joined #python
2020-10-21 20:08:05	<--	solarjoe4 (~solarjoe@p50873217.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2020-10-21 20:08:07	amo	inspect.Signature can be quite useful
2020-10-21 20:08:16	memcorrupt	cool
2020-10-21 20:08:30	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 20:09:40	memcorrupt	amo: and so monads/functors/etc.. (interfaces) can be made by classes, right?
2020-10-21 20:09:50	amo	sure
2020-10-21 20:10:24	-->	zamba (~marius@89.162.62.78) has joined #python
2020-10-21 20:10:25	<--	quanter (~yinxiuqu@111.8.173.32) has quit (Ping timeout: 265 seconds)
2020-10-21 20:10:49	memcorrupt	amo: you said we can have immutable types, but how?
2020-10-21 20:11:06	gena2x	oh, i finally found what to google... thanks a lot.
2020-10-21 20:11:19	<--	karab44 (karab44@unaffiliated/karab44) has quit (Remote host closed the connection)
2020-10-21 20:11:24	-->	Beanzilla (~Beanzilla@unaffiliated/beanzilla) has joined #python
2020-10-21 20:11:55	amo	memcorrupt, tuples, frozensets are most common. frozendicts are in an external lib, but i never needed it
2020-10-21 20:12:19	<--	h4rd3n3D (~weechat@gateway/tor-sasl/h4rd3n3d) has quit (Remote host closed the connection)
2020-10-21 20:12:29	amo	if you make sure that your functions return tuples, you're covered 99% of the time
2020-10-21 20:12:48	amo	(or functions ;) )
2020-10-21 20:12:54	-->	h4rd3n3D (~weechat@gateway/tor-sasl/h4rd3n3d) has joined #python
2020-10-21 20:13:02	nedbat	memcorrupt: instead of immutable types, why not just avoid mutating?
2020-10-21 20:13:32	memcorrupt	nedbat: because that'd require me a lot of deepcopy.copy
2020-10-21 20:13:37	-->	edd_lc (~edd_lc@85-250-110-184.bb.netvision.net.il) has joined #python
2020-10-21 20:13:42	memcorrupt	for example: https://github.com/cthulhu-irl/pytada/blob/dev/tada/models/todo.py#L55
2020-10-21 20:14:40	<--	shabius (~shabius@2a0e:1c80:2:1021::1003) has quit (Remote host closed the connection)
2020-10-21 20:14:44	-->	ffe4 (~ffe4@200116b82c75c100a9df29246bdfc1b9.dip.versatel-1u1.de) has joined #python
2020-10-21 20:15:14	-->	shabius (~shabius@2a0e:1c80:2:1021::1003) has joined #python
2020-10-21 20:15:22	memcorrupt	well, that's not a good example, nvm
2020-10-21 20:15:44	nedbat	memcorrupt: no, that's a fine example
2020-10-21 20:16:04	<--	shabius (~shabius@2a0e:1c80:2:1021::1003) has quit (Max SendQ exceeded)
2020-10-21 20:16:05	<--	ffe4 (~ffe4@200116b82c75c100a9df29246bdfc1b9.dip.versatel-1u1.de) has quit (Client Quit)
2020-10-21 20:16:05	-->	bmurt (~hmm@c-76-99-78-62.hsd1.pa.comcast.net) has joined #python
2020-10-21 20:16:14	amo	memcorrupt, looking at that code, you should definitely have a closer look at enums, namedtuples and dataclasses (or attr)
2020-10-21 20:16:25	nedbat	memcorrupt: there are libraries that offer data structures that you want: pyrsistent
2020-10-21 20:16:29	memcorrupt	I think it's not... you know... you're kinda right... I could just make a partial data structure
2020-10-21 20:16:39	-->	shabius (~shabius@2a0e:1c80:2:1021::1003) has joined #python
2020-10-21 20:16:45	amo	dataclasses can be locked afaik
2020-10-21 20:16:47	nedbat	memcorrupt: btw, odd to have "todo" and "obj" instead of "self"
2020-10-21 20:16:55	nedbat	amo: that would still require copying
2020-10-21 20:17:00	memcorrupt	amo: yeah, right...
2020-10-21 20:17:20	amo	nedbat, namedtuples then
2020-10-21 20:17:29	nedbat	amo: does that avoid copying?
2020-10-21 20:17:36	man_in_shack	tamednuples
2020-10-21 20:17:46	<--	shabius (~shabius@2a0e:1c80:2:1021::1003) has quit (Max SendQ exceeded)
2020-10-21 20:17:47	amo	._.
2020-10-21 20:18:18	-->	Nact (~l@8.45-200-80.adsl-dyn.isp.belgacom.be) has joined #python
2020-10-21 20:18:21	-->	shabius (~shabius@2a0e:1c80:2:1021::1003) has joined #python
2020-10-21 20:19:02	<--	shabius (~shabius@2a0e:1c80:2:1021::1003) has quit (Max SendQ exceeded)
2020-10-21 20:19:02	<--	psachin (~psachin@103.51.232.241) has quit (Ping timeout: 246 seconds)
2020-10-21 20:19:05	amo	nedbat, eh.. at least not explicit copying, sure
2020-10-21 20:19:05	-->	Anderson69s (~Thunderbi@74-132-190-109.isp.overthebox.ovh) has joined #python
2020-10-21 20:19:11	<--	Anderson69s (~Thunderbi@74-132-190-109.isp.overthebox.ovh) has left #python
2020-10-21 20:19:36	-->	shabius (~shabius@2a0e:1c80:2:1021::1003) has joined #python
2020-10-21 20:19:54	nedbat	amo: with immutable data structures, for example, you can have a dict d1, and make another dict d2 that differs in just one key, without copying all of d1
2020-10-21 20:20:14	amo	nedbat, i don't think there's a way around copying one way or another, immutable structs will just take the cognitive load off when and why to copy
2020-10-21 20:20:23	<--	shabius (~shabius@2a0e:1c80:2:1021::1003) has quit (Max SendQ exceeded)
2020-10-21 20:20:34	-->	Anderson69s (~Thunderbi@74-132-190-109.isp.overthebox.ovh) has joined #python
2020-10-21 20:20:54	-->	shabius (~shabius@2a0e:1c80:2:1021::1003) has joined #python
2020-10-21 20:21:09	nedbat	amo: it's surprising, but you can accomplish it without copying, but you need specialized data structures
2020-10-21 20:21:14	<--	Catatronic (~corrupt@unaffiliated/catatronic) has quit (Ping timeout: 260 seconds)
2020-10-21 20:21:24	amo	nedbat, different mindset.. sorry, i was thinking of return values of functions, removing side-effects
2020-10-21 20:21:44	<--	shabius (~shabius@2a0e:1c80:2:1021::1003) has quit (Max SendQ exceeded)
2020-10-21 20:27:03	--	irc: disconnected from server
2020-10-21 20:27:42	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-10-21 20:27:42	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-10-21 20:27:42	--	Topic set by nedbat (~nedbat@python/psf/nedbat) on Thu, 20 Aug 2020 03:18:59
2020-10-21 20:27:42	--	Channel #python: 1789 nicks (0 ops, 0 voices, 1789 normals)
2020-10-21 20:27:45	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-10-21 20:27:47	--	savoiringfaire is now known as Payhn_
2020-10-21 20:27:48	man_in_shack	importlib.reload(man_in_shack)
2020-10-21 20:27:50	<--	lolidunno (~lolidunno@FL1-133-202-247-87.tky.mesh.ad.jp) has quit (Quit: h)
2020-10-21 20:28:04	--	Payhn_ is now known as Payhn
2020-10-21 20:28:07	<--	digilars (~apetiss@86.62.189.118) has quit (Quit: Leaving)
2020-10-21 20:28:34	<--	uks (~uksio@p200300cb1f0320a5391e9012640070b8.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2020-10-21 20:28:46	amo	nedbat, hmm.. is *every* change memorized *forever*?
2020-10-21 20:29:01	-->	pyre (~pyre@crimeboss.nillas-power.com) has joined #python
2020-10-21 20:29:15	amo	because if i were evil, i'd exactly know how to kill that system
2020-10-21 20:29:18	<--	nyaomi (~naomi@cpe-74-75-6-125.maine.res.rr.com) has quit (Excess Flood)
2020-10-21 20:30:00	midow	I need a quick and dirty idea. I'm finding out if a file exists with os.path.exists. if it exists, I want to get its name back
2020-10-21 20:30:18	midow	you'll say, you already have it. but its a case insensitive file system so I want to know what the case actually looks like in the file system
2020-10-21 20:30:34	<--	NomadJim_ (~NomadJim@pdpc/supporter/active/nomadjim) has quit (Read error: Connection reset by peer)
2020-10-21 20:30:59	gcbirzan	os.stat?
2020-10-21 20:31:04	amo	lots of dirty ideas here
2020-10-21 20:31:13	gcbirzan	Or that doesn't return the name
2020-10-21 20:31:19	amo	nothing that would help you though
2020-10-21 20:31:30	JesseParksalot	midow just get the files and .lower() and compare
2020-10-21 20:31:33	JesseParksalot	?
2020-10-21 20:32:03	midow	I wanted to avoid that
2020-10-21 20:32:06	midow	but I guess I'll do it
2020-10-21 20:32:17	amo	lower -> casefold
2020-10-21 20:32:23	gcbirzan	The problem is that you need folders too
2020-10-21 20:32:42	midow	no not casefold, it's basic ascii
2020-10-21 20:32:44	-->	nyaomi (~naomi@cpe-74-75-6-125.maine.res.rr.com) has joined #python
2020-10-21 20:32:47	midow	lower will suffice
2020-10-21 20:32:52	amo	k
2020-10-21 20:32:59	midow	but thanks for mentioning it
2020-10-21 20:33:28	<--	rifoerster (~rifo@p50995cae.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-10-21 20:34:00	memcorrupt	nedbat: just thought they do... :/
2020-10-21 20:34:47	-->	deadmarshal (~deadmarsh@95.38.231.34) has joined #python
2020-10-21 20:34:47	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 20:34:53	<--	deadmarshal (~deadmarsh@95.38.231.34) has quit (Client Quit)
2020-10-21 20:34:55	nedbat	memcorrupt: i could kind of see calling it "todo" everywhere, but it's "self" in most of the methods. why three different names for the same thing?
2020-10-21 20:35:18	-->	deadmarshal (~deadmarsh@95.38.231.34) has joined #python
2020-10-21 20:35:43	memcorrupt	nedbat: obj comes from an interface, thus I thought to let the name not change
2020-10-21 20:36:50	<--	kish (~oracle@unaffiliated/oracle) has quit (Remote host closed the connection)
2020-10-21 20:37:26	memcorrupt	nedbat: but todo since it makes clear (clear as in my opinion which might be wrong) it can be called both as an instance method and static method like `todo.fixstatus()` and `Todo.fixstatus(todo)`...
2020-10-21 20:37:56	bjs	amo: pyrsistent is complicated,  like lots of persistent structures there's some amount of copying and flattening, but if you keep all of the previous ones in scope then yes you can do bad things
2020-10-21 20:37:57	memcorrupt	but yeah, there is some confusion...
2020-10-21 20:37:58	-->	mat001_ (~mat001@73.93.155.29) has joined #python
2020-10-21 20:38:03	bjs	but you can do bad things with 'dict' if you want :)
2020-10-21 20:38:10	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 20:38:19	<--	mat001 (~mat001@73.93.155.29) has quit (Ping timeout: 240 seconds)
2020-10-21 20:38:54	-->	mat001 (~mat001@73.93.155.29) has joined #python
2020-10-21 20:38:56	-->	dodocrypto (~dodocrypt@unaffiliated/dodocrypto) has joined #python
2020-10-21 20:39:00	dodocrypto	hey guys
2020-10-21 20:39:07	dodocrypto	bjs and the rest
2020-10-21 20:39:07	dodocrypto	you guys there
2020-10-21 20:39:07	-->	jlf (~user@pdpc/supporter/active/jlf) has joined #python
2020-10-21 20:39:15	nedbat	dodocrypto: everything ok?
2020-10-21 20:39:21	dodocrypto	hey nedbat
2020-10-21 20:39:23	dodocrypto	how are ya
2020-10-21 20:39:52	dodocrypto	i just want to thank you all
2020-10-21 20:39:53	dodocrypto	for guidance
2020-10-21 20:39:54	dodocrypto	https://github.com/0day-xc-Our/0dev.2020.Centos8.Hardening
2020-10-21 20:39:59	dodocrypto	this is the final script
2020-10-21 20:40:07	dodocrypto	learn alot with you guys
2020-10-21 20:40:10	dodocrypto	thank you gus
2020-10-21 20:40:12	dodocrypto	thank you guys
2020-10-21 20:40:29	dodocrypto	peace all
2020-10-21 20:41:09	amo	good to hear :)
2020-10-21 20:41:09	dodocrypto	finally learn by forcing myself to wrote this
2020-10-21 20:41:37	<--	dreamon (~dreamon@unaffiliated/dreamon) has quit (Ping timeout: 260 seconds)
2020-10-21 20:41:49	man_in_shack	why are you reading config files but doing nothing with them?
2020-10-21 20:42:27	man_in_shack	should at least be searching for the values you're adding
2020-10-21 20:42:34	dodocrypto	hmm
2020-10-21 20:42:38	dodocrypto	which one man_in_shack ?
2020-10-21 20:42:48	<--	mat001_ (~mat001@73.93.155.29) has quit (Ping timeout: 265 seconds)
2020-10-21 20:42:55	man_in_shack	all of them
2020-10-21 20:42:57	man_in_shack	all the .conf files you load in step1()
2020-10-21 20:43:21	dodocrypto	hmm i do read and do with them
2020-10-21 20:43:31	man_in_shack	two things
2020-10-21 20:43:39	man_in_shack	1) open() has an append mode, which is all you're doing
2020-10-21 20:43:48	dodocrypto	ah
2020-10-21 20:43:51	dodocrypto	that's the log
2020-10-21 20:43:55	dodocrypto	0dev.log you mean ?
2020-10-21 20:43:58	-->	stranac (~stranac@89-172-243-241.adsl.net.t-com.hr) has joined #python
2020-10-21 20:44:03	man_in_shack	2) you're not culling existing lines from the confs
2020-10-21 20:44:05	dodocrypto	that's the output
2020-10-21 20:44:35	man_in_shack	limits.conf, sysctl.conf, coredump.conf
2020-10-21 20:44:40	man_in_shack	you're just appending lines
2020-10-21 20:44:44	<--	Leonarbro (~Leonet@S01067824af93741c.cg.shawcable.net) has quit (Ping timeout: 265 seconds)
2020-10-21 20:44:45	han-solo	maybe not the place to discuss, but i'm curious what `os.path.realpath(path)` return on a case insesitive file system. Would it matter ? also what would it return on a case preserving file system, given i have a path like 'fooBar'
2020-10-21 20:44:48	-->	KeiraT (~k4ra@gateway/tor-sasl/k4ra) has joined #python
2020-10-21 20:44:59	man_in_shack	running this script more than once will just continue adding lines
2020-10-21 20:45:04	-->	nurdie (~nurdie@unaffiliated/nurdie) has joined #python
2020-10-21 20:45:08	han-solo	in the latter, i assume it will return 'fooBar'
2020-10-21 20:45:09	dodocrypto	yeah
2020-10-21 20:45:14	JesseParksalot	han-solo midow did u come back with a different nickname xd
2020-10-21 20:45:18	dodocrypto	is still too early man_in_shack
2020-10-21 20:45:27	man_in_shack	cmd = "grep -E '^\s*SELINUX=enforcing' /etc/selinux/config"
2020-10-21 20:45:28	dodocrypto	just version 1
2020-10-21 20:45:33	han-solo	JesseParksalot: ':)
2020-10-21 20:45:37	dodocrypto	ah yeah
2020-10-21 20:45:40	man_in_shack	stop using grep. python has regexes
2020-10-21 20:46:02	man_in_shack	you can also do chown and chmod via os module
2020-10-21 20:46:28	memcorrupt	nedbat: oh... also... no, it behaves like it should be 'self' currently, but I want it to behave not to edit/mute/alter given argument, thus `todo` has a better naming, as `self` always meant to be altered
2020-10-21 20:46:33	man_in_shack	for funk's sake, you're doing Popens JUST FOR ECHO
2020-10-21 20:47:05	dodocrypto	haha
2020-10-21 20:47:06	dodocrypto	yeah
2020-10-21 20:47:06	memcorrupt	nedbat: so it's static by default, being instance called is optional here, not static call
2020-10-21 20:47:10	dodocrypto	i know
2020-10-21 20:47:19	bjs	man_in_shack: dodocrypto: like I said, dodocrypto is writing bash scripts but in a .py file.
2020-10-21 20:47:24	bjs	I guess it works, but it's not Python :)
2020-10-21 20:47:29	SnoopJ	Is there something like collections.ChainMap that works for nested retrieval? (wanting this is probably a sign that I need to reconsider, but...)
2020-10-21 20:48:01	dodocrypto	hey bjs man_in_shack and han-solo
2020-10-21 20:48:04	dodocrypto	thank you guys
2020-10-21 20:48:09	dodocrypto	this is just for training
2020-10-21 20:48:14	<--	courrier (~courrier@147.210.204.164) has quit (Ping timeout: 272 seconds)
2020-10-21 20:48:15	-->	Macuser (~Macuser@unaffiliated/macuser) has joined #python
2020-10-21 20:48:18	man_in_shack	"training" what exactly?
2020-10-21 20:48:24	dodocrypto	nothing fancy i can write all in python now
2020-10-21 20:48:32	dodocrypto	i hate python man_in_shack
2020-10-21 20:48:35	dodocrypto	i am perl coder
2020-10-21 20:48:35	man_in_shack	clearly
2020-10-21 20:48:40	man_in_shack	stick to shell scripting
2020-10-21 20:48:49	dodocrypto	nah nono
2020-10-21 20:48:55	man_in_shack	you're not learning python by wrapping everything you're doing in Popen
2020-10-21 20:48:57	dodocrypto	i really love python now
2020-10-21 20:49:12	dodocrypto	yeah i know
2020-10-21 20:49:18	dodocrypto	that all of them can be replace
2020-10-21 20:49:24	dodocrypto	but it's working
2020-10-21 20:49:27	man_in_shack	what possessed you to do a Popen() for echo in the first place?
2020-10-21 20:49:50	dodocrypto	just for output log
2020-10-21 20:50:07	dodocrypto	to stdout = step <--- number
2020-10-21 20:50:17	man_in_shack	no, you're also using it for things like motd
2020-10-21 20:50:22	dodocrypto	and i read the documentation
2020-10-21 20:50:32	man_in_shack	what documentation?
2020-10-21 20:50:36	dodocrypto	subprocess is the new one
2020-10-21 20:50:47	dodocrypto	is hardening script man_in_shack
2020-10-21 20:50:47	man_in_shack	did you read the documentation for open()?
2020-10-21 20:51:01	dodocrypto	yeah with open
2020-10-21 20:51:08	dodocrypto	from some advise from here too
2020-10-21 20:51:11	man_in_shack	go check it again
2020-10-21 20:51:12	dodocrypto	auto close
2020-10-21 20:51:23	man_in_shack	you missed the append mode stuff
2020-10-21 20:51:24	dodocrypto	and there is a problem with me if no buffering = 1
2020-10-21 20:51:46	dodocrypto	i mean when open the script it won't write properly ?
2020-10-21 20:51:57	dodocrypto	i don't know why man_in_shack
2020-10-21 20:51:58	dodocrypto	:(
2020-10-21 20:52:23	dodocrypto	so i need buffering = 1 and i encounter it still write problem at step4
2020-10-21 20:52:31	-->	ThePortWhisperer (~ThePortWh@unaffiliated/theportwhisperer) has joined #python
2020-10-21 20:52:35	dodocrypto	need to flush it one time to get the right out put to 0dev.log
2020-10-21 20:52:44	man_in_shack	https://bpa.st/PAJA there is NO REASON you should be doing this
2020-10-21 20:53:04	nedbat	dodocrypto: we are really glad you are progressing :)  but maybe write more on each line here, use return less? :)
2020-10-21 20:53:12	nedbat	man_in_shack: all caps seems a little harsh
2020-10-21 20:53:18	dodocrypto	yeah
2020-10-21 20:53:28	dodocrypto	i know i can just write open wt
2020-10-21 20:53:38	dodocrypto	i know i can just write open /etc/issue.net wt
2020-10-21 20:53:41	dodocrypto	but i am lazy
2020-10-21 20:53:42	dodocrypto	:(
2020-10-21 20:53:48	man_in_shack	speaking of "lazy"
2020-10-21 20:53:53	nedbat	dodocrypto: seems like it's more work to use subprocess
2020-10-21 20:54:01	man_in_shack	you're manually closing all your files even though you're using with open()
2020-10-21 20:54:04	man_in_shack	don't do that
2020-10-21 20:54:12	dodocrypto	i am testing it right now for final
2020-10-21 20:54:14	man_in_shack	that's probably why you need the buffering=1 stuff in the first place
2020-10-21 20:54:14	dodocrypto	debugging
2020-10-21 20:54:22	dodocrypto	Installed:
2020-10-21 20:54:23	dodocrypto	  aide-0.16-11.el8.x86_64
2020-10-21 20:54:23	dodocrypto	Complete!
2020-10-21 20:54:23	dodocrypto	# Establishing Now Init For Aide
2020-10-21 20:54:24	-->	|\n (~x0a@unaffiliated/siberiannerd) has joined #python
2020-10-21 20:54:29	dodocrypto	still on aide
2020-10-21 20:54:32	man_in_shack	and that's something we explained to you before
2020-10-21 20:54:34	nedbat	dodocrypto: please: fewer lines
2020-10-21 20:54:35	memcorrupt	nedbat: this pyrsistent seems cool... hope it'd be cool in practice too... thanks for the suggestion
2020-10-21 20:54:46	nedbat	memcorrupt: i've never used it :)
2020-10-21 20:54:56	-->	lmmx (~lmmx@host-80-47-113-123.as13285.net) has joined #python
2020-10-21 20:55:03	dodocrypto	man_in_shack before starting step 1 i don't even know
2020-10-21 20:55:06	dodocrypto	how to open file
2020-10-21 20:55:10	dodocrypto	how to run command
2020-10-21 20:55:14	nedbat	dodocrypto: please?
2020-10-21 20:55:22	dodocrypto	and the rest i am here for 13 hour
2020-10-21 20:55:32	dodocrypto	i mean google it for 13 hour to get 50 line of code
2020-10-21 20:55:40	man_in_shack	with open(fooname) as foo: print(foo.read())
2020-10-21 20:55:41	dodocrypto	and thank you with you guys for helping me
2020-10-21 20:55:51	Baikonur	is there some like, "best practice" on where to store credentials to use in a python script?
2020-10-21 20:55:55	man_in_shack	you don't do foo.close(). the with statement handles that automagically for you
2020-10-21 20:57:13	SnoopJ	Baikonur, the only universal prescription is "absolutely not in your code"
2020-10-21 20:57:13	dodocrypto	yeah i just scared it won't close
2020-10-21 20:57:13	dodocrypto	:(
2020-10-21 20:57:13	Baikonur	if I put the credentials in .env file, how is it different from storing them in the code
2020-10-21 20:57:13	dodocrypto	may be it can lead to that  buffer issue
2020-10-21 20:57:13	man_in_shack	dodocrypto: but it WILL. that's what "with open()" does anyway
2020-10-21 20:57:13	dodocrypto	and notice on that script i use tmp01 ++++
2020-10-21 20:57:13	amo	Baikonur, they shouldn't go onto git or somesuch..
2020-10-21 20:57:13	man_in_shack	dodocrypto: and you manually closing it is probably why you need the buffering flag
2020-10-21 20:57:13	dodocrypto	but recommended may be i should just use tmp
2020-10-21 20:57:13	man_in_shack	dodocrypto: because you're closing it before python wants it to close
2020-10-21 20:57:31	man_in_shack	again: learn how things work before trying to use them
2020-10-21 20:57:38	SnoopJ	Baikonur, yea, if they're not in the code you can omit them from version control. This also makes it easy to swap credentials by using a different file (i.e. if it's a CLI tool, you can accept --auth path/to/some/file)
2020-10-21 20:57:39	dodocrypto	man_in_shack isn't the communicate take care of it
2020-10-21 20:57:42	Baikonur	amo: sure, but I still need to get them from the development machine to the deployment machine
2020-10-21 20:58:37	dodocrypto	okay now i can write everything from those shell script to python
2020-10-21 20:58:37	|\n	hi, could you guys please point me at why exactly ur"\uFE45" is problematic with python 3 and okay for 2?
2020-10-21 20:58:37	man_in_shack	dodocrypto: communicate has nothing to do with open
2020-10-21 20:58:37	nedbat	|\n: what characters did you want in that string?
2020-10-21 20:58:38	SnoopJ	Baikonur, is it a problem to copy the credentials separately?
2020-10-21 20:59:09	|\n	nedbat, some other characters like 03b5 with ^
2020-10-21 20:59:43	Baikonur	SnoopJ: not really in my current case, it just means that I need to either store them somewhere that isn't the repo folder, or use .gitignore to omit them from remote
2020-10-21 20:59:47	|\n	i mean, that particular 'u' with 'r'
2020-10-21 20:59:55	han-solo	source the credentials, and the use `os.getenv` as a fall back, is nice ?
2020-10-21 21:00:02	|\n	why i can't use in python, very curious
2020-10-21 21:00:04	man_in_shack	dodocrypto: you either do   foo = open(...); foo.close()   or you do   with open(...) as foo:
2020-10-21 21:00:30	nedbat	|\n: i think it was considered ambiguous or confusing, I'm not sure.
2020-10-21 21:01:11	SnoopJ	Baikonur, you could definitely still build deployment packages that bundle the credentials, too. But keeping creds out of VCS is always a good idea imo.
2020-10-21 21:01:35	-->	user123456 (~TikityTik@unaffiliated/tikitytik) has joined #python
2020-10-21 21:02:01	<--	beencubed (~beencubed@209.131.238.248) has quit (Quit: Leaving)
2020-10-21 21:02:08	-->	dodocrypto_ (~dodocrypt@unaffiliated/dodocrypto) has joined #python
2020-10-21 21:02:12	dodocrypto_	sorry dc
2020-10-21 21:02:32	stranac	|\n: https://bugs.python.org/issue15096 if you want to know the details
2020-10-21 21:02:33	man_in_shack	dodocrypto_: you either do   foo = open(...); foo.close()   or you do   with open(...) as foo:
2020-10-21 21:02:37	<--	dodocrypto (~dodocrypt@unaffiliated/dodocrypto) has quit (Ping timeout: 260 seconds)
2020-10-21 21:02:40	<--	blddk (~admin@unaffiliated/blddk) has quit (Quit: ZNC 1.8.2 - https://znc.in)
2020-10-21 21:02:47	dodocrypto_	yeah
2020-10-21 21:02:57	|\n	thanks a lot, stranac
2020-10-21 21:02:59	dodocrypto_	the first time i use that open
2020-10-21 21:03:05	man_in_shack	dodocrypto_: doing both is probably why you need to do the buffering thing in the first place. you shouldn't need that at all
2020-10-21 21:03:14	dodocrypto_	but after i read document somewhere i change all with open
2020-10-21 21:03:24	dodocrypto_	okay
2020-10-21 21:04:10	Baikonur	SnoopJ: yeah I think I'll put them in an .env file that can be either sourced with bash or loaded with dotenv, and make sure it's in .gitignore so that it doesn't end up anywhere else
2020-10-21 21:04:11	-->	impermanence (493ec188@gateway/web/cgi-irc/kiwiirc.com/ip.73.62.193.136) has joined #python
2020-10-21 21:04:11	dodocrypto_	man_in_shack should we just flush the buffer everytime
2020-10-21 21:04:11	dodocrypto_	man the first time i try python is buffering out put to 0dev.log
2020-10-21 21:04:11	Baikonur	thanks SnoopJ, amo and han-solo
2020-10-21 21:04:11	dodocrypto_	like 5 - 20 second behind
2020-10-21 21:04:11	man_in_shack	no, you should just get rid of all those .close() for your files
2020-10-21 21:04:14	impermanence	how do I set a default arg in click?  i.e. if no options are passed it runs this default arg?
2020-10-21 21:04:34	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 21:04:48	man_in_shack	python defaults to line-based buffer flushing
2020-10-21 21:05:26	<--	sandeepk (~sandeepk@117.199.92.116) has quit (Ping timeout: 260 seconds)
2020-10-21 21:05:32	<--	TideFN (~TideFN@2601:cb:8280:9520::9bf9) has quit (Ping timeout: 260 seconds)
2020-10-21 21:05:39	|\n	is there any approach to make it work with codes for both python 2 and python 3 in similar manner?
2020-10-21 21:06:14	grym	|\n: six is a nice compat library
2020-10-21 21:06:29	|\n	without additional libraries, it's too small heh
2020-10-21 21:06:37	grym	six is one file
2020-10-21 21:06:38	grym	vendor it
2020-10-21 21:06:45	<--	SnoopJ (~snoopjedi@unaffiliated/snoopjedi) has quit (Remote host closed the connection)
2020-10-21 21:06:58	-->	SnoopJ (~snoopjedi@unaffiliated/snoopjedi) has joined #python
2020-10-21 21:07:17	-->	jaggz (~jaggz@unaffiliated/jaggz) has joined #python
2020-10-21 21:07:26	jaggz	_, aa, bb = re.search("^(..)(..)", str)
2020-10-21 21:07:40	jaggz	that doesn't work.. it's an iterable.. do I need to list() it or something?
2020-10-21 21:07:51	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 21:07:53	han-solo	.groups() # maybe
2020-10-21 21:07:57	--	dodocrypto_ is now known as dodocrypto
2020-10-21 21:08:20	man_in_shack	assuming "str" there is your string and not the str type (:
2020-10-21 21:08:31	jaggz	tx
2020-10-21 21:08:31	stranac	|\n: you *could* just drop the r prefix and do the necessary escaping
2020-10-21 21:08:43	jaggz	man_in_shack, yeah, actually that' not the var name either :)
2020-10-21 21:08:59	SnoopJ	jaggz, be careful, search() doesn't always return a Match object, sometimes it returns None :(
2020-10-21 21:09:06	jaggz	tx.. it's okay if it throws
2020-10-21 21:09:13	SnoopJ	it's a very unfortunate API
2020-10-21 21:09:23	jaggz	perl's is good
2020-10-21 21:09:28	jaggz	imo
2020-10-21 21:09:31	jaggz	anyway
2020-10-21 21:09:33	jaggz	thanks a bunch
2020-10-21 21:09:45	nedbat	|\n: keep in mind, the r- prefix isn't *required* for regexes
2020-10-21 21:09:57	impermanence	apparently a "no args" command with click is not trivial
2020-10-21 21:10:02	|\n	oh, thank you, guys
2020-10-21 21:10:15	|\n	it would certainly suffice in my case
2020-10-21 21:10:18	-->	Edon (~Edon@unaffiliated/edon) has joined #python
2020-10-21 21:10:19	impermanence	at least according to: https://stackoverflow.com/questions/52053491/a-command-without-name-in-click
2020-10-21 21:10:52	-->	jimgray__ (~weechat@unaffiliated/jimgray) has joined #python
2020-10-21 21:11:30	man_in_shack	SnoopJ: the unfortunate part is really the late introduction of the := operator ;)
2020-10-21 21:11:56	-->	LondonAppDev (9c923c71@156.146.60.113) has joined #python
2020-10-21 21:12:03	SnoopJ	man_in_shack, it wasn't a good look to make re's bad API a leading argument for assignment expressions, to be sure
2020-10-21 21:12:03	<--	user123456 (~TikityTik@unaffiliated/tikitytik) has quit (Quit: Leaving)
2020-10-21 21:12:15	man_in_shack	heh
2020-10-21 21:14:03	ntblb	when trying to Creating a key under Hkey_local_machine it is giving me PermissionError: [WinError 5] Access is denied  please can anyone inform
2020-10-21 21:14:03	SnoopJ	I've had cause enough to use it in comprehensions before that I have no grievance against it, but yea, wacky rationale
2020-10-21 21:14:04	LondonAppDev	Question: When using `open`, why is mode required? Why not just allow all files to be writable, readable? Is it for security, performance or some other reason?
2020-10-21 21:14:04	SnoopJ	ntblb, sounds like you don't have permissions to do that. Maybe you need to run your program as an administrator.
2020-10-21 21:14:04	SnoopJ	LondonAppDev, it's not required, it defaults to "r"
2020-10-21 21:14:04	-->	P-NuT (~P-NuT@31.124.25.219) has joined #python
2020-10-21 21:14:12	LondonAppDev	SnoopJ: Apologies... I know it defaults to read (text mode), however my question is what is the benefit of having it at all?
2020-10-21 21:14:43	ntblb	isn't there anyway to boot up my code as an administrator privilage...
2020-10-21 21:14:47	<--	gena2x (~gena2x@cpc93786-hari17-2-0-cust3239.20-2.cable.virginm.net) has quit (Remote host closed the connection)
2020-10-21 21:15:04	ntblb	SnoopJ
2020-10-21 21:15:05	ntblb	! sory
2020-10-21 21:15:05	SnoopJ	LondonAppDev, because sometimes you need a different mode, like when you're writing. I always specify it anyway just so that it's a little more clear what my intent is.
2020-10-21 21:15:05	<--	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has quit (Ping timeout: 240 seconds)
2020-10-21 21:15:05	-->	Wooble (~Wooble@unaffiliated/wooble) has joined #python
2020-10-21 21:15:06	P-NuT	Hi all. I have a timestamp that my program is given and I need to convert it to epoch. Here's an example of what I'm given: 2020-10-21T13:12:01.971005901Z
2020-10-21 21:15:09	SnoopJ	ntblb, usually you can right-click (or is it shift+right-click?) and select "Run as Administrator"
2020-10-21 21:15:40	-->	TideFN (~TideFN@2601:cb:8280:9520::9bf9) has joined #python
2020-10-21 21:17:27	ntblb	SnoopJ Nahh! not what i meant.
2020-10-21 21:17:27	LondonAppDev	Thanks SnoopJ, do you know if there is there a benefit to using the default (`r`) when reading files compared to using `r+` if I'm only reading? I imagine security is a factor? Perhaps there is a performance benefit to opening in the correct mode too?
2020-10-21 21:17:27	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Ping timeout: 246 seconds)
2020-10-21 21:17:27	P-NuT	I know how to export time and date as a specific format, but not how to take a variable, then using that change it to epoch. Grateful for a nudge in the right direction.
2020-10-21 21:17:27	-->	Nik25 (4d7d30c1@77.125.48.193) has joined #python
2020-10-21 21:17:27	Nik25	HI, anyone knows a prepared way to combine RotatingFileHandler + TimedRotatingFileHandler?
2020-10-21 21:17:27	SnoopJ	Nik25, what does "combine" mean here?
2020-10-21 21:17:51	-->	sandeepk (~sandeepk@117.199.86.182) has joined #python
2020-10-21 21:17:56	Nik25	Rotate by the first condition that is True between: 'X time passed', 'Current file is bigger than X bytes'
2020-10-21 21:18:32	SnoopJ	LondonAppDev, not sure what the distinction is between 'r' and 'r+' actually but I don't think it's anything to do with security. Performance will probably depend on the underlying filesystem.
2020-10-21 21:18:55	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2020-10-21 21:19:01	<--	Newami (~Newami@ip70-179-45-125.sd.sd.cox.net) has quit (Quit: Leaving)
2020-10-21 21:19:15	mefistofeles	SnoopJ: isn't r+ for both reading and writing?
2020-10-21 21:19:17	LondonAppDev	SnoopJ: I see... `r+` means you can read and write.
2020-10-21 21:19:25	mefistofeles	↑
2020-10-21 21:19:26	Wooble	(you almost never want r+
2020-10-21 21:19:34	SnoopJ	ah yea, ugh
2020-10-21 21:19:34	LondonAppDev	Wooble: why?
2020-10-21 21:19:34	-->	bwitt (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has joined #python
2020-10-21 21:19:41	<--	deadk (e@freenode/staff/spy.edk) has quit (Quit: edk)
2020-10-21 21:19:58	Wooble	LondonAppDev: it's *extremely* difficult to read and write the same file correctly, and usually pointless.
2020-10-21 21:20:09	man_in_shack	mostly because there's only one "cursor" for both reading and writing
2020-10-21 21:20:13	-->	phasetwo (~phasetwo@2601:602:8d80:4e50:346e:a0c4:3f08:2d35) has joined #python
2020-10-21 21:20:24	-->	_Max (uid438748@gateway/web/irccloud.com/x-fcmszivvasrogstf) has joined #python
2020-10-21 21:20:40	LondonAppDev	Wooble: Ahh I see what you mean. I guess if you were changing values in a CSV based on something, you might do something like that.
2020-10-21 21:20:41	mefistofeles	yeah, I guess that if you are already writing you can read that content directly from your "python" and not the file
2020-10-21 21:20:56	Wooble	LondonAppDev: you need a fixed-width binary format. CSV will fail horribly.
2020-10-21 21:21:00	man_in_shack	csv fields are not fixed width
2020-10-21 21:21:04	man_in_shack	what Wooble said
2020-10-21 21:21:06	-->	DeleL_ (~DeleL_@99-189-183-83.lightspeed.hstntx.sbcglobal.net) has joined #python
2020-10-21 21:21:26	LondonAppDev	Ah I see.
2020-10-21 21:21:31	Wooble	if you have some fancy bespoke database and know what you're doing, maybe you want r+ but I mean... also don't do that. :)
2020-10-21 21:21:42	-->	sdwrage (~textual@38.111.183.30) has joined #python
2020-10-21 21:21:54	<--	Anderson69s (~Thunderbi@74-132-190-109.isp.overthebox.ovh) has quit (Quit: Anderson69s)
2020-10-21 21:22:06	SnoopJ	LondonAppDev, the main reason to specify a mode is so that it's clear what you might do with that file handle, to both the reader of the code and the OS
2020-10-21 21:22:17	-->	Anderson69s (~Thunderbi@74-132-190-109.isp.overthebox.ovh) has joined #python
2020-10-21 21:22:29	man_in_shack	MAYBE back in the day i could have used python scripts and r+ do patch exe files to break copy protection (:
2020-10-21 21:22:37	<--	sdwrage (~textual@38.111.183.30) has quit (Client Quit)
2020-10-21 21:22:43	man_in_shack	but today, even that's not a fixed-width operation
2020-10-21 21:22:51	SnoopJ	I would say 'r+' is hard to read because I had trouble reading it, I'd much prefer '+'
2020-10-21 21:23:13	man_in_shack	just mention it cos i did have to manually patch a copy of gta, cos i had a crack for the 8bit colour version, but not the 24bit one
2020-10-21 21:23:19	-->	ob-sed___ (~obesd@unaffiliated/obesd) has joined #python
2020-10-21 21:23:34	Wooble	the best mode is a+ because you don't know where it will write, just *probably* where it will write on your particular OS. :)
2020-10-21 21:23:46	-->	st8less (~st8less@2603:a060:11fd:0:dd24:d259:2e39:f97e) has joined #python
2020-10-21 21:23:47	LondonAppDev	SnoopJ: Well you can also do `rw`, which to me is even clearer... There is a subtle difference though I believe.
2020-10-21 21:23:56	-->	Tennis (~Tennis@unaffiliated/tennis) has joined #python
2020-10-21 21:24:03	han-solo	isn't a+, goes to the end of the file ?
2020-10-21 21:24:09	|\n	is there any resource you could advise for writing python 2/3 compatible code?
2020-10-21 21:24:09	han-solo	doesn't*
2020-10-21 21:24:12	man_in_shack	best practice is really to do fully encapsulated read and write operations
2020-10-21 21:24:13	Wooble	han-solo: depends on the filesystem.
2020-10-21 21:24:19	han-solo	Wooble: i see
2020-10-21 21:24:23	SnoopJ	Nik25, it doesn't seem like TimedRotatingFileHandler has a way to do this, you might be able to subclass and stick in this behavior as a size check that calls doRollover()
2020-10-21 21:24:56	-->	pombreda_ (~pombreda@host-213-213-215-213.dynamic.voo.be) has joined #python
2020-10-21 21:25:03	-->	wyclif (~wyclif@unaffiliated/wyclif) has joined #python
2020-10-21 21:25:07	-->	cdown_ (~cdown@163.114.131.1) has joined #python
2020-10-21 21:25:22	<--	phasetwo (~phasetwo@2601:602:8d80:4e50:346e:a0c4:3f08:2d35) has quit (Ping timeout: 260 seconds)
2020-10-21 21:25:23	-->	dancus (~dancus@dynamic-adsl-94-34-166-32.clienti.tiscali.it) has joined #python
2020-10-21 21:25:24	man_in_shack	related: late 90s versions of microsoft office products had a real knack for creating unreadable files thanks to their autosaving
2020-10-21 21:25:24	<--	dodocrypto (~dodocrypt@unaffiliated/dodocrypto) has left #python ("Leaving")
2020-10-21 21:25:46	<--	ELFrederich_ (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) has quit (Remote host closed the connection)
2020-10-21 21:25:48	-->	spiri (~spiri@unaffiliated/spiri) has joined #python
2020-10-21 21:25:51	LondonAppDev	hans-solo: Yes it does (a = append).
2020-10-21 21:26:14	<--	obsed (~obesd@unaffiliated/obesd) has quit (Ping timeout: 246 seconds)
2020-10-21 21:26:24	Nik25	Yea, im tyring to find already written code before ill do that :S
2020-10-21 21:27:21	man_in_shack	they'd basically stick a diff at the end of the file, but the frequent writes not only trashed the hdds, but also corrupted data because ... well, the software stank (:
2020-10-21 21:27:29	-->	ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) has joined #python
2020-10-21 21:27:49	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 260 seconds)
2020-10-21 21:27:56	--	cdown_ is now known as cdown
2020-10-21 21:27:58	han-solo	LondonAppDev: Wooble: i'm trying to see which fs does not write from the end of the file, given a mode a+ # ':)
2020-10-21 21:31:06	LondonAppDev	han-solo: Does that exists?
2020-10-21 21:31:06	SnoopJ	Nik25, I don't see anything in a PyPI search for TimedRotatingFileHandler
2020-10-21 21:31:06	<--	wyclif (~wyclif@unaffiliated/wyclif) has quit (Ping timeout: 258 seconds)
2020-10-21 21:31:06	-->	xedra (~xed@cpc105442-brad21-2-0-cust83.17-1.cable.virginm.net) has joined #python
2020-10-21 21:31:06	<--	costrouc (~Thunderbi@23-115-65-146.lightspeed.knvltn.sbcglobal.net) has quit (Quit: costrouc)
2020-10-21 21:31:06	Wooble	han-solo: the python docs say "(which on some Unix systems, means that all writes append to the end of the file regardless of the current seek position)" although TBH I have no idea if windows still will just write at the read cursor.
2020-10-21 21:31:06	<--	Deusdeorum (~Deusdeoru@unaffiliated/deusdeorum) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 21:31:07	|\n	is there any specific reason on why unicode() is not present at python3 at all? not being a dev, it is really hard to understand
2020-10-21 21:31:07	<--	quanter (~yinxiuqu@111.8.173.213) has quit (Ping timeout: 256 seconds)
2020-10-21 21:31:07	<--	P-NuT (~P-NuT@31.124.25.219) has quit
2020-10-21 21:31:07	-->	rifoerster (~rifo@p50995cae.dip0.t-ipconnect.de) has joined #python
2020-10-21 21:31:07	SnoopJ	|\n, because Python 3 rectified the mistakes of Python 2. see: http://bit.ly/unipain1
2020-10-21 21:31:07	Wooble	|\n: why should it be? it was renamed.
2020-10-21 21:31:07	-->	blddk (~admin@unaffiliated/blddk) has joined #python
2020-10-21 21:31:07	SnoopJ	err, http://bit.ly/unipain
2020-10-21 21:31:12	Wooble	SnoopJ: I mean to be fair "str" not disappearing entirely might be another mistake.
2020-10-21 21:31:17	|\n	Wooble, renamed to str() or something else?
2020-10-21 21:31:38	<--	snatcher (~user@gateway/tor-sasl/snatcher) has quit (Ping timeout: 240 seconds)
2020-10-21 21:31:42	Wooble	|\n: yes, it's str and the old str is now bytes. with some changes in behavior.
2020-10-21 21:31:44	<--	root1 (root1@2600:3c01::f03c:91ff:fee5:c75e) has quit (Quit: WeeChat 1.9.1)
2020-10-21 21:31:46	SnoopJ	|\n, in Python 2, str() and bytes() are the same type. In Python 3 they aren't.
2020-10-21 21:31:51	-->	costrouc (~Thunderbi@23-115-65-146.lightspeed.knvltn.sbcglobal.net) has joined #python
2020-10-21 21:33:09	han-solo	Wooble: Okay
2020-10-21 21:33:09	han-solo	LondonAppDev: *shrug* ':)
2020-10-21 21:33:09	-->	leoni (~leoni@181.23.206.162) has joined #python
2020-10-21 21:33:09	Wooble	|\n: you really shouldn't be using unicode() as a function/constructor in py2 anyway.
2020-10-21 21:33:09	SnoopJ	or anything else in py2, if you can avoid it
2020-10-21 21:33:10	<--	otisolsen70 (~otisolsen@x50d248d8.cust.hiper.dk) has quit (Quit: Leaving)
2020-10-21 21:33:12	Wooble	well I mean in the old code being ported to py3, which is presumably why they'd ask :P
2020-10-21 21:33:16	|\n	well, the question is mostry related to e.g. looking at pieces of the code of python2 where join with for loop on list happens and unicode() was applied
2020-10-21 21:33:38	SnoopJ	|\n, I recommend that unipain link a lot, it does an excellent job explaining what's going on with unicode()
2020-10-21 21:33:44	han-solo	i wish there was docker image for windows that could run on linux ':)
2020-10-21 21:34:09	<--	Nik25 (4d7d30c1@77.125.48.193) has quit (Remote host closed the connection)
2020-10-21 21:34:10	-->	deadk (e@freenode/staff/spy.edk) has joined #python
2020-10-21 21:34:20	<--	UlrichH (~UlrichH@reverse-177-83.fdn.fr) has quit (Quit: Leaving)
2020-10-21 21:34:41	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 21:35:57	Wooble	|\n: would have been better if they started with text strings or had bytestrings that were then .decode()'ed. But modernize might convert that to six.text_type for you and possibly work correctly.
2020-10-21 21:36:24	<--	Anderson69s (~Thunderbi@74-132-190-109.isp.overthebox.ovh) has quit (Quit: Anderson69s)
2020-10-21 21:36:24	<--	bwitt (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has quit (Read error: Connection reset by peer)
2020-10-21 21:36:35	<--	deadmarshal (~deadmarsh@95.38.231.34) has quit (Quit: Leaving)
2020-10-21 21:36:39	-->	quanter (~yinxiuqu@111.8.173.213) has joined #python
2020-10-21 21:36:44	-->	bwitt (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has joined #python
2020-10-21 21:36:48	|\n	well, out of curiosity i'd like to just try to make some code work for both python versions, explanations are important, but they certainly are insufficient at this current context, because i can't replace unicode() with str() which is my straight dumb attempt heh
2020-10-21 21:36:52	Wooble	(or just put unicode=str at the top of the file. :)
2020-10-21 21:36:54	|\n	Wooble, is it another library?
2020-10-21 21:37:14	|\n	aha, that makes a lot of sense if it works for python2
2020-10-21 21:37:32	Wooble	|\n: modernize is a tool that tries to convert to something that will work on both versions. six is a library it uses that has a bunch of shims.
2020-10-21 21:37:49	Wooble	|\n: actually you'd need a version check before assigning unicode=str.
2020-10-21 21:38:02	<--	Macuser (~Macuser@unaffiliated/macuser) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 21:38:09	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 21:38:16	-->	bwitt_ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 21:39:39	-->	ob-sed (~obesd@unaffiliated/obesd) has joined #python
2020-10-21 21:40:32	-->	efie (~efie@dynamic-046-114-111-073.46.114.pool.telefonica.de) has joined #python
2020-10-21 21:41:32	<--	efm (~efm@vpn.tummy.com) has quit (Quit: Konversation terminated!)
2020-10-21 21:41:40	<--	ob-sed___ (~obesd@unaffiliated/obesd) has quit (Ping timeout: 246 seconds)
2020-10-21 21:42:10	<--	bwitt (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has quit (Ping timeout: 272 seconds)
2020-10-21 21:42:56	-->	rcm888 (~rcm888___@94.140.230.72) has joined #python
2020-10-21 21:42:56	<--	luischi (~textual@178.red-83-43-199.dynamicip.rima-tde.net) has quit (Read error: Connection reset by peer)
2020-10-21 21:43:53	<--	thnee (~thnee@h-144-199.A328.priv.bahnhof.se) has quit (Ping timeout: 258 seconds)
2020-10-21 21:44:15	-->	audio (~audioburn@unaffiliated/theology) has joined #python
2020-10-21 21:44:37	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 21:44:39	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2020-10-21 21:44:47	<--	bwitt_ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has quit (Ping timeout: 246 seconds)
2020-10-21 21:44:47	-->	snatcher (~user@gateway/tor-sasl/snatcher) has joined #python
2020-10-21 21:45:21	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-21 21:45:28	<--	funky (~Streaker@unaffiliated/streaker) has quit (Ping timeout: 256 seconds)
2020-10-21 21:46:07	<--	Amanas (~Amanas@cpe-24-162-249-230.nc.res.rr.com) has quit (Ping timeout: 265 seconds)
2020-10-21 21:46:27	-->	masoudd_ (~masoudd@unaffiliated/masoudd) has joined #python
2020-10-21 21:46:43	-->	Amanas (~Amanas@cpe-24-162-249-230.nc.res.rr.com) has joined #python
2020-10-21 21:47:20	<--	spiri (~spiri@unaffiliated/spiri) has quit (Remote host closed the connection)
2020-10-21 21:47:44	-->	spiri (~spiri@unaffiliated/spiri) has joined #python
2020-10-21 21:48:00	-->	Macuser (~Macuser@unaffiliated/macuser) has joined #python
2020-10-21 21:48:23	<--	masoudd_ (~masoudd@unaffiliated/masoudd) has quit (Read error: Connection reset by peer)
2020-10-21 21:48:54	-->	masoudd_ (~masoudd@unaffiliated/masoudd) has joined #python
2020-10-21 21:49:22	-->	Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.comhem.se) has joined #python
2020-10-21 21:50:09	-->	jimgray_ (~weechat@unaffiliated/jimgray) has joined #python
2020-10-21 21:50:09	<--	Allegretto (~allegrett@188-143-58-130.pool.digikabel.hu) has quit (Ping timeout: 256 seconds)
2020-10-21 21:50:09	<--	samuel02 (uid56682@gateway/web/irccloud.com/x-rybmjxeuuygckjmk) has quit (Quit: Connection closed for inactivity)
2020-10-21 21:50:09	-->	zeden (~user@unaffiliated/zeden) has joined #python
2020-10-21 21:50:28	<--	masoudd (~masoudd@unaffiliated/masoudd) has quit (Ping timeout: 260 seconds)
2020-10-21 21:50:38	-->	dreamon (~dreamon@unaffiliated/dreamon) has joined #python
2020-10-21 21:52:24	<--	jimgray__ (~weechat@unaffiliated/jimgray) has quit (Ping timeout: 265 seconds)
2020-10-21 21:52:25	-->	bwitt (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 21:53:12	-->	masoudd__ (~masoudd@unaffiliated/masoudd) has joined #python
2020-10-21 21:53:30	-->	BSD (~Aaron@freebsd/user/aaron) has joined #python
2020-10-21 21:54:43	-->	Allegretto (~allegrett@188-143-58-130.pool.digikabel.hu) has joined #python
2020-10-21 21:54:44	<--	ciccio2000 (~bscuser@122.110.14.37.dynamic.jazztel.es) has quit (Remote host closed the connection)
2020-10-21 21:54:56	<--	jw4 (~jw4@unaffiliated/jw4) has quit (Read error: Connection reset by peer)
2020-10-21 21:54:57	<--	jimgray_ (~weechat@unaffiliated/jimgray) has quit (Ping timeout: 256 seconds)
2020-10-21 21:55:03	<--	markopasha (~cc@88.230.157.61) has quit (Quit: WeeChat 2.9)
2020-10-21 21:55:06	-->	ciccio2000 (~bscuser@122.110.14.37.dynamic.jazztel.es) has joined #python
2020-10-21 21:56:08	-->	jw4 (~jw4@unaffiliated/jw4) has joined #python
2020-10-21 21:56:09	<--	masoudd_ (~masoudd@unaffiliated/masoudd) has quit (Ping timeout: 258 seconds)
2020-10-21 21:56:11	-->	ffe4 (~ffe4@200116b82c75c100a9df29246bdfc1b9.dip.versatel-1u1.de) has joined #python
2020-10-21 21:56:15	-->	Ploppz76 (4e17c0dd@gateway/web/cgi-irc/kiwiirc.com/ip.78.23.192.221) has joined #python
2020-10-21 21:56:53	<--	stkw0 (~quassel@ns3046126.ip-91-121-8.eu) has quit (Ping timeout: 246 seconds)
2020-10-21 21:57:02	-->	masoudd_ (~masoudd@unaffiliated/masoudd) has joined #python
2020-10-21 21:57:20	-->	mikecmpbll (~mikecmpbl@ruby/staff/mikecmpbll) has joined #python
2020-10-21 21:58:07	<--	masoudd_ (~masoudd@unaffiliated/masoudd) has quit (Max SendQ exceeded)
2020-10-21 21:58:34	-->	masoudd_ (~masoudd@unaffiliated/masoudd) has joined #python
2020-10-21 21:58:39	<--	metabsd (uid209675@gateway/web/irccloud.com/x-urrqznyjveadtzam) has quit (Quit: Connection closed for inactivity)
2020-10-21 22:01:38	-->	jimgray_ (~weechat@unaffiliated/jimgray) has joined #python
2020-10-21 22:01:38	<--	masoudd__ (~masoudd@unaffiliated/masoudd) has quit (Ping timeout: 258 seconds)
2020-10-21 22:01:38	-->	legola (~legola@unaffiliated/legola) has joined #python
2020-10-21 22:01:54	<--	cgundersson (~christian@87.251.200.82) has quit (Ping timeout: 258 seconds)
2020-10-21 22:01:59	<--	cdown (~cdown@163.114.131.1) has quit (Ping timeout: 240 seconds)
2020-10-21 22:02:09	<--	ntblb (~ntblb@185.160.227.190) has quit (Read error: Connection reset by peer)
2020-10-21 22:02:24	-->	ntblb (~ntblb@185.160.227.190) has joined #python
2020-10-21 22:03:14	-->	jcarl43 (~jcarl@node-1w7jr9qqv3v3xfft23zrmr6il.ipv6.telus.net) has joined #python
2020-10-21 22:03:32	<--	drymer (~drymer@unaffiliated/drymer) has quit (Read error: Connection reset by peer)
2020-10-21 22:03:37	<--	biermic (~biermic@193-80-12-83.adsl.highway.telekom.at) has quit (Ping timeout: 272 seconds)
2020-10-21 22:08:50	--	irc: disconnected from server
2020-10-21 22:09:16	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-10-21 22:09:16	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-10-21 22:09:16	--	Topic set by nedbat (~nedbat@python/psf/nedbat) on Thu, 20 Aug 2020 03:18:59
2020-10-21 22:09:16	--	Channel #python: 1804 nicks (0 ops, 0 voices, 1804 normals)
2020-10-21 22:09:20	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-10-21 22:10:58	<--	ashwinvis (~avmo@h-96-225.A880.priv.bahnhof.se) has quit (Ping timeout: 256 seconds)
2020-10-21 22:10:59	-->	saint_ (~saint_@unaffiliated/saint-/x-0540772) has joined #python
2020-10-21 22:11:02	<--	derek53 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) has quit (Ping timeout: 246 seconds)
2020-10-21 22:11:05	-->	roc91 (~roc91@72-48-250-28.dyn.grandenetworks.net) has joined #python
2020-10-21 22:12:59	<--	palasso (~palasso@unaffiliated/palasso) has quit (Ping timeout: 272 seconds)
2020-10-21 22:13:05	-->	jimgray__ (~weechat@unaffiliated/jimgray) has joined #python
2020-10-21 22:13:16	-->	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2020-10-21 22:13:29	-->	derek53 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) has joined #python
2020-10-21 22:13:33	-->	palasso (~palasso@unaffiliated/palasso) has joined #python
2020-10-21 22:13:36	-->	nitro25 (~nitro25@137.21.80.5) has joined #python
2020-10-21 22:13:51	-->	Wr4i7h (~abc@a85-139-110-118.cpe.netcabo.pt) has joined #python
2020-10-21 22:15:08	<--	bind (~bind@unaffiliated/bind) has quit (Ping timeout: 264 seconds)
2020-10-21 22:15:08	<--	lithammer (~lithammer@arch-vps.cloud.tilaa.com) has quit (Ping timeout: 264 seconds)
2020-10-21 22:15:38	-->	funky (~Streaker@unaffiliated/streaker) has joined #python
2020-10-21 22:15:42	<--	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has quit (Ping timeout: 258 seconds)
2020-10-21 22:15:44	<--	cgundersson (~christian@87.251.200.82) has quit (Ping timeout: 264 seconds)
2020-10-21 22:15:44	<--	jimgray_ (~weechat@unaffiliated/jimgray) has quit (Ping timeout: 264 seconds)
2020-10-21 22:16:14	<--	LondonAppDev (9c923c71@156.146.60.113) has quit (Remote host closed the connection)
2020-10-21 22:17:14	<--	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has quit (Ping timeout: 258 seconds)
2020-10-21 22:17:35	-->	bind (~bind@unaffiliated/bind) has joined #python
2020-10-21 22:17:49	-->	CookieM (~tomek@r-45-155-148-237.gpon.bialnet.pl) has joined #python
2020-10-21 22:17:58	<--	is0ke3 (~is0ke3@unaffiliated/isokee) has quit (Quit: WeeChat 1.9.1)
2020-10-21 22:17:58	-->	jgowdy (~jgowdy@cpe-24-25-212-64.san.res.rr.com) has joined #python
2020-10-21 22:18:20	<--	jimgray__ (~weechat@unaffiliated/jimgray) has quit (Ping timeout: 256 seconds)
2020-10-21 22:18:44	-->	lithammer (~lithammer@arch-vps.cloud.tilaa.com) has joined #python
2020-10-21 22:18:46	-->	qlixed (~qlixed@2800:810:471:8ae8:e670:b8ff:fe53:9ebd) has joined #python
2020-10-21 22:19:03	-->	rmarcand (~rmarcand@2001:420:2004:400::1) has joined #python
2020-10-21 22:19:04	-->	selimcan (~selimcan@178.204.250.205) has joined #python
2020-10-21 22:19:50	-->	sdwrage (~textual@38.111.183.30) has joined #python
2020-10-21 22:20:29	-->	bwitt_ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 22:20:41	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined #python
2020-10-21 22:21:01	-->	bwitt__ (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has joined #python
2020-10-21 22:21:12	-->	burakcank (~burakcank@5.24.50.188) has joined #python
2020-10-21 22:21:59	<--	dwt (~dwt@c-98-200-58-177.hsd1.tx.comcast.net) has quit (Ping timeout: 240 seconds)
2020-10-21 22:22:32	<--	_DanN_ (gwbush@85.159.104.215) has quit (Quit: leaving)
2020-10-21 22:23:29	-->	masoudd (~masoudd@unaffiliated/masoudd) has joined #python
2020-10-21 22:23:30	-->	Catatronic (~corrupt@unaffiliated/catatronic) has joined #python
2020-10-21 22:23:45	-->	cdown (~cdown@89.32.122.5) has joined #python
2020-10-21 22:24:00	-->	tWqaq (~tWqaq@240e:389:5de0:bc00:e29f:4de1:8935:87e5) has joined #python
2020-10-21 22:24:15	f8e4	why this no error? l_ref[1:-4:-1]; i walk away from a step downards instead of towards b
2020-10-21 22:24:18	<--	bwitt (bwitt@gateway/vpn/privateinternetaccess/bwitt) has quit (Ping timeout: 265 seconds)
2020-10-21 22:24:30	f8e4	[a:b:c]
2020-10-21 22:24:38	-->	bwitt (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 22:24:39	<--	chele (~chele@ip5b416ea2.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-10-21 22:24:48	SnoopJ	f8e4, why would it be an error?
2020-10-21 22:24:50	Wooble	f8e4: slices are never an error.
2020-10-21 22:24:53	-->	admin123 (~nope@ool-2f12f6cb.dyn.optonline.net) has joined #python
2020-10-21 22:25:02	f8e4	1 -1 -2 expected; and -1 only if a > b
2020-10-21 22:25:03	SnoopJ	yea with builtins I think it's not possible to get an error from slicing
2020-10-21 22:25:06	-->	masoudd__ (~masoudd@unaffiliated/masoudd) has joined #python
2020-10-21 22:25:19	<--	masoudd_ (~masoudd@unaffiliated/masoudd) has quit (Ping timeout: 240 seconds)
2020-10-21 22:25:21	<--	tWqaq (~tWqaq@240e:389:5de0:bc00:e29f:4de1:8935:87e5) has quit (Remote host closed the connection)
2020-10-21 22:25:29	-->	cthulchu_ (~cthulchu@69.172.160.196) has joined #python
2020-10-21 22:25:38	SnoopJ	might be some edges, though
2020-10-21 22:25:42	f8e4	anyway, i built a slicing and cutting deque
2020-10-21 22:25:46	<--	bwitt_ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has quit (Ping timeout: 272 seconds)
2020-10-21 22:26:18	f8e4	retard maybe, but is ok: https://bpa.st/XVRQ
2020-10-21 22:26:37	<--	DTEIT (DTEIT@nat/redhat/x-ncaqxfrtgcljlvzv) has quit (Ping timeout: 256 seconds)
2020-10-21 22:26:42	-->	DTEIT_ (~DTEIT@194.88.84.234) has joined #python
2020-10-21 22:26:43	<--	bwitt__ (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has quit (Ping timeout: 265 seconds)
2020-10-21 22:27:27	-->	Saukk (~Saukk@2001:998:f9:2914:1c59:9bb5:b94c:4) has joined #python
2020-10-21 22:27:58	-->	kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net) has joined #python
2020-10-21 22:28:11	<--	Barones (~Barones@2804:7f3:8982:f364:c896:23d4:b69c:8c30) has quit (Ping timeout: 272 seconds)
2020-10-21 22:28:13	-->	quartzmage (nick_x@gateway/vpn/protonvpn/nickx/x-67731737) has joined #python
2020-10-21 22:28:19	<--	masoudd (~masoudd@unaffiliated/masoudd) has quit (Ping timeout: 240 seconds)
2020-10-21 22:28:25	<--	alx (~alx@119246134143.ctinets.com) has quit (Quit: Leaving)
2020-10-21 22:28:31	<--	Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.comhem.se) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 22:28:42	<--	edd_lc (~edd_lc@85-250-110-184.bb.netvision.net.il) has quit (Quit: leaving)
2020-10-21 22:29:19	<--	lmmx (~lmmx@host-80-47-113-123.as13285.net) has quit (Ping timeout: 240 seconds)
2020-10-21 22:29:27	-->	gitesh (uid423739@gateway/web/irccloud.com/x-cinppdkgwjprzppv) has joined #python
2020-10-21 22:30:11	-->	mindv0rtex (~mindv0rte@pool-100-16-17-197.bltmmd.fios.verizon.net) has joined #python
2020-10-21 22:31:06	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 22:31:36	-->	bwitt_ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 22:34:34	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 22:34:39	<--	bwitt (bwitt@gateway/vpn/privateinternetaccess/bwitt) has quit (Ping timeout: 240 seconds)
2020-10-21 22:37:48	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-10-21 22:37:49	<--	biermic (~biermic@178.112.196.203.wireless.dyn.drei.com) has quit (Ping timeout: 260 seconds)
2020-10-21 22:37:51	<--	BH23 (~BH23@santoroj.plus.com) has quit (Read error: Connection reset by peer)
2020-10-21 22:38:14	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 22:39:13	-->	zumba_addict (~zumba_add@108-197-162-97.lightspeed.cicril.sbcglobal.net) has joined #python
2020-10-21 22:39:30	-->	biermic (~biermic@193-80-12-83.adsl.highway.telekom.at) has joined #python
2020-10-21 22:40:39	<--	DTEIT_ (~DTEIT@194.88.84.234) has quit (Ping timeout: 240 seconds)
2020-10-21 22:41:52	-->	Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.comhem.se) has joined #python
2020-10-21 22:42:03	-->	DTEIT (DTEIT@nat/redhat/x-rslwdlkoqmcvgycy) has joined #python
2020-10-21 22:42:08	<--	random_yanek (~random_ya@2a01:118f:575:df00:c386:7d4d:2b96:641b) has quit (Ping timeout: 272 seconds)
2020-10-21 22:42:34	<--	arinov (~arinov@147.30.64.142) has quit (Quit: Konversation terminated!)
2020-10-21 22:42:40	-->	Betal (~Betal@unaffiliated/betal) has joined #python
2020-10-21 22:42:50	-->	babygnu (~robert@gateway/tor-sasl/babygnu) has joined #python
2020-10-21 22:43:21	<--	dskull (~dskull@unaffiliated/daynaskully) has quit (Quit: quit)
2020-10-21 22:46:20	<--	eramirez (~eramirez@49.149.129.215) has quit (Ping timeout: 264 seconds)
2020-10-21 22:46:22	-->	bigwavejake (~user@47.144.25.109) has joined #python
2020-10-21 22:46:39	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2020-10-21 22:46:46	-->	cd (~cd@unaffiliated/cd) has joined #python
2020-10-21 22:46:59	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined #python
2020-10-21 22:47:18	-->	dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net) has joined #python
2020-10-21 22:47:19	bluesmonk	hi everyone, I remember reading somewhere about documenting tests in the docstrings using a template. Can you point me to some conventions, or maybe opinions?
2020-10-21 22:47:21	zumba_addict	we've been down for almost a day now due to error in urllib3 module specifically `cannot import name IPV6_ADDRZ_RE`
2020-10-21 22:47:47	<--	dancus (~dancus@dynamic-adsl-94-34-166-32.clienti.tiscali.it) has quit (Quit: WeeChat 2.9)
2020-10-21 22:48:11	bluesmonk	I get results about  doctest and regular docstrings only
2020-10-21 22:48:25	SnoopJ	bluesmonk, I like numpydoc but I don't really know what you mean by "documenting tests" in this case.
2020-10-21 22:49:01	bluesmonk	something like a template for a docstring in a test, say, using pytest. Something like "this tests x, using y, expecting z, fails under w"
2020-10-21 22:49:35	<--	bigwavejake (~user@47.144.25.109) has left #python
2020-10-21 22:49:53	bluesmonk	so, yes, something like the google/numpy/sphinx templates for regular methods, but for tests
2020-10-21 22:50:20	SnoopJ	Ideally the test would just be written to make that clear, imo
2020-10-21 22:50:28	<--	plexigras (plexigras@gateway/vpn/privateinternetaccess/plexigras) has quit (Ping timeout: 272 seconds)
2020-10-21 22:50:39	-->	dskull (~dskull@unaffiliated/daynaskully) has joined #python
2020-10-21 22:51:06	<--	zalt__ (~devp@unaffiliated/lambda443) has quit (Ping timeout: 272 seconds)
2020-10-21 22:51:45	SnoopJ	I think documentation is at its worst when it's telling you "what" instead of "why, how." At best, it's repeating the code. More typically, it's out of sync with the code it's purportedly describing.
2020-10-21 22:52:19	SnoopJ	I guess docstrings for a function are the exception to that rule though, it's helpful to summarize a function there.
2020-10-21 22:52:43	-->	random_yanek (~random_ya@2a01:118f:575:df00:c386:7d4d:2b96:641b) has joined #python
2020-10-21 22:52:52	<--	dreamon (~dreamon@unaffiliated/dreamon) has quit (Ping timeout: 260 seconds)
2020-10-21 22:53:46	-->	hnOsmium0001 (uid453710@gateway/web/irccloud.com/x-widejiobrxcglhbz) has joined #python
2020-10-21 22:54:00	<--	Haudegen (~quassel@91.114.49.10) has quit (Quit: Bin weg.)
2020-10-21 22:54:29	bluesmonk	yeah, I kinda do it like that now, I guess
2020-10-21 22:54:31	bluesmonk	thanks
2020-10-21 22:54:47	-->	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has joined #python
2020-10-21 22:55:47	SnoopJ	re: "fails under w" that sounds like a separate test entirely, either using @pytest.mark.xfail or pytest.raises()
2020-10-21 22:55:53	<--	unlink2 (~unlink2@p200300ebcf3c54001b9e8be0a8d0c9c4.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2020-10-21 22:56:23	-->	royal_screwup21 (52254809@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.72.9) has joined #python
2020-10-21 22:56:32	SnoopJ	"using y" for me is usually a matter of what fixtures the test uses (and those might be summarized)
2020-10-21 22:56:48	SnoopJ	the other two are some combination of giving the test a good name and making the body legible
2020-10-21 22:57:17	<--	Allegretto (~allegrett@188-143-58-130.pool.digikabel.hu) has quit (Ping timeout: 256 seconds)
2020-10-21 22:57:22	-->	unlink2 (~unlink2@p200300ebcf3c54001b9e8be0a8d0c9c4.dip0.t-ipconnect.de) has joined #python
2020-10-21 22:58:00	SnoopJ	If I really felt compelled to document, I'd probably try to stick to a high-level summary.
2020-10-21 22:58:19	<--	jay-m_ (~jay-m@41.205.30.141) has quit (Ping timeout: 240 seconds)
2020-10-21 22:58:21	ntblb	@SnoopJ so why this winreg module since if we want to edit an existing registry!!
2020-10-21 22:58:32	SnoopJ	ntblb, I can't understand that sentence
2020-10-21 22:58:46	-->	BSaboia (~bsaboia@94.147.11.66) has joined #python
2020-10-21 22:58:53	-->	Allegretto (~allegrett@188-143-58-130.pool.digikabel.hu) has joined #python
2020-10-21 22:59:23	-->	dreugeworst (~Srain@188.26.219.125) has joined #python
2020-10-21 22:59:29	ntblb	@SnoopJ i told you before..i was getting win error 5 permission denied...and as u said to me that it is something relate to "run as administrator"
2020-10-21 22:59:50	SnoopJ	that was my suggestion, yes
2020-10-21 23:00:12	-->	reynir1 (~reynir@unaffiliated/reynir) has joined #python
2020-10-21 23:00:19	ntblb	so for that i was telling you....why all that winreg module since we cannot creating or editing without having permission ( out code permission )
2020-10-21 23:00:27	-->	Rudd0 (~Rudd0@185.189.115.108) has joined #python
2020-10-21 23:01:02	SnoopJ	I don't know what "why all that winreg module" means
2020-10-21 23:01:04	<--	kabooHD (~Thunderbi@eth-west-pareq2-46-193-1-54.wb.wifirst.net) has quit (Ping timeout: 246 seconds)
2020-10-21 23:01:31	<--	reynir (~reynir@unaffiliated/reynir) has quit (Ping timeout: 265 seconds)
2020-10-21 23:01:32	ntblb	python module ( winreg ) that handles windows registry ( editing , creating, deleting )
2020-10-21 23:01:33	-->	ente_ (~ente@p5de29b39.dip0.t-ipconnect.de) has joined #python
2020-10-21 23:01:36	SnoopJ	yes
2020-10-21 23:01:36	-->	lmmx (~lmmx@host-80-47-113-123.as13285.net) has joined #python
2020-10-21 23:01:43	ente_	hey y'all
2020-10-21 23:02:03	SnoopJ	hi ente_
2020-10-21 23:02:05	dreugeworst	Hi guys, not sure if this is the place to ask about googleapiclient usage, but didn't know where else to ask. Basically I want to retrieve the names of attendants too meetings from the google calendar. I've managed to use googleapiclient from an example to get the attendants to an event, but they are listed with their e-mail address only. When I look at the event in the google calendar it shows their full name however, so how can I get th
2020-10-21 23:02:05	dreugeworst	e full name of the attendants in python?
2020-10-21 23:02:07	-->	masoudd_ (~masoudd@unaffiliated/masoudd) has joined #python
2020-10-21 23:02:20	ente_	which password hashing algorithm would you use in 2020?
2020-10-21 23:02:48	SnoopJ	dreugeworst, you might have to issue a separate query against each email to retrieve the name (or maybe you can get the names for multiple emails in one go)
2020-10-21 23:03:14	--	reynir1 is now known as reynir
2020-10-21 23:03:16	-->	cgundersson (~christian@80.70.147.210) has joined #python
2020-10-21 23:03:32	<--	burakcank (~burakcank@5.24.50.188) has quit (Ping timeout: 246 seconds)
2020-10-21 23:03:35	<--	ffe4 (~ffe4@200116b82c75c100a9df29246bdfc1b9.dip.versatel-1u1.de) has quit (Quit: WeeChat 2.9)
2020-10-21 23:03:36	dreugeworst	@SnoopJ, thanks, how do I get the name for a given email?
2020-10-21 23:04:01	SnoopJ	dreugeworst, I don't know, my suggestion is to check the documentation to see if there's an endpoint for this.
2020-10-21 23:04:30	dreugeworst	yeah I've been trying but google documentation isn't exactly helpful XD
2020-10-21 23:04:32	SnoopJ	ente_, hashlib provides pdkdf2_hmac() and scrypt() for this purpose: https://docs.python.org/3/library/hashlib.html#key-derivation
2020-10-21 23:04:32	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 23:04:35	<--	masoudd__ (~masoudd@unaffiliated/masoudd) has quit (Ping timeout: 246 seconds)
2020-10-21 23:06:27	-->	bitmask (~bitmask@2601:84:c702:f500:d8d0:eb3c:5b15:873) has joined #python
2020-10-21 23:06:37	Smiley	oh lord the google docs D:
2020-10-21 23:06:53	<--	daGrevis (~daGrevis@unaffiliated/dagrevis) has quit (Ping timeout: 260 seconds)
2020-10-21 23:07:28	<--	DaPinkOne (~dap@c-73-59-5-73.hsd1.wa.comcast.net) has quit (Ping timeout: 260 seconds)
2020-10-21 23:07:50	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 23:08:17	<--	cgundersson (~christian@80.70.147.210) has quit (Ping timeout: 265 seconds)
2020-10-21 23:08:59	-->	mat001_ (~mat001@73.93.152.201) has joined #python
2020-10-21 23:09:36	--	[Apwal] is now known as [LowIntake]
2020-10-21 23:10:14	-->	faLUCE (~paolo@83.137.6.205) has joined #python
2020-10-21 23:10:40	<--	ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) has quit (Remote host closed the connection)
2020-10-21 23:11:00	-->	DaPinkOne (~dap@c-73-59-5-73.hsd1.wa.comcast.net) has joined #python
2020-10-21 23:11:14	<--	mat001 (~mat001@73.93.155.29) has quit (Ping timeout: 246 seconds)
2020-10-21 23:11:27	-->	Leonarbro (~Leonet@S01067824af93741c.cg.shawcable.net) has joined #python
2020-10-21 23:11:33	faLUCE	Hello. I need to launch a python3 script on windows with a double mouse click. Python3 interpreter is already installed. How can I obtain that? should I create a bat file?
2020-10-21 23:11:53	-->	jdmark_ (~jdmark@unaffiliated/jdmark) has joined #python
2020-10-21 23:12:01	-->	olayes (~alxric@h-198-153.A785.priv.bahnhof.se) has joined #python
2020-10-21 23:12:26	-->	pcloadltr (~pcloadltr@185.229.59.47) has joined #python
2020-10-21 23:12:29	-->	contingo (~textual@213.205.240.16) has joined #python
2020-10-21 23:12:37	SnoopJ	faLUCE, that's one option, a shortcut is another. Associating the filetype with the interpreter is yet another.
2020-10-21 23:12:43	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Ping timeout: 260 seconds)
2020-10-21 23:12:59	faLUCE	SnoopJ: shortcut to what?
2020-10-21 23:13:19	SnoopJ	faLUCE, to launch the interpreter and run that file
2020-10-21 23:13:32	olayes	If I have a bunch of different if-statements like if var.title == x then, if var.desc == y then, if var.email == z then, could I somehow loop that instead? Something like for option in ["title", "desc", "email"]: if var.option = q ?
2020-10-21 23:13:39	<--	braincrash (~braincras@bl5-42-100.dsl.telepac.pt) has quit (Ping timeout: 256 seconds)
2020-10-21 23:13:45	<--	DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-157.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2020-10-21 23:13:46	faLUCE	SnoopJ: do you mean that I have to create a shortcut with windows?
2020-10-21 23:13:59	SnoopJ	faLUCE, I do not, I offered it as another option.
2020-10-21 23:14:01	-->	plexigras (plexigras@gateway/vpn/privateinternetaccess/plexigras) has joined #python
2020-10-21 23:14:15	-->	daGrevis (~daGrevis@unaffiliated/dagrevis) has joined #python
2020-10-21 23:14:25	-->	tiwula (~lane@70.89.246.241-Busname-UT.hfc.comcastbusiness.net) has joined #python
2020-10-21 23:14:40	faLUCE	SnoopJ: ok. But what if I want to open both the script and the stdout/stderr on a terminal ?
2020-10-21 23:15:19	<--	jdmark (~jdmark@unaffiliated/jdmark) has quit (Ping timeout: 240 seconds)
2020-10-21 23:15:21	-->	Aaron (~dark@freebsd/user/aaron) has joined #python
2020-10-21 23:16:09	-->	burakcank (~burakcank@5.24.50.188) has joined #python
2020-10-21 23:16:15	<--	diogenese (~diogenese@diogenese.velotech.net) has quit (Quit: Has anybody seen the bridge?)
2020-10-21 23:16:35	-->	diogenese (~diogenese@diogenese.velotech.net) has joined #python
2020-10-21 23:17:16	-->	RjAHDtUk (~zKcjTgTe@gateway/tor-sasl/zkcjtgte) has joined #python
2020-10-21 23:17:20	zumba_addict	what's the command to display all modules installed?
2020-10-21 23:17:31	zumba_addict	is it pip freeze?
2020-10-21 23:18:10	-->	ska (~ska@unaffiliated/ska) has joined #python
2020-10-21 23:18:23	grym	zumba_addict: for that environment, yes
2020-10-21 23:18:29	-->	LKoen (~LKoen@81.255.219.130) has joined #python
2020-10-21 23:18:29	adder	pip list
2020-10-21 23:18:49	adder	when in doubt, $ man pip
2020-10-21 23:18:56	<--	electsleeper (~electslee@79-77-86-141.dynamic.dsl.as9105.com) has quit (Quit: ZNC - https://znc.in)
2020-10-21 23:19:52	-->	courrier (~courrier@147.210.204.164) has joined #python
2020-10-21 23:20:10	ska	I have a swig module but my setup.py, while sometimes works, it often removes the .py before setup can see it. Either that or cleanup removes it before setup can find it.
2020-10-21 23:20:22	-->	heyitsrama (~heyitsram@c-24-6-105-253.hsd1.ca.comcast.net) has joined #python
2020-10-21 23:21:03	-->	phasetwo (~phasetwo@2601:602:8d80:4e50:346e:a0c4:3f08:2d35) has joined #python
2020-10-21 23:21:22	<--	Trashlord (~trash@wikipedia/Sentient-Planet) has quit (Quit: "True ignorance is not the absence of knowledge, but the refusal to acquire it.")
2020-10-21 23:21:55	-->	yohnnyjoe (~yohnnyjoe@c-73-163-139-169.hsd1.dc.comcast.net) has joined #python
2020-10-21 23:22:01	--	masoudd_ is now known as masoudd
2020-10-21 23:22:03	-->	beencubed (~beencubed@209.131.238.248) has joined #python
2020-10-21 23:22:14	-->	hum4n (98a85f5d@gateway/web/cgi-irc/kiwiirc.com/ip.152.168.95.93) has joined #python
2020-10-21 23:24:17	-->	bwitt__ (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has joined #python
2020-10-21 23:24:18	<--	mikecmpbll (~mikecmpbl@ruby/staff/mikecmpbll) has quit (Ping timeout: 258 seconds)
2020-10-21 23:25:20	-->	electsleeper (~electslee@79-77-86-141.dynamic.dsl.as9105.com) has joined #python
2020-10-21 23:25:37	-->	bwitt (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 23:25:48	-->	stkw0 (~quassel@ns3046126.ip-91-121-8.eu) has joined #python
2020-10-21 23:26:27	<--	phasetwo (~phasetwo@2601:602:8d80:4e50:346e:a0c4:3f08:2d35) has quit (Ping timeout: 272 seconds)
2020-10-21 23:26:28	-->	mikecmpbll (~mikecmpbl@ruby/staff/mikecmpbll) has joined #python
2020-10-21 23:27:45	<--	bwitt_ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has quit (Ping timeout: 258 seconds)
2020-10-21 23:27:54	zumba_addict	linux env
2020-10-21 23:28:45	-->	buckworst (~nate@110.138.18.157) has joined #python
2020-10-21 23:29:06	<--	bwitt__ (~bwitt@135-180-197-89.fiber.dynamic.sonic.net) has quit (Ping timeout: 272 seconds)
2020-10-21 23:29:10	ska	Is there some way to delay cleanup or specify a dependency action (like compiling swig) in the setup.py?
2020-10-21 23:29:22	zumba_addict	i need to install urllib3 at least 1.25. I tried pip install urllib3>=1.25 but nothing happened
2020-10-21 23:30:22	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Ping timeout: 272 seconds)
2020-10-21 23:30:47	<--	Jerrynicki (~niklas@p200300f577056f00864f9e835e47bcb7.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-10-21 23:31:06	-->	emdev (~igloo@24.42.207.142) has joined #python
2020-10-21 23:31:31	zumba_addict	got it but I got this now - https://bpa.st/BJAA
2020-10-21 23:32:07	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2020-10-21 23:32:08	grym	zumba_addict: makes sense to me
2020-10-21 23:32:08	heyitsrama	looks like you need <1.24
2020-10-21 23:32:33	SnoopJ	ska, you can run fairly arbitrary code as part of setup.py, but it's probably not a good idea to invoke SWIG from it. At my employer, we use cmake to invoke SWIG before we build a wheel.
2020-10-21 23:32:57	zumba_addict	grym, what is the fix to it?
2020-10-21 23:33:16	<--	burakcank (~burakcank@5.24.50.188) has quit (Ping timeout: 246 seconds)
2020-10-21 23:33:29	grym	zumba_addict: well, your environment has requests in it that says it only works with 1.24 at the highest
2020-10-21 23:33:42	<--	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has quit (Ping timeout: 256 seconds)
2020-10-21 23:33:51	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-10-21 23:33:59	<--	hum4n (98a85f5d@gateway/web/cgi-irc/kiwiirc.com/ip.152.168.95.93) has quit (Quit: Connection closed)
2020-10-21 23:34:00	zumba_addict	upgrade requests too?
2020-10-21 23:34:08	<--	[LowIntake] (~while@62-210-114-224.rev.poneytelecom.eu) has quit (Quit: "The roof the roof the roof is on fire!")
2020-10-21 23:34:21	zumba_addict	can we do pip install requests --upgrade?
2020-10-21 23:34:25	-->	hum4n (98a85f5d@gateway/web/cgi-irc/kiwiirc.com/ip.152.168.95.93) has joined #python
2020-10-21 23:34:26	amo	hey grim :)
2020-10-21 23:34:29	-->	rf-n00b (rf-n00b@gateway/vpn/privateinternetaccess/rf-n00b) has joined #python
2020-10-21 23:34:29	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-21 23:34:30	grym	install --upgrade requests
2020-10-21 23:34:45	-->	bwitt_ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 23:34:56	<--	rmarcand (~rmarcand@2001:420:2004:400::1) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-21 23:34:58	grym	amo: new nick who dis
2020-10-21 23:35:02	mefistofeles	https://pypi.org/project/requests/ hah, html parsing faled :P
2020-10-21 23:35:03	zumba_addict	cool
2020-10-21 23:35:10	<--	faLUCE (~paolo@83.137.6.205) has quit (Quit: Konversation terminated!)
2020-10-21 23:35:13	<--	rf-n00b_ (rf-n00b@gateway/vpn/privateinternetaccess/rf-n00b) has quit (Ping timeout: 256 seconds)
2020-10-21 23:35:15	amo	eh. grym sry :p
2020-10-21 23:35:16	grym	mefistofeles: there's been a PR for like, a month and a half
2020-10-21 23:35:21	mefistofeles	grym: lol
2020-10-21 23:35:28	<--	rifoerster (~rifo@p50995cae.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-10-21 23:35:44	ska	SnoopJ: Do you include the pre=compiled code in your repo?
2020-10-21 23:35:46	zumba_addict	if switching back to 2.19.1, I would do pip install requests==2.19.1 correct?
2020-10-21 23:36:02	ska	SnoopJ: Or do you do it from inside setup.py?
2020-10-21 23:36:05	SnoopJ	ska, we don't commit the file generated by SWIG, if that's what you mean.
2020-10-21 23:36:23	amo	grym, my next quest will be to try and figure out dynamic thresholding (adapting to changes in amplitudes), any suggestions?
2020-10-21 23:36:40	-->	Steeve (~steve@unaffiliated/steeve) has joined #python
2020-10-21 23:36:48	-->	[SOULWAX] (~while@62-210-114-224.rev.poneytelecom.eu) has joined #python
2020-10-21 23:36:56	ska	SnoopJ: since we're using an remote installer , all it can do is a 'python3 -m pip install /mymodule'
2020-10-21 23:37:07	<--	quanter (~yinxiuqu@111.8.173.213) has quit (Quit: Leaving.)
2020-10-21 23:37:32	ska	SnoopJ: so we can't really do anything manyually.
2020-10-21 23:38:18	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-21 23:38:36	<--	bwitt (bwitt@gateway/vpn/privateinternetaccess/bwitt) has quit (Ping timeout: 272 seconds)
2020-10-21 23:39:14	<--	emdev (~igloo@24.42.207.142) has quit (Ping timeout: 272 seconds)
2020-10-21 23:40:10	SnoopJ	ska, you can certainly invoke SWIG with e.g. subprocess, but like I said it doesn't sound like a great idea
2020-10-21 23:40:31	SnoopJ	ska, could you maybe invoke a shell script in your remote command that then goes on to call pip?
2020-10-21 23:40:54	ska	Yea, I think for now we will play it safe, and pre-compile it, put it in our repo.
2020-10-21 23:41:00	<--	deekej (~deekej@128.0.185.178) has quit (Remote host closed the connection)
2020-10-21 23:41:18	-->	bwitt__ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has joined #python
2020-10-21 23:41:25	-->	lolidunno (~lolidunno@FL1-133-202-247-87.tky.mesh.ad.jp) has joined #python
2020-10-21 23:41:32	<--	efie (~efie@dynamic-046-114-111-073.46.114.pool.telefonica.de) has quit (Quit: Leaving)
2020-10-21 23:41:35	-->	heywoodlh (~heywoodlh@c-73-228-98-195.hsd1.ut.comcast.net) has joined #python
2020-10-21 23:41:35	zumba_addict	grym, to give you a quick background. Our tool which relies on urllib3 started failing. The urllib3 that was being installed was 1.23 and for some reason it started failing. I ran our tool manually and got the same failure. When I updated requests and urllib3 to 1.25, the error was gone
2020-10-21 23:41:44	ska	Once we find a better way we can do it better.
2020-10-21 23:42:44	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Ping timeout: 264 seconds)
2020-10-21 23:43:03	<--	sandeepk (~sandeepk@117.199.86.182) has quit (Quit: Leaving)
2020-10-21 23:43:07	zumba_addict	what would be a good way so that when a third party updates their lib, we are not affected right away?
2020-10-21 23:43:19	zumba_addict	is pinning version enough?
2020-10-21 23:43:21	<--	Wu (~wu@154.red-83-50-198.dynamicip.rima-tde.net) has quit (Quit: leaving)
2020-10-21 23:45:00	<--	bwitt_ (bwitt@gateway/vpn/privateinternetaccess/bwitt) has quit (Ping timeout: 258 seconds)
2020-10-21 23:46:10	-->	orbyt_ (~orbyt@172.92.4.78) has joined #python
2020-10-21 23:47:57	nanonyme	Pin everything? :)
2020-10-21 23:48:07	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2020-10-21 23:48:44	-->	jay-m_ (~jay-m@129.0.205.239) has joined #python
2020-10-21 23:49:23	nanonyme	zumba_addict, note pip constraints may be a nice tool also if you have out-of-dependency-chain requirement for things
2020-10-21 23:49:28	grym	zumba_addict: pinning and lockfiles help a bunch, yes.
2020-10-21 23:50:37	<--	PeRy_SoY (~pi@gateway/tor-sasl/perysoy/x-95510193) has quit (Ping timeout: 240 seconds)
2020-10-21 23:51:08	-->	Leonarbro_ (~Leonet@S01067824af93741c.cg.shawcable.net) has joined #python
2020-10-21 23:51:46	-->	greatgatsby (~greatgats@otwaon0920w-grc-02-65-92-11-104.dsl.bell.ca) has joined #python
2020-10-21 23:52:11	<--	amr00t (~amroot@193.32.127.152) has quit (Ping timeout: 256 seconds)
2020-10-21 23:52:18	-->	alx (~alx@119246134143.ctinets.com) has joined #python
2020-10-21 23:52:31	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-10-21 23:52:53	-->	snackoverflow (~audioburn@unaffiliated/theology) has joined #python
2020-10-21 23:53:15	-->	tethroar (~tethroar@95.149.17.213) has joined #python
2020-10-21 23:53:30	-->	Aryan (~Aryan@unaffiliated/aryan) has joined #python
2020-10-21 23:53:50	<--	Saukk (~Saukk@2001:998:f9:2914:1c59:9bb5:b94c:4) has quit (Remote host closed the connection)
2020-10-21 23:54:03	<--	seoul_man (~meh@wilug/newlug/seoul-man) has quit (Remote host closed the connection)
2020-10-21 23:54:28	-->	kollu200 (40fb3d4a@enrt151-d-vlan-2.net.cen.ct.gov) has joined #python
2020-10-21 23:54:28	<--	Leonarbro (~Leonet@S01067824af93741c.cg.shawcable.net) has quit (Ping timeout: 256 seconds)
2020-10-21 23:55:18	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-10-21 23:55:20	kollu200	hello , I am using this two libraries (import csv, and import json). I know they are inbuilt libraries in python. Not doing pip install. I want similar library for .xls files. Inbuilt , no pip installs.
2020-10-21 23:55:21	-->	silicong (~textual@50.210.211.177) has joined #python
2020-10-21 23:55:36	_habnabit	kollu200, there is none
2020-10-21 23:55:41	-->	PeRy_SoY (~pi@gateway/tor-sasl/perysoy/x-95510193) has joined #python
2020-10-21 23:55:46	-->	Wu (~wu@154.red-83-50-198.dynamicip.rima-tde.net) has joined #python
2020-10-21 23:55:55	<--	Aaron (~dark@freebsd/user/aaron) has quit (Remote host closed the connection)
2020-10-21 23:56:02	kollu200	ok, what about in jython? what library i can use?
2020-10-21 23:56:17	grym	kollu200: stdlib doesn't know how to parse xls(x)
2020-10-21 23:56:17	SnoopJ	I doubt jython has a builtin for this, too.
2020-10-21 23:56:26	_habnabit	kollu200, jython doesn't have a different stdlib
2020-10-21 23:56:26	SnoopJ	kollu200, why do you want to avoid a third-party dependency?
2020-10-21 23:56:27	<--	audio (~audioburn@unaffiliated/theology) has quit (Ping timeout: 260 seconds)
2020-10-21 23:56:31	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Ping timeout: 264 seconds)
2020-10-21 23:56:49	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2020-10-21 23:56:56	kollu200	Hi, as I am developing a plugin. The tool is already built by somebody else,  I am just doing small plugin.
2020-10-21 23:57:18	grym	kollu200: the python tool that does this is openpyxl
2020-10-21 23:57:29	Wooble	pretty sure openpyxl only does xlsx
2020-10-21 23:57:32	kollu200	yeh, but you need to pip install right?
2020-10-21 23:57:36	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-10-21 23:57:40	grym	kollu200: if you need it, vendor it
2020-10-21 23:57:41	SnoopJ	kollu200, is there a reason your plugin can't have new dependencies?
2020-10-21 23:57:42	-->	SwiftMatt (~Objective@2601:282:4300:3e:888d:4d6f:d064:44af) has joined #python
2020-10-21 23:58:14	grym	kollu200: and do you really mean .xls files, or .xlsx? pre-2007 or post
2020-10-21 23:58:18	SnoopJ	this isn't uncommon with other plugins AFAIK
2020-10-21 23:58:26	kollu200	https://www.autopsy.com/. this is the tool. am doing python plugin development https://wiki.sleuthkit.org/index.php?title=Autopsy_3rd_Party_Modules
2020-10-21 23:58:35	SnoopJ	kollu200, can you answer my question?
2020-10-21 23:58:38	-->	Aaron (~dark@freebsd/user/aaron) has joined #python
2020-10-21 23:58:47	kollu200	yes i posted the links.
2020-10-21 23:59:14	zumba_addict	I looked at our project but I don't see urllib3 in requirements.txt yet it's being installed. How so?
2020-10-21 23:59:23	kollu200	it is third party module , so dont think i can use it
2020-10-21 23:59:25	_habnabit	zumba_addict, it's a dependency
2020-10-21 23:59:25	grym	zumba_addict: requests uses it
2020-10-21 23:59:28	grym	zumba_addict: pretty sure :)
2020-10-21 23:59:41	<--	sdwrage (~textual@38.111.183.30) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-21 23:59:50	-->	bubls (~bubls@unaffiliated/bubls) has joined #python
2020-10-22 00:00:03	-->	and3rson (sid146635@gateway/web/irccloud.com/x-tkrreyyvbvijyaai) has joined #python
2020-10-22 00:00:13	zumba_addict	we have requests being installed and it's listed in requiremetns.txt
2020-10-22 00:00:14	--	Leonarbro_ is now known as Leonarbro
2020-10-22 00:00:18	kollu200	urllib3 is inbuilt in python
2020-10-22 00:00:29	zumba_addict	really
2020-10-22 00:00:33	grym	kollu200: no, it's not
2020-10-22 00:00:43	SnoopJ	kollu200, will your plugin be pip-installable?
2020-10-22 00:00:45	zumba_addict	cool, :)
2020-10-22 00:00:58	grym	kollu200: https://github.com/urllib3/urllib3
2020-10-22 00:01:08	zumba_addict	should i also add urllib3>=1.25 in our requirements.txt?
2020-10-22 00:01:09	grym	zumba_addict: https://github.com/psf/requests/blob/master/setup.py#L47
2020-10-22 00:01:11	kollu200	urllib3 is inbuilt in python
2020-10-22 00:01:15	SnoopJ	you said that already
2020-10-22 00:01:17	<--	pcloadltr (~pcloadltr@185.229.59.47) has left #python ("Leaving")
2020-10-22 00:01:18	_habnabit	zumba_addict, you don't need to
2020-10-22 00:01:26	kollu200	amusing urllib2 sorry
2020-10-22 00:01:31	kollu200	not urllib3
2020-10-22 00:01:31	grym	there we go
2020-10-22 00:01:36	_habnabit	kollu200, urllib2 was removed in 3.0
2020-10-22 00:02:12	kollu200	yeh but it works with my plugin. When I do import openpyxl i get no module named error
2020-10-22 00:02:15	zumba_addict	_habnabit, but when we were at requests 2.19 and urllib3 1.23, our tool was failing
2020-10-22 00:02:31	kollu200	is urllib2 in built in python though?
2020-10-22 00:02:35	_habnabit	kollu200, urllib2 was removed in 3.0
2020-10-22 00:02:44	and3rson	Hey guys. I'm starting a bunch of Process workers (fork method) and want to avoid joining them right away in order to do other things while the forked processes are running. Is it safe to run Thread(target=proc.join).start() right after starting proc to ensure they are joined once finished?
2020-10-22 00:02:46	SnoopJ	hmm, seems like Autopsy doesn't care about installation of plugins tha tway
2020-10-22 00:02:46	_habnabit	zumba_addict, do you think it was he version of urllib3 that caused it to fail?
2020-10-22 00:02:54	<--	Tennis (~Tennis@unaffiliated/tennis) has quit (Quit: Leaving)
2020-10-22 00:02:56	SnoopJ	kollu200, I recommend using openpyxl and vendoring a copy of it with your plugin.
2020-10-22 00:03:00	-->	r29v (~textual@135.26.146.204) has joined #python
2020-10-22 00:03:01	Wooble	_habnabit: that's o0k, everyone uses py2 with pypy forever and will never touch py3, right?
2020-10-22 00:03:07	-->	pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) has joined #python
2020-10-22 00:03:11	zumba_addict	yes, let me grab the exact error
2020-10-22 00:03:19	kollu200	autopsy python plugin is in 2.7, not python 3
2020-10-22 00:03:22	_habnabit	Wooble, idk if i'd say everybody
2020-10-22 00:03:47	kollu200	SnoopJ guess will do it that
2020-10-22 00:03:47	<--	mir100 (~Vladimir@207.237.220.139) has quit (Quit: WeeChat 2.8)
2020-10-22 00:03:52	grym	kollu200: and if you really do need to read very old xls documents, i think you also need xlrd
2020-10-22 00:03:52	SnoopJ	kollu200, there is no standard library that will accomplish your task. You will either need to use a third-party tool that you distribute with your plugin, or write your own.
2020-10-22 00:04:02	kollu200	true
2020-10-22 00:04:11	zumba_addict	_habnabit, https://bpa.st/VMNQ
2020-10-22 00:04:13	SnoopJ	using existing code is a heck of a lot less work :)
2020-10-22 00:04:14	kollu200	the other way is giving json. convert xls to json online
2020-10-22 00:04:22	<--	N0Lif3 (~N0Lif3@unaffiliated/n0lif3) has quit (Ping timeout: 265 seconds)
2020-10-22 00:04:36	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-10-22 00:04:45	grym	kollu200: that sounds worse
2020-10-22 00:05:01	SnoopJ	it's up to you, ask yourself what users of your plugin will want
2020-10-22 00:05:14	<--	Deyaa (uid190709@gateway/web/irccloud.com/x-icztjdqwazzddqfq) has quit (Quit: Connection closed for inactivity)
2020-10-22 00:05:14	SnoopJ	(if .csv is an option, Excel can load them)
2020-10-22 00:05:40	kollu200	urllib2 https://docs.python.org/2/library/urllib2.html is inbuilt in python?
2020-10-22 00:05:44	-->	mir100 (~Vladimir@207.237.220.139) has joined #python
2020-10-22 00:05:58	zumba_addict	you are correct, i tried it on my machine, pip install requests=2.24 and it also installed the urllib3 i want which is 1.25.1
2020-10-22 00:06:11	Wooble	kollu200: BTW https://github.com/sleuthkit/autopsy/blob/develop/appveyor.yml#L16 sure looks like they're using py3.
2020-10-22 00:06:23	grym	kollu200: sure, but urllib.* says "use requests instead"
2020-10-22 00:06:31	<--	Aaron (~dark@freebsd/user/aaron) has quit (Remote host closed the connection)
2020-10-22 00:07:31	-->	rdolan (~rdolan@unaffiliated/rdolan) has joined #python
2020-10-22 00:07:46	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-10-22 00:08:25	<--	bmurt (~hmm@c-76-99-78-62.hsd1.pa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-22 00:08:33	-->	OldFaithful (~ye_olde@gateway/tor-sasl/goldie) has joined #python
2020-10-22 00:08:35	<--	minip (minip@unaffiliated/minip) has quit (Remote host closed the connection)
2020-10-22 00:08:49	<--	lucad111 (~lucad111@linaro/lucad111) has quit (Quit: Leaving)
2020-10-22 00:09:28	-->	gelignite (~gelignite@55d498f4.access.ecotel.net) has joined #python
2020-10-22 00:09:29	-->	Aaron (~dark@freebsd/user/aaron) has joined #python
2020-10-22 00:09:51	-->	dasher00 (~dasher00@90.205.55.140) has joined #python
2020-10-22 00:10:42	kollu200	when i import urllib3  says no module named, when i import urllib2 it works.  when i import openpyxl i get no modulenamed openpyxl, but when i import json or csv they work.
2020-10-22 00:11:01	kollu200	so my assumption is those are in built libraries that they work.
2020-10-22 00:11:16	Wooble	kollu200: FSVO "work"
2020-10-22 00:11:17	SnoopJ	kollu200, you understand that openpyxl is *not* a standard library, right?
2020-10-22 00:11:48	kollu200	i will download openpyxl code and package it with my code
2020-10-22 00:11:48	SnoopJ	Attempting to import it when it is not installed will fail. This is why we are suggesting that you include it with your library, so that is imported from your copy, rather than searching for an installed copy.
2020-10-22 00:11:54	-->	cidtest (~cidtest@134.101.6.132) has joined #python
2020-10-22 00:12:08	kollu200	yes
2020-10-22 00:12:38	<--	tesseract (~tesseract@2a01:e0a:599:6450:79f5:290e:faad:3b66) has quit (Quit: Leaving)
2020-10-22 00:12:41	<--	gadget (~gadjet@cpe-65-29-241-102.wi.res.rr.com) has quit (Quit: WeeChat 2.8)
2020-10-22 00:13:55	kollu200	https://sleuthkit.discourse.group/t/python-3-support-for-new-modules/1826.  i see suggestion on their forum as i can use that too " call the executable from the Autopsy Python Plugin module "  ..so i develop executable where i can use any library i want. Thank You all for help
2020-10-22 00:14:06	-->	mrproper (sid382572@gateway/web/irccloud.com/x-qmjtkkvlmroafifm) has joined #python
2020-10-22 00:15:02	mrproper	I use pyenv to install Python and running a script (Ansible), I'm receiving errors around certificates. Searching for this is indicating I need to install certificates using the `install` command but I don't know where the `Certificates.command` file is located.
2020-10-22 00:15:26	-->	pombreda_ (~pombreda@host-213-213-215-213.dynamic.voo.be) has joined #python
2020-10-22 00:16:04	<--	Aryan (~Aryan@unaffiliated/aryan) has quit (Quit: leaving)
2020-10-22 00:16:52	-->	Atque (~Atque@unaffiliated/atque) has joined #python
2020-10-22 00:17:46	<--	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has quit (Quit: Leaving)
2020-10-22 00:18:03	<--	istlf (~istlf@193.32.127.215) has quit (Remote host closed the connection)
2020-10-22 00:18:05	-->	Euph0ria (Euph0ria@gateway/vpn/privateinternetaccess/euph0ria) has joined #python
2020-10-22 00:18:28	<--	aartist (~user@ool-18bb12e9.dyn.optonline.net) has quit (Ping timeout: 256 seconds)
2020-10-22 00:18:33	-->	skinnym (~skinnym@2601:8c0:4300:4e90:41:bed4:4c5b:4e26) has joined #python
2020-10-22 00:19:08	-->	nomic (~nomic@2a00:23c6:9910:1201:cd6:17b:114d:77da) has joined #python
2020-10-22 00:20:03	<--	kollu200 (40fb3d4a@enrt151-d-vlan-2.net.cen.ct.gov) has quit (Remote host closed the connection)
2020-10-22 00:20:12	han-solo	mrproper: https://stackoverflow.com/questions/40684543/how-to-make-python-use-ca-certificates-from-mac-os-truststore # ?
2020-10-22 00:20:56	han-solo	also, maybe run ansible from inside an env
2020-10-22 00:21:01	han-solo	venv*
2020-10-22 00:21:39	<--	JesseParksalot (3e4ecd54@unaffiliated/mn-) has quit (Ping timeout: 245 seconds)
2020-10-22 00:21:42	-->	aartist (~user@ool-18bb12e9.dyn.optonline.net) has joined #python
2020-10-22 00:22:44	-->	gadget (~gadjet@cpe-65-29-241-102.wi.res.rr.com) has joined #python
2020-10-22 00:23:03	--	irc: disconnected from server
2020-10-22 00:23:45	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-10-22 00:23:45	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice. The Python CoC applies: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Ops are at #python-ops | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-10-22 00:23:45	--	Topic set by nedbat (~nedbat@python/psf/nedbat) on Thu, 20 Aug 2020 03:18:59
2020-10-22 00:23:45	--	Channel #python: 1833 nicks (0 ops, 0 voices, 1833 normals)
2020-10-22 00:23:48	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-10-22 00:24:42	han-solo	mrproper: well, they say `cd /Applications/Python\ 3.6/` and then `/Install\ Certificates.command` # but i am not sure what those are
2020-10-22 00:24:44	--	You are now known as lazyhaha
2020-10-22 00:24:50	<--	memcorrupt (~memcpy@unaffiliated/memcorrupt) has quit (Ping timeout: 272 seconds)
2020-10-22 00:24:52	han-solo	but i guess, making a venv should solve this ?
2020-10-22 00:25:03	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-10-22 00:25:12	han-solo	given certifi gets installed, i'm thinking
2020-10-22 00:25:14	mrproper	I thought so too. And I figured Certificates.command would be in the venv but I don't see it.
2020-10-22 00:25:44	<--	mikecmpbll (~mikecmpbl@ruby/staff/mikecmpbll) has quit (Quit: inabit. zz.)
2020-10-22 00:25:44	han-solo	mrproper: mm. Better to go with the venv then
2020-10-22 00:25:47	<--	Aaron (~dark@freebsd/user/aaron) has quit (Remote host closed the connection)
2020-10-22 00:25:51	mgedmin	that sounds like a Mac OS thing, and not a Python thing
2020-10-22 00:25:53	-->	sdwrage (~textual@38.111.183.30) has joined #python
2020-10-22 00:26:09	mrproper	mgedmin: I'd say it's a little of both.
2020-10-22 00:26:10	<--	code-witch (~code-witc@150.129.88.5) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-10-22 00:26:53	<--	sdwrage (~textual@38.111.183.30) has quit (Client Quit)
2020-10-22 00:26:53	-->	mikecmpbll (~mikecmpbl@ruby/staff/mikecmpbll) has joined #python
2020-10-22 00:27:12	<--	overyander (~overyande@209.141.208.197) has quit (Quit: Leaving)
2020-10-22 00:27:39	<--	nomic (~nomic@2a00:23c6:9910:1201:cd6:17b:114d:77da) has quit (Quit: Leaving)
2020-10-22 00:28:48	-->	Aaron (~dark@freebsd/user/aaron) has joined #python
2020-10-22 00:28:48	<--	Macuser (~Macuser@unaffiliated/macuser) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-10-22 00:28:49	<--	ralonsoh (~ralonsoh@222.red-83-33-6.dynamicip.rima-tde.net) has quit (Quit: Leaving)
2020-10-22 00:29:06	<--	xedra (~xed@cpc105442-brad21-2-0-cust83.17-1.cable.virginm.net) has quit (Ping timeout: 258 seconds)
2020-10-22 00:29:43	<--	schumaml (~schumaml@dslb-094-217-079-017.094.217.pools.vodafone-ip.de) has quit (Ping timeout: 260 seconds)
2020-10-22 00:30:01	-->	Blankspace (~abcd@unaffiliated/blankspace) has joined #python
2020-10-22 00:30:01	<--	Ploppz76 (4e17c0dd@gateway/web/cgi-irc/kiwiirc.com/ip.78.23.192.221) has quit (Quit: Connection closed)
2020-10-22 00:30:11	<--	rendar (~rendar@unaffiliated/rendar) has quit
2020-10-22 00:30:47	<--	dvx (~dvx@5.181.92.64) has quit (Quit: dvx)
2020-10-22 00:31:01	--	irc: disconnected from server
