2019-12-08 06:35:15	-->	laduyhaha (~duy@42.112.108.198) has joined #python
2019-12-08 06:35:15	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 06:35:15	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:58
2019-12-08 06:35:16	--	Channel #python: 1810 nicks (0 ops, 0 voices, 1810 normals)
2019-12-08 06:35:18	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 06:35:37	<--	laduyhaha99 (2a706cc6@42.112.108.198) has quit (Remote host closed the connection)
2019-12-08 06:36:04	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 252 seconds)
2019-12-08 06:36:04	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 252 seconds)
2019-12-08 06:36:27	<--	Jantz (~IceChat9@2407:7000:8d04:100:8cc4:6197:974f:3676) has quit (Read error: Connection reset by peer)
2019-12-08 06:36:53	--	irc: disconnected from server
2019-12-08 06:37:11	-->	duy (~duy@42.112.108.198) has joined #python
2019-12-08 06:37:11	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 06:37:11	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 06:37:11	--	Channel #python: 1806 nicks (0 ops, 0 voices, 1806 normals)
2019-12-08 06:37:30	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2019-12-08 06:37:34	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 06:38:09	-->	rkkk (41bf0bfc@cpe-65-191-11-252.nc.res.rr.com) has joined #python
2019-12-08 06:38:21	rkkk	http://dpaste.com/2SGP02T, how do I get my helper function to update the result in my numpaths function?
2019-12-08 06:38:36	rkkk	I return 0 in my numpaths function always
2019-12-08 06:39:56	energizer	rkkk: return the new value?
2019-12-08 06:40:06	rkkk	energizer where
2019-12-08 06:40:22	--	You are now known as laduyhaha
2019-12-08 06:42:24	<--	somazero (~somazero@wsip-24-248-178-34.ph.ph.cox.net) has quit (Quit: Leaving)
2019-12-08 06:43:06	<--	cecep (~weechat@x4e364a6c.dyn.telefonica.de) has quit (Quit: WeeChat 2.6)
2019-12-08 06:43:13	birkoff	can I somehow customize the 'cmake' command arguments the 'pyarrow' pip installation runs ?
2019-12-08 06:43:20	<--	dudek (~dudek@185.150.236.150) has quit (Quit: Leaving)
2019-12-08 06:43:35	--	irc: disconnected from server
2019-12-08 06:44:15	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 06:44:15	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 06:44:15	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 06:44:15	--	Channel #python: 1804 nicks (0 ops, 0 voices, 1804 normals)
2019-12-08 06:44:32	birkoff	can I instruct pip to not remove or only grab the source ?
2019-12-08 06:44:37	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 06:44:57	grym	birkoff: almost certainly easier to clone locally
2019-12-08 06:45:04	-->	fflori (~fflori@194.230.155.243) has joined #python
2019-12-08 06:45:30	rkkk	energizer im tryin to find all the paths with at most k turns and everytime I do find one i want to update the main result value
2019-12-08 06:45:41	--	You are now known as laduyhaha
2019-12-08 06:48:04	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 06:48:46	<--	treefrob (~treefrob@pD9E2DAAD.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-08 06:49:03	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 06:49:17	<--	ExoUNX (~ExoUNX@unaffiliated/exounx) has quit (Ping timeout: 240 seconds)
2019-12-08 06:49:43	birkoff	grym, as in how ?
2019-12-08 06:50:24	<--	Exit42 (~textual@157-131-100-58.fiber.dynamic.sonic.net) has quit (Ping timeout: 246 seconds)
2019-12-08 06:50:24	-->	renlol (lhoward@gateway/vpn/privateinternetaccess/renlo) has joined #python
2019-12-08 06:51:15	[Tritium]	birkoff: as in clone the repo, edit the files, then "pip install ."
2019-12-08 06:51:17	<--	Leonarbro (~Leonarbro@S01067824af93741c.cg.shawcable.net) has quit (Ping timeout: 240 seconds)
2019-12-08 06:51:52	-->	flighteng (~flighteng@c-66-235-25-210.sea.wa.customer.broadstripe.net) has joined #python
2019-12-08 06:52:28	<--	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 268 seconds)
2019-12-08 06:52:53	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 276 seconds)
2019-12-08 06:53:45	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2019-12-08 06:53:53	-->	Leonarbro (~Leonarbro@S01067824af93741c.cg.shawcable.net) has joined #python
2019-12-08 06:53:55	<--	CookieM (~tomek@afay19.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2019-12-08 06:54:34	--	irc: disconnected from server
2019-12-08 06:55:05	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 06:55:05	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 06:55:05	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:58
2019-12-08 06:55:05	--	Channel #python: 1802 nicks (0 ops, 0 voices, 1802 normals)
2019-12-08 06:55:07	--	You are now known as laduyhaha
2019-12-08 06:55:15	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 06:56:15	<--	i9zO5AP (~BQcdf9eiZ@41.248.163.183) has quit (Quit: WeeChat 2.5)
2019-12-08 06:57:12	<--	AhmedAmerican (c52b5fcb@gateway/web/cgi-irc/kiwiirc.com/ip.197.43.95.203) has quit (Remote host closed the connection)
2019-12-08 06:57:59	<--	snackoverflow (~audioburn@unaffiliated/theology) has quit (Remote host closed the connection)
2019-12-08 06:58:05	<--	lxer (~lx@ip5f5bd659.dynamic.kabel-deutschland.de) has quit (Ping timeout: 250 seconds)
2019-12-08 06:58:06	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 06:58:13	-->	haryv (400714dc@ip-64-7-20-220.sea.megapath.net) has joined #python
2019-12-08 06:58:17	<--	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has quit (Ping timeout: 240 seconds)
2019-12-08 06:58:26	-->	snackoverflow (~audioburn@unaffiliated/theology) has joined #python
2019-12-08 06:58:39	<--	s3nd1v0g1us (patr0clus@gateway/vpn/protonvpn/patr0clus) has quit (Quit: WeeChat 2.6)
2019-12-08 06:58:47	-->	melatonina (uid317528@gateway/web/irccloud.com/x-hytyifcndleyqtrd) has joined #python
2019-12-08 06:59:41	haryv	hi all. I am having some issues with Pycharm 19.2 community version. I need to change the path where python is located and the path field cannot be erased or it cannot search for the folder where python is located. I is running in windows 10. ITs a great IDE just cannot fix this issue.
2019-12-08 07:00:20	haryv	Just how active is this channel?
2019-12-08 07:00:23	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 07:00:30	-->	TanukiNoKintama (~TanukiNoK@c-68-44-98-8.hsd1.in.comcast.net) has joined #python
2019-12-08 07:00:58	[Tritium]	pretty active most of the time, but its supper hour for many of the members
2019-12-08 07:01:13	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-08 07:01:33	<--	iam730 (~iam730@c-24-5-242-254.hsd1.ca.comcast.net) has quit (Ping timeout: 250 seconds)
2019-12-08 07:02:14	flighteng	haryv:  ctrl+alt+s, type 'interpreter' int he search box, you can update the paths for your environment there.  Is that where you're running into the issue?
2019-12-08 07:02:17	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-08 07:02:20	[Tritium]	I'm active, but i cant really help you - i use vscode and vs2019...
2019-12-08 07:02:54	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-08 07:02:57	<--	JTa (~Thunderbi@unaffiliated/jta) has quit (Ping timeout: 268 seconds)
2019-12-08 07:03:09	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 07:03:17	-->	IRCNew (~Elrick@76-10-173-219.dsl.teksavvy.com) has joined #python
2019-12-08 07:03:43	<--	trens (~trens@cpe-184-54-204-115.swo.res.rr.com) has quit (Quit: WeeChat 1.9.1)
2019-12-08 07:04:05	<--	enoch85 (~enoch85@unaffiliated/enoch85) has quit (Quit: Tech And Me - ZNC server 1.6.3 - https://www.techandme.se)
2019-12-08 07:04:34	-->	iam730 (~iam730@c-24-5-242-254.hsd1.ca.comcast.net) has joined #python
2019-12-08 07:04:53	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2019-12-08 07:05:05	-->	enoch85 (~enoch85@unaffiliated/enoch85) has joined #python
2019-12-08 07:05:29	flighteng	haryv: ?
2019-12-08 07:05:40	-->	raulp (~textual@unaffiliated/raulp) has joined #python
2019-12-08 07:05:59	-->	iKarus987 (~ikarus807@85-220-22-204.dsl.dynamic.simnet.is) has joined #python
2019-12-08 07:06:12	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2019-12-08 07:06:16	iKarus987	hi i am new to python wondering, how do i clear up my python shell
2019-12-08 07:06:20	IRCNew	So I have a json file. I loaded it which a bit since the file is 800MB. It has a lot of extra information that I'm not using. I created a postgres db to store the information I want.
2019-12-08 07:06:37	[Tritium]	iKarus987: exit() and relaunch typically.
2019-12-08 07:06:41	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 265 seconds)
2019-12-08 07:06:52	IRCNew	I have just finished a loop to go through the JSON array of json objects which is what is in the file
2019-12-08 07:07:10	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Ping timeout: 265 seconds)
2019-12-08 07:07:11	IRCNew	I'm wondering how I can speed the process up
2019-12-08 07:07:12	-->	yelof (~yelof@2601:283:8003:a920:2123:115f:2ef1:a86a) has joined #python
2019-12-08 07:07:25	-->	daz (root@gateway/vpn/privateinternetaccess/daz) has joined #python
2019-12-08 07:07:41	<--	govbotdotnet (~govbotdot@2605:a601:adff:fa00:45c2:c6d0:fd76:7180) has quit (Read error: Connection reset by peer)
2019-12-08 07:07:53	<--	d42 (root@gateway/vpn/privateinternetaccess/daz) has quit (Ping timeout: 268 seconds)
2019-12-08 07:08:16	--	irc: disconnected from server
2019-12-08 07:09:02	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 07:09:02	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 07:09:02	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 07:09:02	--	Channel #python: 1801 nicks (0 ops, 0 voices, 1801 normals)
2019-12-08 07:09:10	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 07:09:16	--	You are now known as laduyhaha
2019-12-08 07:09:37	energizer	iKarus987: which operating system?
2019-12-08 07:10:02	iKarus987	hi guys i did this after the >>>> fred = "pizza is food" then i pressed enter now it doesnt let me enter another command  i dont get ">>>>" this line
2019-12-08 07:10:33	<--	zerotech1 (~zerotech@BSN-182-125-49.dynamic.siol.net) has quit (Ping timeout: 265 seconds)
2019-12-08 07:10:39	iKarus987	i am reading python for kids, that my material i am studying from
2019-12-08 07:10:58	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-08 07:11:01	<--	TanukiNoKintama (~TanukiNoK@c-68-44-98-8.hsd1.in.comcast.net) has left #python
2019-12-08 07:11:01	energizer	that is weird
2019-12-08 07:11:13	iKarus987	what is weird?
2019-12-08 07:11:14	energizer	how did you run python?
2019-12-08 07:11:18	desu	forgot the closing "?
2019-12-08 07:11:33	[Tritium]	desu: that would be a syntax error
2019-12-08 07:11:41	<--	jil (~user@2001:41d0:52:cff::f2a) has quit (Read error: Connection reset by peer)
2019-12-08 07:11:45	rkkk	how do I get a function to update a value outside
2019-12-08 07:11:47	energizer	iKarus987: which operating system are you on?
2019-12-08 07:12:03	desu	depending on the repl used
2019-12-08 07:12:08	iKarus987	i shortcut the "python IDLE (Python 3.8 32-bit)" to desktop
2019-12-08 07:12:10	energizer	rkkk: `foo = func()`
2019-12-08 07:12:12	iKarus987	i am running from that
2019-12-08 07:12:19	<--	fflori (~fflori@194.230.155.243) has quit (Remote host closed the connection)
2019-12-08 07:12:20	iKarus987	windows 8
2019-12-08 07:12:23	[Tritium]	iKarus987: never, ever use idle
2019-12-08 07:12:25	iKarus987	sorry windows 10
2019-12-08 07:12:41	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-08 07:12:51	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 07:12:54	energizer	iKarus987: hmm. IDLE isn't really used by developers, it's mostly a first-day-of-python thing
2019-12-08 07:13:08	iKarus987	hmm there is "python 3.8 32bit" but it gives me black screen
2019-12-08 07:13:18	iKarus987	i dont like black screen
2019-12-08 07:13:25	[Tritium]	the black screen is what you should use
2019-12-08 07:13:33	-->	jil (~user@2001:41d0:52:cff::f2a) has joined #python
2019-12-08 07:13:34	[Tritium]	thats what developers use
2019-12-08 07:13:37	iKarus987	cant i change the color?
2019-12-08 07:13:41	iKarus987	background
2019-12-08 07:13:43	<--	palasso (~palasso@unaffiliated/palasso) has quit (Read error: Connection reset by peer)
2019-12-08 07:13:53	[Tritium]	yeah, you can, but thats a windows setting, that has nothing to do with python
2019-12-08 07:13:53	energizer	probably there is a menu for that
2019-12-08 07:14:10	-->	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has joined #python
2019-12-08 07:14:13	iKarus987	ah i see
2019-12-08 07:14:21	[Tritium]	I use conemu and a semi-transparent background
2019-12-08 07:14:48	-->	tiwula (~lane@174-23-77-118.slkc.qwest.net) has joined #python
2019-12-08 07:16:17	iKarus987	k thx done
2019-12-08 07:16:44	-->	fstd_ (~fstd@unaffiliated/fisted) has joined #python
2019-12-08 07:16:46	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 07:16:56	<--	Samian (~s@65.127.236.102) has quit (Ping timeout: 276 seconds)
2019-12-08 07:17:09	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 250 seconds)
2019-12-08 07:17:22	iKarus987	ehh
2019-12-08 07:17:30	-->	Hanii (~Hanii@2a00:23c5:c587:a800:f82c:93e8:4685:f2a6) has joined #python
2019-12-08 07:17:31	<--	haryv (400714dc@ip-64-7-20-220.sea.megapath.net) has quit (Remote host closed the connection)
2019-12-08 07:17:36	iKarus987	now i dont get special color for thing like a strings
2019-12-08 07:18:34	[Tritium]	If you need syntax highlighting, experiment in a module with something like vscode or pycharm
2019-12-08 07:18:36	iKarus987	everything is black text now, no special color for builtin codes
2019-12-08 07:18:51	--	irc: disconnected from server
2019-12-08 07:20:47	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 07:20:47	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 07:20:47	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 07:20:47	--	Channel #python: 1798 nicks (0 ops, 0 voices, 1798 normals)
2019-12-08 07:20:48	desu	should install 64bit python too then
2019-12-08 07:20:56	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 07:21:03	iKarus987	i only got offered windows installer
2019-12-08 07:21:07	iKarus987	and it started downloading
2019-12-08 07:21:10	[Tritium]	the bitedness doesn't REALLY matter for a beginner
2019-12-08 07:21:26	--	You are now known as laduyhaha
2019-12-08 07:21:49	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 07:21:54	-->	Wulf4 (~Wulf@unaffiliated/wulf) has joined #python
2019-12-08 07:22:31	desu	iKarus987: the one named "windows x86-64 * installer" is 64bit
2019-12-08 07:22:36	<--	Ignacy (~Ignacy@188.113.68.31) has quit (Remote host closed the connection)
2019-12-08 07:23:17	<--	rkkk (41bf0bfc@cpe-65-191-11-252.nc.res.rr.com) has quit (Remote host closed the connection)
2019-12-08 07:24:16	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 07:25:06	-->	xrogaan (~xrogaan@unaffiliated/xrogaan) has joined #python
2019-12-08 07:25:23	<--	Wulf (~Wulf@unaffiliated/wulf) has quit (Ping timeout: 276 seconds)
2019-12-08 07:25:24	--	Wulf4 is now known as Wulf
2019-12-08 07:25:37	<--	gar (~textual@pdpc/supporter/professional/gar) has quit (Quit: gar)
2019-12-08 07:25:49	-->	killvenom (~killvenom@2a01:4b00:8631:8800:d928:5d44:e5e6:c9bd) has joined #python
2019-12-08 07:26:39	iKarus987	i see
2019-12-08 07:26:42	iKarus987	i feel so dumb
2019-12-08 07:26:51	iKarus987	i am network engineer for a data center company
2019-12-08 07:27:07	iKarus987	my boss told me, i should get my feet wet in this
2019-12-08 07:27:10	-->	snowmanbamm (~snowmanba@2600:1700:abf0:1990:296b:7246:ff0a:653a) has joined #python
2019-12-08 07:27:13	iKarus987	because i have to start writing scripts
2019-12-08 07:28:47	<--	Gnexally (~Gnexally@dockerhost.aes.pm) has quit (Read error: Connection reset by peer)
2019-12-08 07:28:55	-->	courrier (~yoan@2pl44-h01-176-136-159-243.dsl.sta.abo.bbox.fr) has joined #python
2019-12-08 07:28:57	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Ping timeout: 240 seconds)
2019-12-08 07:30:39	iKarus987	so with vscode, you will have to type everything?
2019-12-08 07:30:52	iKarus987	it doesn't give you new line like >>>> ?
2019-12-08 07:31:01	<--	akk (~akk@75-161-90-59.albq.qwest.net) has quit (Quit: +++)
2019-12-08 07:31:10	<--	snackoverflow (~audioburn@unaffiliated/theology) has quit (Read error: Connection reset by peer)
2019-12-08 07:31:14	<--	tsaka__ (~torstein@94.66.73.249) has quit (Ping timeout: 276 seconds)
2019-12-08 07:31:26	[Tritium]	there is a way to run a repl in vscode, but you should be making modules anyways
2019-12-08 07:31:49	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 265 seconds)
2019-12-08 07:32:34	<--	cURT (~Faux_Pseu@46.182.18.128) has quit (Ping timeout: 268 seconds)
2019-12-08 07:32:37	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-08 07:32:38	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-08 07:32:46	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 07:33:29	iKarus987	why people are saying python is easy to learn..? i mean the intellisense is very important for a student and that's exactly "IDLE (Python 3.8 32-bit)" offers, but you guys are saying it's not ment for software engineers
2019-12-08 07:34:11	nedbat	iKarus987: lots of IDEs can give you autocompletion.
2019-12-08 07:34:24	nedbat	iKarus987: vscode will do autocompletion
2019-12-08 07:34:36	iKarus987	vscode does that i know
2019-12-08 07:34:41	iKarus987	just like notepad++
2019-12-08 07:34:44	[Tritium]	iKarus987: use pretty much any ide, except idle.  Vs code will even do intelisense brand autocompletion
2019-12-08 07:34:53	nedbat	iKarus987: right, so you don't need IDLE
2019-12-08 07:35:05	iKarus987	i want this >>>>
2019-12-08 07:35:07	[Tritium]	idle is actively bad
2019-12-08 07:35:26	nedbat	iKarus987: vscode probably has a Python Console window like that.
2019-12-08 07:36:02	iKarus987	k thx will try find out
2019-12-08 07:37:08	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 265 seconds)
2019-12-08 07:37:24	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 07:37:37	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 265 seconds)
2019-12-08 07:37:43	-->	tsaka__ (~torstein@94.66.73.249) has joined #python
2019-12-08 07:38:18	-->	cURT (~Faux_Pseu@46.182.18.128) has joined #python
2019-12-08 07:38:28	-->	wymillerlinux (~wymillerl@97-84-4-94.dhcp.aldl.mi.charter.com) has joined #python
2019-12-08 07:39:27	-->	nabil_ (~nabil@105.99.49.5) has joined #python
2019-12-08 07:39:50	<--	anotheryou (uid257186@gateway/web/irccloud.com/x-uhkpjqcgkatujisa) has quit (Quit: Connection closed for inactivity)
2019-12-08 07:42:10	<--	dijitol (~Thunderbi@p200300D477217400DC239EC6C01C8D9F.dip0.t-ipconnect.de) has quit (Quit: dijitol)
2019-12-08 07:42:25	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-08 07:43:02	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 07:45:29	<--	offbyone (~offbyone@c-67-160-47-66.hsd1.wa.comcast.net) has quit (Quit: ZNC 1.7.4+deb0+bionic0 - https://znc.in)
2019-12-08 07:50:22	<--	jay-m_ (~jay-m@129.0.205.241) has quit (Read error: Connection reset by peer)
2019-12-08 07:52:48	<--	tiwula (~lane@174-23-77-118.slkc.qwest.net) has quit (Quit: Leaving)
2019-12-08 07:53:33	<--	snowmanbamm (~snowmanba@2600:1700:abf0:1990:296b:7246:ff0a:653a) has quit (Quit: snowmanbamm)
2019-12-08 07:53:57	-->	gar (~textual@pdpc/supporter/professional/gar) has joined #python
2019-12-08 07:54:57	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 240 seconds)
2019-12-08 07:55:23	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-08 07:55:51	-->	Beam_Inn (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has joined #python
2019-12-08 07:55:59	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 265 seconds)
2019-12-08 07:56:39	-->	c0ns (~c0ns@dslb-084-059-178-135.084.059.pools.vodafone-ip.de) has joined #python
2019-12-08 07:58:07	nedbat	on Windows, does the "py" launcher have a -m switch?  "py -m modulename" ?
2019-12-08 07:58:21	[Tritium]	nedbat: yup.  use it all the time
2019-12-08 07:58:28	[Tritium]	well... use it all the time to run venv
2019-12-08 07:58:49	nedbat	[Tritium]: thanks
2019-12-08 07:59:13	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 07:59:19	[Tritium]	py -m venv, py -3.7 -m venv ...etc.  after the python version specifier, all arguments are blindly passed to python
2019-12-08 08:00:20	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2019-12-08 08:00:46	-->	blackleitus (~blackleit@200.92.30.11) has joined #python
2019-12-08 08:01:07	<--	de-facto (~de-facto@gateway/tor-sasl/de-facto) has quit (Quit: See you around.)
2019-12-08 08:01:09	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 08:02:05	blackleitus	I Had to change of parser, but how can I say if I tell max_results = 10 , then download 10 beside of content length https://dpaste.org/s9Ks ?
2019-12-08 08:03:17	-->	dcypher (~textual@ool-18bf1199.dyn.optonline.net) has joined #python
2019-12-08 08:03:22	-->	de-facto (~de-facto@gateway/tor-sasl/de-facto) has joined #python
2019-12-08 08:03:35	-->	howyoubeen (~factotum@2600:6c4a:727f:e6b8:2187:fd1b:f7c2:3e55) has joined #python
2019-12-08 08:03:48	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 08:03:57	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2019-12-08 08:04:23	<--	tm (~sinnlos@unaffiliated/tm) has quit (Ping timeout: 276 seconds)
2019-12-08 08:04:37	ammar2	blackleitus: btw you can use requests.get(url, params={'num': ..., 'q': ...})
2019-12-08 08:04:52	-->	czer0 (~toaster@170.199.140.20) has joined #python
2019-12-08 08:05:38	<--	wildlander (~wildlande@unaffiliated/wildlander) has quit (Quit: Konversation terminated!)
2019-12-08 08:06:13	-->	bpalmer (~user@unaffiliated/bpalmer) has joined #python
2019-12-08 08:06:17	blackleitus	sure, but it is dynamic
2019-12-08 08:06:21	<--	^Zer0^ (~toaster@170.199.140.20) has quit (Ping timeout: 246 seconds)
2019-12-08 08:07:01	<--	AlexPortable (uid7568@gateway/web/irccloud.com/x-pkjhygrbgcojarzi) has quit (Quit: Connection closed for inactivity)
2019-12-08 08:07:13	blackleitus	'q'means?
2019-12-08 08:07:46	-->	tm (~sinnlos@unaffiliated/tm) has joined #python
2019-12-08 08:08:01	ammar2	it just corresponds to the url params you want. e.g passing params={'hello': 'world', 'param2': 'value'} will turn into http://...?hello=world&param2=value
2019-12-08 08:08:30	-->	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has joined #python
2019-12-08 08:08:37	<--	pacbard (~pacbard@68.237.202.35.bc.googleusercontent.com) has quit (Read error: Connection reset by peer)
2019-12-08 08:08:43	<--	framend (~framend@unaffiliated/framend) has quit (Ping timeout: 250 seconds)
2019-12-08 08:08:49	ammar2	blackleitus: so you want it to download 10 even if it skips over some because the content length is too big?
2019-12-08 08:08:56	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 268 seconds)
2019-12-08 08:08:59	blackleitus	yeah
2019-12-08 08:09:31	blackleitus	it skips 4 based on size , but how can I say my counter downloads 10 from max size?
2019-12-08 08:10:09	-->	framend (~framend@unaffiliated/framend) has joined #python
2019-12-08 08:10:30	-->	pacbard (~pacbard@68.237.202.35.bc.googleusercontent.com) has joined #python
2019-12-08 08:12:04	-->	sand_dull (~theuser@ill.ductinmedi.com) has joined #python
2019-12-08 08:12:33	ammar2	blackleitus: one solution would be to pass num=20 or something and then stop once you've downloaded 10
2019-12-08 08:13:23	<--	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has quit (Ping timeout: 265 seconds)
2019-12-08 08:13:35	<--	s2013 (~textual@cpe-24-243-145-239.rgv.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2019-12-08 08:14:26	-->	wordsToLiveBy (~wordsToLi@unaffiliated/wordstoliveby) has joined #python
2019-12-08 08:14:39	<--	lemoldu_ (~lemoldu@arennes-654-1-210-193.w90-32.abo.wanadoo.fr) has quit (Remote host closed the connection)
2019-12-08 08:16:41	-->	xall (~xall@mx-ll-14.207.145-52.dynamic.3bb.co.th) has joined #python
2019-12-08 08:17:38	-->	Kaedenn (~kaedenn@unaffiliated/kaedenn) has joined #python
2019-12-08 08:18:02	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 276 seconds)
2019-12-08 08:18:23	<--	killvenom (~killvenom@2a01:4b00:8631:8800:d928:5d44:e5e6:c9bd) has quit (Quit: This computer has gone to sleep)
2019-12-08 08:18:27	blackleitus	in this case how in code?
2019-12-08 08:18:43	<--	Iolo (~iolo@dsl-tkubng22-50de93-232.dhcp.inet.fi) has quit (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
2019-12-08 08:19:00	ammar2	downloaded += 1; if downloaded >= 10: break
2019-12-08 08:19:28	<--	Forsaken87 (~quassel@2a02:908:1860:bec0:c179:63c7:fe6c:8293) has quit (Ping timeout: 252 seconds)
2019-12-08 08:20:20	nedbat	blackleitus: btw, lines 62-63 are going to hide information from you if things go wrong.
2019-12-08 08:20:23	-->	karmabeach24 (~ircap@pc-49-8-120-200.cm.vtr.net) has joined #python
2019-12-08 08:20:30	<--	contingo (~textual@213.205.240.171) has quit (Quit: My supercomputing cluster has gone to sleep. ZZZzzz…)
2019-12-08 08:20:39	<--	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has quit (Quit: Leaving)
2019-12-08 08:20:42	-->	Iolo (~iolo@dsl-tkubng22-50de93-232.dhcp.inet.fi) has joined #python
2019-12-08 08:21:00	<--	spiette (~spiette@216.98.60.148) has quit (Quit: ZNC 1.7.5 - https://znc.in)
2019-12-08 08:21:04	<--	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has quit (Remote host closed the connection)
2019-12-08 08:21:15	<--	dctrud_ (~dctrud@2001:19f0:6401:16c7:5400:2ff:fe71:41c3) has quit (Quit: ZNC 1.7.4 - https://znc.in)
2019-12-08 08:21:25	-->	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has joined #python
2019-12-08 08:22:06	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 08:22:26	-->	snackoverflow (~audioburn@unaffiliated/theology) has joined #python
2019-12-08 08:22:29	-->	jaziz1 (~jaziz@unaffiliated/jaziz) has joined #python
2019-12-08 08:22:32	-->	LabMonkey (~LabMonkey@2602:306:cf62:e270:e451:10df:83fb:f9ee) has joined #python
2019-12-08 08:22:34	<--	TDT (~user@108.160.234.134) has quit (Ping timeout: 265 seconds)
2019-12-08 08:23:02	<--	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has quit (Remote host closed the connection)
2019-12-08 08:23:23	-->	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2019-12-08 08:23:27	<--	Jerrynicki (~niklas@p200300F573DA4800BB293BCAD95EF881.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2019-12-08 08:23:55	<--	milkt_ (~debian@gateway/tor-sasl/milkt) has quit (Quit: leaving)
2019-12-08 08:25:09	-->	milkt (~debian@gateway/tor-sasl/milkt) has joined #python
2019-12-08 08:25:37	<--	jaziz (~jaziz@unaffiliated/jaziz) has quit (Ping timeout: 250 seconds)
2019-12-08 08:25:38	<--	Mechanismus (~LabMonkey@2602:306:cf62:e270:dc18:32e:15fe:cd5e) has quit (Ping timeout: 250 seconds)
2019-12-08 08:25:42	<--	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has quit (Remote host closed the connection)
2019-12-08 08:25:59	-->	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has joined #python
2019-12-08 08:26:04	<--	theWhisper_ (~quassel@unaffiliated/thewhisper/x-7482734) has quit (Ping timeout: 250 seconds)
2019-12-08 08:26:07	<--	[itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) has quit (Remote host closed the connection)
2019-12-08 08:26:29	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 250 seconds)
2019-12-08 08:28:53	-->	cow[moo] (~asanger@c-69-244-155-110.hsd1.mi.comcast.net) has joined #python
2019-12-08 08:29:17	<--	x35b35 (~x35b35@71.19.250.216) has quit (Quit: leaving)
2019-12-08 08:29:34	-->	Helenah (~s98259@unaffiliated/iveeee) has joined #python
2019-12-08 08:29:42	<--	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has quit (Remote host closed the connection)
2019-12-08 08:30:08	<--	muflon_ (~muflon@89-76-0-98.dynamic.chello.pl) has quit (Quit: WeeChat 2.6)
2019-12-08 08:30:51	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 08:31:26	-->	spacewook (~spacewook@ip24-253-130-175.hr.hr.cox.net) has joined #python
2019-12-08 08:32:38	-->	Mat63 (ba8de35f@186.141.227.95) has joined #python
2019-12-08 08:32:59	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-08 08:33:08	-->	offbyone (~offbyone@c-67-160-47-66.hsd1.wa.comcast.net) has joined #python
2019-12-08 08:33:28	-->	DanyC (~DanyC@cpc72331-sotn15-2-0-cust18.15-1.cable.virginm.net) has joined #python
2019-12-08 08:33:33	<--	caterfxo (caterfxo@gateway/vpn/privateinternetaccess/caterfxo) has quit (Remote host closed the connection)
2019-12-08 08:34:21	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 08:34:29	Mat63	hi ThiefMaster
2019-12-08 08:34:36	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-08 08:34:37	<--	sand_dull (~theuser@ill.ductinmedi.com) has quit (Ping timeout: 240 seconds)
2019-12-08 08:35:45	nedbat	Mat63: what's up?
2019-12-08 08:36:58	Mat63	i want to install
2019-12-08 08:37:19	Mat63	pycharm
2019-12-08 08:37:23	<--	MikeDebian (~none@bl12-167-178.dsl.telepac.pt) has quit (Ping timeout: 245 seconds)
2019-12-08 08:37:58	-->	audioburn (~audioburn@unaffiliated/theology) has joined #python
2019-12-08 08:38:02	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 265 seconds)
2019-12-08 08:38:27	Mat63	I already have the program, but I wanted to know where I keep it in what location so that it is not messy
2019-12-08 08:39:25	-->	oragadam (7aae3633@122.174.54.51) has joined #python
2019-12-08 08:39:29	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 265 seconds)
2019-12-08 08:39:57	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-08 08:40:18	<--	snackoverflow (~audioburn@unaffiliated/theology) has quit (Ping timeout: 245 seconds)
2019-12-08 08:41:32	Mat63	it sounds a bit childish mine but I want to know
2019-12-08 08:41:42	--	milkt is now known as milkt_
2019-12-08 08:42:04	<--	milkt_ (~debian@gateway/tor-sasl/milkt) has quit (Quit: leaving)
2019-12-08 08:42:27	-->	milkt (~debian@gateway/tor-sasl/milkt) has joined #python
2019-12-08 08:42:32	-->	milkt_ (~debian@gateway/tor-sasl/milkt) has joined #python
2019-12-08 08:42:45	<--	milkt (~debian@gateway/tor-sasl/milkt) has quit (Disconnected by services)
2019-12-08 08:42:59	-->	pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) has joined #python
2019-12-08 08:43:03	--	milkt_ is now known as milkt
2019-12-08 08:43:06	<--	milkt (~debian@gateway/tor-sasl/milkt) has quit (Client Quit)
2019-12-08 08:43:27	-->	milkt (~debian@gateway/tor-sasl/milkt) has joined #python
2019-12-08 08:44:02	-->	teksimian (~teksimian@172-97-139-243.cpe.distributel.net) has joined #python
2019-12-08 08:44:25	teksimian	hoping someone can help me with a 2 dimensional list
2019-12-08 08:45:26	teksimian	i'm using grid = [["." for x in range(20)] for y in range(20)] to create a 2 dimensional grid... but anytime i try to assign something to it via grid[x][y] the x and y dimension seems mixed up
2019-12-08 08:46:13	-->	silverjam (~ubuntu@c-24-5-219-83.hsd1.ca.comcast.net) has joined #python
2019-12-08 08:46:21	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 08:46:44	offby1	what does "mixed up" mean?
2019-12-08 08:46:45	[Tritium]	teksimian: you are making an outer list of y's and inner lists of x's
2019-12-08 08:47:03	[Tritium]	teksimian: so you would do grid[y][x]
2019-12-08 08:47:07	offby1	[Tritium]: does the variable in the list comprehension matter?
2019-12-08 08:47:17	<--	audioburn (~audioburn@unaffiliated/theology) has quit (Ping timeout: 250 seconds)
2019-12-08 08:47:19	energizer	no
2019-12-08 08:47:26	offby1	didn't think so
2019-12-08 08:47:26	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-08 08:47:26	[Tritium]	offby1: it is showing intent
2019-12-08 08:47:38	offby1	🤔
2019-12-08 08:47:43	offby1	ok I'll buy that
2019-12-08 08:47:50	teksimian	[Tritium]: my intent was grid[x][y]
2019-12-08 08:48:24	teksimian	how would i reverse swap them when creating the array
2019-12-08 08:48:50	<--	prepend (~textual@99-1-32-197.lightspeed.tukrga.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-08 08:48:53	-->	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:a817:fa96:48cd:fc14) has joined #python
2019-12-08 08:49:00	[Tritium]	teksimian: the outer listcomp is the grid object, the inner list comp are the items of the grid object.  so make the small listcomp your "y" listcomp, and the bigger one the "x"
2019-12-08 08:49:18	[Tritium]	teksimian: or use numpy which has 2d arrays
2019-12-08 08:49:47	teksimian	thank you for your help, much appreciated.
2019-12-08 08:50:52	grym	teksimian: this is very, very much what numpy is for
2019-12-08 08:50:52	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-08 08:50:58	grym	teksimian: so if this isn't homework, use that
2019-12-08 08:51:12	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 08:51:21	teksimian	checking it out, thanks!
2019-12-08 08:51:24	Mat63	It is a square matrix, where each position can be a variable or a constant?
2019-12-08 08:51:32	teksimian	playing with this advent of code thing to learn python.
2019-12-08 08:51:53	[Tritium]	Ah, games
2019-12-08 08:52:04	<--	nitram_ (5457a39d@ip5457a39d.direct-adsl.nl) has quit (Remote host closed the connection)
2019-12-08 08:52:04	<--	mr_paz (~mr_paz@24.14.251.223) has quit (Read error: Connection reset by peer)
2019-12-08 08:52:13	grym	teksimian: ah, perfect!
2019-12-08 08:52:16	grym	yeah, numpy is <3
2019-12-08 08:52:24	<--	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:a817:fa96:48cd:fc14) has quit (Client Quit)
2019-12-08 08:52:46	stealth_	Mat63, there is no constant in python
2019-12-08 08:53:01	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 08:53:08	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Ping timeout: 276 seconds)
2019-12-08 08:53:09	Mat63	?
2019-12-08 08:53:15	offby1	!
2019-12-08 08:53:23	-->	Lord_of_Life_ (~Lord@unaffiliated/lord-of-life/x-0885362) has joined #python
2019-12-08 08:53:35	offby1	Mat63: well, python doesn't really have constants; but sure.
2019-12-08 08:53:36	Mat63	no?
2019-12-08 08:53:38	-->	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:a817:fa96:48cd:fc14) has joined #python
2019-12-08 08:53:50	ammar2	depends on what you mean by constant
2019-12-08 08:53:52	stealth_	Mat63, you just write is like `MY_CON = "something"`
2019-12-08 08:54:05	ammar2	a name you can't reassign? then no
2019-12-08 08:54:08	<--	blackleitus (~blackleit@200.92.30.11) has quit (Quit: Leaving)
2019-12-08 08:54:20	-->	clarjon1 (~clarjon1@unaffiliated/clarjon1) has joined #python
2019-12-08 08:54:44	--	Lord_of_Life_ is now known as Lord_of_Life
2019-12-08 08:54:46	Mat63	an invariable independent fixed value
2019-12-08 08:54:49	energizer	5 is a constant
2019-12-08 08:54:56	stealth_	Mat63, https://stackoverflow.com/questions/2682745/how-do-i-create-a-constant-in-python
2019-12-08 08:55:03	Mat63	like pi
2019-12-08 08:55:11	[Tritium]	energizer: thats a literal for an immutable object.
2019-12-08 08:55:11	bpalmer	a name you can't reassign? True.
2019-12-08 08:55:15	bpalmer	(insert quibble about what a name is)
2019-12-08 08:55:57	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 250 seconds)
2019-12-08 08:56:42	grym	bpalmer: something disjoint to the sweetness of flowers
2019-12-08 08:56:49	-->	NeUx (~neux@gateway/tor-sasl/neux) has joined #python
2019-12-08 08:56:54	energizer	https://docs.python.org/3/library/typing.html#typing.Final
2019-12-08 08:57:17	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-08 08:57:37	<--	dasher00 (~dasher00@2.221.109.249) has quit (Ping timeout: 240 seconds)
2019-12-08 08:57:48	silverjam	Anyone using PyScaffold?  Any idea how you'd add a dependency that uses git as source?
2019-12-08 08:58:05	ammar2	energizer: your python static typing-fu is impressive
2019-12-08 08:58:14	<--	Ariakenom (~Ariakenom@h-158-174-186-131.NA.cust.bahnhof.se) has quit (Quit: Leaving)
2019-12-08 08:58:23	energizer	ammar2: :)
2019-12-08 08:59:15	stealth_	its for mypy
2019-12-08 08:59:26	<--	ksft (~ksft@wikipedia/KSFT) has quit (Ping timeout: 252 seconds)
2019-12-08 08:59:31	<--	holgersson (~quassel@unaffiliated/holgersson) has quit (Quit: “Format C:........[Done]“)
2019-12-08 08:59:50	<--	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:a817:fa96:48cd:fc14) has quit (Quit: snowmanbamm)
2019-12-08 08:59:54	offby1	silverjam: never heard of it, but perhaps PyScaffold uses the same syntax that pip does -- and if I recall correctly, pip indeed has a way to specify git repos
2019-12-08 08:59:58	Mat63	Sorry, I'm new to Python and I only knew some java
2019-12-08 09:00:14	grym	Mat63: lots of surprises await you
2019-12-08 09:00:16	<--	pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) has quit (Ping timeout: 265 seconds)
2019-12-08 09:00:17	<--	tsaka__ (~torstein@94.66.73.249) has quit (Ping timeout: 240 seconds)
2019-12-08 09:00:32	grym	Mat63: like first class functions and modules not classes as namespaces
2019-12-08 09:00:47	-->	holgersson (~quassel@unaffiliated/holgersson) has joined #python
2019-12-08 09:00:51	-->	dasher00 (~dasher00@2.221.109.249) has joined #python
2019-12-08 09:01:57	silverjam	offby1: pyscaffold recommends using setup.cfg, so the syntax is a little different
2019-12-08 09:03:29	ammar2	java8 has first class functions
2019-12-08 09:03:55	grym	ammar2: you see c#9's attrs?
2019-12-08 09:03:56	grym	:D
2019-12-08 09:03:57	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 09:04:03	<--	n3wborn (n3wborn@gateway/vpn/privateinternetaccess/n3wborn) has quit (Ping timeout: 245 seconds)
2019-12-08 09:04:19	-->	MICROburst1 (~Thunderbi@x590e7f88.dyn.telefonica.de) has joined #python
2019-12-08 09:04:32	-->	edlinde (~edlinde@183.83.146.106) has joined #python
2019-12-08 09:04:33	ammar2	no, they do something interesting?
2019-12-08 09:04:52	grym	ammar2: https://www.c-sharpcorner.com/article/deev-dive-into-c-sharp-9/  records
2019-12-08 09:04:57	<--	br0lly (~doctor@ip-111-164.ip4.balmont.pl) has quit (Ping timeout: 240 seconds)
2019-12-08 09:05:37	<--	mluser-home (~mluser-ho@cpe-107-11-253-108.columbus.res.rr.com) has quit (Quit: Yikes!)
2019-12-08 09:05:40	grym	`with` instead of `attr.evolve`
2019-12-08 09:05:49	grym	but it's very much in the same kind of headspace
2019-12-08 09:05:56	grym	of which i wholeheartedly approve
2019-12-08 09:06:04	<--	MICROburst (~Thunderbi@x590e21dd.dyn.telefonica.de) has quit (Ping timeout: 265 seconds)
2019-12-08 09:06:04	--	MICROburst1 is now known as MICROburst
2019-12-08 09:06:12	grym	(for the $0.05 that that's worth, heh)
2019-12-08 09:06:52	-->	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:a817:fa96:48cd:fc14) has joined #python
2019-12-08 09:07:18	-->	haryv (400714dc@ip-64-7-20-220.sea.megapath.net) has joined #python
2019-12-08 09:07:39	<--	sameerynho (~lxsameer@unaffiliated/lxsameer) has quit (Ping timeout: 250 seconds)
2019-12-08 09:08:03	haryv	Who here know how arguments are entered from file names and are processed? Trying to understand some sample code and execute some external files?
2019-12-08 09:08:35	grym	haryv: post the code that's troubling you to bpaste.net/+python3
2019-12-08 20:36:22	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 20:36:22	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 20:36:22	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 20:36:23	--	Channel #python: 1794 nicks (0 ops, 0 voices, 1794 normals)
2019-12-08 20:36:28	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 20:36:31	[Tritium]	and my answer is "use a model so it doesn't matter"
2019-12-08 20:37:28	locsmif	[Tritium]: I don't care about the Qt part as much as I care about the actual 2D array I'm working on
2019-12-08 20:37:40	[Tritium]	If you use a model, philisophical questions go away, and you can just build the code to return what you need to consume
2019-12-08 20:37:55	-->	greatgatsby (~greatgats@xplr-104-249-240-116.xplornet.com) has joined #python
2019-12-08 20:37:56	<--	dethos (~dethos@83.223.169.117) has quit (Ping timeout: 252 seconds)
2019-12-08 20:38:13	locsmif	Okay, will I use '' or None in the model?
2019-12-08 20:38:15	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-08 20:38:37	[Tritium]	locsmif: doesn't matter.
2019-12-08 20:39:01	<--	nicolasnicolas (~nicolasni@167.99.80.52) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-08 20:39:02	locsmif	Why not? The entire code changes
2019-12-08 20:39:23	locsmif	The if checks, the behaviour of what would be displayed, etc. etc.
2019-12-08 20:40:01	locsmif	From is None to == '' .. I don't want "None" displayed in table cells. So what do you mean it doesn't matter?
2019-12-08 20:40:45	locsmif	A string conversion of None is 'None' as well, so
2019-12-08 20:40:50	[Tritium]	the entire point of using the model is you can disconnect what the display portion needs, datastructure wise, to what the rest of your code cares about.  Don't bother caring about the internals of the model, just return a datastructure the rest of your code can use.  It doesn't matter what your internal representation is.
2019-12-08 20:40:51	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-08 20:40:57	<--	Anthaas_ (~Anthaas@unaffiliated/anthaas) has quit (Read error: Connection reset by peer)
2019-12-08 20:41:41	locsmif	[Tritium]: I'm working on a 2D array to solve a puzzle so whether I'm iterating over None or '' matters, I keep trying to tell you I don't care about the widget
2019-12-08 20:41:46	locsmif	Well not as much, at least
2019-12-08 20:41:57	-->	Anthaas (~Anthaas@unaffiliated/anthaas) has joined #python
2019-12-08 20:42:11	-->	PantelicGR (~PantelicG@unaffiliated/pantelicgr) has joined #python
2019-12-08 20:42:27	locsmif	But never mind, I supppose the answer is: there is no difference between None and '' and it doesn't matter
2019-12-08 20:42:28	[Tritium]	use the type the rest of your code cares about, why is this a hard decision?
2019-12-08 20:42:39	-->	BeerLover (~BeerBuddy@103.72.10.227) has joined #python
2019-12-08 20:43:12	<--	llua (~llua@zsh/developer/llua) has quit (Quit: <Rudolph> shell code is what greycat reads to kids when he tucks them in)
2019-12-08 20:44:10	locsmif	It's hard decision because the code isn't a living, breathing thing that makes its own decisions somehow - I make the decision, right now, and the code will reflect that decision
2019-12-08 20:44:18	-->	rwb (~Thunderbi@65.183.138.202) has joined #python
2019-12-08 20:44:28	<--	lankanmon (~LKNnet@CPEb4fbe4e331bd-CM64777d632380.cpe.net.cable.rogers.com) has quit (Ping timeout: 245 seconds)
2019-12-08 20:44:47	[Tritium]	whoa...whoawhoawhoa.... you spent 2 weeks massaging the gui...before you even had proof of concept on the logic code?
2019-12-08 20:44:54	locsmif	Then, subsequently, all the other code that iterates in all directions over the 2D array will be forced to reckon with that decision
2019-12-08 20:45:19	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2019-12-08 20:45:27	-->	llua (~llua@zsh/developer/llua) has joined #python
2019-12-08 20:45:32	locsmif	[Tritium]: I needed an interface to input Sudoku puzzle examples, I can't just keep typing 9x9 arrays into an IDE can I? Well, I could, but it would be quite idiotic.
2019-12-08 20:46:00	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 252 seconds)
2019-12-08 20:46:13	-->	lankanmon (~LKNnet@CPEb4fbe4e331bd-CM64777d632380.cpe.net.cable.rogers.com) has joined #python
2019-12-08 20:46:26	locsmif	And I didn't solve entire the problem on pen and paper before going to code, no.
2019-12-08 20:46:49	[Tritium]	locsmif: ...yes you can, until you know what the program actually does and have a rough idea of what the data's shape should be... you don't have to polish that code before you start the gui, but you need AN idea of what the code will look like so you dont have choices like this to make after the gui is already written
2019-12-08 20:46:50	locsmif	Anyways, forget my question, I've lost more time on this than it's been productive
2019-12-08 20:47:31	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 20:47:51	<--	lxbarbosa (~user@2804:1b2:81:c7f6:ae43:1fee:5f96:4bf6) has left #python ("ERC (IRC client for Emacs 27.0.50)")
2019-12-08 20:47:52	emerent	sudokus are often serialized as just an 81 character line
2019-12-08 20:47:55	-->	evil_gordita (robert@ip24-254-23-39.rn.hr.cox.net) has joined #python
2019-12-08 20:48:46	<--	jdloft (~jdloft@wikimedia/Negative24) has quit (Read error: Connection reset by peer)
2019-12-08 20:49:18	[Tritium]	you can get it down to 41 bytes pretty easily
2019-12-08 20:49:30	-->	jdloft (~jdloft@wikimedia/Negative24) has joined #python
2019-12-08 20:49:39	<--	moonshine_ (~moonshine@185.203.122.29) has quit (Quit: Leaving)
2019-12-08 20:50:04	emerent	sure you can compress it more, but there are many datasets in line format which you could test your solver against
2019-12-08 20:50:04	<--	BeerLover (~BeerBuddy@103.72.10.227) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-08 20:50:05	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-08 20:51:12	emerent	why 41 bytes btw?
2019-12-08 20:51:55	[Tritium]	emerent: you only need 4 bits per number, which would be 40.5 bytes for 81 numbers... and since you cant really have half a byte...
2019-12-08 20:52:08	-->	Lord_of_Life_ (~Lord@unaffiliated/lord-of-life/x-0885362) has joined #python
2019-12-08 20:52:14	emerent	you can represent all grids including invalid ones in 34 bytes
2019-12-08 20:52:15	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2019-12-08 20:52:31	[Tritium]	oh nice
2019-12-08 20:52:50	-->	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has joined #python
2019-12-08 20:53:13	<--	triad (~triad@unaffiliated/triad) has quit (Quit: Leaving)
2019-12-08 20:53:37	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Ping timeout: 240 seconds)
2019-12-08 20:54:12	-->	X20Hunter (~X20Hunter@149.129.104.12) has joined #python
2019-12-08 20:54:51	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 268 seconds)
2019-12-08 20:55:00	--	Lord_of_Life_ is now known as Lord_of_Life
2019-12-08 20:55:25	<--	slivera (slivera@gateway/vpn/privateinternetaccess/slivera) has quit (Remote host closed the connection)
2019-12-08 20:56:10	-->	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has joined #python
2019-12-08 20:56:21	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-08 20:56:25	<--	sec^nd (~second@gateway/tor-sasl/sec0nd) has quit (Remote host closed the connection)
2019-12-08 20:56:41	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 20:58:42	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 20:59:11	-->	sec^nd (~second@gateway/tor-sasl/sec0nd) has joined #python
2019-12-08 20:59:37	<--	cisco (~cisco@a109-49-68-156.cpe.netcabo.pt) has quit (Ping timeout: 250 seconds)
2019-12-08 21:00:07	CoolerX	OSError: Unable to open file (file signature not found)
2019-12-08 21:00:30	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 250 seconds)
2019-12-08 21:00:41	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2019-12-08 21:01:00	<--	llorllale (~llorllale@CPEac202e24ff83-CMac202e24ff80.cpe.net.fido.ca) has quit (Quit: WeeChat 1.9.1)
2019-12-08 21:01:12	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 21:01:17	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2019-12-08 21:01:29	CoolerX	nvm
2019-12-08 21:01:34	CoolerX	filename was wrong
2019-12-08 21:01:51	nedbat	CoolerX: when you do have an error you need help with, linking to a full traceback will always make it easier to help
2019-12-08 21:02:57	-->	llorllale (~llorllale@CPEac202e24ff83-CMac202e24ff80.cpe.net.fido.ca) has joined #python
2019-12-08 21:03:06	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 250 seconds)
2019-12-08 21:03:22	-->	lucasb (uid333435@gateway/web/irccloud.com/x-nxzbwrwywlkqjxfk) has joined #python
2019-12-08 21:03:28	CoolerX	ok
2019-12-08 21:04:07	-->	Exit42 (~textual@157-131-100-58.fiber.dynamic.sonic.net) has joined #python
2019-12-08 21:05:06	-->	Mat63 (ba8de523@186.141.229.35) has joined #python
2019-12-08 21:06:07	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 250 seconds)
2019-12-08 21:07:03	-->	indeedwatson (~yama@181.164.182.59) has joined #python
2019-12-08 21:07:30	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 21:07:47	<--	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 268 seconds)
2019-12-08 21:09:07	<--	Exit42 (~textual@157-131-100-58.fiber.dynamic.sonic.net) has quit (Quit: ZzZz)
2019-12-08 21:09:08	-->	mat001 (~mat001@c-71-202-208-146.hsd1.ca.comcast.net) has joined #python
2019-12-08 21:09:22	-->	drymer_ (~drymer@unaffiliated/drymer) has joined #python
2019-12-08 21:09:37	<--	drymer (~drymer@unaffiliated/drymer) has quit (Ping timeout: 265 seconds)
2019-12-08 21:09:58	-->	lbalhar (~lbalhar@93.185.13.26) has joined #python
2019-12-08 21:10:51	-->	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has joined #python
2019-12-08 21:10:51	<--	jay-m__ (~jay-m@129.0.205.65) has quit (Read error: Connection reset by peer)
2019-12-08 21:11:17	-->	jay-m_ (~jay-m@129.0.205.29) has joined #python
2019-12-08 21:11:39	<--	CtrlC (~CtrlC@unaffiliated/ctrlc) has quit (Quit: WeeChat 2.6)
2019-12-08 21:11:45	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 250 seconds)
2019-12-08 21:12:15	-->	themsay (~themsay@149.254.235.25) has joined #python
2019-12-08 21:12:57	<--	nathias (~nathias@unaffiliated/nathias) has quit (Ping timeout: 240 seconds)
2019-12-08 21:13:06	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-08 21:13:48	-->	zuppa (~zuppa@gateway/tor-sasl/zuppa) has joined #python
2019-12-08 21:15:19	<--	Mat63 (ba8de523@186.141.229.35) has quit (Ping timeout: 260 seconds)
2019-12-08 21:15:26	-->	Diemuzi (~diemuzi@unaffiliated/diemuzi) has joined #python
2019-12-08 21:15:49	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 268 seconds)
2019-12-08 21:15:58	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 21:16:23	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 265 seconds)
2019-12-08 21:17:49	<--	mnemonicj (~mnemonicj@114-32-59-180.HINET-IP.hinet.net) has quit (Ping timeout: 250 seconds)
2019-12-08 21:18:22	<--	Forsaken87 (~quassel@2a02:908:1860:bec0:c179:63c7:fe6c:8293) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2019-12-08 21:18:45	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Remote host closed the connection)
2019-12-08 21:19:13	-->	mnemonicj (~mnemonicj@114-32-59-180.HINET-IP.hinet.net) has joined #python
2019-12-08 21:19:33	<--	lolidunno (~lolidunno@FL1-49-129-77-113.tky.mesh.ad.jp) has quit (Read error: Connection reset by peer)
2019-12-08 21:20:10	-->	Forsaken87 (~quassel@2a02:908:1860:bec0:c179:63c7:fe6c:8293) has joined #python
2019-12-08 21:21:41	<--	jay-m_ (~jay-m@129.0.205.29) has quit (Read error: Connection reset by peer)
2019-12-08 21:21:43	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2019-12-08 21:24:42	<--	B|ack0p (~m@unaffiliated/blackop) has quit (Quit: Lost terminal)
2019-12-08 21:26:37	<--	johnjay (~pi@38.120.10.99) has quit (Ping timeout: 240 seconds)
2019-12-08 21:26:55	<--	funeral (~Funeral@246.109-247-210.customer.lyse.net) has quit (Ping timeout: 250 seconds)
2019-12-08 21:27:51	-->	Lucas_Gray (~Wryhder@197.210.227.148) has joined #python
2019-12-08 21:29:16	-->	funeral (~Funeral@45.12.223.108) has joined #python
2019-12-08 21:29:49	-->	johnjay (~pi@38.120.10.99) has joined #python
2019-12-08 21:29:59	-->	BeerLover (~BeerLover@103.72.10.227) has joined #python
2019-12-08 21:30:17	<--	celphi (sid97751@gateway/web/irccloud.com/x-zbxrqwkwowivwfut) has quit
2019-12-08 21:30:30	<--	Lucas_Gray (~Wryhder@197.210.227.148) has quit (Read error: Connection reset by peer)
2019-12-08 21:30:37	-->	celphi (sid97751@gateway/web/irccloud.com/x-uxdazyobxctgrdwy) has joined #python
2019-12-08 21:35:08	-->	JTa (~Thunderbi@unaffiliated/jta) has joined #python
2019-12-08 21:42:20	--	irc: disconnected from server
2019-12-08 21:45:08	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-08 21:45:08	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-08 21:45:08	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-08 21:45:09	--	Channel #python: 1800 nicks (0 ops, 0 voices, 1800 normals)
2019-12-08 21:45:25	-->	polman (~ananevtem@92.101.36.69) has joined #python
2019-12-08 21:45:28	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-08 21:45:49	-->	thomasross (~thomasros@CPEbc4dfb93c813-CMbc4dfb93c810.cpe.net.cable.rogers.com) has joined #python
2019-12-08 21:46:38	-->	Lucas_Gray (~Wryhder@197.210.85.188) has joined #python
2019-12-08 21:46:38	<--	X20Hunter (~X20Hunter@149.129.104.12) has quit (Remote host closed the connection)
2019-12-08 21:47:52	<--	gjt343 (~gjt343@45.164.13.6) has quit (Ping timeout: 268 seconds)
2019-12-08 21:48:09	-->	xonox (~x@37.120.107.179) has joined #python
2019-12-08 21:50:17	<--	indeedwatson (~yama@181.164.182.59) has quit (Ping timeout: 240 seconds)
2019-12-08 21:50:42	-->	unlink2 (~unlink2@p200300EBCF2FEF004EA44903F63EB9E2.dip0.t-ipconnect.de) has joined #python
2019-12-08 21:51:03	<--	unlink2 (~unlink2@p200300EBCF2FEF004EA44903F63EB9E2.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-08 21:51:21	-->	unlink2 (~unlink2@p200300EBCF2FEF004EA44903F63EB9E2.dip0.t-ipconnect.de) has joined #python
2019-12-08 21:51:30	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined #python
2019-12-08 21:52:20	-->	Mat63 (ba8de1d1@186.141.225.209) has joined #python
2019-12-08 21:52:25	Mat63	hi
2019-12-08 21:52:37	<--	weedmic (~weedmic@212.68.131.233) has quit (Quit: Konversation terminated!)
2019-12-08 21:52:55	-->	lockywolf (~lockywolf@101.80.182.3) has joined #python
2019-12-08 21:53:51	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-08 21:54:02	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-08 21:55:16	-->	idontneedanick (~idontneed@h-184-105.A189.priv.bahnhof.se) has joined #python
2019-12-08 21:56:08	<--	cow[moo] (~asanger@c-69-244-155-110.hsd1.mi.comcast.net) has quit (Ping timeout: 245 seconds)
2019-12-08 21:56:46	<--	Lucas_Gray (~Wryhder@197.210.85.188) has quit (Read error: Connection reset by peer)
2019-12-08 21:56:54	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-08 21:57:01	<--	lagothrix (~lagothrix@unaffiliated/lagothrix) has quit (Quit: lagothrix)
2019-12-08 21:57:04	<--	vuoto (~vuoto@80.71.142.174) has quit (Quit: vuoto)
2019-12-08 21:57:20	-->	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined #python
2019-12-08 21:58:07	<--	AhmedAmerican (c52b5fcb@gateway/web/cgi-irc/kiwiirc.com/ip.197.43.95.203) has quit (Ping timeout: 250 seconds)
2019-12-08 21:58:40	-->	Lucas_Gray (~Wryhder@197.210.85.188) has joined #python
2019-12-08 22:00:39	-->	dendazen (~dendazen@pool-72-76-93-243.nwrknj.fios.verizon.net) has joined #python
2019-12-08 22:01:39	-->	RoyK (~roy@unaffiliated/royk) has joined #python
2019-12-08 22:01:49	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 265 seconds)
2019-12-08 22:01:54	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 22:02:18	<--	traptrip (trip@brigaid.xs4all.nl) has quit (Quit: maintenance)
2019-12-08 22:03:30	<--	stranac (~stranac@193.14.245.77) has quit (Read error: Connection reset by peer)
2019-12-08 22:03:45	-->	humitos (~humitos@139.47.122.65) has joined #python
2019-12-08 22:03:50	-->	Velgor (~Velgor@HSI-KBW-109-193-081-230.hsi7.kabel-badenwuerttemberg.de) has joined #python
2019-12-08 22:04:09	<--	two_oes (two_oes@nat/redhat/x-etturerhmpbjnmvt) has quit (Quit: Leaving)
2019-12-08 22:04:20	-->	stranac (~stranac@193.14.245.77) has joined #python
2019-12-08 22:04:39	<--	humitos (~humitos@139.47.122.65) has quit (Remote host closed the connection)
2019-12-08 22:04:57	nedbat	Mat63: Welcome. If you have a question, it's always best to jump right in and ask it.
2019-12-08 22:05:13	Mat63	=D
2019-12-08 22:05:57	-->	tiwula (~lane@c-98-202-91-238.hsd1.ut.comcast.net) has joined #python
2019-12-08 22:06:01	Mat63	the habit of greeting kills me
2019-12-08 22:06:59	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 268 seconds)
2019-12-08 22:07:02	-->	nibble_zer0 (~nibble_ze@94.250.187.239) has joined #python
2019-12-08 22:07:11	nedbat	Mat63: IRC is weird that way
2019-12-08 22:07:39	<--	funeral (~Funeral@45.12.223.108) has quit (Ping timeout: 250 seconds)
2019-12-08 22:07:41	CoolerX	so python repl doesn't seem to take keyboard interrupts
2019-12-08 22:07:53	<--	tiwula (~lane@c-98-202-91-238.hsd1.ut.comcast.net) has quit (Client Quit)
2019-12-08 22:08:02	-->	subho (~subho@fedora/subho) has joined #python
2019-12-08 22:08:03	CoolerX	when something is printing it keeps printing even after Ctrl+C, Ctrl+D, Ctrl+Z
2019-12-08 22:08:15	<--	Ruhan (uid76353@gateway/web/irccloud.com/x-zzdcrbsqpeoraedf) has quit (Quit: Connection closed for inactivity)
2019-12-08 22:08:23	<--	Mat63 (ba8de1d1@186.141.225.209) has left #python
2019-12-08 22:08:37	w4|k3r	CoolerX: Your loop is restarting faster than the interrupt is to be handled is my opinion
2019-12-08 22:09:03	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 22:09:27	<--	nibble_zero (~nibble_ze@94.250.187.239) has quit (Ping timeout: 268 seconds)
2019-12-08 22:09:34	-->	funeral (~Funeral@246.109-247-210.customer.lyse.net) has joined #python
2019-12-08 22:10:18	<--	jaziz (~jaziz@unaffiliated/jaziz) has quit (Ping timeout: 245 seconds)
2019-12-08 22:10:31	<--	lbalhar (~lbalhar@93.185.13.26) has quit (Ping timeout: 265 seconds)
2019-12-08 22:10:46	<--	YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) has quit (Quit: YuGiOhJCJ)
2019-12-08 22:11:02	--	daz is now known as d42
2019-12-08 22:12:12	nedbat	CoolerX: or you could be catching the interrupt yourself.  Can you link us to your code?
2019-12-08 22:13:26	-->	multiproc (~mark@unaffiliated/multiproc) has joined #python
2019-12-08 22:13:46	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 268 seconds)
2019-12-08 22:14:51	-->	FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) has joined #python
2019-12-08 22:14:52	-->	mattfly (~matheus@191.55.80.11) has joined #python
2019-12-08 22:15:00	<--	mluser-home (~mluser-ho@cpe-107-11-253-108.columbus.res.rr.com) has quit (Ping timeout: 268 seconds)
2019-12-08 22:15:06	-->	alexsuraphel (~alexsurap@197.156.77.75) has joined #python
2019-12-08 22:15:28	-->	mintograde (~mintograd@47.201.168.46) has joined #python
2019-12-08 22:16:10	<--	dendazen (~dendazen@pool-72-76-93-243.nwrknj.fios.verizon.net) has quit (Remote host closed the connection)
2019-12-08 22:16:10	<--	sdu (~doo@80.107.69.175) has quit (Remote host closed the connection)
2019-12-08 22:16:39	-->	lockywolf_ (~lockywolf@95.85.18.95) has joined #python
2019-12-08 22:17:19	CoolerX	nedbat, it isn't specific
2019-12-08 22:17:36	CoolerX	I just had a long list of list of strings and tried to show it
2019-12-08 22:17:36	nedbat	CoolerX: what does that mean?
2019-12-08 22:17:58	-->	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has joined #python
2019-12-08 22:18:22	<--	lockywolf_ (~lockywolf@95.85.18.95) has quit (Max SendQ exceeded)
2019-12-08 22:18:25	nedbat	CoolerX: I just tried printing a list of 1 million numbers, and Ctrl-C stopped it.
2019-12-08 22:18:27	<--	Beam_Inn (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has quit (Remote host closed the connection)
2019-12-08 22:18:37	CoolerX	and it also happens when you are iterating over a pandas dataframe using iterrows and you are printing the index in each loop iteration           for index, row in self.data.iterrows():
2019-12-08 22:18:37	CoolerX	 print(index)
2019-12-08 22:18:43	<--	sauvin (sauvin@about/linux/staff/sauvin) has quit (K-Lined)
2019-12-08 22:18:43	-->	jokr (~jokr@124.123.72.176) has joined #python
2019-12-08 22:18:52	CoolerX	nedbat, list of list of long string
2019-12-08 22:18:53	CoolerX	s
2019-12-08 22:19:00	CoolerX	also this is over a remote connection
2019-12-08 22:19:02	-->	lockywolf_ (~lockywolf@95.85.18.95) has joined #python
2019-12-08 22:19:02	CoolerX	ssh
2019-12-08 22:19:04	CoolerX	so
2019-12-08 22:19:13	<--	lockywolf (~lockywolf@101.80.182.3) has quit (Ping timeout: 265 seconds)
2019-12-08 22:19:21	CoolerX	lots of strings, long strings
2019-12-08 22:19:33	nedbat	CoolerX: that might have something to do with it. The repl stops printing when you type Ctrl-C
2019-12-08 22:20:29	CoolerX	probably the entire message got buffered by ssh or something
2019-12-08 22:20:41	CoolerX	even before I hit Ctrl+C
2019-12-08 22:21:40	<--	lockywolf_ (~lockywolf@95.85.18.95) has quit (Remote host closed the connection)
2019-12-08 22:22:08	-->	lockywolf_ (~lockywolf@95.85.18.95) has joined #python
2019-12-08 22:22:24	nedbat	CoolerX: yes, that could be
2019-12-08 22:22:26	-->	especial (~especial@cm-84.214.231.176.getinternet.no) has joined #python
2019-12-08 22:24:10	_habnabit	CoolerX, that's one of the problems that mosh fixes
2019-12-08 22:24:10	-->	urodna (~urodna@unaffiliated/urodna) has joined #python
2019-12-08 22:25:03	CoolerX	>>> display: unable to open X server `' @ error/display.c/DisplayImageCommand/407.
2019-12-08 22:25:10	CoolerX	I get that error even with ssh -Y
2019-12-08 22:25:18	-->	drkvogel (569eb68a@86.158.182.138) has joined #python
2019-12-08 22:25:31	_habnabit	CoolerX, that doesn't sound like a python problem
2019-12-08 22:26:26	CoolerX	_habnabit, depends
2019-12-08 22:26:36	CoolerX	the server has X11Forwarding enabled
2019-12-08 22:26:49	<--	Jerrynicki (~niklas@p200300F573E87D002E7240BAFAD315CD.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-08 22:26:50	CoolerX	so if it is doing it properly I should be able to see the plot
2019-12-08 22:26:55	_habnabit	CoolerX, what's that have to do with python?
2019-12-08 22:27:16	-->	Jerrynicki (~niklas@p200300F573E87D002E7240BAFAD315CD.dip0.t-ipconnect.de) has joined #python
2019-12-08 22:27:17	CoolerX	it has something to do with matplotlib
2019-12-08 22:27:42	_habnabit	CoolerX, nope. diagnose the problem with a simpler X application like xman or xeyes
2019-12-08 22:27:48	-->	helderc (~helderc@S010664777d8ff843.cg.shawcable.net) has joined #python
2019-12-08 22:28:27	CoolerX	bash: xman: command not found
2019-12-08 22:28:33	CoolerX	bash: xeyes: command not found
2019-12-08 22:29:04	-->	somazero_ (~somazero@ip98-166-135-190.hr.hr.cox.net) has joined #python
2019-12-08 22:29:08	especial	http://paste.debian.net/1120106  could someone explain how come win10 use only half the memory of ubuntu?
2019-12-08 22:29:27	_habnabit	CoolerX, i don't really care to guess at what you do or don't have installed, but this isn't a python problem. you can install/use a simpler X program
2019-12-08 22:29:46	desu	CoolerX: you can tell matplotlib to render to file/terminal
2019-12-08 22:30:25	_habnabit	especial, sys.getsizeof is entirely useless; you can ignore it
2019-12-08 22:30:25	<--	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has quit (Ping timeout: 268 seconds)
2019-12-08 22:30:37	<--	nibble_zer0 (~nibble_ze@94.250.187.239) has quit (Ping timeout: 240 seconds)
2019-12-08 22:30:51	_habnabit	especial, but, if i were to take a wild guess, it's that one is running in 32-bit mode and the other is running in 64-bit mode
2019-12-08 22:31:34	-->	somazero__ (~somazero@ip98-166-135-190.hr.hr.cox.net) has joined #python
2019-12-08 22:31:39	<--	somazero (~somazero@ip98-166-135-190.hr.hr.cox.net) has quit (Ping timeout: 268 seconds)
2019-12-08 22:31:48	CoolerX	desu, how
2019-12-08 22:31:59	CoolerX	render to file I can do
2019-12-08 22:32:04	CoolerX	how do you render to terminal?
2019-12-08 22:32:09	desu	CoolerX: MPLBACKEND or matplotlib.use(...)
2019-12-08 22:32:27	-->	_salt (~salt@74.197.1.59) has joined #python
2019-12-08 22:32:41	-->	nibble_zero (~nibble_ze@94.250.187.239) has joined #python
2019-12-08 22:32:45	especial	thanks _habnabit win is 32 bits, not sure about ubuntus
2019-12-08 22:32:46	<--	BeerLover (~BeerLover@103.72.10.227) has quit (Remote host closed the connection)
2019-12-08 22:32:58	<--	bhoman (~quassel@pool-108-35-122-201.nwrknj.fios.verizon.net) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2019-12-08 22:33:17	CoolerX	_habnabit, according to this https://stackoverflow.com/questions/37288421/how-to-plot-a-chart-in-the-terminal
2019-12-08 22:33:18	especial	taking a python class and got surprised by that result
2019-12-08 22:33:28	CoolerX	DISPLAY=:0.0 ssh -Y <server ip> should work with matplotlib
2019-12-08 22:33:47	_habnabit	CoolerX, i'm sure it does, iff X is already working
2019-12-08 22:34:00	desu	if you have a local X server
2019-12-08 22:34:03	_habnabit	especial, sure. just remember that sys.getsizeof is entirely useless
2019-12-08 22:34:12	<--	somazero_ (~somazero@ip98-166-135-190.hr.hr.cox.net) has quit (Ping timeout: 265 seconds)
2019-12-08 22:34:13	CoolerX	not sure how to check if it IS working
2019-12-08 22:34:19	especial	is there a bitter way _habnabit ?
2019-12-08 22:34:22	_habnabit	CoolerX, as i said, run a simpler X application
2019-12-08 22:34:26	CoolerX	desu, well I don't since I am on windows 10
2019-12-08 22:34:32	desu	then it won't
2019-12-08 22:34:35	-->	somazero (~somazero@ip98-166-135-190.hr.hr.cox.net) has joined #python
2019-12-08 22:34:41	CoolerX	the server is ubuntu but my local laptop is windows
2019-12-08 22:34:45	_habnabit	especial, for measuring what?
2019-12-08 22:34:48	CoolerX	desu, hmmm
2019-12-08 22:34:49	CoolerX	annoying
2019-12-08 22:34:52	desu	Just render to svg/pdf and view that?
2019-12-08 22:35:00	especial	memory usage
2019-12-08 22:35:18	_habnabit	especial, look at your system's process viewer
2019-12-08 22:35:23	desu	if you have X on the remote, then you could also use vnc
2019-12-08 22:35:24	CoolerX	desu, not really feasible for hacky inspection
2019-12-08 22:35:37	CoolerX	jupyter to the rescue again
2019-12-08 22:35:38	desu	sure it is
2019-12-08 22:35:55	desu	could even export it over https and just point your browser at it
2019-12-08 22:35:57	CoolerX	desu, I don't want to create and open files for every single plot
2019-12-08 22:36:15	desu	CoolerX: don't have to write to disk
2019-12-08 22:36:41	<--	somazero__ (~somazero@ip98-166-135-190.hr.hr.cox.net) has quit (Ping timeout: 276 seconds)
2019-12-08 22:36:47	-->	nibble_zer0 (~nibble_ze@94.250.187.239) has joined #python
2019-12-08 22:37:03	-->	lbalhar (~lbalhar@93.185.13.25) has joined #python
2019-12-08 22:37:33	<--	nibble_zero (~nibble_ze@94.250.187.239) has quit (Ping timeout: 250 seconds)
2019-12-08 22:37:43	<--	drkvogel (569eb68a@86.158.182.138) has quit (Remote host closed the connection)
2019-12-08 22:38:11	-->	greedom (~greedom@2001:16b8:2e2c:8700:82aa:b2cf:9e87:33a0) has joined #python
2019-12-08 22:38:20	-->	nibble_zero (~nibble_ze@94.250.187.239) has joined #python
2019-12-08 22:38:24	<--	polman (~ananevtem@92.101.36.69) has quit (Read error: Connection reset by peer)
2019-12-08 22:38:56	-->	Vornicus (~Vornicus@2605:e000:1218:255d:1971:580d:344:254) has joined #python
2019-12-08 22:39:03	<--	Skripter (~Skripter@unaffiliated/skripter) has quit (Ping timeout: 245 seconds)
2019-12-08 22:39:29	-->	cdown (~cdown@89.32.122.5) has joined #python
2019-12-08 22:39:36	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 22:40:24	<--	edlinde (~edlinde@183.83.146.106) has quit (Quit: edlinde)
2019-12-08 22:41:14	<--	lsyoyom (~liny01@unaffiliated/lsyoyom) has quit (Quit: WeeChat 2.6)
2019-12-08 22:41:17	<--	nibble_zer0 (~nibble_ze@94.250.187.239) has quit (Ping timeout: 240 seconds)
2019-12-08 22:41:33	<--	lagothrix (~lagothrix@unaffiliated/lagothrix) has quit (Quit: lagothrix)
2019-12-08 22:42:13	-->	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined #python
2019-12-08 22:43:10	<--	somazero (~somazero@ip98-166-135-190.hr.hr.cox.net) has quit (Quit: Leaving)
2019-12-08 22:43:46	<--	ignaloidas_ (~ignaloida@158.129.26.113) has quit (Read error: Connection reset by peer)
2019-12-08 22:43:49	CoolerX	say whaaaaaaat? AttributeError: 'iterator' object has no attribute 'next'
2019-12-08 22:43:59	_habnabit	CoolerX, next(your_iterator)
2019-12-08 22:44:16	CoolerX	I know but myiter.next() was working I swear
2019-12-08 22:44:17	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 240 seconds)
2019-12-08 22:44:29	CoolerX	https://stackoverflow.com/questions/1073396/is-generator-next-visible-in-python-3-0
2019-12-08 22:44:29	_habnabit	CoolerX, sometimes it's present for python 2 compatibility
2019-12-08 22:44:44	CoolerX	was I using an old version of python? could have sworn it was 3.6.9
2019-12-08 22:45:01	_habnabit	CoolerX, no, but sometimes it's unconditionally present for compatibility
2019-12-08 22:45:10	<--	Bird|otherbox (~HTT-Bird@unaffiliated/htt-bird) has quit (Ping timeout: 252 seconds)
2019-12-08 22:45:12	CoolerX	then what happened now?
2019-12-08 22:45:20	CoolerX	still using the same python 3.6.9 repl
2019-12-08 22:45:26	_habnabit	CoolerX, you did it on a different object where it isn't present
2019-12-08 22:45:30	<--	dudek (~dudek@185.150.236.150) has quit (Quit: Leaving)
2019-12-08 22:45:38	ssbr_	CoolerX: some _types_ might choose to define next() even on Python 3
2019-12-08 22:45:50	CoolerX	_habnabit, the error message says iterator object
2019-12-08 22:45:52	ssbr_	but you should always use the next() function, even on python 2
2019-12-08 22:45:58	_habnabit	CoolerX, okay
2019-12-08 22:46:00	ssbr_	CoolerX: that means that the name of the class is `iterator`
2019-12-08 22:46:00	CoolerX	it should have it
2019-12-08 22:46:05	ssbr_	CoolerX: no, it shouldn't.
2019-12-08 22:46:17	ssbr_	On Python 3 the `next` method doesn't exist anymore.
2019-12-08 22:46:27	ssbr_	like, some classes might define it, but pretend they don't!
2019-12-08 22:46:52	CoolerX	ah ha testiter = iter(testloader)
2019-12-08 22:46:52	CoolerX	t_xs, t_ys = testiter.next()
2019-12-08 22:47:03	CoolerX	that code works, worked
2019-12-08 22:47:17	CoolerX	and it was working in the repl too (earlier)
2019-12-08 22:47:31	<--	basoares (~basoares@xdsl-188-155-153-246.adslplus.ch) has quit (Ping timeout: 250 seconds)
2019-12-08 22:47:36	CoolerX	oh wait
2019-12-08 22:47:46	ssbr_	CoolerX: it doesn't matter, use next(testiter)
2019-12-08 22:47:48	CoolerX	testloader is a DataLoader instance
2019-12-08 22:47:52	<--	maxwilliamson (~maxwillia@gateway/tor-sasl/maxwilliamson) has quit (Ping timeout: 260 seconds)
2019-12-08 22:47:57	-->	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has joined #python
2019-12-08 22:48:01	CoolerX	I was doing iter(Dataset instance)
2019-12-08 22:48:06	<--	iamNOTadog (~notadog@2804:7f4:c783:6051:564e:8020:d031:c5a4) has quit (Ping timeout: 252 seconds)
2019-12-08 22:48:13	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 265 seconds)
2019-12-08 22:48:26	CoolerX	ssbr_, it is weird that you can't enforce that .next should be there
2019-12-08 22:48:27	<--	fuzzmz (~fuzzmz@2a01:4f8:161:926b::2) has quit (Read error: Connection reset by peer)
2019-12-08 22:48:29	CoolerX	on an iterator
2019-12-08 22:48:34	-->	maxwilliamson (~maxwillia@gateway/tor-sasl/maxwilliamson) has joined #python
2019-12-08 22:48:37	_habnabit	CoolerX, why is that weird?
2019-12-08 22:48:44	-->	Darkhunter (~mmojzis@242.214.broadband18.iol.cz) has joined #python
2019-12-08 22:48:49	ssbr_	CoolerX: why would .next() exist on an iterator? iterators don't define .next() in python 3, they define a different function.
2019-12-08 22:48:52	CoolerX	isn't .next in the class definition of iterator?
2019-12-08 22:48:57	_habnabit	CoolerX, no
2019-12-08 22:48:57	ssbr_	CoolerX: no, that's what we've been saying
2019-12-08 22:49:02	ssbr_	CoolerX: use next(it), not it.next()
2019-12-08 22:49:03	<--	srandon111 (~srandon11@5.102.20.11) has quit (Read error: Connection reset by peer)
2019-12-08 22:49:07	-->	Xaldafax (~Xaldafax@cpe-104-34-193-119.socal.res.rr.com) has joined #python
2019-12-08 22:49:10	ssbr_	it.next() has been deprecated for the better part of a decade at least
2019-12-08 22:49:11	CoolerX	generator?
2019-12-08 22:49:20	ssbr_	CoolerX: not them either
2019-12-08 22:49:24	_habnabit	CoolerX, can you rephrase that as a complete sentence?
2019-12-08 22:49:25	ssbr_	just use the next function.
2019-12-08 22:49:39	ssbr_	there is nothing that will be solved by continuing to even remember that the .next method ever existed
2019-12-08 22:49:41	CoolerX	so what class defined .next
2019-12-08 22:49:46	CoolerX	in python 2
2019-12-08 22:49:48	ssbr_	CoolerX: iterators did. Back in like Python 2.4
2019-12-08 22:49:53	CoolerX	or python 3 older version
2019-12-08 22:49:57	CoolerX	ok
2019-12-08 22:50:01	_habnabit	CoolerX, no class did. it was an implicit protocol
2019-12-08 22:50:01	ssbr_	CoolerX: no, python 3 never did that
2019-12-08 22:50:06	-->	dethos (~dethos@83.223.169.117) has joined #python
2019-12-08 22:50:10	<--	philr (~phil@ppp14-2-90-166.adl-apt-pir-bras31.tpg.internode.on.net) has quit (Ping timeout: 268 seconds)
2019-12-08 22:50:15	-->	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has joined #python
2019-12-08 22:50:36	CoolerX	what exactly does iter() do?
2019-12-08 22:50:56	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-08 22:51:00	-->	iamNOTadog (~notadog@2804:7f4:c783:6051:564e:8020:d031:c5a4) has joined #python
2019-12-08 22:51:33	-->	indeedwatson (~yama@181.164.182.59) has joined #python
2019-12-08 22:51:36	ssbr_	CoolerX: it converts an iterable object into an iterator object.
2019-12-08 22:51:43	ssbr_	or rather, it returns an iterator for that iterable object.
2019-12-08 22:51:45	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 22:52:03	-->	mluser-home (~mluser-ho@cpe-107-11-253-108.columbus.res.rr.com) has joined #python
2019-12-08 22:52:04	ssbr_	(I shouldn't say "convert")
2019-12-08 22:52:20	-->	piperlester (~textual@217.138.200.172) has joined #python
2019-12-08 22:52:39	CoolerX	factory function?
2019-12-08 22:53:04	ssbr_	CoolerX: do you think "factory function" adds meaning to this explanation? I think it takes meaning away.
2019-12-08 22:53:10	ssbr_	A factory could be anything. this is very specific.
2019-12-08 22:53:14	<--	Twipply (~Twipply@unaffiliated/twipply) has quit (Ping timeout: 268 seconds)
2019-12-08 22:53:15	CoolerX	iterator factory
2019-12-08 22:53:26	_habnabit	CoolerX, i can't understand your fragments of sentences
2019-12-08 22:53:34	<--	xonox (~x@37.120.107.179) has quit (Quit: x_x)
2019-12-08 22:53:36	-->	srandon111 (~srandon11@5.102.20.11) has joined #python
2019-12-08 22:53:37	ssbr_	CoolerX: don't forget that the iterator for an iterator is the iterator itself: iter(it) is it.
2019-12-08 22:53:37	CoolerX	iter is an iterator factory
2019-12-08 22:53:39	nedbat	CoolerX: for whatever reason, "factory" seems to be a word that Java people like, and Python people don't like.
2019-12-08 22:53:41	-->	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has joined #python
2019-12-08 22:53:51	CoolerX	nedbat, well I can understand that
2019-12-08 22:53:52	ssbr_	Which makes "factory" a misleading word, as iter() might not create anything _new_ at all.
2019-12-08 22:53:55	<--	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has quit (Remote host closed the connection)
2019-12-08 22:54:07	CoolerX	anyway it makes and returns a object of instance iterator
2019-12-08 22:54:20	nedbat	CoolerX: it might not make a thing, it might just return the thing you gave it.
2019-12-08 22:54:22	ssbr_	CoolerX: it doesn't make anything necessarily. It quite often returns the object it was passed in.
2019-12-08 22:54:26	-->	Twipply (~Twipply@unaffiliated/twipply) has joined #python
2019-12-08 22:54:42	CoolerX	nedbat, well that is a special case
2019-12-08 22:54:44	nedbat	CoolerX: int() makes integers, unless you give it an integer, then it just gives it back to you.
2019-12-08 22:54:51	CoolerX	if you give it an iterator I presume
2019-12-08 22:55:01	nedbat	CoolerX: yes
2019-12-08 22:55:09	ssbr_	well, if you gave it something that wasn't an iterator, and it returned that thing, it would sure be wrong wouldn't it
2019-12-08 22:55:26	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2019-12-08 22:55:27	CoolerX	ssbr_, quite often?
2019-12-08 22:55:27	-->	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has joined #python
2019-12-08 22:55:28	-->	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has joined #python
2019-12-08 22:55:37	piperlester	Hello.  I'm trying to wrap my head around multiple references to the same table with sqlalchemy.  What I am trying to do is have the Team's information available when working with a pick (which relates to a Contest, which has multiple Teams).  In essence, I want to be able to iterate through all users, which makes available all Picks, which allows me to determine the pick and the appropriate results.  I am getting this error:
2019-12-08 22:55:38	piperlester	 sqlalchemy.exc.ArgumentError: Error creating backref 'team_1' on relationship 'Team.contest_id_t1': property of that name exists on mapper 'mapped class Contest->contest'.  My model definitions can be found here: https://pastebin.com/V2V0iYrE. Any help is appreciated!
2019-12-08 22:55:38	<--	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has quit (Remote host closed the connection)
2019-12-08 22:55:39	infobob	https://bpaste.net/show/YMASI (repasted for piperlester)
2019-12-08 22:55:40	CoolerX	are you talking about  for i in range(N):
2019-12-08 22:55:42	CoolerX	?
2019-12-08 22:55:54	ssbr_	CoolerX: it's almost a truism that most iterables are iterators.
2019-12-08 22:56:08	ssbr_	CoolerX: no, range is a sequence, not an iterator.
2019-12-08 22:56:20	CoolerX	range is a generator
2019-12-08 22:56:21	CoolerX	I thought
2019-12-08 22:56:25	ssbr_	CoolerX: it isn't.
2019-12-08 22:56:32	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2019-12-08 22:56:39	CoolerX	range doesn't construct the entire sequence
2019-12-08 22:56:48	ssbr_	CoolerX: that doesn't mean it's a generator.
2019-12-08 22:56:50	nedbat	CoolerX: it's a lazy iterable, like generators are.
2019-12-08 22:56:58	ssbr_	CoolerX: for example, try doing range(5)[2]. You can't do that with generators!
2019-12-08 22:57:03	CoolerX	why make a distinction?
2019-12-08 22:57:24	nedbat	CoolerX: as ssbr_ shows, ranges can do more than generators
2019-12-08 22:57:24	ssbr_	CoolerX: I make a distinction between things that are distinct, and I feel like that is a normal thing to do.
2019-12-08 22:57:34	nedbat	CoolerX: also, "1 in range(10)" works
2019-12-08 22:57:56	CoolerX	oh deep rabbit hole getting deeper
2019-12-08 22:58:02	ssbr_	CoolerX: conversely, generators can do many things that range cannot. For example, they can be sent exceptions, or yielded from
2019-12-08 22:58:10	<--	funeral (~Funeral@246.109-247-210.customer.lyse.net) has quit (Ping timeout: 268 seconds)
2019-12-08 22:58:13	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-08 22:58:27	-->	uksio (~uksio@p200300CB1BD0F18FC44F69A5AA296049.dip0.t-ipconnect.de) has joined #python
2019-12-08 22:58:31	ssbr_	the only things they share in common are a sense of laziness and iterability
2019-12-08 22:59:00	ssbr_	actually wait, you can yield from non-generators, oops
2019-12-08 22:59:10	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-08 22:59:12	ssbr_	(why did I think you couldn't do that?)
2019-12-08 22:59:30	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-08 22:59:57	-->	funeral (~Funeral@37.120.149.43) has joined #python
2019-12-08 23:00:16	CoolerX	doesn't yield turn the function into a generator?
2019-12-08 23:00:42	nedbat	CoolerX: ssbr_ means:   "yield from something":  something is any iterable
2019-12-08 23:00:46	-->	pcloadltr (~pcloadltr@185.229.59.215) has joined #python
2019-12-08 23:00:52	CoolerX	like https://bpaste.net/raw/32UQS
2019-12-08 23:00:58	CoolerX	taken from https://wiki.python.org/moin/Generators
2019-12-08 23:01:00	ssbr_	the issue is that "yield from x" means a very particular thing if x is a generator.
2019-12-08 23:01:11	ssbr_	and something kinda different if x is a non-generator iterable, I think.
2019-12-08 23:01:23	<--	uks (~uksio@p200300CB1BD0F1C724CBDAEE9CA1B18D.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2019-12-08 23:01:25	nedbat	ssbr_: does it? What's the difference?
2019-12-08 23:01:35	CoolerX	need some code to clarify this
2019-12-08 23:02:08	-->	AhmedAmerican (c488047f@gateway/web/cgi-irc/kiwiirc.com/ip.196.136.4.127) has joined #python
2019-12-08 23:02:35	-->	wikiemol (47c7e366@gateway/web/cgi-irc/kiwiirc.com/ip.71.199.227.102) has joined #python
2019-12-08 23:02:43	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-08 23:03:06	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 268 seconds)
2019-12-08 23:03:16	-->	glow8 (~mario@85.251.43.99.dyn.user.ono.com) has joined #python
2019-12-08 23:03:26	AhmedAmerican	i would like to only parse `<td align="middle">2.38518</td></tr>` and skip `<td align="middle" colspan="2" nowrap="">`
2019-12-08 23:03:52	AhmedAmerican	`for item in soup.findAll('td', {'align': 'right'}):` will keep getting all
2019-12-08 23:04:07	AhmedAmerican	`for item in soup.findAll('td', {'align': 'middl'}):` will keep getting all
2019-12-08 23:04:12	AhmedAmerican	middle "
2019-12-08 23:04:21	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-08 23:04:29	<--	alexsuraphel (~alexsurap@197.156.77.75) has quit (Remote host closed the connection)
2019-12-08 23:04:38	<--	rappet (~rappet@chizue.rappet.de) has quit (Ping timeout: 276 seconds)
2019-12-08 23:04:58	ssbr_	nedbat: forwarding in .send/.throw
2019-12-08 23:05:11	-->	Wr4i7h (~abcd@a85-139-227-182.cpe.netcabo.pt) has joined #python
2019-12-08 23:05:33	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-08 23:05:41	ssbr_	nedbat: if you wrapped a generator in a forwarding iterator, it'd change the behavior because .send/.throw wouldn't be sent over.
2019-12-08 23:06:00	ssbr_	I think.
2019-12-08 23:06:02	-->	rappet (~rappet@chizue.rappet.de) has joined #python
2019-12-08 23:06:04	nedbat	ssbr_: I see. i've never used send/throw
2019-12-08 23:06:14	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-08 23:06:20	ssbr_	nedbat: there's no reason to anymore. That entire part of Python should be deprecated now that async exists.
2019-12-08 23:06:46	nedbat	ssbr_: i almost did in a recent adventofcode puzzle, but i couldn't quite wrap my head around it
2019-12-08 23:06:57	ssbr_	imagine writing an async generator that used .send/.throw _as well as_ the async send/throw
2019-12-08 23:06:59	<--	stranac (~stranac@193.14.245.77) has quit (Read error: Connection reset by peer)
2019-12-08 23:07:07	ssbr_	if that were possible, which IIRC it isn't
2019-12-08 23:07:23	-->	stranac (~stranac@193.14.245.77) has joined #python
2019-12-08 23:07:31	<--	desu (~Urist@archlinux/op/pdpc.supporter.active.mrelendig) has quit (Quit: building a wall to keep the swedes out)
2019-12-08 23:07:32	ssbr_	where's my async yield from at
2019-12-08 23:07:53	ssbr_	https://stackoverflow.com/questions/47376408/why-cant-i-yield-from-inside-an-async-function
2019-12-08 23:07:57	<--	funeral (~Funeral@37.120.149.43) has quit (Ping timeout: 240 seconds)
2019-12-08 23:08:02	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 265 seconds)
2019-12-08 23:08:26	-->	parabolize (~paraboliz@c-76-25-97-149.hsd1.co.comcast.net) has joined #python
2019-12-08 23:09:24	CoolerX	so how does async work in python?
2019-12-08 23:09:29	CoolerX	is there an event loop?
2019-12-08 23:09:40	-->	htejeda (~Hoo@unaffiliated/htejeda) has joined #python
2019-12-08 23:09:58	-->	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has joined #python
2019-12-08 23:10:10	-->	funeral (~Funeral@246.109-247-210.customer.lyse.net) has joined #python
2019-12-08 23:10:16	-->	MrElendig (~Urist@archlinux/op/pdpc.supporter.active.mrelendig) has joined #python
2019-12-08 23:10:24	ssbr_	CoolerX: it's a fancy way to suspend control flow and resume it later when an event loop says to, yes
2019-12-08 23:10:52	-->	joshisanonymous (joshisanon@gateway/vpn/privateinternetaccess/joshisanonymous) has joined #python
2019-12-08 23:10:58	CoolerX	but only in programs that use async
2019-12-08 23:11:26	<--	AhmedAmerican (c488047f@gateway/web/cgi-irc/kiwiirc.com/ip.196.136.4.127) has quit (Remote host closed the connection)
2019-12-08 23:11:49	ssbr_	CoolerX: what are you asking?
2019-12-08 23:11:54	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-08 23:11:55	ssbr_	CoolerX: yes, async only exists in programs that use async.
2019-12-08 23:12:28	CoolerX	If I don't use the async package and no dependency of mine uses async then there should be no event loop
2019-12-08 23:12:30	-->	polman (~ananevtem@92.101.36.69) has joined #python
2019-12-08 23:12:44	ikanobori	There's no 'async' package and you have to start a loop manually.
2019-12-08 23:12:47	ikanobori	So there isn't.
2019-12-08 23:13:06	-->	alexsuraphel (~alexsurap@197.156.77.75) has joined #python
2019-12-08 23:13:11	-->	john_89 (598e8aee@gateway/web/cgi-irc/kiwiirc.com/ip.89.142.138.238) has joined #python
2019-12-08 23:13:14	ikanobori	Even if a loop were to be implicit it'd only start if you actually awaited something anyways.
2019-12-08 23:13:47	CoolerX	the async keyword
2019-12-08 23:13:55	-->	bhoman (~quassel@pool-108-35-122-201.nwrknj.fios.verizon.net) has joined #python
2019-12-08 23:14:38	ssbr_	CoolerX: the async keyword is just syntax for creating things that suspend control flow and can be resumed later.
2019-12-08 23:14:56	-->	mmfood (~mmfood@81-232-132-159-no64.tbcn.telia.com) has joined #python
2019-12-08 23:15:03	CoolerX	like a generator
2019-12-08 23:15:06	-->	AhmedAmerican (c488047f@gateway/web/cgi-irc/kiwiirc.com/ip.196.136.4.127) has joined #python
2019-12-08 23:15:14	ikanobori	Like a generator.
2019-12-08 23:15:23	AhmedAmerican	someone help pls https://bpaste.net/show/Z5ELI
2019-12-08 23:16:05	Wulf	AhmedAmerican: will the loop run twice?
2019-12-08 23:16:09	ikanobori	CoolerX: The terms are honestly the most confusing part about all of the cooperative multitasking idioms.
2019-12-08 23:16:13	Wulf	AhmedAmerican: or do you get the result during the first iteration?
2019-12-08 23:16:14	nedbat	AhmedAmerican: what is special about the first one? Why do you want it only?
2019-12-08 23:16:15	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2019-12-08 23:16:15	-->	__marco (~marco@2a02:678:588:f800:e6a4:71ff:fef2:bce6) has joined #python
2019-12-08 23:16:44	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2019-12-08 23:16:59	AhmedAmerican	first one hold rate `1.02786`
2019-12-08 23:17:26	-->	soniya29 (~soniya@2409:4042:2684:adcf:316f:ddcd:7c6a:cc9d) has joined #python
2019-12-08 23:17:40	AhmedAmerican	second `usually` hold a text while `strong` is in
2019-12-08 23:17:48	john_89	Hello, did anyone used tensorflow? I would like to know if the tensorflow library uses deep learning methods? Or is it using backpropagation algorithm, or both?
2019-12-08 23:17:51	CoolerX	hmm this different from what I expected https://docs.python.org/3/library/asyncio-task.html#awaitables
2019-12-08 23:17:55	nedbat	AhmedAmerican: i'll guess that you want particular columns from a table?
2019-12-08 23:18:02	ikanobori	Python generators are often called coroutines in other languages and coroutines add some other stuff that makes them do other things.
2019-12-08 23:18:18	AhmedAmerican	nedbat let me get repl on. hold on :P
2019-12-08 23:18:29	CoolerX	# Nothing happens if we just call "nested()".
2019-12-08 23:18:30	CoolerX	    # A coroutine object is created but not awaited,
2019-12-08 23:18:30	CoolerX	    # so it *won't run at all*.
2019-12-08 23:18:37	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-08 23:18:44	ssbr_	CoolerX: just like generators
2019-12-08 23:18:50	CoolerX	so await doesn't just suspend it also causes execution
2019-12-08 23:18:58	ssbr_	CoolerX: no it doesn't.
2019-12-08 23:18:59	ikanobori	Correct, calling an async def will return a coroutine one can await. Same as a generator returning a generator that can be used.
2019-12-08 23:19:09	CoolerX	ssbr_, without await it won't run
2019-12-08 23:19:20	ssbr_	CoolerX: it also won't run with await, _unless someone else runs it_
2019-12-08 23:19:32	-->	nicolasnicolas (~nicolasni@167.99.80.52) has joined #python
2019-12-08 23:19:41	AhmedAmerican	nedbat https://repl.it/@AmericanY/Nedbat
2019-12-08 23:19:47	-->	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-27.dsl.bell.ca) has joined #python
2019-12-08 23:19:48	CoolerX	ssbr_, what?
2019-12-08 23:20:10	CoolerX	are you talking about the first code example here? https://docs.python.org/3/library/asyncio-task.html#awaitables
2019-12-08 23:20:10	ikanobori	CoolerX: Coroutines get executed by an event loop. Awaiting it just schedules it on the loop to be ran at an undertermined time.
2019-12-08 23:20:14	ssbr_	CoolerX: if you do "await nested()", all that does is suspend execution and pass the return value of nested() back up to whatever was calling you.
2019-12-08 23:20:21	<--	sborza (~sborza@fedora/sborza) has quit (Quit: laterz)
2019-12-08 23:20:34	-->	delvian (~delvian@41.13.228.203) has joined #python
2019-12-08 23:20:39	CoolerX	ikanobori, I wasn't talking about synchronous execution
2019-12-08 23:20:40	ssbr_	CoolerX: it's the responsibility of that thing to then do something with nested's return value. await, itself, does not do work.
2019-12-08 23:20:50	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 23:21:12	<--	Lucas_Gray (~Wryhder@197.210.85.188) has quit (Read error: Connection reset by peer)
2019-12-08 23:21:51	CoolerX	ssbr_, pass the return value of nested? it queues up nested and yields
2019-12-08 23:21:57	<--	[itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) has quit (Remote host closed the connection)
2019-12-08 23:21:58	-->	Lucas_Gray (~Wryhder@197.210.57.73) has joined #python
2019-12-08 23:22:03	CoolerX	you don't get the return value until it is executed
2019-12-08 23:22:07	CoolerX	and finishes
2019-12-08 23:22:49	AhmedAmerican	Wulf https://repl.it/@AmericanY/Nedbat
2019-12-08 23:22:54	<--	htejeda (~Hoo@unaffiliated/htejeda) has left #python ("Leaving")
2019-12-08 23:22:55	ssbr_	CoolerX: and how do you think nested is queued up?
2019-12-08 23:23:04	-->	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has joined #python
2019-12-08 23:23:04	<--	wikiemol (47c7e366@gateway/web/cgi-irc/kiwiirc.com/ip.71.199.227.102) has quit (Remote host closed the connection)
2019-12-08 23:23:11	<--	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has quit (Quit: Leaving)
2019-12-08 23:23:16	<--	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has quit (Quit: Leaving.)
2019-12-08 23:23:17	ssbr_	CoolerX: how does anything know to pass its result back when the function is resumed?
2019-12-08 23:23:25	ssbr_	"await" just tells things to the caller.
2019-12-08 23:23:33	nedbat	AhmedAmerican: that doesn't answer my question.
2019-12-08 23:23:48	-->	k0mmo (~k0mmo@unaffiliated/k0mmo) has joined #python
2019-12-08 23:24:07	nedbat	AhmedAmerican: forget about the code for a bit. As a person, looking at that HTML, how did you decide you wanted one table cell, and not another table cell?
2019-12-08 23:24:55	AhmedAmerican	the table cell which I'm looking for it. hold the same shape. while the others usually different
2019-12-08 23:25:13	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 250 seconds)
2019-12-08 23:25:46	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-08 23:25:58	-->	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined #python
2019-12-08 23:26:46	nedbat	AhmedAmerican: i'm sorry, i don't know what that means
2019-12-08 23:26:57	AhmedAmerican	nedbat https://bpaste.net/show/YNDFY
2019-12-08 23:26:58	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2019-12-08 23:27:36	nedbat	AhmedAmerican: yes. Can you tell me in English why some are interesting to you, and others are not?
2019-12-08 23:27:46	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-08 23:28:17	AhmedAmerican	well @nedbat am taking time to tell you that i want to skip any td hold strong.
2019-12-08 23:28:28	CoolerX	if I do [foo(x) for x in range(N)] is that deterministic?
2019-12-08 23:28:36	CoolerX	it will go in order right?
2019-12-08 23:28:45	AhmedAmerican	alright i will do if condition if <strong is not there, i was wondering if there's different way
2019-12-08 23:28:46	CoolerX	0, 1, 2, ..., N - 1
2019-12-08 23:28:49	-->	Skripter (~Skripter@unaffiliated/skripter) has joined #python
2019-12-08 23:29:20	CoolerX	ssbr_, probably a continuation
2019-12-08 23:29:32	<--	hemstock (~hemstock@46-213-09.internethome.cytanet.com.cy) has quit (Ping timeout: 252 seconds)
2019-12-08 23:30:03	CoolerX	is it ok to have sideeffects in foo? [foo(x) for x in range(N)]
2019-12-08 23:30:05	ssbr_	CoolerX: continuations are a generalization of what happens with generators/awaitable coroutines
2019-12-08 23:30:13	ssbr_	CoolerX: that isn't a good idea no
2019-12-08 23:30:15	CoolerX	will it execute in order?
2019-12-08 23:30:16	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-08 23:30:17	ssbr_	yes
2019-12-08 23:30:33	CoolerX	so it should be fine
2019-12-08 23:30:54	ssbr_	CoolerX: that doesn't make it good taste :)
2019-12-08 23:31:03	ssbr_	CoolerX: are you also using the list?
2019-12-08 23:31:17	<--	framend (~framend@unaffiliated/framend) has quit (Ping timeout: 250 seconds)
2019-12-08 23:31:38	CoolerX	ssbr_, I will refactor it
2019-12-08 23:31:44	ssbr_	CoolerX: what does that even mean?
2019-12-08 23:31:48	ssbr_	are you also using the list?
2019-12-08 23:31:51	offby1	CoolerX: side effects are bad.  Not because they'll make your program crash, but because they'll surprise and confuse most people -- including you -- who read the code
2019-12-08 23:32:01	CoolerX	ssbr_, I mean I will refactor this code later
2019-12-08 23:32:14	-->	framend (~framend@unaffiliated/framend) has joined #python
2019-12-08 23:32:17	ssbr_	whatever, I don't care, don't answer my questions then.
2019-12-08 23:32:30	CoolerX	and yes I am using the list
2019-12-08 23:32:42	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-08 23:33:26	-->	Kelzorz (~Kelzorz@67.6.83.103) has joined #python
2019-12-08 23:33:45	-->	Silmarilion (~Silmarili@87.116.177.1) has joined #python
2019-12-08 23:33:47	blackleitus	why am I getting the error from file sized at the moment to add `while counter < self.max_results:`? when our counter is less than our max results to download  `Discarding file as it's bigger than maximum size (1024 kbs)`
2019-12-08 23:33:47	blackleitus	https://dpaste.org/U9Wd
2019-12-08 23:35:29	<--	john_89 (598e8aee@gateway/web/cgi-irc/kiwiirc.com/ip.89.142.138.238) has quit (Remote host closed the connection)
2019-12-08 23:37:23	InPhase	blackleitus: Insert print(response.headers.get('content-length')) right before line 44 and rerun so you know what's actually happening.
2019-12-08 23:37:57	InPhase	blackleitus: Or better, print('content-length is:', response.headers.get('content-length'))
2019-12-08 23:38:18	nedbat	blackleitus: can we talk about your error handling?
2019-12-08 23:39:11	-->	xcava (~xcava@net-93-151-212-86.cust.vodafonedsl.it) has joined #python
2019-12-08 23:39:27	InPhase	Yeah, there are some broader problems there.  You can't compare to None after you've already done an integer comparison.
2019-12-08 23:39:32	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2019-12-08 23:39:41	CoolerX	how do you do this?
2019-12-08 23:39:45	CoolerX	you have lines
2019-12-08 23:39:57	CoolerX	which is a list of strings
2019-12-08 23:40:12	-->	gloomy (~Gloomy@x4d0bbca5.dyn.telefonica.de) has joined #python
2019-12-08 23:40:12	CoolerX	some of those strings could be entirely whitespace
2019-12-08 23:40:22	CoolerX	need to split those strings into words
2019-12-08 23:40:29	CoolerX	and get rid of empty
2019-12-08 23:40:51	CoolerX	lines = [line.split() for line in lines if len(line) > 0]
2019-12-08 23:40:59	blackleitus	this what I am getting https://dpaste.org/6CrS
2019-12-08 23:41:01	CoolerX	could have some entries which are []
2019-12-08 23:41:25	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-08 23:41:42	CoolerX	lines = [line.split() for line in lines if len(line) > 0 and len(line.split()) > 0]
2019-12-08 23:42:00	CoolerX	would be nice to store that line.split() and not do it twice
2019-12-08 23:42:02	InPhase	blackleitus: So it is discarding one that are bigger than 1024kB, like it says it should do.
2019-12-08 23:42:03	blackleitus	https://dpaste.org/WKKf
2019-12-08 23:42:55	blackleitus	if you look bytes are given in int , and it is giving me `10` values , but it is only printing max size
2019-12-08 23:44:28	InPhase	blackleitus: It's doing exactly what it says it will do.  What were you expecting?
2019-12-08 23:44:33	<--	teksimian (~teksimian@172-97-139-243.cpe.distributel.net) has quit (Remote host closed the connection)
2019-12-08 23:45:27	ce6	hey does anyone  here know much about the use-it or lose-it recursion concept?
2019-12-08 23:45:36	blackleitus	I am waiting to give me `while counter < self.max_results:
2019-12-08 23:45:36	blackleitus	` the loop conditional from while
2019-12-08 23:46:08	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 245 seconds)
2019-12-08 23:46:26	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-08 23:46:44	-->	ZedHeadTed| (IReticentI@gateway/shell/xshellz/x-fooarmgkwfhgceie) has joined #python
2019-12-08 23:47:27	blackleitus	if I change as someone told me yesterday `len()` I got nothing
2019-12-08 23:47:30	-->	Boko_dbaba (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has joined #python
2019-12-08 23:47:57	-->	LightTate (~LightTate@46.97.169.61) has joined #python
2019-12-08 23:48:04	LightTate	yo
2019-12-08 23:48:10	<--	polman (~ananevtem@92.101.36.69) has quit (Read error: Connection reset by peer)
2019-12-08 23:48:31	LightTate	I come froma a far far place
2019-12-08 23:48:36	<--	Boko_dbaba (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has quit (Read error: Connection reset by peer)
2019-12-08 23:48:45	LightTate	how good is the sec of this network ?
2019-12-08 23:48:57	ce6	lighttate it's freenode
2019-12-08 23:49:30	<--	joshisanonymous (joshisanon@gateway/vpn/privateinternetaccess/joshisanonymous) has quit (Quit: Leaving)
2019-12-08 23:49:54	InPhase	blackleitus: Do me a favor.  Replace that pass after your except with:  import traceback    print(traceback.format_exc())
2019-12-08 23:50:10	<--	greatgatsby (~greatgats@xplr-104-249-240-116.xplornet.com) has quit (Quit: Leaving)
2019-12-08 23:50:15	novum	LightTate, I `/ctcp LightTate ping`d you and you have about 1s delay. you're on relay chat, though, so anything below 200 seconds of lag is good enough :)
2019-12-08 23:50:17	-->	lxbarbosa (~user@2804:1b2:81:c7f6:ae43:1fee:5f96:4bf6) has joined #python
2019-12-08 23:50:28	blackleitus	which one?
2019-12-08 23:50:32	-->	scurfee (~scurfee@broadband-77-37-146-212.ip.moscow.rt.ru) has joined #python
2019-12-08 23:50:34	blackleitus	expect or if ?
2019-12-08 23:50:47	InPhase	blackleitus: The pass after the except.
2019-12-08 23:50:53	blackleitus	okay
2019-12-08 23:50:57	LightTate	:D
2019-12-08 23:51:13	<--	lxbarbosa (~user@2804:1b2:81:c7f6:ae43:1fee:5f96:4bf6) has quit (Remote host closed the connection)
2019-12-08 23:51:15	InPhase	It's okay to catch exception and keep going, but catching and ignoring is just asking to hurt yourself.
2019-12-08 23:51:55	-->	sincorchetes (~sincorche@unaffiliated/sincorchetes) has joined #python
2019-12-08 23:52:16	InPhase	The import can go at the top.
2019-12-08 23:52:35	LightTate	working on an adventure game
2019-12-08 23:52:48	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2019-12-08 23:52:53	LightTate	text based*
2019-12-08 23:52:59	<--	mikami (~scurfee@broadband-77-37-146-212.ip.moscow.rt.ru) has quit (Ping timeout: 265 seconds)
2019-12-08 23:53:19	blackleitus	it doesnt show up the error
2019-12-08 23:53:21	-->	lxbarbosa (~user@2804:1b2:81:c7f6:ae43:1fee:5f96:4bf6) has joined #python
2019-12-08 23:53:23	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-08 23:53:44	LightTate	It's my first complex program so it's going to take a wile
2019-12-08 23:53:47	-->	Boko_edada (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has joined #python
2019-12-08 23:53:49	blackleitus	I also change to raise e
2019-12-08 23:53:57	<--	dougquaid (dougquaid@gateway/vpn/privateinternetaccess/dougquaid) has quit (Ping timeout: 240 seconds)
2019-12-08 23:54:48	LightTate	so many peps
2019-12-08 23:57:00	nedbat	ce6: what is "use-it or lose-it" in this context?
2019-12-08 23:57:11	blackleitus	I found it
2019-12-08 23:57:24	LightTate	ping
2019-12-08 23:57:28	LightTate	pong
2019-12-08 23:57:49	blackleitus	`TypeError: '<' not supported between instances of 'int' and 'str'
2019-12-08 23:57:50	blackleitus	`
2019-12-08 23:58:13	ce6	nedbat it's a change making problem. i have a solution i just dont understand it too well
2019-12-08 23:58:21	ChrisWarrick	blackleitus: You cannot compare strings and numbers.
2019-12-08 23:58:34	blackleitus	how can I compare it?
2019-12-08 23:58:37	<--	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has quit (Ping timeout: 240 seconds)
2019-12-08 23:58:44	<--	Boko_edada (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has quit (Write error: Connection reset by peer)
2019-12-08 23:58:46	ChrisWarrick	blackleitus: what are you trying to compare?
2019-12-08 23:58:47	LightTate	Novum are you an old user of this network ?
2019-12-08 23:58:57	ce6	i posted a stack overflow question about it and it went unanswered so ill paste it here
2019-12-08 23:59:00	blackleitus	I am trying to compare my counter against max results
2019-12-08 23:59:11	ce6	nedbat: https://stackoverflow.com/questions/59232255/i-cant-understand-the-use-it-or-lose-it-concept-change-making-problem
2019-12-08 23:59:20	<--	shady_traveller (~shady_tra@80.169.46.234) has quit (Quit: WeeChat 1.4)
2019-12-08 23:59:21	blackleitus	max results is an argument from command line while counter is the files downloaded
2019-12-08 23:59:32	ChrisWarrick	blackleitus: command-line arguments are strings, you’d need to make them integers
2019-12-08 23:59:48	ChrisWarrick	blackleitus: max_results = int(max_results_from_command_line)
2019-12-09 00:00:02	blackleitus	isnt that like variables ?
2019-12-09 00:00:14	<--	xcava (~xcava@net-93-151-212-86.cust.vodafonedsl.it) has quit (Quit: Leaving)
2019-12-09 00:00:17	ChrisWarrick	blackleitus: huh?
2019-12-09 00:00:52	<--	AhmedAmerican (c488047f@gateway/web/cgi-irc/kiwiirc.com/ip.196.136.4.127) has quit (Remote host closed the connection)
2019-12-09 00:01:11	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 00:02:13	blackleitus	if I declare a = 1 , type(a) = int , and command line string
2019-12-09 00:02:16	<--	Skripter (~Skripter@unaffiliated/skripter) has quit (Quit: Leaving)
2019-12-09 00:02:54	<--	mikekutz_ (~kutz@pool-96-250-117-189.nycmny.fios.verizon.net) has quit (Quit: WeeChat 2.6)
2019-12-09 00:02:56	-->	dougquaid (dougquaid@gateway/vpn/privateinternetaccess/dougquaid) has joined #python
2019-12-09 00:02:59	ChrisWarrick	blackleitus: you get strings from the command line, yes.  you can convert between types.
2019-12-09 00:03:27	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 00:03:29	blackleitus	let me check something
2019-12-09 00:06:06	novum	LightTate, the oldest. no one is older than me on irc. my hands are big. I know people they say my I am great and that I am the oldest irc user. those people are great. they know that I know that I am the best and oldest irc user.
2019-12-09 00:07:02	LightTate	is that a copy pasta ? Novum :D
2019-12-09 00:07:16	-->	joshisanonymous (~joshisano@2600:6c5a:457f:c4b5:49:1f6e:e28:aa9f) has joined #python
2019-12-09 00:07:37	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Ping timeout: 240 seconds)
2019-12-09 00:08:11	nedbat	LightTate: why are you asking about the network? #freebode might be a better channel for questions about Freenode
2019-12-09 00:08:34	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 250 seconds)
2019-12-09 00:08:56	LightTate	thanks NedBat
2019-12-09 00:09:18	-->	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has joined #python
2019-12-09 00:10:20	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-09 00:10:23	-->	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:9463:a896:20b:3ef4) has joined #python
2019-12-09 00:10:30	novum	LightTate, also try #freenode since #freebode may not .. bode well .. since there will probably be no one in there
2019-12-09 00:10:50	LightTate	saw that typo
2019-12-09 00:11:00	nedbat	oops
2019-12-09 00:11:06	novum	bednat, :D
2019-12-09 00:11:17	ce6	i wish there was a recursion channel
2019-12-09 00:11:30	ce6	but i might get an out of range answer so
2019-12-09 00:11:31	LightTate	I wish I was a genius
2019-12-09 00:11:42	blackleitus	some doubt , if I want to pass from aa to zz to my char field . how can I say if its download all pdfs or x extension from given string . in this case `aa` next `ab` etc. https://dpaste.org/h5iX
2019-12-09 00:12:15	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 00:12:25	<--	k0mmo (~k0mmo@unaffiliated/k0mmo) has quit (Quit: Leaving)
2019-12-09 00:12:35	novum	you mean 'jenius'? it's spelled with a 'j' after my middle name. everyone knows that. I know people they say I am a jenius. Your hair smells bad.
2019-12-09 00:13:59	-->	vlad-k (uid269188@gateway/web/irccloud.com/x-fekedgmtcftdkcjd) has joined #python
2019-12-09 00:14:19	<--	Lucas_Gray (~Wryhder@197.210.57.73) has quit (Read error: Connection reset by peer)
2019-12-09 00:14:59	<--	xrogaan (~xrogaan@unaffiliated/xrogaan) has quit (Quit: Leaving)
2019-12-09 00:16:37	-->	audioburn (~audioburn@unaffiliated/theology) has joined #python
2019-12-09 00:17:26	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 276 seconds)
2019-12-09 00:17:34	<--	vlad-k (uid269188@gateway/web/irccloud.com/x-fekedgmtcftdkcjd) has quit (Client Quit)
2019-12-09 00:17:57	<--	shredding (~shredding@x4d0d1c34.dyn.telefonica.de) has quit (Remote host closed the connection)
2019-12-09 00:18:06	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-09 00:18:12	-->	Skripter (~Skripter@unaffiliated/skripter) has joined #python
2019-12-09 00:18:25	-->	subho (~subho@fedora/subho) has joined #python
2019-12-09 00:18:44	-->	ap4lmtree (ap4lmtree@unaffiliated/ap4lmtree) has joined #python
2019-12-09 00:19:16	-->	Lucas_Gray (~Wryhder@197.210.52.34) has joined #python
2019-12-09 00:20:31	<--	nicolasnicolas (~nicolasni@167.99.80.52) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 00:20:44	<--	LightTate (~LightTate@46.97.169.61) has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
2019-12-09 00:21:30	-->	mcsippel (~mcsippel@97-93-29-122.dhcp.snlo.ca.charter.com) has joined #python
2019-12-09 00:22:03	<--	alexsuraphel (~alexsurap@197.156.77.75) has quit (Remote host closed the connection)
2019-12-09 00:22:47	-->	BeerLover (~BeerLover@103.72.10.227) has joined #python
2019-12-09 00:23:09	<--	RandomGuyOnIrc (~RandomGuy@159.203.179.249) has quit (Quit: leaving)
2019-12-09 00:24:47	-->	basoares (~basoares@xdsl-188-155-153-246.adslplus.ch) has joined #python
2019-12-09 00:25:28	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-09 00:25:51	ce6	nedbat any ideas lol
2019-12-09 00:27:06	<--	Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) has quit (Quit: AmigaOSv4.1.6+//PowerPC native)
2019-12-09 00:27:36	-->	Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) has joined #python
2019-12-09 00:28:20	altendky	are there good options other than building it yourself to get openssl <1.1 for pyenv installing 3.4 on ubuntu eoan?.
2019-12-09 00:28:44	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined #python
2019-12-09 00:29:53	<--	courrier (~yoan@147.210.204.186) has quit (Ping timeout: 245 seconds)
2019-12-09 00:30:16	<--	basoares (~basoares@xdsl-188-155-153-246.adslplus.ch) has quit (Ping timeout: 250 seconds)
2019-12-09 00:30:52	-->	saint__ (~saint_@unaffiliated/saint-/x-0540772) has joined #python
2019-12-09 00:30:55	<--	Lucas_Gray (~Wryhder@197.210.52.34) has quit (Read error: Connection reset by peer)
2019-12-09 00:30:58	-->	alexsuraphel (~alexsurap@197.156.77.75) has joined #python
2019-12-09 00:31:26	-->	medard (~medard@chello085216234107.chello.sk) has joined #python
2019-12-09 00:32:05	-->	jcarl43 (~jcarl@S01061c1b689d9d2f.vc.shawcable.net) has joined #python
2019-12-09 00:32:33	<--	saint_ (~saint_@unaffiliated/saint-/x-0540772) has quit (Ping timeout: 268 seconds)
2019-12-09 00:33:42	<--	lbalhar (~lbalhar@93.185.13.25) has quit (Ping timeout: 250 seconds)
2019-12-09 00:34:00	altendky	ce6: the addition only happens after you reach amount == 0.  you have `1 + change()` so the `+` can only happen after `change()` has returned which only happens after any call it makes to `change()` has returned, etc.
2019-12-09 00:39:28	--	irc: disconnected from server
2019-12-09 00:40:01	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-09 00:40:01	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-09 00:40:01	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-09 00:40:02	--	Channel #python: 1816 nicks (0 ops, 0 voices, 1816 normals)
2019-12-09 00:40:21	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-09 00:40:29	<--	glow8 (~mario@85.251.43.99.dyn.user.ono.com) has quit (Quit: WeeChat 2.6)
2019-12-09 00:40:41	-->	edlinde (~edlinde@183.83.146.106) has joined #python
2019-12-09 00:40:50	<--	indeedwatson (~yama@181.164.182.59) has quit (Ping timeout: 276 seconds)
2019-12-09 00:41:08	-->	iKON (~iKON@c-73-232-163-154.hsd1.tx.comcast.net) has joined #python
2019-12-09 00:41:17	<--	Lucas_Gray (~Wryhder@197.210.52.48) has quit (Ping timeout: 240 seconds)
2019-12-09 00:41:33	-->	fphilipe_ (~phil@81.6.34.65) has joined #python
2019-12-09 00:43:12	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 00:43:47	ce6	altendky so the + 1 is where we are using it and the statement removing a coin from the list is losing it?
2019-12-09 00:44:47	InPhase	ce6: Looks like you're using a reuse-it-or-lose-it algorithm.  Which is fine, that works for your problem.  handy is the reuse it case, handy2 is the lose it case, because the coin is lost from the list of possible coins.  However you have a second deviation because of your stop-reusing case under if, where you only lose it and don't reuse it.
2019-12-09 00:44:57	-->	BeerLove_ (~BeerBuddy@103.72.10.227) has joined #python
2019-12-09 00:45:26	<--	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has quit (Quit: Leaving)
2019-12-09 00:45:40	ce6	i see
2019-12-09 00:45:47	rendar	Successfully installed youtube-dl-2019.11.28
2019-12-09 00:45:48	rendar	 [rendar@tilt ~]0$  youtube-dl --version
2019-12-09 00:45:48	rendar	2019.01.17
2019-12-09 00:45:52	rendar	why is that?!
2019-12-09 00:46:03	InPhase	ce6: You can't hammer it into the simple case simply because it's a slightly different algorithm.  The real world is like that though, any time a problem doesn't exactly fit the textbook model.
2019-12-09 00:46:11	rendar	with pip i can install and update the package to the latest version, but when i launch the program it's the old version
2019-12-09 00:47:00	<--	therue (~rue@1-162-40-115.dynamic-ip.hinet.net) has quit (Quit: WeeChat 2.6)
2019-12-09 00:47:57	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2019-12-09 00:48:03	-->	flighteng (~flighteng@c-66-235-25-210.sea.wa.customer.broadstripe.net) has joined #python
2019-12-09 00:48:06	<--	jlf (~user@pdpc/supporter/active/jlf) has quit (Ping timeout: 265 seconds)
2019-12-09 00:48:07	_habnabit	rendar, your $PATH contains either both with the old version first or only the old version
2019-12-09 00:48:18	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-12-09 00:48:45	rendar	$  which youtube-dl
2019-12-09 00:48:45	rendar	/usr/bin/youtube-dl
2019-12-09 00:48:47	ce6	inphase, so it runs through the use branch first, then the lose it branch?
2019-12-09 00:48:50	rendar	that's all...
2019-12-09 00:49:05	_habnabit	rendar, which won't list >1 unless you do which -a
2019-12-09 00:49:05	rendar	_habnabit: shouldn't update update the old version?
2019-12-09 00:49:18	_habnabit	rendar, pip doesn't/can't change your $PATH
2019-12-09 00:49:31	altendky	rendar: don't run your system pip
2019-12-09 00:49:32	rendar	uhm
2019-12-09 00:50:15	-->	veevax (~veevax@212-198-32-77.rev.numericable.fr) has joined #python
2019-12-09 00:50:40	-->	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has joined #python
2019-12-09 00:51:33	InPhase	ce6: Recursion goes depth first, so it will use until it has to lose, then use as far as it can with one loss, and so on.
2019-12-09 00:52:20	_habnabit	rendar, ?
2019-12-09 00:52:38	-->	Ai9zO5AP (~BQcdf9eiZ@41.143.216.253) has joined #python
2019-12-09 00:52:47	rendar	_habnabit: yes it was the PATH thing, thanks
2019-12-09 00:52:48	rendar	solved
2019-12-09 00:52:56	InPhase	ce6: Although you could reorder the reuse and lose lines under the else, and the same result will be returned in the same time.  Both have to run eventually.
2019-12-09 00:53:40	-->	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has joined #python
2019-12-09 00:53:49	<--	Cabanossi (~Cabanossi@ppp-88-217-77-71.dynamic.mnet-online.de) has quit (Quit: Bye, bye...)
2019-12-09 00:54:15	-->	con3 (~kvirc@165.255.109.189) has joined #python
2019-12-09 00:54:20	ce6	inphase is the graph i have misleading? does the function actually know the return value yet
2019-12-09 00:54:36	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Ping timeout: 252 seconds)
2019-12-09 00:55:08	-->	Boko_eebaa (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has joined #python
2019-12-09 00:55:30	InPhase	ce6: The graph is fine, you just have to understand it's a depth-first tree traversal of that graph.
2019-12-09 00:55:57	-->	indeedwatson (~yama@181.164.182.59) has joined #python
2019-12-09 00:56:00	ce6	i see the order of execution with the arrows
2019-12-09 00:56:16	InPhase	ce6: The arrows do not show the order of execution.
2019-12-09 00:56:19	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 00:56:45	ce6	does it show what is retunred first and alst?
2019-12-09 00:56:49	ce6	im confused then
2019-12-09 00:56:59	InPhase	ce6: Exceution goes from the leftmost cell to the change(1, [2, 3]) cell to its right, for example.
2019-12-09 00:57:00	ce6	let me look at the docs
2019-12-09 00:57:07	ce6	for rcviz
2019-12-09 00:57:16	<--	stranac (~stranac@193.14.245.77) has quit (Ping timeout: 265 seconds)
2019-12-09 00:57:31	<--	gloomy (~Gloomy@x4d0bbca5.dyn.telefonica.de) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 00:57:33	ce6	order of traversal
2019-12-09 00:57:41	<--	parabolize (~paraboliz@c-76-25-97-149.hsd1.co.comcast.net) has quit (Quit: leaving)
2019-12-09 00:58:23	InPhase	ce6: Technically it returns up through the chain to the parent node and then back down, but for graph representation a shorthand of this is usually done of just showing the "interesting" parts, which is which node is doing work.
2019-12-09 00:59:02	<--	xy2_ (~xy2_@94.239.177.175) has quit (Ping timeout: 276 seconds)
2019-12-09 00:59:12	<--	sincorchetes (~sincorche@unaffiliated/sincorchetes) has quit (Quit: Leaving)
2019-12-09 01:00:07	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-09 01:00:19	<--	pcloadltr (~pcloadltr@185.229.59.215) has left #python ("Leaving")
2019-12-09 01:00:25	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 01:00:46	<--	bill_kid (~bill@8.40.194.20) has quit (Quit: leaving)
2019-12-09 01:00:51	<--	Boko_eebaa (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has quit (Read error: Connection reset by peer)
2019-12-09 01:01:10	<--	con3 (~kvirc@165.255.109.189) has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
2019-12-09 01:01:11	-->	xy2_ (~xy2_@94.239.177.175) has joined #python
2019-12-09 01:01:20	<--	Trashlord (~trash@wikipedia/Sentient-Planet) has quit (Quit: "Tell him: 'the liberator who destroyed my property has realigned my perception.'")
2019-12-09 01:02:00	-->	jolvera (uid366386@gateway/web/irccloud.com/x-prczhlsnzluhfzjp) has joined #python
2019-12-09 01:02:36	InPhase	ce6: Excuse the accidental crossings, but I hope this is sufficient to illustrate the flow.  https://i.imgur.com/3N2tJO8.png
2019-12-09 01:02:40	ce6	you said leftmost first right, so what exactly happens after change(0, [1, 2 3]
2019-12-09 01:02:45	ce6	let me see
2019-12-09 01:02:58	-->	courrier (~yoan@2pl44-h01-176-136-159-243.dsl.sta.abo.bbox.fr) has joined #python
2019-12-09 01:03:26	<--	BeerLove_ (~BeerBuddy@103.72.10.227) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 01:03:34	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 01:03:55	ce6	how does it know to go back up?
2019-12-09 01:04:06	InPhase	ce6: The function returning is going up.
2019-12-09 01:04:24	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 01:04:35	InPhase	ce6: Every function returns to the one that called it.
2019-12-09 01:04:54	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 250 seconds)
2019-12-09 01:04:58	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Ping timeout: 240 seconds)
2019-12-09 01:05:04	-->	tempate (~tempate@unaffiliated/tempate) has joined #python
2019-12-09 01:05:05	-->	Cabanossi (~Cabanossi@ppp-88-217-77-71.dynamic.mnet-online.de) has joined #python
2019-12-09 01:05:12	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-09 01:05:48	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 01:05:56	tempate	I recall there being a way of printing a string substituting zeros for spaces. Is it true or have I dreamt it?
2019-12-09 01:06:46	-->	sauvin (sauvin@about/linux/staff/sauvin) has joined #python
2019-12-09 01:06:50	-->	Ruhan (uid76353@gateway/web/irccloud.com/x-oauektfvfjzahljy) has joined #python
2019-12-09 01:07:01	ce6	when does it call min?
2019-12-09 01:07:03	_habnabit	tempate, you might be thinking of ways to format numbers into strings which does that
2019-12-09 01:07:23	<--	jcarl43 (~jcarl@S01061c1b689d9d2f.vc.shawcable.net) has quit (Ping timeout: 245 seconds)
2019-12-09 01:07:31	InPhase	ce6: Every time it returns from a node that has two branches beneath it.
2019-12-09 01:07:37	tempate	maybe, I honestly don't remember
2019-12-09 01:07:44	-->	keepguessing (~superman@c-73-93-87-220.hsd1.ca.comcast.net) has joined #python
2019-12-09 01:07:57	<--	Mattiaslndstrm (~Mattiasln@c-136be555.018-449-6e6b701.bbcust.telenor.se) has quit (Ping timeout: 240 seconds)
2019-12-09 01:08:03	tempate	I saw it once some years ago and thought to myself: 'Oh, that's neat!'. But that's about it.
2019-12-09 01:08:13	-->	Mrbuck (~Mrbuck@ec2-34-198-47-188.compute-1.amazonaws.com) has joined #python
2019-12-09 01:08:17	<--	Silmarilion (~Silmarili@87.116.177.1) has quit (Read error: Connection reset by peer)
2019-12-09 01:08:21	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 246 seconds)
2019-12-09 01:08:50	ce6	but for change(1, [1, 2 3]), the min between 0 and infinity isnt 1
2019-12-09 01:08:54	ce6	it's 0
2019-12-09 01:08:55	nedbat	tempate: "{:08d}".format(12)  -->  "00000012"
2019-12-09 01:09:17	InPhase	ce6: It's not doing min on the return values.  It's doing min on the left return value +1, and the right return value.
2019-12-09 01:09:31	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 268 seconds)
2019-12-09 01:10:03	ce6	oh i see
2019-12-09 01:10:09	-->	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has joined #python
2019-12-09 01:10:18	<--	medard (~medard@chello085216234107.chello.sk) has quit (Ping timeout: 245 seconds)
2019-12-09 01:10:51	InPhase	ce6: Every left branch is a use, and you're counting the uses.
2019-12-09 01:10:59	ce6	so that would make it between 1 and inf
2019-12-09 01:11:19	InPhase	Right.
2019-12-09 01:11:35	ce6	then it essentially adds up
2019-12-09 01:11:55	<--	delvian (~delvian@41.13.228.203) has quit (Quit: Keep your head low (modesty), eyes high (ambition) and mouth shut (serenity).)
2019-12-09 01:11:55	-->	Boko_eebea (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has joined #python
2019-12-09 01:12:15	<--	indeedwatson (~yama@181.164.182.59) has quit (Ping timeout: 250 seconds)
2019-12-09 01:12:41	tempate	nedbat: that's not it. Never mind. It might have been a dream after all.
2019-12-09 01:13:47	InPhase	ce6: For another way of looking at it, the algorithm returns one less than the least number of left branches in a downward path that eventually terminate in a 0.
2019-12-09 01:13:50	ce6	so if we didnt add one, it would return 0 everytime?
2019-12-09 01:14:21	-->	medard (~medard@chello085216234107.chello.sk) has joined #python
2019-12-09 01:14:25	-->	kitxkat (~kitxkat@2407:7000:8c2f:d00:288f:386b:8a69:8560) has joined #python
2019-12-09 01:14:57	InPhase	ce6: Sorry, not one less.  It returns exactly the number of left branches in that downward path.
2019-12-09 01:15:07	<--	Boko_eebea (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has quit (Write error: Connection reset by peer)
2019-12-09 01:15:13	InPhase	ce6: Each left branch being a use.
2019-12-09 01:15:57	ce6	could you sketch tat hout
2019-12-09 01:16:01	ce6	*sketch that out
2019-12-09 01:16:20	InPhase	ce6: change(0, [3]) is the winning case, third from the right.  Count the uses going up from there.
2019-12-09 01:18:04	InPhase	ce6: For comparison, ignore the return values and count the uses for the leftmost branch.  (You should get 5 coins used.)
2019-12-09 01:18:34	-->	Boko_eeedd (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has joined #python
2019-12-09 01:18:38	-->	Mattiaslndstrm (~Mattiasln@c-136be555.018-449-6e6b701.bbcust.telenor.se) has joined #python
2019-12-09 01:18:38	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 01:21:28	<--	crmaurei (crmaurei@nat/qt/x-jxjttjroyhqlcrms) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2019-12-09 01:22:20	<--	__marco (~marco@2a02:678:588:f800:e6a4:71ff:fef2:bce6) has quit (Quit: Leaving)
2019-12-09 01:22:54	<--	Mrbuck (~Mrbuck@ec2-34-198-47-188.compute-1.amazonaws.com) has quit (Remote host closed the connection)
2019-12-09 01:22:57	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 01:23:05	<--	sagittarian (~kvirc@188.120.155.135) has quit (Ping timeout: 250 seconds)
2019-12-09 01:26:08	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-09 01:27:06	<--	framend (~framend@unaffiliated/framend) has quit (Quit: WeeChat 2.6)
2019-12-09 01:27:24	<--	Boko_eeedd (~smokevadi@cgn-pool-83-219-136-167.tis-dialog.ru) has quit (Write error: Connection reset by peer)
2019-12-09 01:27:29	-->	abhixec (~abhixec@73.92.49.6) has joined #python
2019-12-09 01:27:30	-->	dctrud (~dctrud@2001:19f0:6401:16c7:5400:2ff:fe71:41c3) has joined #python
2019-12-09 01:28:01	-->	Bird|otherbox (~HTT-Bird@unaffiliated/htt-bird) has joined #python
2019-12-09 01:28:05	-->	Wetmelon (~wetmelon@66-169-41-35.dhcp.gnvl.sc.charter.com) has joined #python
2019-12-09 01:29:14	-->	sameerynho (~lxsameer@unaffiliated/lxsameer) has joined #python
2019-12-09 01:30:14	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2019-12-09 01:30:20	ce6	inphase: https://i.imgur.com/qbV23gg.gif
2019-12-09 01:34:36	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 01:34:45	<--	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has quit (Quit: Leaving)
2019-12-09 01:35:52	InPhase	ce6: Left +1 at the top node makes that path have value 3.
2019-12-09 01:36:12	-->	Horzagger (~stockthx@gateway/tor-sasl/horzagger) has joined #python
2019-12-09 01:36:29	CrtxReavr	In python3, when you have bytes, but need a string, do you .decode() or .decode('utf-8') ?
2019-12-09 01:36:39	InPhase	ce6: If you trace the coins used, from top down it used 1, 1, 3.
2019-12-09 01:36:49	CrtxReavr	I get utf-8 is the default, but somehow it seems sloppy to not specify.
2019-12-09 01:37:02	cdunklau	CrtxReavr: the latter, usually, modulo whatever encoding you actually expect
2019-12-09 01:37:20	_habnabit	CrtxReavr, it isn't.. always the default
2019-12-09 01:37:48	ce6	inphase but i thought change(0, [3]) was the winning case?
2019-12-09 01:37:51	CrtxReavr	'k
2019-12-09 01:37:53	CrtxReavr	Thanks.
2019-12-09 01:37:55	-->	ferdna (~ferdna@cpe-69-23-148-218.elp.res.rr.com) has joined #python
2019-12-09 01:38:01	ce6	if it goes to 3 that wouldnt be the min right?
2019-12-09 01:38:01	InPhase	ce6: The one third from the right.
2019-12-09 01:38:02	cdunklau	_habnabit: when isn't it?
2019-12-09 01:38:04	<--	alexsuraphel (~alexsurap@197.156.77.75) has quit (Remote host closed the connection)
2019-12-09 01:38:20	-->	traptrip (trip@brigaid.xs4all.nl) has joined #python
2019-12-09 01:38:21	_habnabit	cdunklau, god, i can't remember the specific case. i'd have to dig it up
2019-12-09 01:38:23	cdunklau	_habnabit: https://docs.python.org/3/library/stdtypes.html#bytes.decode doesn't seem to provide room
2019-12-09 01:38:30	InPhase	ce6: I'll let you trace that one third from the right, and you tell me which coins it used.
2019-12-09 01:38:50	<--	ananke (~ananke@about/linux/regular/ananke) has quit (Ping timeout: 265 seconds)
2019-12-09 01:39:13	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 01:39:13	InPhase	ce6: The differences in the amount can help you see which coin was used.
2019-12-09 01:39:20	ce6	well coins 2 and 3
2019-12-09 01:39:22	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined #python
2019-12-09 01:39:35	InPhase	ce6: Right, which by inspection is also the correct answer.
2019-12-09 01:40:37	-->	wingsorc (~wingsorc@unaffiliated/wingsorc) has joined #python
2019-12-09 01:40:37	CrtxReavr	WTF
2019-12-09 01:40:38	<--	Mattiaslndstrm (~Mattiasln@c-136be555.018-449-6e6b701.bbcust.telenor.se) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 01:40:49	<--	Secret-Fire (~Secret-Fi@97.115.222.240) has quit (Remote host closed the connection)
2019-12-09 01:40:58	-->	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has joined #python
2019-12-09 01:40:59	blackleitus	to speed up a bit more , how can I implement asyncio , and beatifulsoup into this simple example? https://dpaste.org/6tDP
2019-12-09 01:41:00	CrtxReavr	I just did a quick port of an old script of mine from 2.7 to 3.x and now it's running a lot slower.
2019-12-09 01:41:11	ce6	so that first node on the right has a difference of 2, then change3, 3 has a difference of 3 right?
2019-12-09 01:41:44	<--	meethoss (~pun84@pool-108-24-164-226.cmdnnj.fios.verizon.net) has quit (Read error: Connection reset by peer)
2019-12-09 01:41:56	<--	cxzxczxcxzc (~cxzxczxcx@unaffiliated/cxzxczxcxzc) has quit (Ping timeout: 276 seconds)
2019-12-09 01:42:10	cdunklau	blackleitus: well, start by breaking that up into individual functions, so that each thing has single, distinct responsibility
2019-12-09 01:42:18	ce6	why doesnt change3, [2, 3]) return a 2?
2019-12-09 01:42:42	ce6	oh youre adding to inf
2019-12-09 01:43:12	-->	pun84 (~pun84@pool-108-24-164-226.cmdnnj.fios.verizon.net) has joined #python
2019-12-09 01:43:16	cdunklau	blackleitus: but really, if you're writing a scraper, just use scrapy
2019-12-09 01:43:44	-->	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has joined #python
2019-12-09 01:44:09	<--	mcsippel (~mcsippel@97-93-29-122.dhcp.snlo.ca.charter.com) has quit (Ping timeout: 265 seconds)
2019-12-09 01:44:18	blackleitus	I did , but a simple ones that downloads in parallel files , but how can I implement asyncio with bs4 /
2019-12-09 01:44:47	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Remote host closed the connection)
2019-12-09 01:45:01	blackleitus	it tooks 7s for 5 pdfs `Asynchronous exec took 7.152557373046875e-07 seconds
2019-12-09 01:45:01	blackleitus	`
2019-12-09 01:45:02	-->	Secret-Fire (~Secret-Fi@97.115.222.240) has joined #python
2019-12-09 01:45:38	InPhase	ce6: My advice is to now go back to the code, and remap your understanding of the tree onto the code.
2019-12-09 01:46:04	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 01:46:23	ce6	maybe i can make it print out the list of coins it used
2019-12-09 01:46:29	InPhase	ce6: The goal is to build an intuition for that sort of recursion approach.
2019-12-09 01:47:31	-->	subho (~subho@fedora/subho) has joined #python
2019-12-09 01:49:37	<--	medard (~medard@chello085216234107.chello.sk) has quit (Ping timeout: 240 seconds)
2019-12-09 01:51:07	<--	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has quit (Quit: WeeChat 2.6)
2019-12-09 01:51:08	ce6	inphase so if i wanted to get the list of coins used, i would have to figure out how to get the differences in the amount right?
2019-12-09 01:51:59	-->	a90c (~androirc@unaffiliated/a90c) has joined #python
2019-12-09 01:52:09	cdunklau	blackleitus: i don't really know what kind of an answer you're expecting
2019-12-09 01:52:23	cdunklau	"how do i do X with Y" is entirely too broad
2019-12-09 01:52:40	-->	sauvin_ (sauvin@about/linux/staff/sauvin) has joined #python
2019-12-09 01:53:10	-->	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has joined #python
2019-12-09 01:53:18	-->	DeadTOm (~deadtom@2001:4b98:dc0:41:216:3eff:fe58:44d0) has joined #python
2019-12-09 01:53:44	InPhase	ce6: Look in your code at how the difference happens.  You did the subtraction.
2019-12-09 01:53:49	ikanobori	Especially when they don't seem related at first glance.
2019-12-09 01:54:31	blackleitus	I am trying to implement asyncio with bs4 , but should I use asyncio in all the code or only where I need to?
2019-12-09 01:54:36	altendky	it's not clear that they want to do concurrent downloads with asyncio (perhaps 'mean' any async library) and presently have code that uses bs4?
2019-12-09 01:54:49	ce6	yeah amount-coin[0]
2019-12-09 01:54:54	a90c	when i wanted to read a long sentence in csv using pandas read, i got that:
2019-12-09 01:54:56	<--	BTRE (~BTRE@unaffiliated/btre) has quit (Ping timeout: 276 seconds)
2019-12-09 01:55:01	ce6	*coins[0]
2019-12-09 01:55:08	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 01:55:09	<--	sauvin (sauvin@about/linux/staff/sauvin) has quit (Ping timeout: 268 seconds)
2019-12-09 01:55:15	a90c	UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 32: invalid continuation byte
2019-12-09 01:55:15	a90c	data = pd.read_csv("example3.csv",low_memory=False)
2019-12-09 01:55:20	--	sauvin_ is now known as sauvin
2019-12-09 01:55:22	<--	h4rd3n3D1 (~weechat@gateway/tor-sasl/h4rd3n3d) has quit (Quit: h4rd3n3D1)
2019-12-09 01:55:29	a90c	How to fix it?
2019-12-09 01:55:33	-->	hussar (hussar@gateway/vpn/protonvpn/hussar) has joined #python
2019-12-09 01:55:38	nedbat	a90c: looks like your csv file isn't utf8
2019-12-09 01:55:47	nedbat	a90c: do you know what language the content is?
2019-12-09 01:55:49	<--	veevax (~veevax@212-198-32-77.rev.numericable.fr) has quit (Quit: Leaving.)
2019-12-09 01:56:30	<--	FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) has quit (Remote host closed the connection)
2019-12-09 01:56:32	a90c	nedbat: that make sense sir. i am going to check it using file example.csv command
2019-12-09 01:56:57	<--	kosh (~kosh@p4FF4B534.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2019-12-09 01:57:22	Wulf	0xf0 might be https://en.wikipedia.org/wiki/Eth which isn't really used
2019-12-09 01:57:41	nedbat	Wulf: it's used a lot in Iceland
2019-12-09 01:57:41	<--	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has quit (Ping timeout: 265 seconds)
2019-12-09 01:57:59	a90c	Yes it is eth
2019-12-09 01:58:09	Wulf	never mind, I misread the wiki page
2019-12-09 01:58:17	CrtxReavr	20x slower. . . .
2019-12-09 01:58:18	ce6	inphase, could i also think of 1 + as the depth of the branch?
2019-12-09 01:58:52	altendky	CrtxReavr: would you like to share your two scripts so we can look at them?  also, what are the actual runtimes?
2019-12-09 01:58:54	ce6	well i dont think i can actually because of the min
2019-12-09 01:59:01	Wulf	a90c: try to open the file with cp1252 encoding
2019-12-09 01:59:23	a90c	Wulf: and then convert to utf8?
2019-12-09 01:59:38	CrtxReavr	altendky, 0m0.491s vs. 0m8.920s
2019-12-09 01:59:44	CrtxReavr	Same task & dataset.
2019-12-09 02:00:05	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 268 seconds)
2019-12-09 02:00:12	<--	oragadam (7aae3633@122.174.54.51) has quit (Remote host closed the connection)
2019-12-09 02:00:28	a90c	Wulf: oh wait sorry, i get it thanks
2019-12-09 02:00:30	Wulf	a90c: no need to "convert"
2019-12-09 02:00:36	<--	mpmc (~mpmc@unaffiliated/mpmc) has quit (Quit: ZNC - https://znc.in)
2019-12-09 02:01:03	<--	tempate (~tempate@unaffiliated/tempate) has left #python
2019-12-09 02:01:25	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-09 02:01:38	a90c	nedbat: thank you too.
2019-12-09 02:02:08	-->	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has joined #python
2019-12-09 02:02:29	cdunklau	CrtxReavr: can you post it?
2019-12-09 02:02:31	<--	soniya29 (~soniya@2409:4042:2684:adcf:316f:ddcd:7c6a:cc9d) has quit (Ping timeout: 250 seconds)
2019-12-09 02:02:38	<--	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has quit (Client Quit)
2019-12-09 02:03:09	<--	rendar (~rendar@unaffiliated/rendar) has quit
2019-12-09 02:03:37	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2019-12-09 02:04:34	ce6	inphase, could i have another hint lol
2019-12-09 02:04:42	-->	causasui (~causasui@wikipedia/causa-sui) has joined #python
2019-12-09 02:04:58	InPhase	ce6: About?
2019-12-09 02:05:03	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-09 02:05:13	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 02:05:19	ce6	how i could get it to display the coins i used
2019-12-09 02:05:20	<--	juanfra (~juanfra@unaffiliated/juanfra) has quit (Quit: juanfra)
2019-12-09 02:05:32	InPhase	ce6: Display it when you use them.
2019-12-09 02:05:37	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 240 seconds)
2019-12-09 02:06:03	-->	mcsippel (~mcsippel@97-93-29-122.dhcp.snlo.ca.charter.com) has joined #python
2019-12-09 02:06:16	-->	veevax (~veevax@212-198-32-77.rev.numericable.fr) has joined #python
2019-12-09 02:06:26	-->	Mr0rris0 (m@gateway/vpn/privateinternetaccess/mr0rris0) has joined #python
2019-12-09 02:06:53	CrtxReavr	cdunklau, I'm gonna troubleshoot further. .. but I think subprocess in python3 is being slower.
2019-12-09 02:07:17	<--	cjt0 (~chris@49.95.187.81.in-addr.arpa) has quit (Ping timeout: 276 seconds)
2019-12-09 02:07:23	InPhase	ce6: I don't know how you're generating your tree plot in the first place.  If you want to pass it into your function you could add a coin_used=None parameter, and pass in coin[0] when you use it, so the left nodes know that a coin was used to get there.
2019-12-09 02:07:38	-->	setham (~textual@unaffiliated/setham) has joined #python
2019-12-09 02:07:43	-->	dennington (~denny@ool-435034b9.dyn.optonline.net) has joined #python
2019-12-09 02:07:45	CrtxReavr	Plus, this is. . . actualy the very 2nd realworld pythong script I ever wrote years, and I don't need everyone's comments.
2019-12-09 02:07:50	ce6	inphase look up rcviz on github
2019-12-09 02:07:56	ce6	it generates a callgraph
2019-12-09 02:08:05	ce6	for a function you give it
2019-12-09 02:08:12	<--	lxbarbosa (~user@2804:1b2:81:c7f6:ae43:1fee:5f96:4bf6) has quit (Ping timeout: 246 seconds)
2019-12-09 02:08:40	-->	cxzxczxcxzc (~cxzxczxcx@unaffiliated/cxzxczxcxzc) has joined #python
2019-12-09 02:08:52	InPhase	ce6: Then a coin_used parameter would work for the call graph, although it serves no purpose for the algorithm.
2019-12-09 02:09:14	<--	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has quit (Ping timeout: 276 seconds)
2019-12-09 02:09:26	-->	cdown (~cdown@89.32.122.5) has joined #python
2019-12-09 02:09:26	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 02:10:19	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 250 seconds)
2019-12-09 02:10:34	ce6	crtxreavr how do you expect your software to get better if you dont allow criticism
2019-12-09 02:10:38	-->	[Solaris] (~AnimatorO@cpc156959-cani4-2-0-cust14.14-2.cable.virginm.net) has joined #python
2019-12-09 02:12:15	CrtxReavr	ce6, it is better. . . this like 7 years ago me.
2019-12-09 02:12:21	<--	setham (~textual@unaffiliated/setham) has quit (Client Quit)
2019-12-09 02:12:43	CrtxReavr	I just did a quick fixup to make it work for python3.
2019-12-09 02:12:50	cdunklau	CrtxReavr: profile it
2019-12-09 02:12:53	-->	__stranac__ (~stranac@193.14.245.77) has joined #python
2019-12-09 02:13:04	--	__stranac__ is now known as stranac
2019-12-09 02:15:51	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined #python
2019-12-09 02:15:54	ce6	inphase im still not getting why +1 works,
2019-12-09 02:16:22	<--	Secret-Fire (~Secret-Fi@97.115.222.240) has quit (Remote host closed the connection)
2019-12-09 02:16:44	<--	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has quit (Ping timeout: 252 seconds)
2019-12-09 02:16:49	-->	Secret-Fire (~Secret-Fi@97.115.222.240) has joined #python
2019-12-09 02:17:21	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-09 02:17:46	ce6	or the purpose
2019-12-09 02:17:58	ce6	i understand that if you dont have it everything returns 0,
2019-12-09 02:18:15	ce6	because the +1 allows you to min, but why +!
2019-12-09 02:18:20	<--	panikovsky (~panikovsk@31.23.16.18) has quit (Ping timeout: 276 seconds)
2019-12-09 02:18:21	ce6	*+1
2019-12-09 02:18:35	<--	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has quit (Ping timeout: 268 seconds)
2019-12-09 02:18:39	-->	subho (~subho@fedora/subho) has joined #python
2019-12-09 02:19:12	<--	CoolerX (~coolerext@14.139.38.136) has quit (Ping timeout: 268 seconds)
2019-12-09 02:20:17	-->	frrs (uid130725@gateway/web/irccloud.com/x-ftfnptsjjukomymb) has joined #python
2019-12-09 02:20:48	ce6	does it allow us to count the number of uses?
2019-12-09 02:21:52	blackleitus	I implemented in a piece of code , and it works as I want to , but I Have an issue it downloads the same file , but if I remove `while couter < max_results` it works as expected https://dpaste.org/d7ho
2019-12-09 02:22:09	-->	led1 (~Thunderbi@217.66.160.14) has joined #python
2019-12-09 02:23:17	InPhase	ce6: That is exactly what it does.
2019-12-09 02:23:31	<--	bdeshi (~bdeshi@103.55.145.99) has quit (Remote host closed the connection)
2019-12-09 02:23:48	<--	edlinde (~edlinde@183.83.146.106) has quit (Quit: edlinde)
2019-12-09 02:23:57	<--	whaley (~whaley@99-96-74-127.lightspeed.gnvlsc.sbcglobal.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-12-09 02:24:05	-->	AcousticDan (~dan@67-198-56-103.static.grandenetworks.net) has joined #python
2019-12-09 02:24:08	-->	ffs (uid158779@gateway/web/irccloud.com/x-puneajfcquqyvjpv) has joined #python
2019-12-09 02:24:32	blackleitus	how can I keep the same as before download the different files?
2019-12-09 02:24:32	kitxkat	what framework you guys use? what should i learn?
2019-12-09 02:25:17	-->	juanfra (~juanfra@unaffiliated/juanfra) has joined #python
2019-12-09 02:25:39	<--	joshisanonymous (~joshisano@2600:6c5a:457f:c4b5:49:1f6e:e28:aa9f) has quit (Quit: Leaving)
2019-12-09 02:25:42	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-09 02:25:48	<--	led1 (~Thunderbi@217.66.160.14) has quit (Client Quit)
2019-12-09 02:25:55	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 02:26:45	<--	AcousticDan (~dan@67-198-56-103.static.grandenetworks.net) has quit (Client Quit)
2019-12-09 02:27:03	nedbat	kitxkat: use for what?
2019-12-09 02:27:16	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-09 02:27:25	royal_screwup21	what's the best way to read in the input for this question? https://www.urionlinejudge.com.br/judge/en/problems/view/2524 I essentially have to read two lines for each test-case. I was thinking, `for line in sys.stdin` but that just gives me the first line. I'd have to manually keep track of line numbers to make sure I'm reading the right line for
2019-12-09 02:27:26	royal_screwup21	a given test -- that seems a bit unwiedly...is there a better way to read the input?
2019-12-09 02:27:30	-->	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has joined #python
2019-12-09 02:28:14	<--	juanfra (~juanfra@unaffiliated/juanfra) has quit (Client Quit)
2019-12-09 02:28:22	kitxkat	nedbat, i'm currently learning django, wanna use it as web interface for some network app, you see networking is my passion.
2019-12-09 02:28:49	-->	juanfra (~juanfra@unaffiliated/juanfra) has joined #python
2019-12-09 02:29:07	-->	IaMnEwHeRe (~IaMnEwHeR@185.246.130.63) has joined #python
2019-12-09 02:29:08	IaMnEwHeRe	#rust
2019-12-09 02:29:30	kitxkat	you forgot a magic /join :D
2019-12-09 02:30:15	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 250 seconds)
2019-12-09 02:30:34	nedbat	kitxkat: django is fine choice for building web apps
2019-12-09 02:30:37	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2019-12-09 02:31:00	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-09 02:31:32	kitxkat	what library(ies) are used to monitor network traffic and network connections ?
2019-12-09 02:31:44	IaMnEwHeRe	kitxkat, no I didn't but my client put the focus on the new window before I could finish that join, it is in another window -.-
2019-12-09 02:32:00	IaMnEwHeRe	kitxkat, what do you mean by monitor?
2019-12-09 02:32:03	<--	piperlester (~textual@217.138.200.172) has quit (Quit: Bye.)
2019-12-09 02:32:08	IaMnEwHeRe	devops or debugging like?
2019-12-09 02:32:30	IaMnEwHeRe	and also do you really want libraries, or applications?
2019-12-09 02:32:37	<--	courrier (~yoan@2pl44-h01-176-136-159-243.dsl.sta.abo.bbox.fr) has quit (Quit: courrier)
2019-12-09 02:32:42	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2019-12-09 02:32:45	-->	dualinity (5248af28@82-72-175-40.cable.dynamic.v4.ziggo.nl) has joined #python
2019-12-09 02:32:50	dualinity	hi there, posted my recent project on hackernews: https://news.ycombinator.com/item?id=21737427
2019-12-09 02:33:02	dualinity	it's about using machine learning for compression :)
2019-12-09 02:33:07	ce6	inphase oh i see now the oins
2019-12-09 02:33:12	IaMnEwHeRe	kitxkat, you could look into scipy(?)
2019-12-09 02:33:17	ce6	with that coin_used parameter
2019-12-09 02:33:18	kitxkat	your quesiton confuses me, im new to coding.
2019-12-09 02:33:22	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-09 02:33:38	kitxkat	i just tought i can build a network monitoring tool running on my pi
2019-12-09 02:33:48	kitxkat	and don't quite know where to start.
2019-12-09 02:33:51	altendky	IaMnEwHeRe: scapy?
2019-12-09 02:33:56	<--	Leonarbro (~Leonarbro@S01067824af93741c.cg.shawcable.net) has quit (Ping timeout: 276 seconds)
2019-12-09 02:34:11	IaMnEwHeRe	altendky, yes, long time since I used that name, thank you
2019-12-09 02:34:22	IaMnEwHeRe	kitxkat, what you want is a tool
2019-12-09 02:34:32	-->	renlolo (~lhoward@2600:1017:b81e:ffa:812:d0ca:ff9:1929) has joined #python
2019-12-09 02:34:35	altendky	unless they want to build a tool using a library
2019-12-09 02:34:46	IaMnEwHeRe	not a library, monitoring network-activity requires interaction with the kernel,
2019-12-09 02:35:10	IaMnEwHeRe	kitxkat, look at intrusion detection-systems IDS
2019-12-09 02:35:12	<--	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has quit (Quit: ZNC 1.7.5 - https://znc.in)
2019-12-09 02:35:16	-->	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has joined #python
2019-12-09 02:35:29	IaMnEwHeRe	btw what is your use-case what exactly do you want to do?
2019-12-09 02:35:39	InPhase	dualinity: Can you clarify "the features of the data (not the data itself) will be added to the python package on the next release"
2019-12-09 02:35:44	altendky	IaMnEwHeRe: 'network monitoring' to 'you can not use a library' seems a bit of a jump
2019-12-09 02:35:46	kitxkat	is python good for what i'm trying to do? should i stop and move on to a lower level language like c?
2019-12-09 02:35:57	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-09 02:36:02	dualinity	InPhase: so I record things like "how many rows, columns, how many string vars etc"
2019-12-09 02:36:05	InPhase	dualinity: Features are pieces of information that reconstruct the data.  This sounds like information leak.
2019-12-09 02:36:25	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-09 02:36:26	dualinity	a unique dataset could be identifiable indeed
2019-12-09 02:36:33	dualinity	if it lives in the public domain
2019-12-09 02:36:37	-->	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has joined #python
2019-12-09 02:36:47	InPhase	dualinity: Perhaps you don't mean "features" in the way it's used in machine learning.
2019-12-09 02:36:51	dualinity	but if you are afraid of sharing your personal CSV, then you wouldn't need to be afraid because it cannot reconstruct the original data
2019-12-09 02:36:54	IaMnEwHeRe	altendky, that is not what I said,  but starting to program and then wanting to monitor network-connections MITM, is sort of a very steep learning-curve, I fear kitxkat is suffering from an XY-problem
2019-12-09 02:36:59	-->	CrowX- (~CrowX-@185.167.46.134) has joined #python
2019-12-09 02:37:08	dualinity	InPhase: it's exactly how i mean it in machine learning :)
2019-12-09 02:37:17	Y0rick	meta-k /input grab_key_command
2019-12-09 02:37:21	IaMnEwHeRe	kitxkat, what exactly do you want to do?
2019-12-09 02:37:25	dualinity	let me show you a link
2019-12-09 02:37:30	altendky	IaMnEwHeRe: i fully support your query for more context (without suggesting you need my support...)
2019-12-09 02:37:42	dualinity	https://github.com/kootenpv/shrynk/blob/master/shrynk/classes/pandas_.py#L203
2019-12-09 02:37:44	kitxkat	o.O i feel so stupid now....
2019-12-09 02:37:54	InPhase	dualinity: Features used in something like a compressed text file might include the words used in my text file.
2019-12-09 02:38:01	altendky	kitxkat: you want to monitor your network.  what about it?
2019-12-09 02:38:17	dualinity	I posted the few lines that show the features I'm capturing :)
2019-12-09 02:38:20	InPhase	dualinity: A feature might even include multi-word pairings in a text file.
2019-12-09 02:38:42	dualinity	you're thinking like text features from a text, but this is more like "meta info"
2019-12-09 02:38:44	kitxkat	like... connected hosts, and the traffic. wanna have a web interface that shows me what host used how much traffic and stuff like top visited sites
2019-12-09 02:38:46	dualinity	still features
2019-12-09 02:39:15	-->	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has joined #python
2019-12-09 02:39:27	InPhase	dualinity: Well, I would recommend clarifying that when you first mention it so you don't scare away a lot of users.
2019-12-09 02:39:37	IaMnEwHeRe	kitxkat, your OS will provide a very coarse overview of that already
2019-12-09 02:39:42	energizer	dualinity: am i getting this right? you try a several compression algorithms on a sample of the data, see which one performs best, and use that one to compress the whole file?
2019-12-09 02:40:23	dualinity	energizer: nope! I compress whole files, that is the sample, i compute features, like let's keep it simple and say only number of rows and number of columns
2019-12-09 02:40:32	altendky	kitxkat: for a network, generally that's something that would be done by a thing the traffic goes through (such as your router)
2019-12-09 02:40:39	<--	renlolo (~lhoward@2600:1017:b81e:ffa:812:d0ca:ff9:1929) has quit (Ping timeout: 250 seconds)
2019-12-09 02:40:46	-->	peter22222 (~peter2222@dslb-188-104-250-048.188.104.pools.vodafone-ip.de) has joined #python
2019-12-09 02:40:47	<--	veevax (~veevax@212-198-32-77.rev.numericable.fr) has quit (Quit: Leaving.)
2019-12-09 02:40:49	dualinity	so then based on number of rows/cols based on benchmarked results, I can predict for your files
2019-12-09 02:40:58	kitxkat	altendky i wanna use a rasberry pi as dns server
2019-12-09 02:41:21	kitxkat	IamnEwHeRe, what tools is my OS offering, wdym
2019-12-09 02:41:22	IaMnEwHeRe	kitxkat, you are all over the place, either you are a troll or you don't know what you are doing
2019-12-09 02:41:24	altendky	kitxkat: that will only get you dns requests, not actual http requests or how much data is transferred
2019-12-09 02:41:33	energizer	dualinity: got it
2019-12-09 02:41:34	altendky	IaMnEwHeRe: i think they said they aren't really sure
2019-12-09 02:41:41	dualinity	InPhase: yea, it's tough to explain really haha
2019-12-09 02:41:58	dualinity	how would you explain "features" that won't scare away the users? I hoped mentioning features instead of the actual data would be enough
2019-12-09 02:42:02	-->	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has joined #python
2019-12-09 02:42:05	IaMnEwHeRe	altendky, was before me joining ;) but good to know I am not alone with my hunch
2019-12-09 02:42:11	kitxkat	idk what im doing i guess...
2019-12-09 02:42:12	IaMnEwHeRe	kitxkat, what os are you using?
2019-12-09 02:42:18	kitxkat	ubuntu
2019-12-09 02:42:24	InPhase	dualinity: In all the machine learning I do, the features are the data.
2019-12-09 02:42:48	InPhase	dualinity: "Features" is just how we break the data down or merge into piles.
2019-12-09 02:43:12	dualinity	ahhhh I see what you mean
2019-12-09 02:43:14	dualinity	my bad
2019-12-09 02:43:23	dualinity	it's really like ehhh
2019-12-09 02:43:31	dualinity	"engineered features"
2019-12-09 02:43:39	InPhase	dualinity: It sounds like you're computing some meta-properties of the file, and using past learning on this to predict the optimal compression algorithm.
2019-12-09 02:43:41	<--	iam730 (~iam730@c-24-5-242-254.hsd1.ca.comcast.net) has quit (Ping timeout: 250 seconds)
2019-12-09 02:43:47	InPhase	dualinity: Meta-properties might be a good term.
2019-12-09 02:43:55	InPhase	dualinity: And then list off examples of them.
2019-12-09 02:44:14	dualinity	on the website I do list them, and somewhere in the story
2019-12-09 02:44:20	IaMnEwHeRe	hmm kitxkat, not using search engines much hmm? https://www.binarytides.com/linux-commands-monitor-network/ https://askubuntu.com/questions/722224/network-activity-monitor; also, note that you need to learn the basics before trying to program s.th. like that so learn the basics and come back
2019-12-09 02:44:27	-->	[itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) has joined #python
2019-12-09 02:44:31	dualinity	at which moment were you concerned, while reading the intro of the blog?
2019-12-09 02:44:32	-->	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has joined #python
2019-12-09 02:44:34	<--	fxrs (~fxrs@192.227.212.130) has quit (Ping timeout: 250 seconds)
2019-12-09 02:44:42	InPhase	dualinity: Possibly, but like most humans I skim.  That's why you want to clarify where you might scare people.  :)
2019-12-09 02:45:18	InPhase	dualinity: When I got to the line I quoted.
2019-12-09 02:45:24	kitxkat	sorry for bothering
2019-12-09 02:45:27	<--	kitxkat (~kitxkat@2407:7000:8c2f:d00:288f:386b:8a69:8560) has left #python ("Leaving")
2019-12-09 02:46:00	-->	Anty0 (~Anty0@2a00:1028:8d19:8bee:4c75:bfeb:7426:9531) has joined #python
2019-12-09 02:46:28	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 02:46:28	-->	fxrs (~fxrs@192.227.212.130) has joined #python
2019-12-09 02:46:56	InPhase	dualinity: Also any data submission should be configurable, which you can clarify right there as well.
2019-12-09 02:47:51	-->	__stranac__ (~stranac@193.14.245.77) has joined #python
2019-12-09 02:47:57	<--	stranac (~stranac@193.14.245.77) has quit (Ping timeout: 240 seconds)
2019-12-09 02:48:51	<--	jnatten (~jn@unaffiliated/jnatten) has quit (Remote host closed the connection)
2019-12-09 02:49:02	<--	__stranac__ (~stranac@193.14.245.77) has quit (Read error: Connection reset by peer)
2019-12-09 02:49:05	ce6	inphase i honestly dont get it
2019-12-09 02:49:28	ce6	recursion is tough to understand
2019-12-09 02:49:28	-->	sandbox1 (~unbanked_@c-67-167-239-14.hsd1.il.comcast.net) has joined #python
2019-12-09 02:50:08	cdunklau	ce6: nah it's easy
2019-12-09 02:50:12	sine0	how do you process a list item when you are in its itteration, e.g for row in rows: how do you delete a row when it is a badboy
2019-12-09 02:50:17	<--	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 02:50:33	cdunklau	ce6: to understand recursion, first you must understand recursion
2019-12-09 02:50:51	cdunklau	sine0: don't. make a new list instead
2019-12-09 02:51:09	-->	BTRE (~BTRE@unaffiliated/btre) has joined #python
2019-12-09 02:51:10	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Quit: WeeChat info:version)
2019-12-09 02:51:16	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 268 seconds)
2019-12-09 02:51:17	<--	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has quit (Ping timeout: 240 seconds)
2019-12-09 02:52:00	sine0	cdunklau: ok then
2019-12-09 02:52:07	altendky	sine0: or, depending, just `if bad(row): continue` if you just want to not handle it rather than actually delete it
2019-12-09 02:52:26	<--	aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) has quit (Quit: The Lounge - https://thelounge.chat)
2019-12-09 02:52:31	dualinity	InPhase: yea could point
2019-12-09 02:52:39	<--	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has quit (Quit: ZNC 1.7.5 - https://znc.in)
2019-12-09 02:52:45	dualinity	someone suggested me also an opt-in for when they run benchmarks that they could post
2019-12-09 02:54:07	nedbat	ce6: have you written other recursive functions? This one is a bit complicated
2019-12-09 02:54:29	ce6	yes i have
2019-12-09 02:54:43	<--	pro_z (~pro_z@178.121.71.153) has quit (Ping timeout: 265 seconds)
2019-12-09 02:54:45	ce6	and i understand those, it's just when it comes to multiple recursive calls it screws me over
2019-12-09 02:54:45	-->	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has joined #python
2019-12-09 02:55:36	InPhase	ce6: To understand multiple recursion, just understand two cases of multiple recursion, and put that understanding together.
2019-12-09 02:55:49	-->	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has joined #python
2019-12-09 02:56:31	InPhase	ce6: Classic jokes aside, I think you have all the pieces and tools you need.  The intuitive comfort comes from working more with it and doing more examples.
2019-12-09 02:56:50	InPhase	ce6: Try some other multiple recursion problems.
2019-12-09 02:56:54	-->	bugZPDX (~bugZPDX@65.75.216.13) has joined #python
2019-12-09 02:56:58	ce6	you could say this is outranging for me
2019-12-09 02:57:14	<--	Horzagger (~stockthx@gateway/tor-sasl/horzagger) has quit (Quit: Жизнь прекрасна)
2019-12-09 02:57:19	ce6	oh wait no that's an iterative joke
2019-12-09 02:57:24	ce6	im not to that point yet
2019-12-09 02:57:37	InPhase	ce6: Presumably from the problem you are working on some coursework?  For good understanding, go beyond it and try some other things that can be done with multiple recursion.
2019-12-09 02:57:42	-->	morenoh11 (~nope@rrcs-172-254-98-154.nyc.biz.rr.com) has joined #python
2019-12-09 02:57:59	<--	Skripter (~Skripter@unaffiliated/skripter) has quit (Ping timeout: 250 seconds)
2019-12-09 02:58:11	Soni	I guess "yield from ()" is the "pass" equivalent for a generator function?
2019-12-09 02:58:12	altendky	for character in people_entering_the_bar():
2019-12-09 02:58:16	ce6	well im not sure of any other problems i could try
2019-12-09 02:58:48	royal_screwup21	what would be the easiest to parse the input for this question? https://www.urionlinejudge.com.br/judge/en/problems/view/2532 (see the end). I  am looping over `sys.stdin` but unsure how to cleanly extract the next lines for a given test-case
2019-12-09 02:58:49	<--	KLOC (jiggawattz@runs.on.ubuntu.crapping.cricket) has quit (Quit: tschüß!)
2019-12-09 02:58:55	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 02:59:24	royal_screwup21	easeist way*
2019-12-09 03:00:00	<--	Anty0 (~Anty0@2a00:1028:8d19:8bee:4c75:bfeb:7426:9531) has left #python
2019-12-09 03:00:25	-->	jiggawattz (jiggawattz@runs.on.ubuntu.crapping.cricket) has joined #python
2019-12-09 03:01:00	<--	scurfee (~scurfee@broadband-77-37-146-212.ip.moscow.rt.ru) has quit
2019-12-09 03:01:36	-->	happycrappy (~mes@c-24-6-149-58.hsd1.ca.comcast.net) has joined #python
2019-12-09 03:01:41	InPhase	ce6: You have a sequence of integers, for example, four 4's.  If you can add, subtract, multiple, or divide the previous result by the next integer, which numbers from 1 through 100 can you produce in this manner, and by what operations?
2019-12-09 03:01:58	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-09 03:01:59	InPhase	ce6: Solve it with multiple recursion.
2019-12-09 03:02:19	-->	lemoldu (~lemoldu@arennes-654-1-210-193.w90-32.abo.wanadoo.fr) has joined #python
2019-12-09 03:02:43	<--	Wr4i7h (~abcd@a85-139-227-182.cpe.netcabo.pt) has quit
2019-12-09 03:03:26	InPhase	ce6: I'll give you a hint.  You'll want to be returning the sequence of operations, or an indication of failure.
2019-12-09 03:03:29	ce6	can you give me an example output
2019-12-09 03:04:04	InPhase	"/*/" produces 1.  4/4 = 1, 1*4 = 4, 4/4 = 1
2019-12-09 03:04:24	<--	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has quit (Quit: Leaving)
2019-12-09 03:04:25	ce6	i see
2019-12-09 03:05:24	dualinity	InPhase: i updated the text in the blog, i think it should be clearer now
2019-12-09 03:05:36	-->	jacks2 (~bc813884@217.29.117.252) has joined #python
2019-12-09 03:05:37	-->	colwem (~colwem@pool-108-49-41-69.bstnma.fios.verizon.net) has joined #python
2019-12-09 03:05:38	InPhase	ce6: And preference operator in the order of add, subtract, multiply, divide, to make the solutions single-valued.
2019-12-09 03:05:54	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 03:06:01	<--	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has quit (Quit: Leaving.)
2019-12-09 03:06:05	energizer	Soni: `return; yield` is a bit of a hack but people sorta know what it means
2019-12-09 03:06:22	Soni	ugh
2019-12-09 03:06:25	cdunklau	energizer: ew
2019-12-09 03:06:31	Soni	I think I prefer "yield from ()"
2019-12-09 03:06:44	InPhase	ce6: I believe the final solution for 1 will probably be "+-/" with that ordering.
2019-12-09 03:06:46	Soni	no offense
2019-12-09 03:06:47	-->	isokee1 (~isokee@unaffiliated/isokee) has joined #python
2019-12-09 03:06:47	_habnabit	yeah, python made a serious mistake giving functions and generator functions the same syntax
2019-12-09 03:06:48	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 265 seconds)
2019-12-09 03:06:50	cdunklau	how about just iter([])
2019-12-09 03:06:51	<--	jacks2 (~bc813884@217.29.117.252) has left #python
2019-12-09 03:06:58	cdunklau	err, return iter([])
2019-12-09 03:07:06	-->	Reverend (~revinard@47-210-6-220.bssrcmtk01.res.dyn.suddenlink.net) has joined #python
2019-12-09 03:07:10	Soni	cdunklau: that's not a generator iterator
2019-12-09 03:07:13	<--	hvxgr (~wl2v_usrn@epjdn.zq3q.org) has quit (Quit: leaving)
2019-12-09 03:07:15	nedbat	Soni: why do you need an empty generator?
2019-12-09 03:07:28	<--	novum (~novumsens@gateway/tor-sasl/novumsensum) has quit (Quit: :xa)
2019-12-09 03:07:32	Soni	(not that it matters, I'm not typechecking like that)
2019-12-09 03:07:47	<--	mcsippel (~mcsippel@97-93-29-122.dhcp.snlo.ca.charter.com) has quit (Quit: WeeChat 2.3)
2019-12-09 03:07:55	Soni	nedbat: I want something that returns an iterator and can have docs
2019-12-09 03:08:18	Soni	https://bpaste.net/show/HBUFQ
2019-12-09 03:08:22	altendky	`yield from ()` creates a tuple pointlessly so even if `return; yield` is 'ugly', it seems tidier and more to the point.  `yield` says 'i am a generator' and `return` says 'i have done nothing and i am done'
2019-12-09 03:08:26	cdunklau	Soni: sounds like that's solve by `return iter([])`
2019-12-09 03:08:31	cdunklau	solved*
2019-12-09 03:08:32	ce6	inphase could i try another question, im not too sure about this one lol
2019-12-09 03:09:09	<--	isokee (~isokee@unaffiliated/isokee) has quit (Ping timeout: 268 seconds)
2019-12-09 03:09:49	-->	tiwula (~lane@c-98-202-91-238.hsd1.ut.comcast.net) has joined #python
2019-12-09 03:10:23	<--	Revinard (revinard@gateway/vpn/privateinternetaccess/revinard) has quit (Ping timeout: 268 seconds)
2019-12-09 03:10:53	Soni	cdunklau: I still prefer "yield from ()"
2019-12-09 03:11:34	Soni	"return; yield" is confusing, "yield from ()" is pretty obvious, "return iter([])" is just no.
2019-12-09 03:11:35	-->	josh (~josh@109.246.246.116) has joined #python
2019-12-09 03:11:38	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 276 seconds)
2019-12-09 03:11:52	Soni	and, sure, "yield from ()" might not be currently optimized, but we can add an optimization for that
2019-12-09 03:11:54	--	josh is now known as Guest97062
2019-12-09 03:11:57	Soni	we just need to define it as good style first
2019-12-09 03:12:28	Soni	so no, "yield from ()" doesn't create a tuple. that's an implementation detail.
2019-12-09 03:12:49	altendky	Soni: i dunno, it says you want to create a thing and yield stuff from it.  doesn't seem like good style to me to express activities you don't want to happen.
2019-12-09 03:13:16	Soni	altendky: would "yield from []" be a better placeholder then?
2019-12-09 03:13:33	Soni	(same thing with the implementation detail)
2019-12-09 03:13:37	altendky	Soni: creating a list rather than a tuple?  the type of the thing being created is unrelated to anything i've said so no
2019-12-09 03:13:40	<--	Guest97062 (~josh@109.246.246.116) has quit (Client Quit)
2019-12-09 03:13:41	cdunklau	Soni: why is `return iter([])` "just no"?
2019-12-09 03:13:53	-->	barmaley (~barmaley@94.228.207.173) has joined #python
2019-12-09 03:14:02	Soni	cdunklau: docs: "Yields things" code: "return iter"
2019-12-09 03:14:23	Soni	did you see the paste I linked?
2019-12-09 03:14:32	-->	stranac (~stranac@193.14.245.77) has joined #python
2019-12-09 03:14:39	energizer	`yield from []` seems like a fine option
2019-12-09 03:14:40	<--	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-12-09 03:14:54	ammar2	yeah, in the context of an abstract class trying to show how stuff is supposed to be done
2019-12-09 03:14:58	energizer	presumably you're doing this to conform to some interface that yields stuff
2019-12-09 03:14:59	ammar2	I'd say Soni's preference is the best
2019-12-09 03:15:02	<--	Ignacy (~Ignacy@188.113.68.31) has quit (Remote host closed the connection)
2019-12-09 03:15:30	<--	afx_ (~afx_@185.51.134.236) has quit (Ping timeout: 265 seconds)
2019-12-09 03:15:36	<--	stranac (~stranac@193.14.245.77) has quit (Read error: Connection reset by peer)
2019-12-09 03:15:46	cdunklau	Soni: 20:07 < Soni> nedbat: I want something that returns an iterator and can have docs
2019-12-09 03:15:50	-->	stranac (~stranac@193.14.245.77) has joined #python
2019-12-09 03:16:11	-->	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has joined #python
2019-12-09 03:16:15	cdunklau	but if that wasn't an accurate description of your need, okay i'll give
2019-12-09 03:16:21	Soni	yeah and then I linked the paste for more clarity
2019-12-09 03:16:30	-->	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has joined #python
2019-12-09 03:16:35	altendky	all ideas fit that description presently?
2019-12-09 03:17:03	<--	jokr (~jokr@124.123.72.176) has quit (Ping timeout: 250 seconds)
2019-12-09 03:17:05	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 03:17:11	dualinity	InPhase: curious to your feedback on my next project... http://nostalgia-dev.github.io/
2019-12-09 03:17:23	-->	slivera (slivera@gateway/vpn/privateinternetaccess/slivera) has joined #python
2019-12-09 03:17:26	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2019-12-09 03:17:56	dualinity	or from others
2019-12-09 03:18:06	-->	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has joined #python
2019-12-09 03:18:14	dualinity	between contracts i will spend 1 month of my personal time working on it
2019-12-09 03:18:17	-->	Silmarilion (~Silmarili@87.116.177.1) has joined #python
2019-12-09 03:18:34	dualinity	starting next week : )
2019-12-09 03:18:35	<--	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has quit (Remote host closed the connection)
2019-12-09 03:18:59	Soni	anyway, ever considered that this might be a good way to do it?
2019-12-09 03:19:22	Soni	you seem to be rejecting it just because it's different from what you're used to
2019-12-09 03:19:37	energizer	dualinity: might be interested in https://perkeep.org/
2019-12-09 03:19:43	_habnabit	Soni, did you miss that people agreed with you?
2019-12-09 03:19:45	altendky	Soni: i never thought about any of these before and i gave reasons (unrelated to optimization even if it was taken that way)
2019-12-09 03:20:00	nedbat	Soni: i'm curious why "return []" wouldn't work?
2019-12-09 03:20:01	altendky	any optimization is a side effect
2019-12-09 03:20:25	dualinity	energizer: adding to my related links
2019-12-09 03:20:29	Soni	_habnabit: no; I'm not addressing the ppl who agreed with me
2019-12-09 03:20:36	altendky	Soni: you also don't show any indication of considering the opinions of the people who you asked
2019-12-09 03:20:38	Soni	nedbat: next([]) does wonders
2019-12-09 03:20:44	<--	stranac (~stranac@193.14.245.77) has quit (Ping timeout: 276 seconds)
2019-12-09 03:20:49	nedbat	Soni: i don't know what that means
2019-12-09 03:20:53	dualinity	the main difference is that I'm not (yet) trying to fight the big corporations... but more working with the idea of "ok... they know everything about me... but what If I want to as well?"
2019-12-09 03:21:21	dualinity	the timeline is a first vision: https://nostalgia-dev.github.io/assets/images/timeline1.jpg
2019-12-09 03:21:41	Vision	a first what
2019-12-09 03:21:56	dualinity	haha sorry xD didn't mean to tag you
2019-12-09 03:22:03	Vision	lolol
2019-12-09 03:22:10	Soni	nedbat: next([]) is a TypeError I think, but raises StopIteration for an empty generator
2019-12-09 03:22:16	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 265 seconds)
2019-12-09 03:22:28	dualinity	what's your vision: ? xD
2019-12-09 03:22:50	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-09 03:22:57	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Remote host closed the connection)
2019-12-09 03:23:02	nedbat	Soni: i would expect functions to produces iterables, not necessarily iterators.  next(iter([])) is fine.
2019-12-09 03:23:34	InPhase	dualinity: I find your proposal a little creepy, but at least you are putting the data in the right person's hands, unlike most such attempts.
2019-12-09 03:23:42	IaMnEwHeRe	dualinity, 2 things regarding your project, since you asked for feedback(which will go off topic rather quickly), the query-language-thing will mean only programmers will use it and regarding freeing your data, it is a misconception, the data is still within google and Facebook and co
2019-12-09 03:23:54	IaMnEwHeRe	for your data to be free you need to actually run your own infrastructure
2019-12-09 03:23:55	Soni	nedbat: I'd expect a function that "yields" (as per docs) would produce iterators, not arbitrary iterables
2019-12-09 03:24:17	nedbat	Soni: i don't use "Yields" in docstrings. it shouldn't matter what kind of iterable it produces.
2019-12-09 03:24:19	dualinity	IaMnEwHeRe: yea, phase 1 is only focus on developers
2019-12-09 03:24:26	nedbat	Soni: why limit yourself?
2019-12-09 03:24:28	ammar2	Soni: yeah, that's kind of a weird contract
2019-12-09 03:24:29	IaMnEwHeRe	and best, not collect data at all :D
2019-12-09 03:24:31	energizer	dualinity: looks good to me, i dont agree with the complaints above
2019-12-09 03:24:39	IaMnEwHeRe	I absolutely don't get this quantify yourself movement
2019-12-09 03:24:57	dualinity	to build the connections and to see what viable use cases there are.... then the next phase will indeed be "how can we make it usable by everyone"
2019-12-09 03:25:19	InPhase	dualinity: Yeah, I'd agree that it doesn't free the data, and the insights aren't unlimited.  But it does put your aggregated data into your own hands, for your own purposes, and can provide deep insights and analyses for your own benefit rather than just those of others.
2019-12-09 03:25:40	dualinity	the unlimited part is about that most people doing quantified self go about doing a single analysis of 1 source
2019-12-09 03:25:44	InPhase	dualinity: So it sounds valuable.  Just state better the things it actually does for you.  :)
2019-12-09 03:25:48	dualinity	the idea here is that it becomes possible to do cross-source analysis
2019-12-09 03:26:00	energizer	dualinity: i'd consider activitywatch as a source
2019-12-09 03:26:20	dualinity	(thanks a lot everyone for the super constructive feedback, I see all your points)
2019-12-09 03:26:35	InPhase	dualinity: Well it's going to be intrinsically limited to what exists in the source data, so it's definitely not unlimited.  :)
2019-12-09 03:26:54	InPhase	dualinity: But deep, yes.
2019-12-09 03:27:05	dualinity	yea... practically unlimited though
2019-12-09 03:27:15	dualinity	I mean - if you have 500 sources connected
2019-12-09 03:27:31	dualinity	you could theoretically do something with 450 out of 500 sources in 1 query
2019-12-09 03:27:39	<--	Wetmelon (~wetmelon@66-169-41-35.dhcp.gnvl.sc.charter.com) has quit (Ping timeout: 268 seconds)
2019-12-09 03:27:52	dualinity	that's more what it refers to...
2019-12-09 03:28:05	energizer	if soni wants to be able to handle iterators, they can declare as precise as they want, consistent with the principle that the caller should handle conversion. otoh putting `it = iter(it)` at the top of a function doesn't have much downside
2019-12-09 03:28:59	energizer	as precise an input type*
2019-12-09 03:29:17	-->	natten (~jn@unaffiliated/jnatten) has joined #python
2019-12-09 03:29:23	dualinity	InPhase: in terms of marketing i'm not trying to be too precise on that lol
2019-12-09 03:29:40	-->	__stranac__ (~stranac@193.14.245.77) has joined #python
2019-12-09 03:29:46	 *	altendky considers 'literally unlimited'
2019-12-09 03:29:47	InPhase	dualinity: Yeah, it's overselling.  It comes across disingenuous.
2019-12-09 03:29:53	dualinity	I do every now and then come across very cool use cases that would be useful if you could query your data e.g. using a chatbot
2019-12-09 03:30:11	Soni	how does google docstring style suggest documenting tuples?
2019-12-09 03:30:12	dualinity	how much did i spend less week in amsterdam in supermarkets when my heartrate was above 80
2019-12-09 03:30:18	dualinity	last week*
2019-12-09 03:30:24	InPhase	dualinity: I think it has enough impressive potential without the oversell, so you benefit more focusing on that in more specifics.
2019-12-09 03:30:34	energizer	Soni: what are you doing with tuples?
2019-12-09 03:30:40	Soni	e.g. function yields (int, str) pairs of run-length encoding
2019-12-09 03:31:03	dualinity	InPhase: yea I think showing the timeline and the example cases that personally helped me so far should be moved to the top
2019-12-09 03:31:27	-->	stranac (~stranac@78-1-49-64.adsl.net.t-com.hr) has joined #python
2019-12-09 03:31:32	energizer	Soni: def f() -> Iterator[Tuple[int, str]]:
2019-12-09 03:31:57	-->	tristianc (~tristianc@pool-72-83-128-193.washdc.fios.verizon.net) has joined #python
2019-12-09 03:32:06	Soni	I don't like annotations
2019-12-09 03:32:11	energizer	they like you
2019-12-09 03:32:18	dualinity	IaMnEwHeRe: i understand that you don't value the QS movement... but in actuality i believe it will help you answer more questions than just "optimizing yourself"
2019-12-09 03:32:55	causasui	sometimes I check out a git branch that has a dependency that's not in the other branch, which breaks my venv. are there any tools for handling this? if I made one for myself should I bother making it publishable (i.e. would anyone else have any interest)?
2019-12-09 03:33:02	energizer	heaven forbid anyone use tools to improve their lives
2019-12-09 03:33:09	<--	a90c (~androirc@unaffiliated/a90c) has quit (Quit: Leaving)
2019-12-09 03:33:24	<--	feodoran (~quassel@98-11-142-46.pool.kielnet.net) has left #python
2019-12-09 03:33:25	dualinity	someone mentioned they had a startup idea and I remember having read an article some time ago... i was only able to find it because i remembered i was on a train station... i used google timeline data to narrow down my web activity and found it immediately :)
2019-12-09 03:33:28	causasui	well the question isn't "should anyone use tools to improve their lives" to be fair
2019-12-09 03:33:44	<--	canarts (~stranac@93-143-180-10.adsl.net.t-com.hr) has quit (Ping timeout: 276 seconds)
2019-12-09 03:33:44	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 276 seconds)
2019-12-09 03:33:49	dualinity	it really was one of the few cases that I actually couldn't have solved without scrolling through my web history back 3 months LOL
2019-12-09 03:33:50	altendky	causasui: i have an env-builder and syncer that uses pip-tools.  `./boots.py ensure` would update.  not sure how poetry etc handle it
2019-12-09 03:33:57	causasui	it's more like "does this exist already, and if not, would anyone else want it besides me"
2019-12-09 03:34:01	-->	akoana (~ah@213-147-160-255.nat.highway.bob.at) has joined #python
2019-12-09 03:34:09	altendky	causasui: or maybe you mean the git hook part?
2019-12-09 03:34:28	<--	__stranac__ (~stranac@193.14.245.77) has quit (Ping timeout: 252 seconds)
2019-12-09 03:34:29	-->	neoncontrails (~kz@wsip-70-167-74-86.sd.sd.cox.net) has joined #python
2019-12-09 03:34:39	causasui	altendky: I asked in a github issue and I was advised (although not by a maintainer) that with poetry one must remove and recreate the venv... pretty disappointin since I like poetry so much otherwise
2019-12-09 03:34:56	dualinity	causaui: I have not seen the same approach to me. i also realized that the GDPR law made this the perfect moment! companies are now forced to give you your personal data, so if you have a tool to combine it then that'd be pretty sweet
2019-12-09 03:35:11	dualinity	and don't forget that in the early days of google also people said "who needs that" :D
2019-12-09 03:35:18	causasui	altendky: I will look that up though and maybe crib some ideas
2019-12-09 03:35:30	causasui	altendky: or wait, did you open source it anywhere?
2019-12-09 03:35:34	energizer	dualinity: recent article on similar stuff https://news.ycombinator.com/item?id=21659876
2019-12-09 03:35:56	-->	nomic (~nomic@host86-182-158-121.range86-182.btcentralplus.com) has joined #python
2019-12-09 03:35:58	altendky	causasui: yeah, the big thing i needed that they didn't have was multi-platform locking.  admittedly mine is just separate locking on each platform (for each 'group' you define) but...  it's something.  github.com/altendky/boots
2019-12-09 03:36:00	energizer	causasui: i was not referring to your question, but to the QS thing
2019-12-09 03:36:01	nedbat	Soni: Google style would be:  "Returns:\n An iterable of tuples, (int, str)" You should also mention what the int and str mean.
2019-12-09 03:36:12	causasui	energizer: ah
2019-12-09 03:36:18	dualinity	energizer: there are a lot of initiatives that talk about "protocols" or talk about philosophy
2019-12-09 03:36:23	Soni	nedbat: I use "Yields:" tho
2019-12-09 03:36:28	altendky	causasui: https://github.com/altendky/pm would be one example project using it.
2019-12-09 03:36:28	causasui	altendky: thanks
2019-12-09 03:36:34	dualinity	I think this approach is super hands on and can provide value along the way while building into something huge
2019-12-09 03:36:36	nedbat	Soni: i think that's a mistake, but ok.
2019-12-09 03:36:51	energizer	dualinity: that post has links to many actual projects
2019-12-09 03:36:53	nedbat	Soni: i think it's describing unnecessary implementation details.
2019-12-09 03:36:54	Soni	nedbat: you say that about basically everything I do so I'm not surprised
2019-12-09 03:37:10	nedbat	Soni: i'm hoping to explain my thinking to you.
2019-12-09 03:37:15	altendky	causasui: it's 2/3 stdlib only so it's about as directly runnable as you get across platforms.  i only did that for the bootstrapper so i could use all the libs i want in everything else.
2019-12-09 03:37:39	energizer	nedbat: if you return an iterator, why not say so?
2019-12-09 03:37:41	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 03:37:48	dualinity	energizer: i'll inspect more closely :)  thanks, keep them coming lol
2019-12-09 03:37:56	nedbat	energizer: because future implementations might not, and why should the caller care?
2019-12-09 03:38:09	Soni	nedbat: I prefer that this is an iterator and not just an iterable
2019-12-09 03:38:16	nedbat	Soni: can you explain why?
2019-12-09 03:38:30	Soni	besides you can just use "yield from" instead of "return"
2019-12-09 03:38:40	energizer	Soni: you want caller to wrap the call in iter()?
2019-12-09 03:38:45	energizer	er
2019-12-09 03:38:48	energizer	nedbat: you want caller to wrap the call in iter()?
2019-12-09 03:38:53	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 03:39:03	nedbat	energizer: usually, the caller will just iterate over it.
2019-12-09 03:39:19	-->	uytguz (~uytguz@67.212.238.148) has joined #python
2019-12-09 03:39:29	altendky	energizer: do you frequently use next()?  i mean sure, i wouldn't call it super uncommon but it's not the 'normal' way to move through a thing i don't think.
2019-12-09 03:40:23	Soni	I use next() in tests
2019-12-09 03:40:30	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined #python
2019-12-09 03:41:20	-->	joshjh (~josh@109.246.246.116) has joined #python
2019-12-09 03:41:20	-->	hostile (~quassel@adsl-185.176.58.194.tellas.gr) has joined #python
2019-12-09 03:41:27	-->	jokr (~jokr@124.123.72.176) has joined #python
2019-12-09 03:41:29	ikanobori	Speaking of not super common, there's a thing where I do `for bla in iter(something.read, "")`. I'd like to do that with `async for`, is there any sort of aiter that also awaits its first argument or do I write my own :)
2019-12-09 03:42:26	energizer	the difference in behavior between iterators and non-iterator iterables is so massive it makes me uncomfortable to be unsure which one i have
2019-12-09 03:42:36	-->	nathias (~nathias@unaffiliated/nathias) has joined #python
2019-12-09 03:43:32	<--	b1tninja (~b1tninja@unaffiliated/b1tninja) has quit (Ping timeout: 265 seconds)
2019-12-09 03:43:34	offby1	I always have to think about this.
2019-12-09 03:43:37	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2019-12-09 03:43:38	<--	JaredSchooley (~Sech@2600:6c42:7400:c86:2112:fd1a:6b56:ea41) has quit (Ping timeout: 245 seconds)
2019-12-09 03:43:41	<--	Jantz (~IceChat9@118-93-130-203.dsl.dyn.ihug.co.nz) has quit (Ping timeout: 268 seconds)
2019-12-09 03:43:57	offby1	iterators get exhausted as soon as you "go through" them once, whereas iterables effectively create a fresh iterator every time ... right?
2019-12-09 03:44:15	cdunklau	ikanobori: doesn't look like it.
2019-12-09 03:44:16	ammar2	what are you people doing that's not just a for loop over your iterable
2019-12-09 03:44:24	-->	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has joined #python
2019-12-09 03:44:30	offby1	sometimes we want to loop -twice-
2019-12-09 03:44:41	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-09 03:44:45	energizer	a function that takes an iterator often mutates its argument, and also often returns data. in any other case we consider that very bad
2019-12-09 03:44:52	Soni	ammar2: handing them to a magical next-using do-it-all datastructure library
2019-12-09 03:44:57	<--	xy2_ (~xy2_@94.239.177.175) has quit (Ping timeout: 240 seconds)
2019-12-09 03:45:22	Soni	... wait, nvm, that one doesn't take iterators
2019-12-09 03:45:32	<--	barmaley (~barmaley@94.228.207.173) has quit (Quit: Leaving)
2019-12-09 03:45:50	Soni	(at all. as in, it's a TypeError if you try to pass them in. it doesn't even take arbitrary iterables.)
2019-12-09 03:46:01	Soni	meh
2019-12-09 03:46:01	neoncontrails	I'm implementing an observer-like pattern and I'm trying to avoid circular memory references. I have some passing familiarity with the weakref module. Is there a substantive difference between stashing those references to other class instances in a weakref.WeakValueDictionary, vs. simply using weakref.Ref to wrap the object before adding to a regular ol' Python dictionary?
2019-12-09 03:46:19	Soni	it does return an iterator tho
2019-12-09 03:46:22	-->	JaredSchooley (~Sech@2600:6c42:7400:c86:2112:fd1a:6b56:ea41) has joined #python
2019-12-09 03:46:36	Soni	(actually a generator, but that's an implementation detail)
2019-12-09 03:47:03	dualinity	btw guys if you're interested.... i'm going to announce nostalgia soon (still preparing the core for exposure)
2019-12-09 03:47:23	<--	CookieM (~tomek@afdl94.neoplus.adsl.tpnet.pl) has quit (Quit: Leaving)
2019-12-09 03:47:23	dualinity	but on http://nostalgia-dev.github.io/ I already mention a discord and slack
2019-12-09 03:47:35	-->	b1tninja (~b1tninja@unaffiliated/b1tninja) has joined #python
2019-12-09 03:47:41	<--	Helenah (~s98259@unaffiliated/iveeee) has quit (Read error: Connection reset by peer)
2019-12-09 03:47:42	neoncontrails	I ask mainly because I'm using OrderedDict to preserve a canonical indexing of my class instances, so weakref.WeakValueDictionary makes the logic a little more cumbersome
2019-12-09 03:48:11	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 03:48:20	IaMnEwHeRe	neoncontrails, circular references will not just be a problem starting the code but running it in the long-run, you should restructure your architecture
2019-12-09 03:49:24	-->	Helenah (~s98259@unaffiliated/iveeee) has joined #python
2019-12-09 03:49:40	neoncontrails	IaMnEwHeRe: thanks but no thanks, oberserver pattern is one of the only ways to accomplish what I'm trying to do within the constraints that I have
2019-12-09 03:50:14	IaMnEwHeRe	I am not saying get rid of publish-and-subscribe, but consider who is watching whom
2019-12-09 03:50:25	IaMnEwHeRe	that is what causes circular references in this instance
2019-12-09 03:50:55	-->	jax (d537e196@unaffiliated/jax) has joined #python
2019-12-09 03:50:58	jax	hello
2019-12-09 03:51:17	<--	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has quit (Ping timeout: 276 seconds)
2019-12-09 03:52:17	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 240 seconds)
2019-12-09 03:52:54	neoncontrails	IaMnEwHeRe: actually I'm reading something in the Python Essential Reference that says even non-circular references are problematic for garbage collection so it's possible to have memory leaks even in a nice, acyclic tree
2019-12-09 03:52:56	ammar2	neoncontrails: the difference is that a WeakValueDictionary will automatically remove the stale object from the dict, whereas in a regular dict it will turn into None I believe
2019-12-09 03:52:58	jax	i'm a bit confused. i would like to install about 3 different python3 versions and created a couple venvs for those different python versions. i just found pyenv which can do: pyenv install 3.7.3 and pyenv install 3.6.3 or so. that is great, since i can then just create virtualenvs with pyenv virtualenv 3.7.3 myenv etc. but now i read it is
2019-12-09 03:52:59	jax	deprecated and only python3 -m venv is to be used. can someone help me get the same commands running?
2019-12-09 03:53:45	-->	mandeep (~mandeep@unaffiliated/mandeepb) has joined #python
2019-12-09 03:53:48	ammar2	neoncontrails: but internally WeakValueDictionary probably just uses Ref to achieve this
2019-12-09 03:54:14	Koffa	they deprecate stuff faster than php in early 00's -.-
2019-12-09 03:54:19	<--	keepguessing (~superman@c-73-93-87-220.hsd1.ca.comcast.net) has quit (Ping timeout: 250 seconds)
2019-12-09 03:54:21	-->	AhmedAmerican (c52b5fcb@gateway/web/cgi-irc/kiwiirc.com/ip.197.43.95.203) has joined #python
2019-12-09 03:54:24	-->	Eleanor (~E@h77-53-169-12.cust.a3fiber.se) has joined #python
2019-12-09 03:54:50	IaMnEwHeRe	neoncontrails, premature-optimization, the way you described it earlier I took it that it wasn't running at all, and when You know that you don't need ti anymore, what is wrong with cleaning up manually
2019-12-09 03:54:53	altendky	jax: pyenv isn't deprecated.  virtualenv is fine afaik.  or you can venv from the pyenv installed pythons.  whatever.  who said what exactly was deprecated?
2019-12-09 03:54:54	AhmedAmerican	`print('{:<5}{:>5}'.format('*' * item, '*' * item))` can `5` replaced by variable which will hold the number ?
2019-12-09 03:54:58	-->	Codaraxis (~Codaraxis@ip68-5-175-208.oc.oc.cox.net) has joined #python
2019-12-09 03:55:02	ikanobori	Yes.
2019-12-09 03:55:11	ikanobori	Format strings themselves are variable.
2019-12-09 03:55:13	<--	uytguz (~uytguz@67.212.238.148) has left #python ("Leaving")
2019-12-09 03:55:18	altendky	AhmedAmerican: {variable_name} iirc
2019-12-09 03:55:19	mandeep	i'm having problems saving numpy float32 arrays as images: https://bpaste.net/show/P734Y
2019-12-09 03:55:20	KirkMcDonald	AhmedAmerican: You can nest things e.g. {foo:<{bar}}
2019-12-09 03:55:23	neoncontrails	ammar2: that's the thing, I've always been wary of WeakValueDictionary because I think it would be so much easier to rehydrate a garbage-collected value than to iterate through a dictionary whose keys are unstable
2019-12-09 03:55:29	<--	zampano (~zampano@unaffiliated/zampano) has quit (Quit: leaving)
2019-12-09 03:55:37	<--	ksft (~ksft@wikipedia/KSFT) has quit (Ping timeout: 265 seconds)
2019-12-09 03:55:50	cdunklau	IaMnEwHeRe: i dunno if i'd call being sane about ref cycles premature optimization
2019-12-09 03:55:59	-->	vorped (~vorped@pool-68-160-228-117.nycmny.fios.verizon.net) has joined #python
2019-12-09 03:56:01	cdunklau	i mean... maybe. "probably" event
2019-12-09 03:56:03	cdunklau	even*
2019-12-09 03:56:13	mandeep	both cv2.imwrite() or Image.fromarray(A).save() result in oversaturated images
2019-12-09 03:56:36	jax	altendky ah that could be. maybe creating venvs with pyenv is deprecated, but installing python versions with pyenv isn't.
2019-12-09 03:56:56	neoncontrails	If I'm understanding correctly though, it's also valid to put Refs in a dictionary then?  I'm not optimizing prematurely, this is some code that currently works and I'm trying to make it work even better :)
2019-12-09 03:57:03	IaMnEwHeRe	cdunklau, no I know what you mean,but I was refering to his statement about GC
2019-12-09 03:57:13	altendky	jax: i don't use the pyenv virtualenv plugin to create my envs, i just virtualenv or venv directly.  but many people do many different things
2019-12-09 03:57:24	<--	snowmanbamm (~snowmanba@2600:1700:7c00:10e0:9463:a896:20b:3ef4) has quit (Quit: snowmanbamm)
2019-12-09 03:57:25	cdunklau	ah
2019-12-09 03:57:38	jax	i've been using virtualenvwrapper and virtualenv
2019-12-09 03:57:40	altendky	i do wish pyenv did shims for micro/patch versions though
2019-12-09 03:57:46	IaMnEwHeRe	cdunklau, if that solution works and I find I have a memory-leak, I can clean up by hand(which is advisable anyways, verbosity and all) and the take it from there :D
2019-12-09 03:57:48	jax	but wanted to have something that doens't have to  do with my mac os x python version
2019-12-09 03:57:51	jax	that's where pyenv came in
2019-12-09 03:57:58	<--	w1kl4s (~w1kl4s@159.69.34.145) has quit (Quit: Ping timeout (120 seconds))
2019-12-09 03:58:15	energizer	altendky: is there a ticket for that?
2019-12-09 03:58:19	-->	thiras (~thiras@unaffiliated/thiras) has joined #python
2019-12-09 03:58:24	 *	altendky cowers in shame
2019-12-09 03:58:37	-->	w1kl4s (~w1kl4s@159.69.34.145) has joined #python
2019-12-09 03:59:18	Codaraxis	I have a logger I made whose stream handler is set to logging.DEBUG while the base logging facility is set to logging.ERROR. So, as desired, logging.info("foo") doesn't produce any output. However, logger.info("bar") produces two outputs: one with my custom formatter and then the default styled  INFO:Logger:bar  that seems to come from logging. Is there any way to disable the second output unless the base logging level is appropriate?
2019-12-09 03:59:22	altendky	energizer: https://github.com/pyenv/pyenv/issues/633 is related but self-closed with an alternative
2019-12-09 03:59:25	<--	lemoldu (~lemoldu@arennes-654-1-210-193.w90-32.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2019-12-09 03:59:27	<--	Hanii (~Hanii@2a00:23c5:c587:a800:f82c:93e8:4685:f2a6) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-12-09 03:59:30	-->	lemoldu_ (~lemoldu@arennes-654-1-210-193.w90-32.abo.wanadoo.fr) has joined #python
2019-12-09 03:59:30	neoncontrails	IaMnEwHeRe: in a previous iteration of this project I was ensnared by problems I didn't fully comprehend at the time, and recognize now in hindsight are exactly the sort of issues that arise when gcc is unable to deallocate instantiated objects
2019-12-09 03:59:45	-->	zampano (~zampano@unaffiliated/zampano) has joined #python
2019-12-09 04:00:05	 *	IaMnEwHeRe is wondering why the amount of trolls increased over the last couple of months
2019-12-09 04:01:01	-->	lemoldu__ (~lemoldu@arennes-654-1-223-102.w90-32.abo.wanadoo.fr) has joined #python
2019-12-09 04:01:11	energizer	altendky: yeah that self-close was unwarranted
2019-12-09 04:01:12	altendky	IaMnEwHeRe: you not liking their ideas (be they right or wrong) does not make them trolls
2019-12-09 04:01:36	altendky	energizer: separate but another one that i want (not that 2.7 installs latest but some way to install latest without --list)
2019-12-09 04:02:15	<--	jokr (~jokr@124.123.72.176) has quit (Quit: WeeChat 2.6)
2019-12-09 04:02:15	-->	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has joined #python
2019-12-09 04:02:18	altendky	https://github.com/pyenv/pyenv/issues/541
2019-12-09 04:02:49	mandeep	basically i need a python library that will allow me to encode png files in f32
2019-12-09 04:02:51	IaMnEwHeRe	altendky, yes, but them hopping from dicts and circular refs to GC and then to gcc does
2019-12-09 04:03:30	altendky	IaMnEwHeRe: being confusing doesn't make someone a troll
2019-12-09 04:03:39	ammar2	mandeep: what is f32?
2019-12-09 04:03:42	<--	lemoldu_ (~lemoldu@arennes-654-1-210-193.w90-32.abo.wanadoo.fr) has quit (Ping timeout: 246 seconds)
2019-12-09 04:03:46	mandeep	ammar2: float
2019-12-09 04:03:59	ammar2	mandeep: you want to load up a png with the data values represented at 32 bit floats?
2019-12-09 04:04:26	-->	r4v3nd (59b91e1a@gateway/web/cgi-irc/kiwiirc.com/ip.89.185.30.26) has joined #python
2019-12-09 04:04:27	mandeep	ammar2: im already able to do that. problem is i need to save them with their float values
2019-12-09 04:04:40	mandeep	seems like Pillow and opencv write as uint8
2019-12-09 04:05:09	<--	aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) has quit (Quit: Leaving.)
2019-12-09 04:05:12	ammar2	yes, that's how pngs work
2019-12-09 04:05:22	IaMnEwHeRe	altendky, true, but I have seen this several times now, across boards and channels in IRC and I call him out, because usually being confused is signaled by sticking to the same topic/problemzone and not by jumping through the entire stack
2019-12-09 04:05:25	ammar2	the PNG format itself doesn't support saving the pixel values as floats
2019-12-09 04:05:35	-->	philr (~phil@ppp14-2-90-166.adl-apt-pir-bras31.tpg.internode.on.net) has joined #python
2019-12-09 04:05:49	ammar2	your libraries convert between floats and bytes when loading/saving them
2019-12-09 04:06:06	IaMnEwHeRe	altendky, let me demonstrate
2019-12-09 04:06:15	<--	rippa (~rippa@ppp-vpdn-37.1.85.157.yarnet.ru) has quit (Quit: {#`%${%&`+'${`%&NO CARRIER)
2019-12-09 04:06:28	altendky	IaMnEwHeRe: no, we just shouldn't be calling people trolls.  especially when they aren't.
2019-12-09 04:06:41	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 04:06:52	IaMnEwHeRe	neoncontrails, please having read this please elaborate how you think that gcc is causing reference-problems for your dicts that you use for publish-and-subscribe-implementations
2019-12-09 04:07:02	mandeep	ammar2: hmm
2019-12-09 04:07:32	<--	rindolf (~rindolf@IGLD-84-229-96-151.inter.net.il) has quit (Ping timeout: 276 seconds)
2019-12-09 04:07:36	IaMnEwHeRe	altendky, how do you  know? now let's see what the answer will be
2019-12-09 04:07:47	altendky	neoncontrails: did you mean gcc (gnu compiler collection) or gc (python garbage collection module)?
2019-12-09 04:07:58	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 04:08:05	altendky	(or in general python's handling of cleaning up objects which is more than just the gc module)
2019-12-09 04:08:29	IaMnEwHeRe	neoncontrails, and please be more specific, paint a broader picture and some code highlighting the structure of your problem
2019-12-09 04:08:34	<--	joshjh (~josh@109.246.246.116) has left #python
2019-12-09 04:09:06	-->	pnwise (~pnwise@unaffiliated/pnwise) has joined #python
2019-12-09 04:09:08	nedbat	IaMnEwHeRe: this is the second time today that you accused someone of being a troll
2019-12-09 04:09:20	ChrisWarrick	mandeep: the naïve solution is to multiply by 255 and convert to uint8, should be reasonably cheap if you’re doing it with numpy
2019-12-09 04:09:58	IaMnEwHeRe	nedbat, yes, I have a short fuse currently, but mind you was I wrong the first time?
2019-12-09 04:10:35	nedbat	IaMnEwHeRe: I don't think they were. You told them to learn the basics and then come back, which also seemed a bit brusque.
2019-12-09 04:10:37	IaMnEwHeRe	and I formuated it more as a question, a hunch I had and others were agreeing :D
2019-12-09 04:10:38	mandeep	ammar2: ah yes seems that you're right about the png format
2019-12-09 04:10:42	<--	morenoh11 (~nope@rrcs-172-254-98-154.nyc.biz.rr.com) has quit (Ping timeout: 246 seconds)
2019-12-09 04:10:48	mandeep	ChrisWarrick: yeah true, but i lose some precision here
2019-12-09 04:11:01	mandeep	maybe i need to switch to tiff
2019-12-09 04:11:17	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 240 seconds)
2019-12-09 04:11:27	IaMnEwHeRe	nedbat, what else is there to do, when they are out of their depth? instead of asking big lofty questions starting small and asking questions that can be better answered in settings like these is better IMHO
2019-12-09 04:11:35	altendky	IaMnEwHeRe: a troll is intentionally trying to cause trouble, not causing trouble by lack of knowledge etc.
2019-12-09 04:11:37	<--	happycrappy (~mes@c-24-6-149-58.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2019-12-09 04:11:41	ChrisWarrick	mandeep: well, your screen most likely can just display 8-bit images anyway
2019-12-09 04:11:49	ammar2	mandeep: hmm, I'm assuming these images aren't for displaying? uint8 is the max a screen can display anyway
2019-12-09 04:11:53	ChrisWarrick	mandeep: 24bpp*
2019-12-09 04:11:59	IaMnEwHeRe	altendky, agreed, but to the observer the behave the same
2019-12-09 04:11:59	nedbat	IaMnEwHeRe: well, we can help them by teaching, we can give them some guidance, some resources, etc.
2019-12-09 04:12:11	-->	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has joined #python
2019-12-09 04:12:12	altendky	IaMnEwHeRe: stop calling people things they aren't
2019-12-09 04:12:26	altendky	and even if they are, maybe don't
2019-12-09 04:12:30	ChrisWarrick	(there are fancy screens that can do more)
2019-12-09 04:12:32	IaMnEwHeRe	altendky, ok then I just sit back and watch  :D
2019-12-09 04:12:32	ammar2	IaMnEwHeRe: I'd argue that you're being more of a hinderance to on-topic conversation with your trolling talk
2019-12-09 04:12:36	-->	yagmi96 (~yagmi9666@bzq-79-176-10-132.red.bezeqint.net) has joined #python
2019-12-09 04:12:53	IaMnEwHeRe	ammar2 agreed I could be
2019-12-09 04:12:55	altendky	IaMnEwHeRe: yes, much better than inaccurately accusing people of things
2019-12-09 04:12:59	mandeep	ChrisWarrick: ammar2: no just in case i need the detail that would be the difference between 255 and 254.2
2019-12-09 04:13:08	IaMnEwHeRe	altendky, you don't know that, and that is my point
2019-12-09 04:13:12	energizer	persistently asking about issues far above one's skill level can be frustrating
2019-12-09 04:13:14	<--	Jerrynicki (~niklas@p200300F573E87D002E7240BAFAD315CD.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-09 04:13:19	IaMnEwHeRe	but let's stop this otherwise I have to call myself a troll
2019-12-09 04:13:32	-->	ksft (~ksft@wikipedia/KSFT) has joined #python
2019-12-09 04:14:04	mandeep	and i'm seeing differences in output png between Pillow/cv2 and stb_image
2019-12-09 04:14:11	<--	peter22222 (~peter2222@dslb-188-104-250-048.188.104.pools.vodafone-ip.de) has quit (Quit: Leaving)
2019-12-09 04:14:29	mandeep	im not really sure what's going on here, but i believed it had to do with saving
2019-12-09 04:14:50	-->	Seaninho (~Seaninho@2601:589:4880:6d20:f53c:1653:1718:ac2b) has joined #python
2019-12-09 04:15:49	-->	theWhisper_ (~quassel@unaffiliated/thewhisper/x-7482734) has joined #python
2019-12-09 04:16:11	ammar2	mandeep: might be different rounding
2019-12-09 04:16:25	mandeep	hmm could be
2019-12-09 04:17:26	<--	NeUx (~neux@gateway/tor-sasl/neux) has quit (Quit: come back later)
2019-12-09 04:17:38	-->	Leonarbro (~Leonarbro@S01067824af93741c.cg.shawcable.net) has joined #python
2019-12-09 04:18:42	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-09 04:19:34	<--	Seaninho (~Seaninho@2601:589:4880:6d20:f53c:1653:1718:ac2b) has quit (Ping timeout: 252 seconds)
2019-12-09 04:19:57	<--	ellcs (~ellcs@dslb-188-108-014-045.188.108.pools.vodafone-ip.de) has quit (Ping timeout: 240 seconds)
2019-12-09 04:19:58	-->	dale (~dale@unaffiliated/dale) has joined #python
2019-12-09 04:20:31	<--	cxzxczxcxzc (~cxzxczxcx@unaffiliated/cxzxczxcxzc) has left #python
2019-12-09 04:20:42	<--	traptrip (trip@brigaid.xs4all.nl) has quit (Remote host closed the connection)
2019-12-09 04:21:07	IaMnEwHeRe	neoncontrails, my apollogies for earlier, please elaborate the problem further
2019-12-09 04:21:09	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 04:21:19	-->	traptrip (trip@brigaid.xs4all.nl) has joined #python
2019-12-09 04:22:08	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2019-12-09 04:22:26	<--	wafflehunter (~wafflehun@149.172.254.130) has quit (Quit: Leaving)
2019-12-09 04:23:19	mandeep	are there any stb_image bindings for python?
2019-12-09 04:23:30	-->	udev_error (~udev_erro@unaffiliated/udev-error/x-2348729) has joined #python
2019-12-09 04:23:36	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 252 seconds)
2019-12-09 04:23:50	<--	djapo (~archie@unaffiliated/djapo) has quit (Remote host closed the connection)
2019-12-09 04:23:56	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2019-12-09 04:24:35	<--	sandbox1 (~unbanked_@c-67-167-239-14.hsd1.il.comcast.net) has quit (Quit: WeeChat 1.9.1)
2019-12-09 04:25:05	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Ping timeout: 276 seconds)
2019-12-09 04:26:21	<--	plimeriz (~user@154.57.11.99) has quit (Quit: Leaving)
2019-12-09 04:27:19	<--	udev_error (~udev_erro@unaffiliated/udev-error/x-2348729) has quit (Remote host closed the connection)
2019-12-09 04:28:14	ammar2	mandeep: https://pypi.org/project/Pil-Lite/ not sure how up to date it is
2019-12-09 04:28:23	-->	[SLB] (~slabua@unaffiliated/slabua) has joined #python
2019-12-09 04:28:27	<--	waynew (~wayne@24-35-211-21.fidnet.com) has quit (Quit: WeeChat 1.9.1)
2019-12-09 04:28:52	mandeep	ammar2: looks fairly maintained. ill take a look at the source. thanks :)
2019-12-09 04:28:58	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2019-12-09 04:29:13	-->	nahtnam (uid22411@gateway/web/irccloud.com/x-jsytsdhbgajlkqyb) has joined #python
2019-12-09 04:29:25	-->	canarts (~stranac@78-1-49-64.adsl.net.t-com.hr) has joined #python
2019-12-09 04:29:55	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Quit: WeeChat info:version)
2019-12-09 04:29:56	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 265 seconds)
2019-12-09 04:30:18	-->	sandbox1 (~unbanked_@c-67-167-239-14.hsd1.il.comcast.net) has joined #python
2019-12-09 04:30:37	<--	stranac (~stranac@78-1-49-64.adsl.net.t-com.hr) has quit (Ping timeout: 240 seconds)
2019-12-09 04:32:21	<--	obDC (~ob600@c-67-173-179-222.hsd1.il.comcast.net) has quit (Ping timeout: 265 seconds)
2019-12-09 04:32:24	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 04:33:27	<--	ffs (uid158779@gateway/web/irccloud.com/x-puneajfcquqyvjpv) has quit (Quit: Connection closed for inactivity)
2019-12-09 04:34:03	-->	kingx (~kingx@c-69-181-4-101.hsd1.ca.comcast.net) has joined #python
2019-12-09 04:34:22	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 04:34:55	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 04:35:05	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Client Quit)
2019-12-09 04:35:15	<--	sandbox1 (~unbanked_@c-67-167-239-14.hsd1.il.comcast.net) has quit (Ping timeout: 265 seconds)
2019-12-09 04:36:03	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 04:36:35	<--	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has quit (Remote host closed the connection)
2019-12-09 04:36:42	<--	thecoffemaker (~thecoffem@unaffiliated/thecoffemaker) has quit (Ping timeout: 265 seconds)
2019-12-09 04:36:49	<--	jax (d537e196@unaffiliated/jax) has quit (Remote host closed the connection)
2019-12-09 04:36:52	-->	parabolize (~paraboliz@c-76-25-97-149.hsd1.co.comcast.net) has joined #python
2019-12-09 04:37:01	-->	sandbox1 (~unbanked_@2607:fb90:a221:dec0:6da6:9549:c3e7:bc3d) has joined #python
2019-12-09 04:37:59	-->	thecoffemaker (~thecoffem@unaffiliated/thecoffemaker) has joined #python
2019-12-09 04:38:09	<--	stochastix (~quassel@unaffiliated/stochastix) has quit (Ping timeout: 265 seconds)
2019-12-09 04:39:07	-->	stochastix (~quassel@unaffiliated/stochastix) has joined #python
2019-12-09 04:39:44	<--	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has quit (Ping timeout: 252 seconds)
2019-12-09 04:41:50	BeerLover	best way to extract the bitrate from a string: '/tmp/INA090203573_128k.mp4' ?
2019-12-09 04:41:52	iKarus987	anyone knows a good article explaining this "for i in array"
2019-12-09 04:42:01	BeerLover	I want to extract the 128 part
2019-12-09 04:42:26	-->	royal_screwup21 (89de72f9@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.249) has joined #python
2019-12-09 04:42:26	altendky	iKarus987: i think http://bit.ly/pyiter might be relevant
2019-12-09 04:42:44	BeerLover	there can be multiple underscores
2019-12-09 04:43:15	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2019-12-09 04:43:32	<--	Ether_Man (~quassel@unaffiliated/ether-man/x-1546665) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2019-12-09 04:43:38	hostile	BeerLover: maybe split the string where the underscores are and get the last if that's where the bit rate is
2019-12-09 04:43:57	<--	Eleanor (~E@h77-53-169-12.cust.a3fiber.se) has quit (Ping timeout: 246 seconds)
2019-12-09 04:43:58	BeerLover	that is not elegant
2019-12-09 04:44:19	hostile	regex maybe?
2019-12-09 04:45:00	-->	ValekoZ (~valekoz@185.228.230.170) has joined #python
2019-12-09 04:45:48	<--	h4rd3n3D_ (~weechat@gateway/tor-sasl/h4rd3n3d) has quit (Ping timeout: 260 seconds)
2019-12-09 04:46:02	-->	obDC (~ob600@2601:249:8100:6f2:76d0:2bff:fec4:75e2) has joined #python
2019-12-09 04:46:13	-->	Ether_Man (~quassel@unaffiliated/ether-man/x-1546665) has joined #python
2019-12-09 04:46:35	-->	DrCuriosity (~drcuriosi@202.6.117.189) has joined #python
2019-12-09 04:46:54	BeerLover	i have currently done: start, end = s.rindex('_'), s.rindex('k.') and then int(s[start+1: end])
2019-12-09 04:47:00	BeerLover	regex would be slower
2019-12-09 04:47:05	BeerLover	hostile
2019-12-09 04:47:45	<--	IaMnEwHeRe (~IaMnEwHeR@185.246.130.63) has quit (Quit: WeeChat 2.6)
2019-12-09 04:48:17	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-09 04:48:32	blackleitus	how can I compare file bytes https://pastebin.com/TUFCVivc while I want to compare max 1mb https://pastebin.com/XKcZWaZn ?
2019-12-09 04:48:33	infobob	https://bpaste.net/show/S2M4M (repasted for blackleitus)
2019-12-09 04:48:41	-->	codebrainz (~codebrain@S010634bdfa9ee795.vc.shawcable.net) has joined #python
2019-12-09 04:49:03	<--	JaredSchooley (~Sech@2600:6c42:7400:c86:2112:fd1a:6b56:ea41) has quit (Ping timeout: 245 seconds)
2019-12-09 04:49:42	hostile	BeerLover: will the bitrate always be on the end?
2019-12-09 04:50:31	BeerLover	yes
2019-12-09 04:50:34	nedbat	BeerLover: why do you think regex would be slower?
2019-12-09 04:50:43	<--	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has quit (Ping timeout: 265 seconds)
2019-12-09 04:50:51	<--	Edico (~fenrir@unaffiliated/edico) has left #python
2019-12-09 04:50:51	-->	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has joined #python
2019-12-09 04:50:54	-->	JaredSchooley (~Sech@24-178-227-107.dhcp.stls.mo.charter.com) has joined #python
2019-12-09 04:50:57	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Quit: WeeChat info:version)
2019-12-09 04:50:59	BeerLover	nedbat isn't it?
2019-12-09 04:51:10	nedbat	BeerLover: it's written in C, it might be faster
2019-12-09 04:51:24	BeerLover	regex matchin is non linear
2019-12-09 04:51:27	BeerLover	right?
2019-12-09 04:51:33	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 04:51:35	BeerLover	rindex is linear
2019-12-09 04:51:58	nedbat	BeerLover: it depends on the regex, and maybe C code would be faster anyway. you'd need to measure, and btw it might not matter at all.
2019-12-09 04:52:01	ammar2	why are you worried about speed in this case?
2019-12-09 04:52:15	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 04:52:20	ammar2	a regex would probably be less fragile and more readable here
2019-12-09 04:52:36	<--	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 04:52:37	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2019-12-09 04:53:08	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 265 seconds)
2019-12-09 04:53:20	nedbat	BeerLover: in any case, I would be surprised if this string matching was the limiting factor in your program's speed.
2019-12-09 04:53:57	energizer	s.partition('k.')[0].rpartition('_')[-1]
2019-12-09 04:54:17	-->	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined #python
2019-12-09 04:54:26	-->	medard (~medard@chello085216234107.chello.sk) has joined #python
2019-12-09 04:54:54	jiggawattz	BeerLover: why would you choose Python if you are concerned about speed
2019-12-09 04:55:01	jiggawattz	go to rust my man
2019-12-09 04:55:21	-->	zeden (~user@unaffiliated/zeden) has joined #python
2019-12-09 04:55:25	altendky	there are so many layers, none can be rejected based on being 'concerned about speed'
2019-12-09 04:55:31	-->	TheFridgeMaster (~TheFridge@180.95.38.150) has joined #python
2019-12-09 04:55:32	nedbat	jiggawattz: it's fine to think about speed when writing Python. but you have to do it realistically. micro-optimizations are silly.
2019-12-09 04:55:34	altendky	too vague
2019-12-09 04:56:17	jiggawattz	nedbat: if speed is a requirement, then Python is just the wrong choice period
2019-12-09 04:56:32	nedbat	jiggawattz: depends on what the limiting factor is.
2019-12-09 04:56:38	<--	yagmi96 (~yagmi9666@bzq-79-176-10-132.red.bezeqint.net) has quit (Quit: Leaving)
2019-12-09 04:56:48	BeerLover	easy guys
2019-12-09 04:56:56	nedbat	jiggawattz: you could have a python program that is fast enough if written well, but too slow if written poorly.
2019-12-09 04:57:01	BeerLover	just looking for elegant way of doing it
2019-12-09 04:57:03	jiggawattz	sure nedbat
2019-12-09 04:57:12	nedbat	jiggawattz: ok, then no "period" about it.
2019-12-09 04:57:16	energizer	BeerLover: s.partition('k.')[0].rpartition('_')[-1] is how i would do it
2019-12-09 04:57:19	nedbat	BeerLover: the regex is elegant.
2019-12-09 04:57:21	jiggawattz	but your RUST program will be faster. period.
2019-12-09 04:57:52	nedbat	jiggawattz: sure. custom asics might be even faster!
2019-12-09 04:58:04	jiggawattz	this guy nedbat he knows
2019-12-09 04:58:07	nedbat	jiggawattz: actually, not "period". not if I/O is the bottleneck.
2019-12-09 04:58:14	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Quit: WeeChat info:version)
2019-12-09 04:58:16	ammar2	yeah, definitely not period
2019-12-09 04:58:19	altendky	also pypy and well written python may well be faster than poorly written rust.
2019-12-09 04:58:27	jiggawattz	I/O is unlimited in the age of nvme my man
2019-12-09 04:58:29	iKarus987	is there a good article thats talks about "for variable in list" i really wanna know how this actually works, i cant comperhand how this line keeps printing items from the start to the last item. I started learning programing yesterday, so i am sorry if this is noob question
2019-12-09 04:58:36	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 04:58:41	energizer	iKarus987: did you see altendky's link?
2019-12-09 04:58:46	iKarus987	yes i did
2019-12-09 04:58:53	iKarus987	he glossed over it
2019-12-09 04:58:58	jiggawattz	I/O will be obsolete in about 5 years anyways
2019-12-09 04:59:05	nedbat	iKarus987: what kind of questions remain for you?
2019-12-09 04:59:11	jiggawattz	persistent block storage will become as fast as RAM
2019-12-09 04:59:30	altendky	jiggawattz: you have an nvme connection to the internet?
2019-12-09 04:59:33	nedbat	jiggawattz: ok, we can pick up this conversation in 5 years then :)
2019-12-09 04:59:39	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined #python
2019-12-09 04:59:57	nedbat	iKarus987: what kinds of things did he gloss over?
2019-12-09 04:59:57	jiggawattz	nedbat: I will probably be a Sr. RUST engineer though
2019-12-09 04:59:58	locsmif	I've got a 2D numpy array, but print(arr[:, 0:9]) and print(arr[0:9, :]) yield the same output. Why don't I get columns instead of rows in the first example?
2019-12-09 04:59:59	jiggawattz	so no more idling in this channel
2019-12-09 05:00:14	BeerLover	altendky maybe he has nvme connection to god himself :P
2019-12-09 05:00:24	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 05:00:32	<--	mrallweather (~ben@sydney.techieman.net) has quit (Remote host closed the connection)
2019-12-09 05:01:07	energizer	him?
2019-12-09 05:01:11	ikanobori	I'd hope we can get a bit faster than RAM but I don't get my hopes up.
2019-12-09 05:01:37	jiggawattz	ikanobori: it's coming
2019-12-09 05:01:51	-->	mrallweather (~ben@sydney.techieman.net) has joined #python
2019-12-09 05:01:51	jiggawattz	in about 15 years we will get bacteria-based storage
2019-12-09 05:01:57	energizer	jiggawattz: we're veering off topic
2019-12-09 05:02:06	jiggawattz	each bacterium can hold state and it will continue to grow
2019-12-09 05:02:13	jiggawattz	energizer: why did you single me out?
2019-12-09 05:02:13	iKarus987	i just wanna know detailed.. step by step whats actually happening "for variable in list" i understand the normal for loop that language like javascript use but this "in" thing is confusing me feels like magic its short and simple to look at
2019-12-09 05:02:50	altendky	iKarus987: other languages have 'for each' if that helps make it feel less weird
2019-12-09 05:02:52	nedbat	iKarus987: "list" is an iterable, which means you can get an iterator from it.  An iterator has one method: .next() to get the next value.
2019-12-09 05:03:08	nedbat	iKarus987: lots of things are iterable: lists, strings, files, your own custom objects.
2019-12-09 05:03:11	<--	dastier (~dastier@178.121.87.84) has quit (Remote host closed the connection)
2019-12-09 05:03:21	nedbat	iKarus987: exactly what they do to implement next() is up to them.
2019-12-09 05:03:46	nedbat	iKarus987: but that kind of description was already in that page, so I'm wondering what part of it seems glossed-over to you?
2019-12-09 05:03:50	energizer	jiggawattz: your personal magnetism seems to pull others off track
2019-12-09 05:04:08	ammar2	locsmif: https://bpaste.net/show/ELSKU
2019-12-09 05:04:24	ikanobori	iKarus987: Javascript has the a similar thing in `for(let key in object) { ... }`.
2019-12-09 05:04:33	ammar2	locsmif: works for me, why do you think you're not getting the columns?
2019-12-09 05:05:05	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-09 05:05:26	-->	keepguessing (~superman@c-73-93-87-220.hsd1.ca.comcast.net) has joined #python
2019-12-09 05:05:32	-->	gloomy (~Gloomy@x4d0bbca5.dyn.telefonica.de) has joined #python
2019-12-09 05:05:57	<--	hostile (~quassel@adsl-185.176.58.194.tellas.gr) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2019-12-09 05:05:58	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 05:06:11	-->	[0x8b30cc] (~x8b30cc@unaffiliated/x8b30cc) has joined #python
2019-12-09 05:06:25	energizer	ikanobori: https://bpaste.net/show/S77XQ
2019-12-09 05:06:51	altendky	iKarus987: ^ (i presume)
2019-12-09 05:06:56	iKarus987	ahh sorry guys i just saw youtube video and i clicked, there isa ctually an article beneath for that i am sorry
2019-12-09 05:07:12	iKarus987	thanks
2019-12-09 05:07:16	nedbat	iKarus987: the text and the video are very very similar
2019-12-09 05:07:28	energizer	iKarus987: https://bpaste.net/show/S77XQ
2019-12-09 05:07:28	-->	voices (~voices@unaffiliated/tjt263) has joined #python
2019-12-09 05:07:31	iKarus987	the video is way too quick
2019-12-09 05:07:35	iKarus987	for my brain :D
2019-12-09 05:08:17	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 240 seconds)
2019-12-09 05:08:19	nedbat	iKarus987: ok, let us know if you still have questions
2019-12-09 05:08:42	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2019-12-09 05:09:21	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 05:09:46	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 05:09:56	<--	TML (~TML-prv@unaffiliated/tml) has quit (Disconnected by services)
2019-12-09 05:10:25	-->	glow8 (~mario@85.251.43.99.dyn.user.ono.com) has joined #python
2019-12-09 05:10:30	-->	TML (~TML-prv@unaffiliated/tml) has joined #python
2019-12-09 05:10:39	-->	esmhammer (~dad@bmtnon3746w-lp130-01-70-49-33-145.dsl.bell.ca) has joined #python
2019-12-09 05:11:53	-->	Whoroo (~user@unaffiliated/whoroo) has joined #python
2019-12-09 05:11:54	mattfly	im using python-docx to read a docx table but im getting the special characters all wrong
2019-12-09 05:11:58	<--	vuoto (~vuoto@80.71.142.174) has quit (Quit: vuoto)
2019-12-09 05:11:59	mattfly	python 3.7
2019-12-09 05:12:07	-->	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has joined #python
2019-12-09 05:12:20	mattfly	        from docx import Document
2019-12-09 05:12:20	mattfly	        document = Document(filepath)
2019-12-09 05:12:21	mattfly	        t=document.tables[0]
2019-12-09 05:12:28	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 265 seconds)
2019-12-09 05:12:53	mattfly	just that to load a document's first table, but when i loop over it the special characters are a mess
2019-12-09 05:12:57	mattfly	is there any way to fix this?
2019-12-09 05:13:13	<--	fflori (~fflori@194.230.155.112) has quit (Remote host closed the connection)
2019-12-09 05:13:15	<--	Church- (~aleph@lobsters/Auditor/Church-) has quit (Quit: WeeChat info:version)
2019-12-09 05:13:17	<--	medard (~medard@chello085216234107.chello.sk) has quit (Ping timeout: 240 seconds)
2019-12-09 05:13:21	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 05:13:26	offby1	dunno what you're seeing
2019-12-09 05:13:36	offby1	perhaps it's actually working fine, but you're misinterpreting what you're seeing
2019-12-09 05:13:37	<--	jayjo (~jayjo@unaffiliated/jayjo) has quit (Quit: ZNC 1.7.3 - https://znc.in)
2019-12-09 05:13:37	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2019-12-09 05:13:49	mattfly	this is a common encoding problem
2019-12-09 05:13:51	-->	h4rd3n3D_ (~weechat@gateway/tor-sasl/h4rd3n3d) has joined #python
2019-12-09 05:13:53	offby1	what does "a mess" mean?
2019-12-09 05:14:03	mattfly	wrong encoding mess
2019-12-09 05:14:08	<--	glow8 (~mario@85.251.43.99.dyn.user.ono.com) has quit (Client Quit)
2019-12-09 05:14:21	offby1	my gut tells me you're looking at a byte string that hasn't been decoded into Unicode
2019-12-09 05:14:24	locsmif	ammar2: https://bpaste.net/show/GZDCY
2019-12-09 05:14:31	locsmif	I explain in the paste
2019-12-09 05:14:45	mattfly	how do i automatically detect what encoding a string is and convert it to utf8?
2019-12-09 05:14:49	locsmif	I know I'm probably doing something wrong, but maybe you can help explain
2019-12-09 05:14:56	offby1	mattfly: I don't think there's a reliable way
2019-12-09 05:15:34	nedbat	mattfly: can you show us an example of the text you expect, and the mess you get?
2019-12-09 05:15:48	deniska	mattfly: I think you are observing a representation in an escaped form, while underlying text is still fine
2019-12-09 05:16:13	nedbat	mattfly: i think many of us are gussing :)   Can you show us details?
2019-12-09 05:16:15	offby1	deniska: yep, my guess too
2019-12-09 05:16:28	deniska	I don't think "wrong encoding" is a problem possible in docx format, but who knows :)
2019-12-09 05:17:13	-->	humitos (~humitos@139.47.122.65) has joined #python
2019-12-09 05:17:15	<--	mluser-home (~mluser-ho@cpe-107-11-253-108.columbus.res.rr.com) has quit (Quit: Yikes!)
2019-12-09 05:17:17	offby1	docx is Microsoft's format for Office docs, ya?
2019-12-09 05:17:30	nedbat	ya
2019-12-09 05:17:33	mattfly	btw same libraries and same code on linux works just fine
2019-12-09 05:17:45	mattfly	this problem only happens on windows... im testing on a vm so takes a while
2019-12-09 05:17:57	mattfly	(and same file im reading from)
2019-12-09 05:18:06	offby1	perhaps something is implicitly assuming a certain encoding based on locale
2019-12-09 05:18:11	Whoroo	I seem to have issues with this code, but not sure just what, I can make changes and just move the problem to a different part of the code - https://bpaste.net/show/VTV4G
2019-12-09 05:18:11	<--	abhixec (~abhixec@73.92.49.6) has quit (Quit: leaving)
2019-12-09 05:18:13	locsmif	ammar2: my problem is: why would I request all columns and then get them back in a 2D array arranged as rows, when I can request a specific column and it'll work as expected
2019-12-09 05:18:18	offby1	it guesses right on your Linux box, but wrong on your Windows box
2019-12-09 05:18:47	mattfly	Never had this sort of problem on linux actually
2019-12-09 05:18:55	nedbat	Whoroo: what issue are you having with the code?
2019-12-09 05:19:17	deniska	mattfly: hard to say without knowing in what context you are seeing the problem, and the best way to provide context is code
2019-12-09 05:19:36	offby1	Whoroo: "numbers" is, confusingly, a list of _strings_, not of numbers.
2019-12-09 05:19:42	ammar2	locsmif: right, the way slicing works is that you're saying: "give me only these parts of the array", when we do a[:, 0:2], we're saying give us the a array with only columns 0 and 1
2019-12-09 05:19:55	<--	tiwula (~lane@c-98-202-91-238.hsd1.ut.comcast.net) has quit (Quit: Leaving)
2019-12-09 05:19:57	<--	AhmedAmerican (c52b5fcb@gateway/web/cgi-irc/kiwiirc.com/ip.197.43.95.203) has quit (Remote host closed the connection)
2019-12-09 05:20:02	Whoroo	nedbat, well I get str, int issues, but I can convert either one and I just get another issue
2019-12-09 05:20:17	<--	llorllale (~llorllale@CPEac202e24ff83-CMac202e24ff80.cpe.net.fido.ca) has quit (Quit: WeeChat 1.9.1)
2019-12-09 05:20:41	locsmif	ammar2: right.. damn.
2019-12-09 05:20:51	nedbat	Whoroo: let talk specifically about one particular issue
2019-12-09 05:21:10	<--	keepguessing (~superman@c-73-93-87-220.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2019-12-09 05:21:11	ammar2	locsmif: does a.T[0:2] do what you want?
2019-12-09 05:21:17	ammar2	locsmif: i.e transposing the array first
2019-12-09 05:21:22	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 05:21:35	-->	Church- (~aleph@lobsters/Auditor/Church-) has joined #python
2019-12-09 05:21:37	offby1	there ought to be an IRC mode where I can say "/ignore everyone except nedbat"
2019-12-09 05:21:38	locsmif	ammar2: yes
2019-12-09 05:21:41	locsmif	ammar2: thanks
2019-12-09 13:55:37	--	irc: disconnected from server
2019-12-09 13:56:05	-->	duy1 (~laduyhaha@42.112.108.198) has joined #python
2019-12-09 13:56:05	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-09 13:56:05	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-09 13:56:05	--	Channel #python: 1781 nicks (0 ops, 0 voices, 1781 normals)
2019-12-09 13:56:17	<--	brinzhang_ (~brinzhang@171.8.76.20) has quit (Ping timeout: 240 seconds)
2019-12-09 13:56:25	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-09 13:56:39	<--	italic (~italic@unaffiliated/italic/x-8958156) has quit (Ping timeout: 250 seconds)
2019-12-09 13:57:07	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2019-12-09 13:58:08	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 13:58:49	<--	JTa (~Thunderbi@unaffiliated/jta) has quit (Ping timeout: 250 seconds)
2019-12-09 14:00:08	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 14:00:24	-->	fphilipe_ (~phil@85-195-241-186.fiber7.init7.net) has joined #python
2019-12-09 14:00:54	-->	joocain2_ (~joocain2@gateway/tor-sasl/joocain2) has joined #python
2019-12-09 14:02:27	-->	Lynxium (~Lynxium@bzq-109-67-226-187.red.bezeqint.net) has joined #python
2019-12-09 14:03:06	-->	snowmanbamm (~snowmanba@2600:1702:4360:6d60:5c4e:a128:a32e:8083) has joined #python
2019-12-09 14:03:10	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2019-12-09 14:03:17	-->	lockywolf_ (~lockywolf@95.85.18.95) has joined #python
2019-12-09 14:03:28	<--	joocain2 (~joocain2@gateway/tor-sasl/joocain2) has quit (Ping timeout: 260 seconds)
2019-12-09 14:05:37	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 240 seconds)
2019-12-09 14:05:57	<--	lockywolf (~lockywolf@114.85.137.46) has quit (Ping timeout: 240 seconds)
2019-12-09 14:06:55	-->	brinzhang_ (~brinzhang@218.29.111.74) has joined #python
2019-12-09 14:06:59	-->	Sxuza (~textual@105.186.99.218) has joined #python
2019-12-09 14:07:01	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 14:07:05	-->	lapoo (~dev4@89-212-52-180.static.t-2.net) has joined #python
2019-12-09 14:07:19	<--	parabolize (~paraboliz@c-76-25-97-149.hsd1.co.comcast.net) has quit (Quit: leaving)
2019-12-09 14:09:05	Ryuuguu	does Python come with some kind of function to count the number of digits in a number?
2019-12-09 14:09:27	Wulf	Ryuuguu: numbers don't have digits. Representations do. len(str(12345))
2019-12-09 14:09:45	Wulf	Ryuuguu: or you can use log10
2019-12-09 14:09:46	KirkMcDonald	Alternatively, math.log10
2019-12-09 14:09:59	<--	Adbray (~Adbray@2600:6c48:6f7f:d764:1998:e98a:86e2:5656) has quit (Quit: Ah! By Brain!)
2019-12-09 14:10:01	Ryuuguu	thank you
2019-12-09 14:10:05	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Ping timeout: 250 seconds)
2019-12-09 14:10:38	<--	causasui (~causasui@wikipedia/causa-sui) has quit (Ping timeout: 252 seconds)
2019-12-09 14:10:55	Wulf	but log10(0) returns an error and I wouldn't be too sure that for some numbers the result will be wrong because of floats
2019-12-09 14:10:56	<--	zuppa_2 (~zuppa@gateway/tor-sasl/zuppa) has quit (Ping timeout: 260 seconds)
2019-12-09 14:11:26	-->	granitosaurus (~granitosa@96.30.102.112) has joined #python
2019-12-09 14:12:00	-->	Boko_dbfecha (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:12:00	<--	Boko_dbfecha (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:12:28	<--	Ryuuguu (~cosmic@gateway/tor-sasl/ryuuguu) has quit (Remote host closed the connection)
2019-12-09 14:13:03	-->	Ryuuguu (~cosmic@gateway/tor-sasl/ryuuguu) has joined #python
2019-12-09 14:13:15	Wulf	log10(999999999999999) == log10(999999999999999 + 1)
2019-12-09 14:14:02	KirkMcDonald	Wulf: Ah, I imagine it's converting its argument to a float first thing.
2019-12-09 14:14:10	Wulf	yes
2019-12-09 14:14:30	KirkMcDonald	Or, no, that wouldn't do it in itself...
2019-12-09 14:14:44	KirkMcDonald	But the fact the result is 15 is telling.
2019-12-09 14:15:42	-->	han-solo (~han-solo@unaffiliated/han-solo) has joined #python
2019-12-09 14:15:50	KirkMcDonald	It's within an order of magnitude of a float's maximum precision, in any case.
2019-12-09 14:16:58	KirkMcDonald	Yet a third approach is to repeatedly do x //= 10 and count until you hit less than 10.
2019-12-09 14:17:02	Wulf	log10(999999999999999) ~ 14.9999999999999996 and that isn't representable anymore so is rounded up.
2019-12-09 14:17:05	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 14:17:32	Ryuuguu	x//10 or x//=10 ?
2019-12-09 14:17:40	KirkMcDonald	Ryuuguu: Whatever.
2019-12-09 14:17:50	Wulf	Ryuuguu: len(str(x)) is best solution here.
2019-12-09 14:18:00	Ryuuguu	I'm new to Python, sorry
2019-12-09 14:18:13	KirkMcDonald	Ryuuguu: One is just the in-place version of the other.
2019-12-09 14:18:13	Wulf	Ryuuguu: you don't need to be sorry about that! ;-)
2019-12-09 14:18:57	-->	slivera (slivera@gateway/vpn/privateinternetaccess/slivera) has joined #python
2019-12-09 14:19:11	-->	nathias (~nathias@unaffiliated/nathias) has joined #python
2019-12-09 14:19:17	Wulf	Ryuuguu: how large is your number?
2019-12-09 14:19:28	-->	brinzhang (~brinzhang@171.8.76.20) has joined #python
2019-12-09 14:19:41	-->	rendar (~rendar@unaffiliated/rendar) has joined #python
2019-12-09 14:19:45	Wulf	if too large, my code will be slow
2019-12-09 14:19:57	-->	FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) has joined #python
2019-12-09 14:20:09	<--	fphilipe_ (~phil@85-195-241-186.fiber7.init7.net) has quit (Quit: WeeChat 2.4)
2019-12-09 14:21:15	Ryuuguu	KirkMcDonald: I've actually come up with a recursive method that makes use of the third approach
2019-12-09 14:21:16	Wulf	gmpy2 is a lot faster
2019-12-09 14:21:47	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 14:22:02	Ryuuguu	Wulf: I'm just testing it out on smaller numbers
2019-12-09 14:23:08	<--	snowmanbamm (~snowmanba@2600:1702:4360:6d60:5c4e:a128:a32e:8083) has quit (Quit: snowmanbamm)
2019-12-09 14:23:10	<--	brinzhang_ (~brinzhang@218.29.111.74) has quit (Ping timeout: 268 seconds)
2019-12-09 14:23:11	<--	very_sneaky (~very_snea@49.255.162.98) has quit (Remote host closed the connection)
2019-12-09 14:23:59	-->	levi13 (~levi@p200300E1BF1673C0CE63CEBCA737E83D.dip0.t-ipconnect.de) has joined #python
2019-12-09 14:24:03	-->	Boko_fbbbech (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:24:04	<--	Boko_fbbbech (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:24:05	-->	brandfilt (~juhana@193.66.200.2) has joined #python
2019-12-09 14:24:33	<--	djapo (~archie@unaffiliated/djapo) has quit (Remote host closed the connection)
2019-12-09 14:25:11	-->	nolfie (~nolfie@185.9.141.1) has joined #python
2019-12-09 14:25:15	-->	rmarcand (~rmarcand@2001:420:c0c0:1003::3b1) has joined #python
2019-12-09 14:25:29	Wulf	len(gmpy2.digits(x)) for large x. I wish someone (not I!) would implement faster integers for cpython
2019-12-09 14:25:38	-->	P1ro (~quassel@gentoo/user/p1ro) has joined #python
2019-12-09 14:26:08	-->	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has joined #python
2019-12-09 14:27:19	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 14:27:29	<--	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-27.dsl.bell.ca) has quit (Ping timeout: 268 seconds)
2019-12-09 14:28:55	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 14:29:24	<--	brinzhang (~brinzhang@171.8.76.20) has quit (Read error: Connection reset by peer)
2019-12-09 14:29:26	-->	Boko_ffddgba (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:29:26	<--	Boko_ffddgba (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:30:31	--	irc: disconnected from server
2019-12-09 14:30:49	-->	duy2 (~laduyhaha@42.112.108.198) has joined #python
2019-12-09 14:30:49	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-09 14:30:49	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-09 14:30:49	--	Channel #python: 1787 nicks (0 ops, 0 voices, 1787 normals)
2019-12-09 14:30:59	--	You are now known as laduyhaha
2019-12-09 14:31:11	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-09 14:31:35	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Remote host closed the connection)
2019-12-09 14:31:59	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 14:32:43	-->	jello_pudding (~jello_pud@2601:600:9f80:7780::6a2a) has joined #python
2019-12-09 14:34:02	-->	philr (~phil@ppp14-2-90-166.adl-apt-pir-bras31.tpg.internode.on.net) has joined #python
2019-12-09 14:34:06	<--	duy1 (~laduyhaha@42.112.108.198) has quit (Ping timeout: 265 seconds)
2019-12-09 14:34:48	-->	chele (~chele@business-90-187-8-217.pool2.vodafone-ip.de) has joined #python
2019-12-09 14:35:16	-->	greedom (~greedom@muedsl-82-207-236-042.citykom.de) has joined #python
2019-12-09 14:35:39	<--	jello_pudding (~jello_pud@2601:600:9f80:7780::6a2a) has quit (Client Quit)
2019-12-09 14:35:51	-->	Boko_cagggff (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:35:51	<--	Boko_cagggff (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:36:17	-->	CoolerX (~coolerext@14.139.38.136) has joined #python
2019-12-09 14:36:23	-->	teej (uid154177@gateway/web/irccloud.com/x-crkyhlvtxmvafrlh) has joined #python
2019-12-09 14:36:36	-->	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-27.dsl.bell.ca) has joined #python
2019-12-09 14:37:10	<--	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has quit (Quit: WeeChat 2.4)
2019-12-09 14:37:53	-->	Boko_eghcdba (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:37:54	<--	Boko_eghcdba (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:39:09	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 14:39:18	-->	Boko_hhaeegb (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:39:19	<--	Boko_hhaeegb (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:39:30	-->	brinzhang_ (~brinzhang@218.29.111.74) has joined #python
2019-12-09 14:39:40	-->	Tichodroma (~lutz@fsf/member/Tichodroma) has joined #python
2019-12-09 14:39:56	-->	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has joined #python
2019-12-09 14:39:57	-->	CoolerY (~coolerext@14.139.38.136) has joined #python
2019-12-09 14:40:07	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-12-09 14:40:09	<--	therue (~rue@1-162-40-115.dynamic-ip.hinet.net) has quit (Quit: WeeChat 2.6)
2019-12-09 14:40:27	-->	therue (~rue@1-162-40-115.dynamic-ip.hinet.net) has joined #python
2019-12-09 14:40:27	<--	C2_Win (~Thunderbi@103.42.219.75) has quit (Ping timeout: 268 seconds)
2019-12-09 14:40:43	<--	Helenah (~s98259@unaffiliated/iveeee) has quit (Read error: Connection reset by peer)
2019-12-09 14:41:21	<--	Ryuuguu (~cosmic@gateway/tor-sasl/ryuuguu) has quit (Quit: Leaving)
2019-12-09 14:41:48	<--	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has quit (Client Quit)
2019-12-09 14:41:54	-->	n3wborn (n3wborn@gateway/vpn/privateinternetaccess/n3wborn) has joined #python
2019-12-09 14:41:56	-->	amenji (~amenji@unaffiliated/amenji) has joined #python
2019-12-09 14:42:09	riiski	Can someone explain me or give a documentation about init method mechanism for kwargs.pop operation? https://www.irccloud.com/pastebin/AGJb7XeE/
2019-12-09 14:42:14	-->	Helenah (~s98259@unaffiliated/iveeee) has joined #python
2019-12-09 14:42:41	<--	KOR_Solidarity (~Huh@121.134.103.153) has quit (Read error: Connection reset by peer)
2019-12-09 14:42:49	riiski	I spent a few days on it and I still don't get it
2019-12-09 14:42:54	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Ping timeout: 268 seconds)
2019-12-09 14:42:57	<--	CoolerX (~coolerext@14.139.38.136) has quit (Ping timeout: 240 seconds)
2019-12-09 14:43:11	riiski	The code is working, I just need explanation why
2019-12-09 14:43:23	-->	iflema (~ian@unaffiliated/iflema) has joined #python
2019-12-09 14:43:54	Wulf	ammar2: no, it's not inside cpython.
2019-12-09 14:45:01	han-solo	riiski: there's nothing special going on
2019-12-09 14:45:04	emerent	riiski: kwargs is just a dict
2019-12-09 14:45:05	Wulf	riiski: print(kwargs) before and after the pop
2019-12-09 14:45:41	ammar2	riiski: in the end this basically just means that if you do: YourClass(max_hours=2, foo=a, bar=b) then this constructor will get the max_hours and the rest of the kwargs will be passed up to your super class's constructor
2019-12-09 14:45:47	riiski	Yeah, I know what it shows :) I just don't understand why
2019-12-09 14:45:56	Wulf	riiski: a nicer way to do the same:  def __init__(self, *args, max_hours, **kwargs): ...
2019-12-09 14:46:03	-->	Boko_hbcbacg (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:46:03	<--	Boko_hbcbacg (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:46:05	-->	tinarg (~granitosa@2a01:4f8:212:1aae::2:1018) has joined #python
2019-12-09 14:46:28	riiski	Wulf: oh, I will try that to check if this works
2019-12-09 14:46:35	han-solo	riiski: https://rhettinger.wordpress.com/2011/05/26/super-considered-super/
2019-12-09 14:46:36	ammar2	the dict.pop(key) is just an in place operation that will remove the key from the dict and return its value
2019-12-09 14:47:08	riiski	han-solo: thanks for the article, I need it
2019-12-09 14:47:17	riiski	ammar2: but why?
2019-12-09 14:47:36	ammar2	why what?
2019-12-09 14:47:50	ammar2	why is it popping? why is not passing max_hours up to the super class?
2019-12-09 14:47:50	riiski	Why is it needed?
2019-12-09 14:47:57	riiski	yes
2019-12-09 14:48:15	ammar2	because they don't want to propagate the argument up. This depends on what this class's parent is
2019-12-09 14:48:24	<--	granitosaurus (~granitosa@96.30.102.112) has quit (Ping timeout: 246 seconds)
2019-12-09 14:52:02	-->	Boko_ecfgded (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:52:02	<--	Boko_ecfgded (~smokevadi@179-194-36-78.baltnet.ru) has quit (Max SendQ exceeded)
2019-12-09 14:52:19	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 14:52:49	-->	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has joined #python
2019-12-09 14:53:13	riiski	I am going to need more articles on this because it is a breaking point for me
2019-12-09 14:53:44	-->	humitos (~humitos@139.47.122.65) has joined #python
2019-12-09 14:54:03	-->	h4rd3n3D (~weechat@gateway/tor-sasl/h4rd3n3d) has joined #python
2019-12-09 14:54:23	-->	Boko_heehead (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:55:15	<--	Boko_heehead (~smokevadi@179-194-36-78.baltnet.ru) has quit (Read error: Connection reset by peer)
2019-12-09 14:55:23	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 14:55:31	ammar2	I mean we've told you the mechanism of what is happening. Now it's up to you to read the rest of the code and figure out why this class wants the max_hours argument for itself and not pass it to the super class
2019-12-09 14:55:33	-->	Deusdeorum (~Deusdeoru@unaffiliated/deusdeorum) has joined #python
2019-12-09 14:56:04	riiski	it is used in a django form, so no point to argue about it
2019-12-09 14:56:20	-->	Boko_hhdgdab (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 14:56:35	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Remote host closed the connection)
2019-12-09 14:56:35	han-solo	mostly probably because the parent class don't need the max_hours
2019-12-09 14:56:51	riiski	yp
2019-12-09 14:56:53	riiski	yuo
2019-12-09 14:56:56	riiski	yup
2019-12-09 14:56:58	riiski	lol
2019-12-09 14:56:59	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 14:57:03	-->	nicolasnicolas (~nicolasni@167.99.80.52) has joined #python
2019-12-09 14:57:18	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2019-12-09 14:57:27	-->	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2019-12-09 14:58:20	<--	brinzhang_ (~brinzhang@218.29.111.74) has quit (Ping timeout: 268 seconds)
2019-12-09 14:59:01	<--	TML (~TML-prv@unaffiliated/tml) has quit (Read error: Connection reset by peer)
2019-12-09 14:59:40	-->	TML (~TML-prv@unaffiliated/tml) has joined #python
2019-12-09 15:00:08	<--	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has quit (Ping timeout: 276 seconds)
2019-12-09 15:00:17	<--	iKarus987 (~ikarus807@85-220-22-204.dsl.dynamic.simnet.is) has quit (Ping timeout: 240 seconds)
2019-12-09 15:00:47	<--	Boko_hhdgdab (~smokevadi@179-194-36-78.baltnet.ru) has quit (Ping timeout: 250 seconds)
2019-12-09 15:01:03	<--	malSet (~malSet@cpe-173-89-212-155.columbus.res.rr.com) has quit (Read error: Connection reset by peer)
2019-12-09 15:01:29	-->	vpathak (~vpathak@c-73-197-108-42.hsd1.nj.comcast.net) has joined #python
2019-12-09 15:02:01	-->	Serpent7776 (~Serpent77@78-11-8-249.static.ip.netia.com.pl) has joined #python
2019-12-09 15:02:04	<--	yelof (~yelof@2601:283:8003:a920:8578:c1f9:1888:4fda) has quit (Remote host closed the connection)
2019-12-09 15:02:15	-->	Boko_feddggc (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 15:02:51	<--	Boko_feddggc (~smokevadi@179-194-36-78.baltnet.ru) has quit (Read error: Connection reset by peer)
2019-12-09 15:02:58	-->	malSet (~malSet@cpe-173-89-212-155.columbus.res.rr.com) has joined #python
2019-12-09 15:03:49	-->	escanor (uid387784@gateway/web/irccloud.com/x-knsphqhwcocadmma) has joined #python
2019-12-09 15:03:54	-->	Mr_9anu3rq (~Mr.9anu3r@36.91.206.250) has joined #python
2019-12-09 15:05:10	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Remote host closed the connection)
2019-12-09 15:05:33	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 15:06:24	<--	humitos (~humitos@139.47.122.65) has quit (Remote host closed the connection)
2019-12-09 15:06:29	-->	Boko_bebbcea (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 15:06:42	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2019-12-09 15:07:15	-->	humitos (~humitos@139.47.122.65) has joined #python
2019-12-09 15:07:25	<--	Creatornator (~Creatorna@142-79-197-211.starry-inc.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 15:07:29	-->	brinzhang_ (~brinzhang@218.29.111.74) has joined #python
2019-12-09 15:07:46	<--	humitos (~humitos@139.47.122.65) has quit (Remote host closed the connection)
2019-12-09 15:08:08	-->	humitos (~humitos@139.47.122.65) has joined #python
2019-12-09 15:09:20	<--	opsec (opsec@opsec/opsec) has quit (Remote host closed the connection)
2019-12-09 15:09:56	cluelessperson_	yo
2019-12-09 15:09:57	<--	black_13 (44e36799@ip68-227-103-153.ok.ok.cox.net) has quit (Remote host closed the connection)
2019-12-09 15:10:05	Mr_9anu3rq	Hi everyone, I made a python program using pyqt5 on linux and now I want to run this program to windows as an exe file, what should I do? thankyou
2019-12-09 15:10:45	-->	lightman (~lightman@88.147.115.242) has joined #python
2019-12-09 15:10:45	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Ping timeout: 250 seconds)
2019-12-09 15:11:16	<--	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has quit (Ping timeout: 268 seconds)
2019-12-09 15:11:54	-->	mathemancer (~mathemanc@ip1f11fe4c.dynamic.kabel-deutschland.de) has joined #python
2019-12-09 15:11:55	-->	opsec (opsec@opsec/opsec) has joined #python
2019-12-09 15:13:06	-->	airstorm (~belovent@cr-01.anx09.lju.si.anexia-it.com) has joined #python
2019-12-09 15:13:27	<--	hypc (~Thunderbi@60.16.254.148) has quit (Remote host closed the connection)
2019-12-09 15:13:31	han-solo	Mr_9anu3rq: https://www.pyinstaller.org/
2019-12-09 15:13:48	-->	hypc (~Thunderbi@60.16.254.148) has joined #python
2019-12-09 15:14:19	<--	lankanmon (~LKNnet@CPEb4fbe4e331bd-CM64777d632380.cpe.net.cable.rogers.com) has quit (Quit: Left...)
2019-12-09 15:16:20	<--	bonestormii_ (~boneii@c-67-162-87-77.hsd1.il.comcast.net) has quit (Remote host closed the connection)
2019-12-09 15:17:00	Mr_9anu3rq	han-solo: install on windows or linux?
2019-12-09 15:17:46	-->	Andecy (~andecy@bzq-218-29-26.cablep.bezeqint.net) has joined #python
2019-12-09 15:17:50	-->	lockywolf__ (~lockywolf@114.85.174.55) has joined #python
2019-12-09 15:17:50	han-solo	i assumed you only wanted the .exe to be on windows. Yes, in linux
2019-12-09 15:18:15	<--	nolfie (~nolfie@185.9.141.1) has quit (Quit: leaving)
2019-12-09 15:18:58	-->	boxr (~boxr@panopticon.cybergaraget.org) has joined #python
2019-12-09 15:18:59	<--	kriskropd (~kriskropd@unaffiliated/kriskropd) has quit (Quit: kriskropd)
2019-12-09 15:19:32	<--	Boko_bebbcea (~smokevadi@179-194-36-78.baltnet.ru) has quit (Read error: Connection reset by peer)
2019-12-09 15:19:57	<--	lockywolf_ (~lockywolf@95.85.18.95) has quit (Ping timeout: 240 seconds)
2019-12-09 15:20:06	-->	tonythomas (uid25971@wikimedia/-01tonythomas) has joined #python
2019-12-09 15:20:21	-->	lockywolf (~lockywolf@114.85.176.190) has joined #python
2019-12-09 15:20:31	<--	oakridge (~oakridge@157.245.63.122) has quit (Quit: ZNC 1.7.5 - https://znc.in)
2019-12-09 15:20:51	-->	dre_ (~dre_@115-188-135-8-adsl.sparkbb.co.nz) has joined #python
2019-12-09 15:21:25	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 15:21:31	-->	Mrbuck (~Mrbuck@ec2-34-200-164-101.compute-1.amazonaws.com) has joined #python
2019-12-09 15:21:37	han-solo	Mr_9anu3rq: er, wait. It has to be created in windows :/
2019-12-09 15:21:45	-->	oakridge (~oakridge@157.245.63.122) has joined #python
2019-12-09 15:21:48	-->	zeSoup (~jsc@2003:5b:203b:100:3580:c637:f15b:4411) has joined #python
2019-12-09 15:21:49	han-solo	Sorry about that
2019-12-09 15:22:07	han-solo	It is specific to the active operating system and the active version of Python
2019-12-09 15:22:08	<--	lockywolf__ (~lockywolf@114.85.174.55) has quit (Ping timeout: 252 seconds)
2019-12-09 15:22:38	-->	Boko_gghbhgd (~smokevadi@179-194-36-78.baltnet.ru) has joined #python
2019-12-09 15:23:18	-->	AquaL1te (~AquaL1te@unaffiliated/aqual1te) has joined #python
2019-12-09 15:24:32	han-solo	https://pypi.org/project/cx-Freeze/ # is the one that does cross platform
2019-12-09 15:24:47	-->	C2_Win (~Thunderbi@59.153.110.122) has joined #python
2019-12-09 15:24:49	<--	nicolasnicolas (~nicolasni@167.99.80.52) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-12-09 15:25:10	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 15:25:15	<--	Jantz (~IceChat9@2407:7000:8d04:100:edd9:8a1e:edf1:b8e5) has quit (Read error: Connection reset by peer)
2019-12-09 15:25:26	<--	brinzhang_ (~brinzhang@218.29.111.74) has quit (Read error: Connection reset by peer)
2019-12-09 15:25:52	-->	brinzhang_ (~brinzhang@218.29.111.74) has joined #python
2019-12-09 15:26:03	<--	dale (~dale@unaffiliated/dale) has quit (Quit: My computer has gone to sleep)
2019-12-09 15:26:10	-->	zadock (~zadock@gateway/tor-sasl/zadock) has joined #python
2019-12-09 15:26:19	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 15:26:59	-->	Ytteb (~Ytteb@unaffiliated/ytteb) has joined #python
2019-12-09 15:27:01	<--	Boko_gghbhgd (~smokevadi@179-194-36-78.baltnet.ru) has quit (Read error: Connection reset by peer)
2019-12-09 15:27:18	[Tritium]	pyinstaller is multi-platform, and not abandoned like cx-freeze
2019-12-09 15:27:22	-->	Tucky (~Tucky@61.235.17.93.rev.sfr.net) has joined #python
2019-12-09 15:27:52	[Tritium]	oh, wow, they actually had a release!
2019-12-09 15:27:58	-->	oakridge_ (~oakridge@157.245.63.122) has joined #python
2019-12-09 15:27:59	[Tritium]	its been a really long time
2019-12-09 15:28:05	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 250 seconds)
2019-12-09 15:28:31	<--	oakridge (~oakridge@157.245.63.122) has quit (Ping timeout: 250 seconds)
2019-12-09 15:28:44	han-solo	[Tritium]: so you can create an exe in linux using pyinstaller and it will work in windows ?
2019-12-09 15:28:45	ikanobori	Multi platform but not a cross compiler :)
2019-12-09 15:29:10	-->	throsturt (~throstur@unaffiliated/throstur) has joined #python
2019-12-09 15:29:11	han-solo	Ah
2019-12-09 15:29:31	-->	Jantz (~IceChat9@2407:7000:8d04:100:edd9:8a1e:edf1:b8e5) has joined #python
2019-12-09 15:29:33	ikanobori	Honestly this is common, I think even some of the others don't specifically like to be cross platform due to some licensing of vcredist or such.
2019-12-09 15:29:36	ikanobori	If I recall.
2019-12-09 15:29:37	[Tritium]	han-solo: building windows installations on linux, without the use of wine, is unreliable anyways
2019-12-09 15:29:56	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 15:30:03	-->	shredding (~shredding@p200300E9EF0F9A00C0B65DD2F3679101.dip0.t-ipconnect.de) has joined #python
2019-12-09 15:30:04	[Tritium]	but python works fine under wine
2019-12-09 15:30:12	<--	The_Prospector (~The_Prosp@unaffiliated/cornman) has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
2019-12-09 15:30:22	<--	shredding (~shredding@p200300E9EF0F9A00C0B65DD2F3679101.dip0.t-ipconnect.de) has quit (Read error: Connection reset by peer)
2019-12-09 15:30:29	-->	shredding (~shredding@p200300E9EF0F9A00C0B65DD2F3679101.dip0.t-ipconnect.de) has joined #python
2019-12-09 15:30:30	han-solo	I only used wine once, i don't remember what i used it for now :)
2019-12-09 15:30:50	Mr_9anu3rq	when compiling on windows (pyinstaller), will it run without installing pyqt5?
2019-12-09 15:30:56	-->	tesseract (~tesseract@49.105.136.77.rev.sfr.net) has joined #python
2019-12-09 15:30:57	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-12-09 15:31:23	<--	tesseract (~tesseract@49.105.136.77.rev.sfr.net) has quit (Remote host closed the connection)
2019-12-09 15:31:28	[Tritium]	Mr_9anu3rq: pyinstaller will package pyqt and all other dependencies it can find
2019-12-09 15:31:39	-->	tesseract (~tesseract@49.105.136.77.rev.sfr.net) has joined #python
2019-12-09 15:32:35	-->	The_Prospector (~The_Prosp@unaffiliated/cornman) has joined #python
2019-12-09 15:32:48	-->	schne1der (~schneider@unaffiliated/schneider) has joined #python
2019-12-09 15:32:48	<--	brinzhang_ (~brinzhang@218.29.111.74) has quit (Ping timeout: 245 seconds)
2019-12-09 15:32:52	<--	pxs_0o (~pxs@176.60.138.31) has quit (Read error: Connection reset by peer)
2019-12-09 15:35:52	-->	pxs (~pxs@176.60.138.31) has joined #python
2019-12-09 15:38:42	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Quit: Leaving)
2019-12-09 15:39:10	-->	arashi (~avimanyu@223.187.208.143) has joined #python
2019-12-09 15:39:49	Mr_9anu3rq	Tritium: successfully created exe file, but can not run on windows
2019-12-09 15:41:25	<--	boxr (~boxr@panopticon.cybergaraget.org) has quit (Quit: Lost terminal)
2019-12-09 15:41:26	--	hberaud|gone is now known as hberaud
2019-12-09 15:41:35	<--	lemoldu__ (~lemoldu@arennes-654-1-223-102.w90-32.abo.wanadoo.fr) has quit (Quit: Leaving)
2019-12-09 15:41:46	<--	Sxuza (~textual@105.186.99.218) has quit (Ping timeout: 265 seconds)
2019-12-09 15:41:53	-->	davepdotorg (~davepdoto@212.219.133.13) has joined #python
2019-12-09 15:42:21	-->	jaziz1 (~jaziz@unaffiliated/jaziz) has joined #python
2019-12-09 15:42:24	<--	musr (~musr@gateway/tor-sasl/musr) has quit (Ping timeout: 260 seconds)
2019-12-09 15:42:37	Mr_9anu3rq	warning: missing module named
2019-12-09 15:42:53	-->	boxr (~boxr@panopticon.cybergaraget.org) has joined #python
2019-12-09 15:43:54	<--	Mrbuck (~Mrbuck@ec2-34-200-164-101.compute-1.amazonaws.com) has quit (Remote host closed the connection)
2019-12-09 15:43:59	-->	Darkhunter (~mmojzis@242.214.broadband18.iol.cz) has joined #python
2019-12-09 15:44:37	-->	musr (~musr@gateway/tor-sasl/musr) has joined #python
2019-12-09 15:45:25	<--	jaziz (~jaziz@unaffiliated/jaziz) has quit (Ping timeout: 250 seconds)
2019-12-09 15:46:25	<--	vpathak (~vpathak@c-73-197-108-42.hsd1.nj.comcast.net) has quit (Ping timeout: 268 seconds)
2019-12-09 15:46:35	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 15:51:03	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 250 seconds)
2019-12-09 15:51:08	[Tritium]	Mr_9anu3rq: the pyinstaller docs will tell you how to deal with hidden imports
2019-12-09 15:51:56	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 15:52:47	<--	MoarSpaceFi (~Forgot_my@65.155.84.20) has quit (Read error: Connection reset by peer)
2019-12-09 15:52:49	-->	lockywolf_ (~lockywolf@95.85.18.95) has joined #python
2019-12-09 15:52:50	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 15:54:05	-->	ciccio2000 (~fbeninca@84.88.185.62) has joined #python
2019-12-09 15:54:40	-->	enoq (~textual@91.113.175.52) has joined #python
2019-12-09 15:55:18	<--	duderonomy (~duderonom@c-73-231-57-101.hsd1.ca.comcast.net) has quit (Ping timeout: 265 seconds)
2019-12-09 15:55:24	<--	lockywolf (~lockywolf@114.85.176.190) has quit (Ping timeout: 250 seconds)
2019-12-09 15:56:12	-->	bdeshi (~bdeshi@103.55.145.110) has joined #python
2019-12-09 15:57:21	-->	ralonsoh (~ralonsoh@79.97.188.172) has joined #python
2019-12-09 15:58:46	-->	xy2_ (~xy2_@94.239.177.175) has joined #python
2019-12-09 15:58:58	-->	floppydh (~floppydh@buro.mquadr.at) has joined #python
2019-12-09 15:59:48	-->	framend (~framend@unaffiliated/framend) has joined #python
2019-12-09 16:00:59	<--	lambda-11235 (~lambda-11@172.242.242.177) has quit (Quit: Bye)
2019-12-09 16:01:23	<--	tsaka__ (~torstein@94.66.73.249) has quit (Quit: Konversation terminated!)
2019-12-09 16:01:28	-->	pwned (~pwned@85.103.13.248) has joined #python
2019-12-09 16:01:33	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 245 seconds)
2019-12-09 16:01:48	pwned	I was wondering
2019-12-09 16:01:58	pwned	I've written a bunch of asyncio code over the past 2 months
2019-12-09 16:02:30	pwned	following the docs I always took good care to give the loop parameter to every function that has it
2019-12-09 16:02:39	pwned	now 3.8 docs says it is deprecated in many places
2019-12-09 16:02:49	pwned	was all my effort in vain?
2019-12-09 16:03:00	energizer	yes
2019-12-09 16:03:07	pwned	k thx
2019-12-09 16:03:11	<--	enoq (~textual@91.113.175.52) has quit (Ping timeout: 276 seconds)
2019-12-09 16:03:16	<--	vikas027 (~vikas027@119-18-2-150.771202.syd.nbn.aussiebb.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 16:03:18	-->	C2_Win1 (~Thunderbi@59.153.110.86) has joined #python
2019-12-09 16:03:21	<--	owenc (~owen@193.238.71.3) has quit (Quit: WeeChat 2.6)
2019-12-09 16:03:44	energizer	pwned: i've switched to using trio for async whenever i possibly can (https://trio.readthedocs.io/)
2019-12-09 16:04:34	deniska	I was ahead the curve, never passed the loop around :)
2019-12-09 16:04:48	-->	lockywolf__ (~lockywolf@114.85.184.10) has joined #python
2019-12-09 16:05:08	pwned	energizer: is it a wrapper around asyncio or does it use some external 3rd party dependency like libevent ?
2019-12-09 16:05:19	deniska	it implements its own event loop
2019-12-09 16:05:21	energizer	pwned: neither
2019-12-09 16:05:43	<--	carl- (~carl@nat.basefarm.se) has quit (Remote host closed the connection)
2019-12-09 16:05:56	<--	gkamathe (gkamathe@unaffiliated/gkamathe) has quit (Ping timeout: 265 seconds)
2019-12-09 16:05:59	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 16:06:13	-->	carl- (~carl@nat.basefarm.se) has joined #python
2019-12-09 16:06:22	pwned	I realy can't switch at this point but people keep on recommending it whenever I enter the channel
2019-12-09 16:06:31	-->	dynetrekk (3e46673b@62.70.103.59) has joined #python
2019-12-09 16:06:43	han-solo	trio is very good
2019-12-09 16:06:45	pwned	cuz nursery
2019-12-09 16:06:46	<--	C2_Win (~Thunderbi@59.153.110.122) has quit (Ping timeout: 268 seconds)
2019-12-09 16:06:47	--	C2_Win1 is now known as C2_Win
2019-12-09 16:06:51	han-solo	the design principle is also very nice
2019-12-09 16:06:57	-->	DanyC (~DanyC@185.65.25.74) has joined #python
2019-12-09 16:06:58	<--	zadock (~zadock@gateway/tor-sasl/zadock) has quit (Quit: Leaving)
2019-12-09 16:07:06	-->	owenc (~owen@193.238.71.3) has joined #python
2019-12-09 16:07:06	energizer	if you must use asyncio, you can try https://github.com/agronholm/anyio
2019-12-09 16:07:19	dynetrekk	Hi, I'm running an external process with subprocess.run and a timeout of, say, 5 seconds. How do I capture output? I'm testing a daemon process that will always timeout, but I would like to capture its output.
2019-12-09 16:07:26	energizer	er i mean https://anyio.readthedocs.io/
2019-12-09 16:07:30	-->	veek (~veek@unaffiliated/veek) has joined #python
2019-12-09 16:07:36	-->	mcsontos (mcsontos@nat/redhat/x-fyireofjbwisulnz) has joined #python
2019-12-09 16:07:44	<--	lockywolf_ (~lockywolf@95.85.18.95) has quit (Ping timeout: 276 seconds)
2019-12-09 16:07:50	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined #python
2019-12-09 16:07:51	<--	DanyC (~DanyC@185.65.25.74) has quit (Remote host closed the connection)
2019-12-09 16:08:00	pwned	`High level compatibility layer for multiple asynchronous event loop implementations on Python
2019-12-09 16:08:06	Yhg1s	dynetrekk: you tell subprocess.run to capture output, and it'll be attached to the object returned from 'run'
2019-12-09 16:08:10	energizer	dynetrekk: subprocess.check_output()?
2019-12-09 16:08:20	<--	CrazyEddy (crazyed@wrongplanet/CrazyEddy) has quit (Ping timeout: 252 seconds)
2019-12-09 16:08:38	dynetrekk	Yhg1s but when subprocess.run raises the timeout exception, I don't get that object?
2019-12-09 16:08:45	ikanobori	I bet the timeout raises an exception and you don't get the output.
2019-12-09 16:08:52	pwned	haha
2019-12-09 16:08:56	ikanobori	dynetrekk: Does the exception object hold the outputs?
2019-12-09 16:09:00	-->	DanyC (~DanyC@185.65.25.74) has joined #python
2019-12-09 16:09:08	-->	fflori (~fflori@nat-wlan-uzh-89-206-64-012.uzh.ch) has joined #python
2019-12-09 16:09:14	energizer	dynetrekk: run(check=False, stdout=PIPE) should work
2019-12-09 16:09:28	Yhg1s	dynetrekk: correct, but the TimeoutExpired exception you get does.
2019-12-09 16:09:54	-->	ncrocfer (~ncrocfer@unaffiliated/ncrocfer) has joined #python
2019-12-09 16:09:58	arashi	I wrote a simple matrix addition program , and now i have no idea how to print the result of the adddition
2019-12-09 16:15:21	--	irc: disconnected from server
2019-12-09 17:27:43	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-09 17:27:43	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-09 17:27:43	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-09 17:27:44	--	Channel #python: 1806 nicks (0 ops, 0 voices, 1806 normals)
2019-12-09 17:27:56	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-09 17:28:07	Yhg1s	[Tritium]: except if you have any kind of third-party dependency.
2019-12-09 17:28:20	Yhg1s	and since Python itself has third-party dependencies...
2019-12-09 17:28:35	Yhg1s	(this is low cost in the first year, and then more and more cost every year. In the end it will be pretty compelling.)
2019-12-09 17:28:36	[Tritium]	Yhg1s: Like I said... if you are willing to patch cpython yourself...
2019-12-09 17:28:37	<--	scruz (~Adium@41.58.106.178) has quit (Quit: Leaving.)
2019-12-09 17:29:20	-->	RRedcroft (~user@cpc89156-stok18-2-0-cust787.1-4.cable.virginm.net) has joined #python
2019-12-09 17:29:27	Yhg1s	[Tritium]: it's not just about 'patching cpython'. It's about *maintaining it*.
2019-12-09 17:29:31	<--	DanyC (~DanyC@185.65.25.74) has quit (Remote host closed the connection)
2019-12-09 17:29:33	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 265 seconds)
2019-12-09 17:29:51	[Tritium]	Yhg1s: we live in a world where some companies cannot migrate to windows 10 because it fully dropped *16 bit* support.
2019-12-09 17:30:22	Yhg1s	[Tritium]: this does not dispute anything I said.
2019-12-09 17:31:07	[Tritium]	an internal codebase at rest will stay at rest unless acted on by competition or legislation
2019-12-09 17:31:17	[Tritium]	or litigation
2019-12-09 17:31:18	Haxxa	is 2.7 still "secure"?
2019-12-09 17:31:26	Yhg1s	Haxxa: at the moment, sure.
2019-12-09 17:31:33	Yhg1s	[Tritium]: an internal codebase does not exist in isolation.
2019-12-09 17:31:42	[Tritium]	in so far as they are accepting security patches for the next... 3 weeks
2019-12-09 17:31:43	<--	AcTiVaTe (~activate@host-m7ku8h.tnz1.zeelandnet.nl) has quit (Quit: Leaving)
2019-12-09 17:31:52	<--	funeral (Funeral@gateway/vpn/nordvpn/funeral) has quit (Ping timeout: 268 seconds)
2019-12-09 17:32:26	Haxxa	like if major vulnerabilities emerged on Jan 2nd 2020, that enabled any hello world program to run remote unsigned code, would that get patched? (yes I have picked an insane example)
2019-12-09 17:32:36	Yhg1s	Haxxa: yes.
2019-12-09 17:32:42	Yhg1s	Haxxa: the last release is scheduled for PyCon 2020.
2019-12-09 17:32:48	<--	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-12-09 17:32:57	[Tritium]	yes, but only because Benjamen wants to throw a party at pycon.
2019-12-09 17:33:17	<--	barometz (~dominic@pdpc/supporter/active/nazgjunk) has quit (Quit: corn upgrade)
2019-12-09 17:33:20	<--	spacewook (~spacewook@ip24-253-130-175.hr.hr.cox.net) has left #python ("leaving")
2019-12-09 17:33:24	-->	AcTiVaTe (~activate@host-m7ku8h.tnz1.zeelandnet.nl) has joined #python
2019-12-09 17:33:26	-->	DanyC (~DanyC@185.65.25.74) has joined #python
2019-12-09 17:33:38	-->	funeral (~Funeral@246.109-247-210.customer.lyse.net) has joined #python
2019-12-09 17:33:50	-->	spacewook (~spacewook@ip24-253-130-175.hr.hr.cox.net) has joined #python
2019-12-09 17:33:52	Haxxa	Fun Fact: I work for a utility company our SCADA network runs on win3.1.
2019-12-09 17:34:04	<--	Marbug (~Marbug@d515361f5.access.telenet.be) has quit (Quit: The Lounge - https://thelounge.chat)
2019-12-09 17:34:10	tos9	We have different definitions of "fun".
2019-12-09 17:34:14	Haxxa	Client Pcs run windows xp
2019-12-09 17:34:16	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 17:34:21	phx	Haxxa, you could upgrade that to win3.11 :)
2019-12-09 17:34:31	-->	Jak_o_Shadows (~Jak@unaffiliated/jak-o-shadows/x-0479135) has joined #python
2019-12-09 17:34:48	Haxxa	The cost of upgrading was deemed to be more expensive than supporting win3.1 thus we continue
2019-12-09 17:35:00	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 17:35:45	Haxxa	I really hope one day I don't have to program from a RDP session into the desktop with green hills and blue sky.
2019-12-09 17:36:30	[Tritium]	i mean, its windows 3.1... wine should run that no problem...
2019-12-09 17:37:11	<--	rkta (~kt@62.113.246.111) has quit (Remote host closed the connection)
2019-12-09 17:37:32	-->	rkta (~kt@62.113.246.111) has joined #python
2019-12-09 17:38:00	Haxxa	[Tritium], It runs in remote-standby configuration. between the two servers there hasn't been any downtime since it was immplemented
2019-12-09 17:38:09	Haxxa	its more an issue of how to migrate without downtime
2019-12-09 17:38:18	Haxxa	anyway not python sorry
2019-12-09 17:38:24	[Tritium]	ahh
2019-12-09 17:38:36	-->	barometz (~dominic@pdpc/supporter/active/nazgjunk) has joined #python
2019-12-09 17:39:16	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2019-12-09 17:39:38	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 252 seconds)
2019-12-09 17:42:29	<--	Sxuza (~textual@41.13.196.205) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2019-12-09 17:42:32	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 17:46:28	-->	burakcank (~burakcank@188.58.109.220) has joined #python
2019-12-09 17:46:43	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 17:46:58	<--	chewyDelicious (~nooblet@ip4d16fc6e.dynamic.kabel-deutschland.de) has quit (Ping timeout: 252 seconds)
2019-12-09 17:47:01	_habnabit	[Tritium], i have no idea where this idea of "1 jan 2020 is the EOL date" came from because (afaik) it was always "supposed to be" pycon 2020
2019-12-09 17:47:54	[Tritium]	_habnabit: the python 2.7 release schedule pep, and several...endless... threads on -dev.
2019-12-09 17:47:56	-->	Marbug (~Marbug@d515361f5.access.telenet.be) has joined #python
2019-12-09 17:48:21	_habnabit	[Tritium], i didn't think either of those ever said 1 jan
2019-12-09 17:48:24	KirkMcDonald	It was initially just "2020" without a date for a while.
2019-12-09 17:48:56	-->	isokee (~isokee@unaffiliated/isokee) has joined #python
2019-12-09 17:48:56	Yhg1s	Guido explicitly said 'let's just say january 1'
2019-12-09 17:48:56	KirkMcDonald	(Well, I think it was initally some earlier year and got pushed back.)
2019-12-09 17:49:04	Yhg1s	earlier this year, I believe.
2019-12-09 17:49:16	-->	ice9 (~ice9@unaffiliated/ice9) has joined #python
2019-12-09 17:49:20	Yhg1s	before that, the idea was to make it 'at PyCon 2020'
2019-12-09 17:49:26	_habnabit	KirkMcDonald, originally 2015, but that was aggressively optimistic
2019-12-09 17:49:27	[Tritium]	Yhg1s: mid last year iirc, but suffices to say recently in the life of 2.7
2019-12-09 17:49:45	<--	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has quit (Remote host closed the connection)
2019-12-09 17:51:33	-->	tsaka__ (~torstein@2a02:582:cf8:e000:b454:f62:19b4:b7f5) has joined #python
2019-12-09 17:52:23	<--	Marbug (~Marbug@d515361f5.access.telenet.be) has quit (Ping timeout: 245 seconds)
2019-12-09 17:53:04	-->	Marbug (~Marbug@d515361F5.access.telenet.be) has joined #python
2019-12-09 17:53:28	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-09 17:54:36	--	hberaud is now known as hberaud|school-r
2019-12-09 17:59:05	-->	MikeDebian (~none@bl12-167-178.dsl.telepac.pt) has joined #python
2019-12-09 18:00:15	<--	RRedcroft (~user@cpc89156-stok18-2-0-cust787.1-4.cable.virginm.net) has quit (Ping timeout: 268 seconds)
2019-12-09 18:01:55	-->	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has joined #python
2019-12-09 18:02:52	-->	C2_Win1 (~Thunderbi@59.153.110.86) has joined #python
2019-12-09 18:04:01	--	hberaud|school-r is now known as hberaud|lunch
2019-12-09 18:05:19	<--	weedmic (~weedmic@212.68.131.233) has quit (Quit: Konversation terminated!)
2019-12-09 18:05:23	<--	C2_Win (~Thunderbi@59.153.110.86) has quit (Ping timeout: 276 seconds)
2019-12-09 18:05:24	--	C2_Win1 is now known as C2_Win
2019-12-09 18:06:37	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 18:07:27	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 18:09:40	-->	mintograde (~mintograd@47.201.168.46) has joined #python
2019-12-09 18:11:33	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 245 seconds)
2019-12-09 18:12:06	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 246 seconds)
2019-12-09 18:12:36	-->	eamonnmr (uid408207@gateway/web/irccloud.com/x-svqllanbpqkowqrm) has joined #python
2019-12-09 18:13:13	-->	bdeshi (~bdeshi@103.55.145.110) has joined #python
2019-12-09 18:13:38	<--	GenTooMan (~cyberman@2601:547:4380:2fe0:21f:5bff:fefe:a883) has quit (Ping timeout: 245 seconds)
2019-12-09 18:13:44	<--	C2_Win (~Thunderbi@59.153.110.86) has quit (Ping timeout: 252 seconds)
2019-12-09 18:15:03	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 268 seconds)
2019-12-09 18:16:07	-->	gkamathe (gkamathe@unaffiliated/gkamathe) has joined #python
2019-12-09 18:16:17	-->	[itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) has joined #python
2019-12-09 18:16:38	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 18:17:17	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 18:18:26	Dev0n	hey, I have a string in py2.7 that's: ur"""@£$¥èéùìò""", py3.7 obv complains because ur isn't valid syntax, am I safe changing this to just: r"""@£$¥èéùìò""". (dropping the u)?
2019-12-09 18:18:57	Yhg1s	Dev0n: in that particular string, you're safe to drop the 'r'. You shouldn't drop the 'u' if you want the same code to work in 3.7 and 2.7.
2019-12-09 18:18:58	mgedmin	Dev0n: yes, if you don't need to support python 2.7 any more
2019-12-09 18:19:17	-->	chamar (chamarmatr@gateway/shell/matrix.org/x-zlduizpxyhjxkokb) has joined #python
2019-12-09 18:19:18	-->	Evidlo (evidlomatr@purduelug/evidlo) has joined #python
2019-12-09 18:19:18	-->	dngray[m] (dngraypriv@gateway/shell/matrix.org/x-gefsfhoapmdmzptj) has joined #python
2019-12-09 18:19:18	-->	olavx200 (olavx200ma@gateway/shell/matrix.org/x-acbwfxelihljodrl) has joined #python
2019-12-09 18:19:18	-->	execat[m] (execatmatr@fedora/execat) has joined #python
2019-12-09 18:19:18	-->	agates[m] (agatesmatr@gateway/shell/matrix.org/x-qpujswounldjrsck) has joined #python
2019-12-09 18:19:18	-->	pheoxy (pheoxymatr@gateway/shell/matrix.org/x-ypdopoahxdglbqxd) has joined #python
2019-12-09 18:19:18	-->	gpanders[m] (gpandersma@gateway/shell/matrix.org/x-luuujjeuvyfggkrv) has joined #python
2019-12-09 18:19:19	-->	PantelicGR3 (pantelicgr@gateway/shell/matrix.org/x-golqcezmjkzskhzy) has joined #python
2019-12-09 18:19:20	-->	kureta[m] (kuretamatr@gateway/shell/matrix.org/x-sebzoramncqlrbpi) has joined #python
2019-12-09 18:19:20	-->	fiberpunk[m] (fiberpunkm@gateway/shell/matrix.org/x-izearunaozlnyyfx) has joined #python
2019-12-09 18:19:20	-->	colemickens (colemicken@pdpc/supporter/professional/geomyidae) has joined #python
2019-12-09 18:19:21	-->	rmanak (rmanakmatr@gateway/shell/matrix.org/x-bydrhpotedspbcyb) has joined #python
2019-12-09 18:19:21	-->	mjs2600 (mjs2600mat@gateway/shell/matrix.org/x-kozrmqcjdfoqwxpe) has joined #python
2019-12-09 18:19:22	-->	carl0s- (carl0smatr@gateway/shell/matrix.org/x-wfoaumcaoakpzrta) has joined #python
2019-12-09 18:19:22	-->	jerrykan[m] (jerrykanma@gateway/shell/matrix.org/x-aozijaohrzgennmf) has joined #python
2019-12-09 18:19:27	-->	mattwthomas (mattwthoma@gateway/shell/matrix.org/x-oxezvjlkeookduof) has joined #python
2019-12-09 18:19:29	nedbat	Dev0n: this is assuming you have a coding comment at the top of the file that says utf8
2019-12-09 18:19:42	Dev0n	yea I do nedbat
2019-12-09 18:20:00	Dev0n	if I do want 2.7 support, do I have to bring in six?
2019-12-09 18:20:09	Yhg1s	Dev0n: no, just drop the 'r'.
2019-12-09 18:20:16	Yhg1s	nedbat: in what way does that change things?
2019-12-09 18:20:33	Dev0n	ah ok Yhg1s
2019-12-09 18:20:37	<--	is_null (~jpic@pdpc/supporter/professional/is-null) has quit (Ping timeout: 240 seconds)
2019-12-09 18:20:39	-->	Lucas_Gray (~Wryhder@197.210.85.40) has joined #python
2019-12-09 18:20:46	nedbat	Yhg1s: i guess it doesn't because it had to have *some* encoding specified at the top, which would continue to work.
2019-12-09 18:20:47	Dev0n	another string I have in the same format contains "\u0394_\u03A6\u0393"
2019-12-09 18:20:50	Yhg1s	Dev0n: things get harder if you do need it to be a raw string.
2019-12-09 18:21:14	Dev0n	would this be the harder case Yhg1s?
2019-12-09 18:21:23	Yhg1s	Dev0n: this one, not so much: you can still remove the 'r'.
2019-12-09 18:21:33	Yhg1s	Dev0n: if you have \u escapes *and* other uses of backslashes, that's when it gets harder :)
2019-12-09 18:21:35	nedbat	Dev0n: that second one has an r prefix?
2019-12-09 18:21:36	-->	PantelicGR (~PantelicG@unaffiliated/pantelicgr) has joined #python
2019-12-09 18:21:44	Dev0n	yea it does nedbat
2019-12-09 18:22:01	nedbat	Dev0n: what are you using these strings for?
2019-12-09 18:22:10	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2019-12-09 18:23:46	-->	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has joined #python
2019-12-09 18:24:43	Dev0n	nedbat, well, tbh, the variable is called unicode_regex and and looks like it's trying to use regex to find something that matches the regex
2019-12-09 18:25:02	Dev0n	don't ask me why, I've just had this thrown at me to migrate to py3
2019-12-09 18:25:17	Dev0n	doesn't look right for sure, but I'll address that once I get it working in 3 =x
2019-12-09 18:25:23	Dev0n	thanks Yhg1s
2019-12-09 18:25:38	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 18:26:24	nedbat	Dev0n: in that case, I would expect that dropping the "r" prefix would work.  Do you have tests to confirm it's correct?
2019-12-09 18:26:34	<--	Jantz (~IceChat9@2407:7000:8d04:100:edd9:8a1e:edf1:b8e5) has quit (Ping timeout: 252 seconds)
2019-12-09 18:26:55	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 18:26:55	Dev0n	the code never came with any tests so I'm having to manually test for the time being
2019-12-09 18:27:18	<--	TML (~TML-prv@unaffiliated/tml) has quit (Read error: Connection reset by peer)
2019-12-09 18:27:24	-->	roadie (~user@2a02:8108:ec0:1583:f43c:6306:42a0:9581) has joined #python
2019-12-09 18:27:37	Yhg1s	or, you know, you could write tests.
2019-12-09 18:27:40	<--	iamNOTadog (~notadog@2804:7f4:c780:8be5:62ff:4522:41c4:e36a) has quit (Ping timeout: 252 seconds)
2019-12-09 18:27:46	-->	TML (~TML-prv@unaffiliated/tml) has joined #python
2019-12-09 18:27:54	-->	ice9 (~ice9@unaffiliated/ice9) has joined #python
2019-12-09 18:29:15	-->	SilverFang (~SilverFan@unaffiliated/silverfang) has joined #python
2019-12-09 18:29:16	Dev0n	this is what I suggested doing initially, write tests for 2.7 and then do the migration but I was told to migrate first and write tests later "to save time"
2019-12-09 18:29:27	Dev0n	wish I had more say in the matter, but alas
2019-12-09 18:29:33	Yhg1s	I think they meant "to spend more time"
2019-12-09 18:29:50	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 18:29:58	Yhg1s	Dev0n: in any case, as long as the only escapes you have in the ur'' strings are '\u', you can safely drop the 'r'.
2019-12-09 18:30:22	Dev0n	perfect, thanks Yhg1s
2019-12-09 18:30:35	-->	C2_Win (~Thunderbi@59.153.110.86) has joined #python
2019-12-09 18:30:36	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 252 seconds)
2019-12-09 18:31:20	-->	Allegretto_ (~allegrett@212.52.160.157) has joined #python
2019-12-09 18:31:23	<--	Skripter1 (~Skripter@unaffiliated/skripter) has quit (Ping timeout: 250 seconds)
2019-12-09 18:32:02	<--	appinv (~appinv@unaffiliated/appinventormu) has quit (Ping timeout: 276 seconds)
2019-12-09 18:32:18	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-09 18:32:24	<--	seanacais_ (~seanacais@173.170.215.25) has quit (Quit: Leaving)
2019-12-09 18:32:25	<--	seanacais (~seanacais@173.170.215.25) has quit (Quit: Leaving)
2019-12-09 18:34:06	-->	ClaymorePT (~Claymore@188.251.245.88) has joined #python
2019-12-09 18:34:09	<--	thiras (~thiras@unaffiliated/thiras) has quit (Ping timeout: 268 seconds)
2019-12-09 18:34:38	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 252 seconds)
2019-12-09 18:36:50	<--	rmarcand (~rmarcand@2001:420:c0c0:1003::3b1) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-12-09 18:37:01	<--	mintograde (~mintograd@47.201.168.46) has quit (Ping timeout: 250 seconds)
2019-12-09 18:37:43	-->	alexsuraphel (~alexsurap@196.190.154.193) has joined #python
2019-12-09 18:37:53	<--	phlixi (~phlixi@ppp-46-244-195-226.dynamic.mnet-online.de) has quit (Ping timeout: 276 seconds)
2019-12-09 18:37:54	<--	alexsuraphel (~alexsurap@196.190.154.193) has quit (Read error: Connection reset by peer)
2019-12-09 18:41:16	-->	gandalfdwite (~gandalfdw@183.82.17.252) has joined #python
2019-12-09 18:41:39	<--	ob-sed (~obesd@unaffiliated/obesd) has quit (Ping timeout: 240 seconds)
2019-12-09 18:42:27	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 18:42:37	<--	plutoniix (~q@175.176.222.7) has quit (Quit: Leaving)
2019-12-09 18:43:05	<--	jay-m_ (~jay-m@41.205.30.141) has quit (Ping timeout: 250 seconds)
2019-12-09 18:43:18	<--	gandalfdwite (~gandalfdw@183.82.17.252) has quit (Remote host closed the connection)
2019-12-09 18:45:45	Dev0n	if you were running the codebase between py2.7 and py3.7, there will be slight changes between the requirements.txt right? so for example, if I pull the code down and run it in 3.7 and the push a fix to support 2.7 and 3.7, when I pull the same code down in 2.7, I would have to potentially reinstall the modules appropriate for 2.7?
2019-12-09 18:45:55	-->	brinzhang (~brinzhang@171.8.76.20) has joined #python
2019-12-09 18:46:10	_habnabit	Dev0n, potentially but unlikely
2019-12-09 18:46:13	Dev0n	I'm using pip-tools, and do pip-compile/pip-sync on each pull but wanted to check this isn't weird behaviour
2019-12-09 18:46:29	<--	thomasross (~thomasros@CPEbc4dfb93c813-CMbc4dfb93c810.cpe.net.cable.rogers.com) has quit (Ping timeout: 268 seconds)
2019-12-09 18:46:44	<--	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-27.dsl.bell.ca) has quit (Ping timeout: 252 seconds)
2019-12-09 18:47:35	-->	ice9 (~ice9@unaffiliated/ice9) has joined #python
2019-12-09 18:48:57	erry	anyonne who knows utf8 here? UnicodeDecodeError: 'utf-8' codec can't decode byte 0xbf in position 17641572: invalid start byte
2019-12-09 18:49:17	-->	sincorchetes (c3376cee@unaffiliated/sincorchetes) has joined #python
2019-12-09 18:49:44	<--	milkt (~debian@gateway/tor-sasl/milkt) has quit (Quit: leaving)
2019-12-09 18:49:55	_habnabit	erry, i usually use a computer to decode it instead of needing to know it myself
2019-12-09 18:50:10	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 18:50:19	-->	thomasross (~thomasros@CPEbc4dfb93c813-CMbc4dfb93c810.cpe.net.cable.rogers.com) has joined #python
2019-12-09 18:50:26	Dev0n	_habnabit, ahh so for example, pip-compile on py2.7 updates requirements.txt with six, typing, futures, configparser etc
2019-12-09 18:50:33	Dev0n	but doing the same on p3.7 removes them
2019-12-09 18:50:36	nedbat	Dev0n: it can definitely happen that the packages will be slightly different.
2019-12-09 18:50:48	_habnabit	Dev0n, 'six' and 'future' should be in use on both
2019-12-09 18:50:48	<--	C2_Win (~Thunderbi@59.153.110.86) has quit (Ping timeout: 268 seconds)
2019-12-09 18:50:55	-->	zst (~z@unaffiliated/zst) has joined #python
2019-12-09 18:51:01	nedbat	Dev0n: do you require six, or is that a transitive dependency?
2019-12-09 18:51:11	Dev0n	transitive
2019-12-09 18:51:20	-->	iamNOTadog (~notadog@2804:7f4:c780:8be5:62ff:4522:41c4:e36a) has joined #python
2019-12-09 18:51:21	cdunklau	after looking at `future`, i don't think i ever want to use it
2019-12-09 18:51:22	Dev0n	same with "futures" _habnabit
2019-12-09 18:51:33	Dev0n	also there is "future" and "futures"
2019-12-09 18:51:42	Dev0n	I had to install "future" to get it working in py3.7
2019-12-09 18:51:48	nedbat	Dev0n: what can happen is that one of your dependencies recently dropped support for 2.7, and so has a newer version that is py3-only, and no longer needs six, future, etc.
2019-12-09 18:52:00	Dev0n	ahh that makes sense
2019-12-09 18:52:04	nedbat	Dev0n: but if you are concerned, you can pin your dependencies to be the same on both
2019-12-09 18:52:47	Dev0n	gotcha, think I'm not too concerned, I'll fully move this to py3 soon so 2.7 support is there to test
2019-12-09 18:52:51	Dev0n	thanks
2019-12-09 18:53:21	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Quit: Bin weg.)
2019-12-09 18:53:49	<--	Grayson (~Grayson@unaffiliated/grayson) has quit (Read error: Connection reset by peer)
2019-12-09 18:53:58	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 18:55:06	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 265 seconds)
2019-12-09 18:55:42	<--	sponge337 (~sponge337@unaffiliated/sponge337) has quit (Quit: Leaving)
2019-12-09 18:56:16	sincorchetes	Hi all, with statement is like try/except?
2019-12-09 18:56:29	<--	roadie (~user@2a02:8108:ec0:1583:f43c:6306:42a0:9581) has quit (Remote host closed the connection)
2019-12-09 18:56:34	-->	dtcrshr (~dtcrshr@unaffiliated/datacrusher) has joined #python
2019-12-09 18:56:36	[Tritium]	sincorchetes: no.
2019-12-09 18:56:40	nedbat	sincorchetes: it's kind of like try/finally
2019-12-09 18:56:40	--	hberaud|lunch is now known as hberaud
2019-12-09 18:56:41	tos9	sincorchetes: No, it's like try/finally.
2019-12-09 18:56:49	-->	roadie (~user@2a02:8108:ec0:1583:f43c:6306:42a0:9581) has joined #python
2019-12-09 18:56:49	[Tritium]	that ^
2019-12-09 18:57:00	nedbat	sincorchetes: exceptions will flow out of "with", but cleanup will happen
2019-12-09 18:57:21	-->	AndreYuhai (~porfavord@air108.wispotter.com) has joined #python
2019-12-09 18:57:50	-->	is_null (~jpic@pdpc/supporter/professional/is-null) has joined #python
2019-12-09 18:58:27	sincorchetes	nedbat, so you have to use try/except. with inside of it? like try: with open(file,'r') as fileZ ... except: print("File not found")
2019-12-09 18:58:30	-->	Masklin (~joel@eduroam43.nat.wireless.lu.se) has joined #python
2019-12-09 18:59:20	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 276 seconds)
2019-12-09 18:59:31	nedbat	sincorchetes: or: try: fileZ = open(file); except:... ;  with fileZ: ...
2019-12-09 18:59:32	KirkMcDonald	sincorchetes: If you wanted to catch exceptions, sure.
2019-12-09 19:01:24	maddagaska	sincorchetes: Also, as a general rule for error handling, bare excepts are not good. You should catch specific exceptions- ones that you can actually handle.
2019-12-09 19:02:02	<--	ikanobori (~user@python/site-packages/ikanobori) has quit (Quit: WeeChat 1.9.1)
2019-12-09 19:02:16	maddagaska	If you can't handle it then it's likely better to let it bubble up, uncaught, because it indicates something happened that you didn't anticipate, and that'll leave your program in an unknown state.
2019-12-09 19:02:31	<--	burakcank (~burakcank@188.58.109.220) has quit (Ping timeout: 268 seconds)
2019-12-09 19:02:44	-->	ikanobori (~user@python/site-packages/ikanobori) has joined #python
2019-12-09 19:03:31	<--	pulsar12 (~pulsar12@a79-169-193-36.cpe.netcabo.pt) has quit (Quit: Leaving)
2019-12-09 19:04:21	-->	cdown (~cdown@199.201.66.0) has joined #python
2019-12-09 19:04:22	-->	C2_Win (~Thunderbi@59.153.110.86) has joined #python
2019-12-09 19:04:43	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 19:05:23	-->	brinzhang_ (~brinzhang@171.8.76.20) has joined #python
2019-12-09 19:05:44	AndreYuhai	Hey there, I am using jpype and startJVM using some jar on Windows but I get this error https://postimg.cc/xccJsVT8
2019-12-09 19:05:47	-->	DanyC_ (~DanyC@185.65.25.74) has joined #python
2019-12-09 19:05:58	-->	pnwise (~pnwise@unaffiliated/pnwise) has joined #python
2019-12-09 19:06:04	AndreYuhai	Code: https://paste.ofcode.org/VuJSgxvx2UAxpqXX4m9ZQt
2019-12-09 19:06:37	AndreYuhai	It is just throwing an error after I use jpype.startJVM() even if I have a control block checking whether JVM is started or not
2019-12-09 19:06:47	AndreYuhai	This is not happening on Linux though
2019-12-09 19:06:55	<--	DanyC (~DanyC@185.65.25.74) has quit (Ping timeout: 250 seconds)
2019-12-09 19:06:56	<--	bpmedley (~bpm@2601:246:8201:8e0:e8a8:928a:41e1:c4e5) has quit (Ping timeout: 250 seconds)
2019-12-09 19:09:05	<--	brinzhang (~brinzhang@171.8.76.20) has quit (Ping timeout: 276 seconds)
2019-12-09 19:09:22	-->	perlsyntax (~perlsynta@unaffiliated/perlsyntax) has joined #python
2019-12-09 19:10:05	-->	ice9 (~ice9@unaffiliated/ice9) has joined #python
2019-12-09 19:10:23	<--	is_null (~jpic@pdpc/supporter/professional/is-null) has quit (Ping timeout: 276 seconds)
2019-12-09 19:10:28	<--	DanyC_ (~DanyC@185.65.25.74) has quit (Remote host closed the connection)
2019-12-09 19:10:30	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 19:10:44	-->	is_null (~jpic@pdpc/supporter/professional/is-null) has joined #python
2019-12-09 19:11:57	<--	tsaka__ (~torstein@2a02:582:cf8:e000:b454:f62:19b4:b7f5) has quit (Ping timeout: 246 seconds)
2019-12-09 19:12:37	-->	bomb-on (~bomb-on@adsl74-86.du.heimsnet.is) has joined #python
2019-12-09 19:15:18	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 19:15:24	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 265 seconds)
2019-12-09 19:16:28	[Tritium]	AndreYuhai: does the error happen outside of ipython?
2019-12-09 19:16:47	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 19:20:44	-->	dasher00 (~dasher00@2.221.109.249) has joined #python
2019-12-09 19:20:49	-->	moonshine_ (~moonshine@112.134.104.27) has joined #python
2019-12-09 19:21:13	<--	C2_Win (~Thunderbi@59.153.110.86) has quit (Ping timeout: 250 seconds)
2019-12-09 19:21:39	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 250 seconds)
2019-12-09 19:22:15	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-09 19:22:32	-->	stahl (~stahl@z35.anorg.net) has joined #python
2019-12-09 19:22:45	-->	rardiol (~quassel@177.52.229.215) has joined #python
2019-12-09 19:22:51	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 19:24:00	-->	zeden (~user@unaffiliated/zeden) has joined #python
2019-12-09 19:25:04	-->	weedmic (~weedmic@212.68.131.233) has joined #python
2019-12-09 19:25:11	moonshine_	I have project structure like this https://bpaste.net/show/ZRVD6 currently I'm trying to use flask-login to authenticate users but I defined user model in the model.py but I can't import into the users blueprint. Help me!
2019-12-09 19:25:45	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 19:26:11	<--	perlsyntax (~perlsynta@unaffiliated/perlsyntax) has quit (Remote host closed the connection)
2019-12-09 19:27:18	-->	CookieM (~tomek@afbg63.neoplus.adsl.tpnet.pl) has joined #python
2019-12-09 19:27:29	<--	is_null (~jpic@pdpc/supporter/professional/is-null) has quit (Ping timeout: 265 seconds)
2019-12-09 19:28:20	AndreYuhai	[Tritium], I am trying to check it right now.
2019-12-09 19:28:30	moonshine_	https://bpaste.net/show/CPDR4
2019-12-09 19:29:02	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Ping timeout: 268 seconds)
2019-12-09 19:29:21	<--	Tucky (~Tucky@61.235.17.93.rev.sfr.net) has quit (Quit: WeeChat 2.6)
2019-12-09 19:29:24	moonshine_	It says that models belong to upper package!
2019-12-09 19:29:57	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 240 seconds)
2019-12-09 19:30:20	-->	ice9 (~ice9@unaffiliated/ice9) has joined #python
2019-12-09 19:30:47	-->	Falc (~LaurentDB@2a02:a03f:52f9:2f00:95a:3071:c42e:7852) has joined #python
2019-12-09 19:31:25	-->	RRedcroft (~user@cpc89156-stok18-2-0-cust787.1-4.cable.virginm.net) has joined #python
2019-12-09 19:32:35	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 19:32:53	-->	pxs (~pxs@176.60.138.31) has joined #python
2019-12-09 19:33:25	-->	ihristov (55c48532@gateway/web/cgi-irc/kiwiirc.com/ip.85.196.133.50) has joined #python
2019-12-09 19:34:48	-->	alexsuraphel (~alexsurap@197.156.77.178) has joined #python
2019-12-09 19:36:11	-->	tsaka__ (~torstein@94.66.69.65) has joined #python
2019-12-09 19:36:17	<--	jakehemmerle (~jakehemme@72.49.2.66) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 19:36:24	-->	zmt00 (~zmt00@2600:1700:7c00:8f20:3c81:8ba1:8c0a:6ae8) has joined #python
2019-12-09 19:36:28	-->	melatonina (uid317528@gateway/web/irccloud.com/x-lrnljphaipezmugo) has joined #python
2019-12-09 19:36:58	<--	zmt01 (~zmt00@2600:1700:7c00:8f20:856e:c905:36f9:e2fe) has quit (Ping timeout: 245 seconds)
2019-12-09 19:37:17	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 240 seconds)
2019-12-09 19:38:48	-->	throsturx (~throstur@unaffiliated/throstur) has joined #python
2019-12-09 19:39:39	-->	operateur (~operateur@91.143.220.230) has joined #python
2019-12-09 19:42:17	<--	throsturt (~throstur@unaffiliated/throstur) has quit (Ping timeout: 240 seconds)
2019-12-09 19:43:32	<--	throsturx (~throstur@unaffiliated/throstur) has quit (Ping timeout: 276 seconds)
2019-12-09 19:43:42	-->	throsturx (~throstur@unaffiliated/throstur) has joined #python
2019-12-09 19:44:53	<--	mkoskar (~mkoskar@unaffiliated/mkoskar) has quit (Ping timeout: 265 seconds)
2019-12-09 19:44:55	-->	Twipply (~Twipply@unaffiliated/twipply) has joined #python
2019-12-09 19:45:30	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 19:46:05	-->	Althorion (~althorion@37.30.29.137.nat.umts.dynamic.t-mobile.pl) has joined #python
2019-12-09 19:46:23	-->	acharon (~acharon@dsl-jklbng12-54fbce-100.dhcp.inet.fi) has joined #python
2019-12-09 19:46:36	-->	AhmedAmerican (c52b5fcb@gateway/web/cgi-irc/kiwiirc.com/ip.197.43.95.203) has joined #python
2019-12-09 19:47:02	<--	xPatsy (~xPatsy@li1750-248.members.linode.com) has quit (Quit: stepped on a cable)
2019-12-09 19:47:10	-->	DanyC (~DanyC@185.65.25.74) has joined #python
2019-12-09 19:47:23	-->	xPatsy (~xPatsy@li1750-248.members.linode.com) has joined #python
2019-12-09 19:47:42	-->	DanyC_ (~DanyC@185.65.25.74) has joined #python
2019-12-09 19:48:20	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2019-12-09 19:48:48	moonshine_	I have project structure like this https://bpaste.net/show/CPDR4 currently I'm trying to use flask-login to authenticate users but I defined user model in the model.py but I can't import into the users blueprint. Help me!
2019-12-09 19:49:04	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 19:49:14	<--	xPatsy (~xPatsy@li1750-248.members.linode.com) has quit (Client Quit)
2019-12-09 19:51:11	-->	jay-m_ (~jay-m@41.205.30.141) has joined #python
2019-12-09 19:51:39	<--	DanyC (~DanyC@185.65.25.74) has quit (Ping timeout: 265 seconds)
2019-12-09 19:51:51	-->	juanosorio94 (~juan.osor@p5099462a.dip0.t-ipconnect.de) has joined #python
2019-12-09 19:54:09	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2019-12-09 19:54:36	<--	alexsuraphel (~alexsurap@197.156.77.178) has quit (Remote host closed the connection)
2019-12-09 19:54:37	<--	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 240 seconds)
2019-12-09 19:55:23	-->	cetchmoh (~ike@thymoeides.stuko.uni-weimar.de) has joined #python
2019-12-09 19:55:43	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined #python
2019-12-09 19:55:43	-->	Haudegen (~quassel@91.114.49.10) has joined #python
2019-12-09 19:55:49	-->	salamanderrake (~quassel@2605:a000:122a:213d:cc8:9482:322e:140d) has joined #python
2019-12-09 21:57:57	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-09 21:57:57	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-09 21:57:57	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-09 21:57:58	--	Channel #python: 1846 nicks (0 ops, 0 voices, 1846 normals)
2019-12-09 21:58:00	--	You are now known as laduyhaha
2019-12-09 21:58:04	-->	Achylles (~Achylles@2804:431:d724:d52:91be:5444:b74b:feac) has joined #python
2019-12-09 21:58:06	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-09 21:58:38	Soni	https://bpaste.net/show/SGIX4 does this look okay?
2019-12-09 21:59:07	-->	minip (~minip@unaffiliated/minip) has joined #python
2019-12-09 21:59:20	Soni	mainly the docs and the stuff about get_supported_properties and get_property_value
2019-12-09 21:59:40	-->	lockywolf (~lockywolf@101.224.173.82) has joined #python
2019-12-09 21:59:46	Soni	also I thought about handling default values through ConfigProperty itself
2019-12-09 21:59:54	sincorchetes	Yhg1s https://repl.it/repls/MaroonVigilantWordprocessing --> I edited without print nothing, but helloFile is not defined.
2019-12-09 22:00:39	Yhg1s	sincorchetes: yes. Because you the exception happened *and you ignored it*. *do not catch the exception*, or catch the exception *and exit the function or program*.
2019-12-09 22:00:41	<--	iamNOTadog (~notadog@2804:7f4:c780:8be5:62ff:4522:41c4:e36a) has quit (Ping timeout: 276 seconds)
2019-12-09 22:00:53	-->	Sheilong (uid293653@gateway/web/irccloud.com/x-rumlhxtiecbwcxzq) has joined #python
2019-12-09 22:00:54	--	Payhn is now known as Payhnn
2019-12-09 22:01:07	-->	pxs_0o (~pxs@176.60.138.31) has joined #python
2019-12-09 22:01:20	<--	hungrydonkey (~frost@117.136.52.216) has quit (Ping timeout: 276 seconds)
2019-12-09 22:01:25	-->	Jordy (Elite21829@gateway/shell/elitebnc/x-gaeanxkxlwejmjtk) has joined #python
2019-12-09 22:01:39	Trieste	Hi, I'd like to convert my threaded app to asyncio; there's a couple places where I spawn a thread with a forever loop that just periodically runs a certain task (kind of like cron) - what's the asyncio (pattern) equivalent?
2019-12-09 22:01:44	<--	pxs_0o (~pxs@176.60.138.31) has quit (Max SendQ exceeded)
2019-12-09 22:02:13	-->	swimmer (~swimmer@unaffiliated/swimmer) has joined #python
2019-12-09 22:02:19	-->	DTZUZO_ (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 22:02:20	<--	davepdotorg (~davepdoto@212.219.133.13) has quit (Remote host closed the connection)
2019-12-09 22:02:23	Yhg1s	Trieste: schedule the period task with asyncio. Don't loop manually. See loop.call_later and loop.call_at.
2019-12-09 22:02:32	-->	TDT (~user@108.160.234.134) has joined #python
2019-12-09 22:02:37	Dev0n	I have a bit of code her that does func().encode('utf8'), if I want to support compat on 2.7 and 3.7, would I replace this with, str.encode(func(), 'utf-8') and make sure file has from builtins import str?
2019-12-09 22:02:47	Dev0n	here*
2019-12-09 22:02:58	-->	dendazen (~dendazen@pool-72-76-93-243.nwrknj.fios.verizon.net) has joined #python
2019-12-09 22:03:13	<--	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has quit (Ping timeout: 268 seconds)
2019-12-09 22:03:13	Yhg1s	Dev0n: there's no useful difference between func().encode('utf-8') and str.encode(func(), 'utf-8').
2019-12-09 22:03:16	-->	pxs_0o (~pxs@176.60.138.31) has joined #python
2019-12-09 22:03:25	Yhg1s	Dev0n: so I'm not sure what you're trying to fix here. What's wrong with func().encode('utf-8')?
2019-12-09 22:03:47	<--	pxs_0o (~pxs@176.60.138.31) has quit (Max SendQ exceeded)
2019-12-09 22:03:49	Trieste	Yhg1s: fair! I assume for "proper" periodic behavior, I should just schedule it again with call_at at the end of the task?
2019-12-09 22:04:05	Yhg1s	Trieste: the end, or the start, depending on what you want.
2019-12-09 22:04:09	Jordy	Hi, I got a line that I have to port to Python 3. "range(1, len("string") + 1) + [0]" the error is TypeError: unsupported operand type(s) for +: 'range' and 'list'
2019-12-09 22:04:13	-->	pxs_0o (~pxs@176.60.138.31) has joined #python
2019-12-09 22:04:27	-->	whaley (~whaley@8.25.196.25) has joined #python
2019-12-09 22:04:30	<--	pxs (~pxs@176.60.138.31) has quit (Ping timeout: 246 seconds)
2019-12-09 22:04:30	-->	nixjdm (~nixjdm@2605:a601:aa3e:e400:1401:e3b8:4b3f:547a) has joined #python
2019-12-09 22:04:34	Yhg1s	Jordy: You'll have to use list(range(...)) if you want an actual list (in order to concatenate another list to it)
2019-12-09 22:04:34	<--	jlf (~user@pdpc/supporter/active/jlf) has quit (Ping timeout: 265 seconds)
2019-12-09 22:04:50	Jordy	Googling it tells me to use list() like "list(range(1, len(seq2)) + 1) + [0]" but that resulted in TypeError: unsupported operand type(s) for +: 'range' and 'int'
2019-12-09 22:05:01	Trieste	Yhg1s: right, thanks! one more thing, though - what if I don't know the wait time beforehand? (i.e. it's some kind of a long blocking wait) - should I just use threading along with asyncio then?
2019-12-09 22:05:14	Jordy	well seq2 = "string" for easy reading.
2019-12-09 22:05:14	<--	b1tninja (~b1tninja@unaffiliated/b1tninja) has quit (Ping timeout: 276 seconds)
2019-12-09 22:05:32	Dev0n	hum, maybe that wasn't the cause of the error, I had .read().decode('utf-8') above but 3.7 complained about decode(), so replaced that with http://python-future.org/compatible_idioms.html#file-io-with-open (alternative 1), then it complained about the .encode() being: "a bytes-like object is required, not 'str'", removing the .encode() worked on 3.7 Yhg1s
2019-12-09 22:05:33	Yhg1s	Jordy: you got your parentheses wrong. you need range(1, len(seq2) + 1), not range(1, len(seq2)) + 1
2019-12-09 22:05:53	<--	is_null (~jpic@pdpc/supporter/professional/is-null) has quit (Ping timeout: 250 seconds)
2019-12-09 22:06:15	Yhg1s	Dev0n: if you open the file in text mode with io.open(), it'll produce unicode when reading, and expects unicode when writing. You shouldn't encode it if you are going to write to that file.
2019-12-09 22:06:28	Yhg1s	(it'd be easier to see what was going wrong if we could see the actual code though.)
2019-12-09 22:06:47	Dev0n	sec
2019-12-09 22:07:12	<--	ice9 (~ice9@unaffiliated/ice9) has quit (Remote host closed the connection)
2019-12-09 22:07:37	<--	jaziz1 (~jaziz@unaffiliated/jaziz) has quit (Ping timeout: 250 seconds)
2019-12-09 22:07:44	-->	pxs (~pxs@176.60.138.31) has joined #python
2019-12-09 22:07:56	<--	Tazmainian (~Tazmain@unaffiliated/tazmain) has quit (Remote host closed the connection)
2019-12-09 22:08:05	-->	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has joined #python
2019-12-09 22:08:37	<--	pxs_0o (~pxs@176.60.138.31) has quit (Ping timeout: 240 seconds)
2019-12-09 22:08:46	<--	nathias (~nathias@unaffiliated/nathias) has quit (Ping timeout: 268 seconds)
2019-12-09 22:09:03	Jordy	Yhg1s, do you know why the + [0] was added? I can't seem to figure out what that was supposed to do.
2019-12-09 22:09:04	<--	Luke (~Luke@bitnomial/staff/luke) has quit (Quit: sleep)
2019-12-09 22:09:15	sincorchetes	Yhg1s of course, I guess, I have to create a conditional that value if helloFile is defined. If that's defined, then, run 'wtih' statements and more. Am I right?
2019-12-09 22:09:19	-->	sdoherty (sdoherty@nat/redhat/x-vvwnpvyprvlzseua) has joined #python
2019-12-09 22:09:54	-->	stranac (~stranac@78-1-49-64.adsl.net.t-com.hr) has joined #python
2019-12-09 22:10:11	twobitsprite	asyncio confuses me.... the "await" keyword seems to look like a statement, but can be used inside a function argument list? what is the actual syntactic status of "await"?
2019-12-09 22:10:20	<--	Revan- (~Revan@host-69-144-17-114.static.bresnan.net) has quit (Quit: Konversation terminated!)
2019-12-09 22:10:43	-->	b1tninja (~b1tninja@unaffiliated/b1tninja) has joined #python
2019-12-09 22:11:05	deniska	twobitsprite: it's kinda similar to `yield`, it's an expression
2019-12-09 22:11:14	<--	DTZUZO_ (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 268 seconds)
2019-12-09 22:11:18	-->	Creatornator (~Creatorna@155.33.132.42) has joined #python
2019-12-09 22:11:41	Dev0n	Yhg1s, this is the function, https://bpaste.net/show/4JCDE, it basically takes in a css and html location and runs premailer on it to inline the css
2019-12-09 22:11:54	twobitsprite	deniska: seems oddly unpythonic to not just make it a function. is there a reason it's not just a built-in function?
2019-12-09 22:11:55	Dev0n	3.7 complains on line 8 and line 15
2019-12-09 22:12:01	-->	canarts (~stranac@193.14.245.77) has joined #python
2019-12-09 22:12:04	-->	Blankspace (~Toggle@unaffiliated/blankspace) has joined #python
2019-12-09 22:12:09	twobitsprite	i.e, is there some syntactic/semantic advantage to making it an expression?
2019-12-09 22:12:15	deniska	twobitsprite: it does special things which a function can't
2019-12-09 22:12:26	Jordy	But yeah, putting the parentheses like you did made the error go away :)
2019-12-09 22:12:37	Dev0n	I fixed line 8 by doing from io import open and then changing read more to rb
2019-12-09 22:12:40	<--	palasso (~palasso@unaffiliated/palasso) has quit (Remote host closed the connection)
2019-12-09 22:12:44	-->	saml (~saml@unaffiliated/saml) has joined #python
2019-12-09 22:12:58	Dev0n	but line 15 errors with :a bytes-like object is required, not 'str': unless I remove the .encode()
2019-12-09 22:13:00	-->	pepee (~pepee@unaffiliated/pepee) has joined #python
2019-12-09 22:13:02	<--	pxs (~pxs@176.60.138.31) has quit (Ping timeout: 276 seconds)
2019-12-09 22:13:41	<--	kilyos (~kilyos@ec2-3-120-115-128.eu-central-1.compute.amazonaws.com) has quit (Ping timeout: 268 seconds)
2019-12-09 22:14:13	cdunklau	twobitsprite: it's a flow control construct, really
2019-12-09 22:14:15	Yhg1s	Dev0n: yes, just use io.open() and stop manually decoding and encoding.
2019-12-09 22:14:19	<--	ed_peguillan (~ed_peguil@wsip-184-176-6-219.ok.ok.cox.net) has quit (Quit: Leaving)
2019-12-09 22:14:22	cdunklau	twobitsprite: closer to `return` than a function
2019-12-09 22:14:32	Yhg1s	Dev0n: or, if you prefer, open in binary mode and keep manually encoding and decoding.
2019-12-09 22:14:41	Dev0n	Yhg1s, would that work fine on 2.7?
2019-12-09 22:14:45	Yhg1s	Dev0n: yes.
2019-12-09 22:14:45	-->	Vornicus (~Vornicus@2605:e000:1218:255d:1dbb:ff02:47cc:cc7a) has joined #python
2019-12-09 22:14:47	Dev0n	if I were to remove the manual encoding/decode
2019-12-09 22:14:48	-->	gunsnmoses (~mreyes2@edge2.crownawards.com) has joined #python
2019-12-09 22:14:48	Dev0n	ahh
2019-12-09 22:14:49	Dev0n	ok
2019-12-09 22:14:55	twobitsprite	cdunklau: right, but that's what confused me... you can't do `print(return foo)`
2019-12-09 22:15:08	twobitsprite	cdunklau: but apparently you can do `print(await foo)`
2019-12-09 22:15:10	Yhg1s	sincorchetes: no, what you should do is *not catch the exception*, or *catch the exception and exit*.
2019-12-09 22:15:19	<--	stranac (~stranac@78-1-49-64.adsl.net.t-com.hr) has quit (Ping timeout: 245 seconds)
2019-12-09 22:15:23	cdunklau	twobitsprite: `return` is a statement. it doesn't result in a value
2019-12-09 22:15:37	cdunklau	twobitsprite: `await` does result in a value. it's an expression
2019-12-09 22:15:44	twobitsprite	cdunklau: I know that, which is why await confused me :P
2019-12-09 22:15:46	Dev0n	great, thanks
2019-12-09 22:15:47	-->	DTZUZO_ (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-09 22:15:53	-->	ed_peguillan (~ed_peguil@wsip-184-176-6-219.ok.ok.cox.net) has joined #python
2019-12-09 22:16:03	twobitsprite	cdunklau: I think I got it now though, the comparison to `yeild` helped :)
2019-12-09 22:16:07	Yhg1s	twobitsprite: does 'func(not some_value)' also confuse you? :)
2019-12-09 22:16:18	-->	con3 (~kvirc@165.255.74.108) has joined #python
2019-12-09 22:16:22	twobitsprite	Yhg1s: nope, good point, I wasn't thinking in terms of that, thanks
2019-12-09 22:17:11	cdunklau	twobitsprite: i make the comparison to `return` because it impacts flow control
2019-12-09 22:17:24	-->	fphilipe (~phil@85-195-241-186.fiber7.init7.net) has joined #python
2019-12-09 22:17:37	cdunklau	because `await` causes control to exit the funciton
2019-12-09 22:18:03	cdunklau	(exit as opposed to "end")
2019-12-09 22:18:40	<--	con3 (~kvirc@165.255.74.108) has quit (Client Quit)
2019-12-09 22:18:54	<--	jay-m_ (~jay-m@41.205.30.141) has quit (Ping timeout: 250 seconds)
2019-12-09 22:19:29	deniska	twobitsprite: now that I think about it, `yield` as a part of an expression is a much rarer sight than `await` :)
2019-12-09 22:20:12	-->	pigweed (~pigweed@184.97.141.49) has joined #python
2019-12-09 22:20:48	<--	DanyC (~DanyC@185.65.25.74) has quit (Remote host closed the connection)
2019-12-09 22:20:50	<--	DTZUZO_ (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has quit (Ping timeout: 276 seconds)
2019-12-09 22:21:01	<--	MACscr (~MACscr@204.42.21.14) has quit (Read error: Connection reset by peer)
2019-12-09 22:21:03	-->	jaredce (5ee4442f@94.228.68.47) has joined #python
2019-12-09 22:21:05	sincorchetes	Yhg1s, but althought you catch the exception. with statement of this file is outside. When It's try to read variable, and It does not have any value, print error without use print() statement. You can try it. https://repl.it/repls/MaroonVigilantWordprocessing --> Code was updated
2019-12-09 22:21:07	-->	happycrappy (~mes@107.84.158.127) has joined #python
2019-12-09 22:21:59	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 22:22:35	-->	jlf (~user@pdpc/supporter/active/jlf) has joined #python
2019-12-09 22:22:54	-->	MACscr (~MACscr@204.42.21.14) has joined #python
2019-12-09 22:22:57	<--	carl- (~carl@nat.basefarm.se) has quit (Ping timeout: 268 seconds)
2019-12-09 22:23:04	<--	karmabeach24 (~ircap@186.105.11.3) has quit (Ping timeout: 252 seconds)
2019-12-09 22:23:52	<--	lakitu (~lakitu@unaffiliated/lakitu) has quit (Read error: Connection reset by peer)
2019-12-09 22:23:57	-->	DanyC (~DanyC@185.65.25.74) has joined #python
2019-12-09 22:24:53	-->	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has joined #python
2019-12-09 22:25:18	<--	audioburn (~audioburn@unaffiliated/theology) has quit (Ping timeout: 245 seconds)
2019-12-09 22:25:27	sincorchetes	Yhg1s, sorry if I insist more, but when people with knows how to do right things. I try to understand how to do right things instead learn bad things.
2019-12-09 22:25:32	<--	eZanmoto (89bfe3fe@gateway/web/cgi-irc/kiwiirc.com/ip.137.191.227.254) has quit (Remote host closed the connection)
2019-12-09 22:25:34	sincorchetes	or bad practices
2019-12-09 22:25:41	-->	youtah_ (~youtah@69.169.133.42) has joined #python
2019-12-09 22:26:01	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Quit: leaving)
2019-12-09 22:26:04	shibboleth	in general: is there a simplistic reason/possible issue which might explain why a "tf"/keras+opencv task runs at about 1/20th the speed of the same task using opencv dnn?
2019-12-09 22:26:06	-->	shiriru (~shiriru@unaffiliated/shiriru) has joined #python
2019-12-09 22:26:12	shibboleth	python in both cases
2019-12-09 22:26:22	<--	shiriru (~shiriru@unaffiliated/shiriru) has quit (Remote host closed the connection)
2019-12-09 22:26:25	-->	AbleBacon (~AbleBacon@unaffiliated/ablebacon) has joined #python
2019-12-09 22:27:16	-->	lakitu (~lakitu@unaffiliated/lakitu) has joined #python
2019-12-09 22:28:01	-->	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 22:28:26	<--	operateur (~operateur@91.143.220.230) has quit (Ping timeout: 250 seconds)
2019-12-09 22:28:29	<--	youtah__ (~youtah@67.139.187.132) has quit (Ping timeout: 268 seconds)
2019-12-09 22:28:39	-->	zerotech1 (~zerotech@BSN-182-126-110.dynamic.siol.net) has joined #python
2019-12-09 22:28:54	-->	operateur (~operateur@91.143.220.230) has joined #python
2019-12-09 22:29:40	<--	BeerLover (~BeerLover@103.72.8.101) has quit (Remote host closed the connection)
2019-12-09 22:29:59	-->	r1ch (~r1ch@2604:2000:e384:6f00:684a:8a38:1b1e:86a7) has joined #python
2019-12-09 22:30:25	-->	kilyos (~kilyos@176.90.233.63) has joined #python
2019-12-09 22:30:57	<--	sandeepk (~sandeepk@103.69.88.194) has quit (Remote host closed the connection)
2019-12-09 22:31:20	-->	gloomy (~Gloomy@x590e0512.dyn.telefonica.de) has joined #python
2019-12-09 22:31:43	pepee	can anyone tell me why  re.match(r"a$", "asda")  won't returns any matches?
2019-12-09 22:31:47	-->	indeedwatson (~yama@181.164.182.59) has joined #python
2019-12-09 22:32:10	pepee	s/returns/return/
2019-12-09 22:33:39	<--	r4ulrm (~administr@mail.klonal.com.ar) has quit (Quit: Lost terminal)
2019-12-09 22:34:27	-->	RebelCoder (~RebelCode@cpc121028-nmal24-2-0-cust148.19-2.cable.virginm.net) has joined #python
2019-12-09 22:34:50	-->	govbotdotnet (~govbotdot@2600:1700:b2d0:8ef0:35cf:290d:41b8:1573) has joined #python
2019-12-09 22:34:55	<--	kajo (~kajo@2001:4c50:371e:dc00:ca2a:14ff:fe0f:7dd1) has quit (Ping timeout: 250 seconds)
2019-12-09 22:36:21	cdunklau	pepee: use re.search
2019-12-09 22:36:25	-->	r4ulrm (~administr@mail.klonal.com.ar) has joined #python
2019-12-09 22:36:38	<--	s00pcan (~chris@104.254.92.226) has quit (Ping timeout: 252 seconds)
2019-12-09 22:36:46	cdunklau	pepee: match only looks at the start of the string
2019-12-09 22:36:56	<--	silva (c9eef11a@201.238.241.26) has quit (Remote host closed the connection)
2019-12-09 22:37:00	-->	drmbls (~drmbls@78-56-83-14.static.zebra.lt) has joined #python
2019-12-09 22:37:18	pepee	cdunklau: that's odd... but it works. thanks
2019-12-09 22:37:27	cdunklau	pepee: it's in the docs
2019-12-09 22:38:20	-->	s00pcan (~chris@75-133-56-178.dhcp.trcy.mi.charter.com) has joined #python
2019-12-09 22:38:39	SnoopJeDi	It's one of the ugliest ducklings of the stdlib, so it often causes confusion :)
2019-12-09 22:38:49	<--	Beam_Inn (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has quit (Remote host closed the connection)
2019-12-09 22:38:54	pepee	cdunklau: aha. I misread, then
2019-12-09 22:39:11	pepee	I had read help(re.match) but didn't notice that part...
2019-12-09 22:39:15	<--	RebelCoder (~RebelCode@cpc121028-nmal24-2-0-cust148.19-2.cable.virginm.net) has quit (Ping timeout: 250 seconds)
2019-12-09 22:39:21	jaredce	https://bpaste.net/show/JVXWU how can i run the gevent.pywsgi webserver in the background and have the application running other functions at the same time?  i'm expecting it to message with 'starting download', but it doesn't send that message, but the server is reachable
2019-12-09 22:39:44	cdunklau	SnoopJeDi: i mean, it does what it says. it matches the string against the pattern
2019-12-09 22:40:11	-->	davepdot_ (~davepdoto@212.219.133.13) has joined #python
2019-12-09 22:40:13	SnoopJeDi	cdunklau, you're not wrong!
2019-12-09 22:40:16	cdunklau	SnoopJeDi: also, saying it's one of the ugliest ducklings implies you haven't seen much of the stdlib :)
2019-12-09 22:40:53	SnoopJeDi	cdunklau, `re` is somewhere at the sweet spot of "likely to be needed by everyone" and "poorly designed"
2019-12-09 22:41:21	-->	panikovsky (~panikovsk@87.117.58.121) has joined #python
2019-12-09 22:41:23	cdunklau	heh
2019-12-09 22:41:26	SnoopJeDi	But sure, there are more awful horrors than English being ambiguous
2019-12-09 22:41:40	-->	therue (~rue@1-162-40-115.dynamic-ip.hinet.net) has joined #python
2019-12-09 22:42:24	cdunklau	jaredce: serve_forever() blocks, well, forever
2019-12-09 22:42:33	jaredce	ahh
2019-12-09 22:42:34	<--	kosh (~kosh@ibt008.ibt.kfa-juelich.de) has quit (Read error: Connection reset by peer)
2019-12-09 22:42:54	-->	kosh (~kosh@134.94.63.5) has joined #python
2019-12-09 22:43:06	Falc	jaredce: a quick google seems to indicate gevent.spawn() might be what you're looking for
2019-12-09 22:43:08	cdunklau	can't give you any more advice though, dunno how gevent would play with threads
2019-12-09 22:43:25	cdunklau	gevent in general is a scary thing to me
2019-12-09 22:44:06	-->	Skripter1 (~Skripter@unaffiliated/skripter) has joined #python
2019-12-09 22:44:11	-->	tachoknight_ (~tachoknig@205.178.20.7) has joined #python
2019-12-09 22:45:13	-->	steven__ (~shicks252@2600:1700:2428:20b0:d1d8:d44d:a089:c14f) has joined #python
2019-12-09 22:46:02	<--	Falc (~LaurentDB@2a02:a03f:52f9:2f00:95a:3071:c42e:7852) has quit (Quit: Leaving)
2019-12-09 22:46:03	-->	mattfly (~matheus@191.55.81.55) has joined #python
2019-12-09 22:46:10	-->	ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) has joined #python
2019-12-09 22:46:17	-->	is_null (~jpic@pdpc/supporter/professional/is-null) has joined #python
2019-12-09 22:46:17	<--	Skripter (~Skripter@unaffiliated/skripter) has quit (Ping timeout: 240 seconds)
2019-12-09 22:46:26	--	Skripter1 is now known as Skripter
2019-12-09 22:47:25	<--	Darkhunter (~mmojzis@ip-37-188-250-81.eurotel.cz) has quit (Read error: Connection reset by peer)
2019-12-09 22:47:29	<--	happycrappy (~mes@107.84.158.127) has quit (Ping timeout: 250 seconds)
2019-12-09 22:47:31	<--	riezaizu (~riezaizu@unaffiliated/riezaizu) has quit (Quit: Leaving)
2019-12-09 22:47:32	ELFrederich	Can someone please remind me again about the benefits of putting your Python package under a "src" directory instead of directly at root of your Git repo?
2019-12-09 22:47:36	<--	kosh (~kosh@134.94.63.5) has quit (Ping timeout: 268 seconds)
2019-12-09 22:47:37	-->	xy3_ (~xy2_@37.172.150.248) has joined #python
2019-12-09 22:48:00	<--	louisg (~louis@x-160-94-179-187.acm.umn.edu) has quit (Ping timeout: 252 seconds)
2019-12-09 22:49:02	<--	chele (~chele@business-90-187-8-217.pool2.vodafone-ip.de) has quit (Quit: Leaving)
2019-12-09 22:49:03	<--	shicks_ (~shicks252@2600:1700:2428:20b0:27:f085:e4bb:adcf) has quit (Ping timeout: 245 seconds)
2019-12-09 22:49:14	-->	youtah__ (~youtah@67.139.187.132) has joined #python
2019-12-09 22:49:18	<--	Noti (~steffan@194.44.236.118) has quit (Quit: Konversation terminated!)
2019-12-09 22:50:09	-->	jakehemmerle (~jakehemme@89.187.183.71) has joined #python
2019-12-09 22:50:09	-->	novum (~novumsens@gateway/tor-sasl/novumsensum) has joined #python
2019-12-09 22:50:22	MrElendig	none really
2019-12-09 22:50:32	rud0lf	aesthetics i guess
2019-12-09 22:50:35	shady_traveller	ELFrederich: If your whole package is just one file, it should stay as such. If you need to use multiple files, group them in a directory with the same name as the project name. This will help with the imports allowing you to use something like: from <module> import <function>. Using a "src" directory is not very pythonic.
2019-12-09 22:50:42	-->	millerti (~millerti@cpe-66-24-91-119.stny.res.rr.com) has joined #python
2019-12-09 22:51:35	cdunklau	shady_traveller: eh, either way is fine
2019-12-09 22:51:37	<--	b1tninja (~b1tninja@unaffiliated/b1tninja) has quit (Ping timeout: 240 seconds)
2019-12-09 22:51:47	<--	jakehemmerle (~jakehemme@89.187.183.71) has quit (Client Quit)
2019-12-09 22:51:50	<--	lolidunno (~lolidunno@FL1-49-129-77-113.tky.mesh.ad.jp) has quit (Quit: h)
2019-12-09 22:51:55	<--	xy2_ (~xy2_@94.239.177.175) has quit (Ping timeout: 268 seconds)
2019-12-09 22:51:56	<--	youtah_ (~youtah@69.169.133.42) has quit (Ping timeout: 265 seconds)
2019-12-09 22:52:07	-->	causasui (~causasui@wikipedia/causa-sui) has joined #python
2019-12-09 22:52:14	novum	is there a tool (maybe in functools somewhere) to take a string and parse it into tokens as the cpython interpretter might. Such that something like 'foo: Optional[Union[int,str]] = None, bar: int = 0' comes out to be [("foo", "Optional[Union[int,str]]", "None"), ("bar", "int", "0")] yaknow
2019-12-09 22:52:16	-->	pxs (~pxs@176.60.138.31) has joined #python
2019-12-09 22:52:20	-->	arashi (uid408828@gateway/web/irccloud.com/x-uljxbfibhnxentow) has joined #python
2019-12-09 22:52:37	gcbirzan	Nice. grpc has wonderful error messages: E1209 15:52:20.155337652    4530 ev_epollex_linux.cc:503]    Error shutting down fd 12. errno: 9
2019-12-09 22:52:51	-->	nathias (~nathias@unaffiliated/nathias) has joined #python
2019-12-09 22:52:51	-->	blobsson (~infer@68.235.43.37) has joined #python
2019-12-09 22:53:00	gcbirzan	Not even using logging, it seems.
2019-12-09 22:53:08	cdunklau	ELFrederich: src/ makes it slightly harder to run your tests against the repo code instead of the installed code
2019-12-09 22:53:29	cdunklau	which is overall a good thing
2019-12-09 22:53:31	tos9	ELFrederich: https://hynek.me/articles/testing-packaging/
2019-12-09 22:53:41	gcbirzan	and it seems to happen when I add a route to 192.168/16...
2019-12-09 22:53:41	tos9	ELFrederich: (of course for those of us who don't use src/, there are other ways to fix that)
2019-12-09 22:53:49	-->	peter22222 (~peter2222@dslb-188-104-250-048.188.104.pools.vodafone-ip.de) has joined #python
2019-12-09 22:54:05	-->	GenTooMan (~cyberman@2601:547:4380:2fe0:21f:5bff:fefe:a883) has joined #python
2019-12-09 22:54:14	ELFrederich	cdunklau: yeah... I've been reading this now: https://hynek.me/articles/testing-packaging/
2019-12-09 22:55:05	gcbirzan	Ah. I'll kill the sysadmin here. :(
2019-12-09 22:55:20	ELFrederich	I definitely see the benefit of running tests against the installed version instead of whatever happens to be sitting in your current directory.  Unfortunately I also see the benefit of being able to run tests against your current directory during development.
2019-12-09 22:55:26	-->	theotherreactguy (~Thunderbi@106.51.25.63) has joined #python
2019-12-09 22:55:35	gcbirzan	but, ffs, tell me "could not resolve IP"
2019-12-09 22:55:41	cdunklau	ELFrederich: you can do that too. venv/bin/pip install -e .
2019-12-09 22:55:41	novum	I am trying to make a rather comprehensive ultisnips thing so that I don't really have to think about it ever again and fix it when it breaks ... https://asciinema.org/a/Bd7EtuhHDGRrxuYOvy1MIMPRT
2019-12-09 22:55:47	-->	b1tninja (~b1tninja@unaffiliated/b1tninja) has joined #python
2019-12-09 22:56:11	ELFrederich	cdunklau: okay.... perfect.  I shall henceforth use a "src/" directory
2019-12-09 22:56:21	cdunklau	novum: perhaps you're looking for https://docs.python.org/3/library/ast.html
2019-12-09 22:56:30	 *	ELFrederich looks up henceforth to see if he used it correctly
2019-12-09 22:56:46	 *	ELFrederich did use it correctly
2019-12-09 22:58:25	shady_traveller	novum: good luck with that, especially when you're trying to do something as complex as this :D I use regexes in my complex ultisnips snippets and they work fine, though they would break in some edge cases. If you want to do it "properly", you should use the ast module.
2019-12-09 22:58:40	shady_traveller	Though I think this would be an overkill for a snippet...
2019-12-09 22:59:12	-->	uks (~uksio@p200300CB1BD0F15635E304058F93C382.dip0.t-ipconnect.de) has joined #python
2019-12-09 22:59:14	-->	submerciful (~submercif@162.213.133.160) has joined #python
2019-12-09 22:59:21	<--	theotherreactguy (~Thunderbi@106.51.25.63) has quit (Client Quit)
2019-12-09 22:59:31	-->	parabolize (~paraboliz@c-76-25-97-149.hsd1.co.comcast.net) has joined #python
2019-12-09 22:59:43	<--	im0nde_ (~im0nde@2a0a-a546-a52f-0-2ad2-44ff-fe00-9395.ipv6dyn.netcologne.de) has quit (Quit: ZNC 1.7.4 - https://znc.in)
2019-12-09 23:00:20	novum	my snippet not too crazy .. yet .. http://ix.io/23Yp
2019-12-09 23:00:42	novum	I mean the split(..)[0].split(..)[0].strip() stuff isn't ideal but
2019-12-09 23:01:07	<--	Deusdeorum (~Deusdeoru@unaffiliated/deusdeorum) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-12-09 23:01:21	<--	uksio (~uksio@p200300CB1BD0F18FC44F69A5AA296049.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2019-12-09 23:01:31	-->	bluezone (uid104970@gateway/web/irccloud.com/x-cfizwkltvyltcjxu) has joined #python
2019-12-09 23:01:32	<--	Serpent7776 (~Serpent77@78-11-8-249.static.ip.netia.com.pl) has quit (Quit: Leaving)
2019-12-09 23:01:50	-->	im0nde (~im0nde@2a0a-a546-a52f-0-2ad2-44ff-fe00-9395.ipv6dyn.netcologne.de) has joined #python
2019-12-09 23:02:13	<--	sebatron (902bfa3f@gateway/web/cgi-irc/kiwiirc.com/ip.144.43.250.63) has quit (Remote host closed the connection)
2019-12-09 23:02:46	-->	mluser-home (~mluser-ho@cpe-107-11-253-108.columbus.res.rr.com) has joined #python
2019-12-09 23:03:02	novum	I don't like the documentation for ast.parse
2019-12-09 23:03:06	-->	hostile (~quassel@adsl-65.176.58.194.tellas.gr) has joined #python
2019-12-09 23:03:20	--	LabMonkey is now known as Mechanismus
2019-12-09 23:03:26	shady_traveller	noodle: cdown, actually ast won't work because at the time of writing the code, the code won't be valid. You can use a module like parso which is built exactly for this but it's even more complex to use and introduces a third party dependancy... for a simple snippet :D
2019-12-09 23:03:35	<--	elisa87 (~jalal@goku.bu.edu) has quit (Remote host closed the connection)
2019-12-09 23:04:00	shady_traveller	Just go with regexes. They are better than these splits and will work well enough... most of the time.
2019-12-09 23:04:23	<--	hostile (~quassel@adsl-65.176.58.194.tellas.gr) has quit (Client Quit)
2019-12-09 23:04:45	-->	kosh (~kosh@p57A4F0A1.dip0.t-ipconnect.de) has joined #python
2019-12-09 23:05:00	novum	ya ast being a banana face butt head
2019-12-09 23:05:16	-->	xy__ (~xy2_@94.239.177.175) has joined #python
2019-12-09 23:05:25	-->	hqdruxn08__ (hqdruxn08@gateway/vpn/privateinternetaccess/hqdruxn08) has joined #python
2019-12-09 23:05:41	<--	r1ch (~r1ch@2604:2000:e384:6f00:684a:8a38:1b1e:86a7) has quit (Ping timeout: 250 seconds)
2019-12-09 23:05:44	novum	am I really going to have to do annoying "how many opening and closing square brackets has this regex encountered" regexes?
2019-12-09 23:05:53	-->	cfoch (uid153227@gateway/web/irccloud.com/x-eozoognsbqbzxprj) has joined #python
2019-12-09 23:06:40	-->	heyitsrama (~heyitsram@c-24-6-105-253.hsd1.ca.comcast.net) has joined #python
2019-12-09 23:07:00	shady_traveller	If you want to cover all cases, probably yes. And even then, regexes won't cover all cases. But I think they will work well enough in 99% of the cases.
2019-12-09 23:07:15	<--	Creatornator (~Creatorna@155.33.132.42) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 23:07:40	shady_traveller	I'd hack it to use the colon as the delimiter, so that you can get the annotation easier.
2019-12-09 23:07:45	novum	I don't care about 100% coverage but I would like the Union[..,..,..] to be supported
2019-12-09 23:08:06	novum	what if I don't have ':'s
2019-12-09 23:08:10	novum	then it break
2019-12-09 23:08:17	novum	, is arg delimeter
2019-12-09 23:08:17	<--	xy3_ (~xy2_@37.172.150.248) has quit (Ping timeout: 250 seconds)
2019-12-09 23:08:27	shady_traveller	In that case, just assume you always have at most one pair of [] and go from there.
2019-12-09 23:08:54	-->	b10n1k (~b10n1k@94.142.239.79) has joined #python
2019-12-09 23:08:55	shady_traveller	Well, you can do a simple check for whether there are colons. If there aren't any, don't add the type for any argument.
2019-12-09 23:08:58	-->	Creatornator (~Creatorna@155.33.132.42) has joined #python
2019-12-09 23:08:59	novum	don't make me write my own tokenizer >:| grr python
2019-12-09 23:09:04	<--	hqdruxn08_ (hqdruxn08@gateway/vpn/privateinternetaccess/hqdruxn08) has quit (Ping timeout: 246 seconds)
2019-12-09 23:09:28	<--	adamholmberg (~adamholmb@67.133.97.100) has quit (Remote host closed the connection)
2019-12-09 23:09:35	shady_traveller	Well, you're trying to have a tokenizer of _invalid_ python code which is even worse. Again, parso is built for this but it's such an overkill...
2019-12-09 23:09:37	novum	going to make an arg token generator I guess
2019-12-09 23:09:46	-->	Kelzorz (~Kelzorz@67.6.83.103) has joined #python
2019-12-09 23:09:55	novum	oh didn't see that .. parso .. meh may checkity before I reckity
2019-12-09 23:09:59	novum	thanks
2019-12-09 23:10:07	-->	kajo (~kajo@2a02:908:2f34:d740:c96a:621b:c203:4523) has joined #python
2019-12-09 23:10:46	novum	isn't parso for shell-like argument tokenization?
2019-12-09 23:10:47	shady_traveller	By the way, why do you need to do this? If you have the type and the default value in the function signature, why do you add it to the doc? Most editors/IDEs will use both sources.
2019-12-09 23:11:39	shady_traveller	parso was built for jedi, an autocompletion library for python which has the same problems you're facing. It's just a library, so it should work for your usecase.
2019-12-09 23:11:41	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-09 23:11:48	novum	I thought about why also. I am not sure I would, indeed, like to discard it, so I could just split(":")[0] and be done
2019-12-09 23:11:51	shady_traveller	That being said, I haven't actually used it
2019-12-09 23:11:55	-->	riezaizu (~riezaizu@unaffiliated/riezaizu) has joined #python
2019-12-09 23:12:04	-->	runlevel7 (~runlevel7@unaffiliated/runlevel7) has joined #python
2019-12-09 23:13:11	-->	srandon111 (~srandon11@5.102.20.11) has joined #python
2019-12-09 23:13:19	-->	AcousticDan (~dan@70.118.0.218) has joined #python
2019-12-09 23:13:27	novum	heh. you're right. If I just remove the type part, it works in 99.9% of cases
2019-12-09 23:13:41	novum	and it's not even useful because the type is already there
2019-12-09 23:14:30	<--	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has quit (Ping timeout: 246 seconds)
2019-12-09 23:14:38	novum	oh it still kind of breaks a little because of the comma split
2019-12-09 23:15:19	-->	Beanzilla (~Beanzilla@unaffiliated/beanzilla) has joined #python
2019-12-09 23:15:54	-->	gekkou (main@gateway/vpn/protonvpn/tfwegh) has joined #python
2019-12-09 23:17:26	-->	appinv (~appinv@unaffiliated/appinventormu) has joined #python
2019-12-09 23:17:36	-->	led_dark_1 (~Thunderbi@217.66.160.14) has joined #python
2019-12-09 23:18:01	<--	pigweed (~pigweed@184.97.141.49) has quit (Quit: Leaving)
2019-12-09 23:18:04	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2019-12-09 23:18:26	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 252 seconds)
2019-12-09 23:19:04	-->	burakcank (~burakcank@159.146.45.121) has joined #python
2019-12-09 23:19:11	-->	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-09 23:19:31	-->	jroth (60e6f869@pool-96-230-248-105.bstnma.fios.verizon.net) has joined #python
2019-12-09 23:20:03	-->	soniya29 (~soniya@2409:4042:2104:2048:9ef8:b3c:40ee:50c9) has joined #python
2019-12-09 23:20:30	-->	headrx (d13602d7@209.54.2.215) has joined #python
2019-12-09 23:20:38	<--	Creatornator (~Creatorna@155.33.132.42) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-09 23:21:31	<--	operateur (~operateur@91.143.220.230) has quit (Ping timeout: 268 seconds)
2019-12-09 23:21:39	-->	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has joined #python
2019-12-09 23:22:37	-->	aalmazan (uid180785@gateway/web/irccloud.com/x-wxbwumakujetzxtv) has joined #python
2019-12-09 23:23:01	<--	juanosorio94 (~juan.osor@p5099462a.dip0.t-ipconnect.de) has quit (Quit: Lost terminal)
2019-12-09 23:23:09	-->	tiwula (~lane@70.89.246.241-Busname-UT.hfc.comcastbusiness.net) has joined #python
2019-12-09 23:23:14	<--	haslo (uid390999@gateway/web/irccloud.com/x-dcgkuxmhtvwerkgk) has quit (Quit: Connection closed for inactivity)
2019-12-09 23:23:21	<--	jlf (~user@pdpc/supporter/active/jlf) has quit (Ping timeout: 265 seconds)
2019-12-09 23:23:24	<--	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has quit (Quit: shibboleth)
2019-12-09 23:23:30	<--	weedmic (~weedmic@212.68.131.233) has quit (Quit: Konversation terminated!)
2019-12-09 23:23:51	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 23:24:10	-->	Syzygy__ (~androirc@e248-009.eduroam.tuwien.ac.at) has joined #python
2019-12-09 23:24:37	-->	oragadam (7aae3633@122.174.54.51) has joined #python
2019-12-09 23:24:39	<--	traptrip (trip@brigaid.xs4all.nl) has quit (Remote host closed the connection)
2019-12-09 23:24:49	Syzygy__	I found python syntax that I do not understand. class Z( X >> Y): can someone explain?
2019-12-09 23:24:56	Syzygy__	X Y and Z are classes
2019-12-09 23:25:57	<--	mathemancer (~mathemanc@ip1f11fe4c.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2019-12-09 23:27:06	shady_traveller	Syzygy__: what's the context? By default, this is not possible but the X or Y class could redefine the >> operator to do something. What? That depends on the implementation. Are you using some library?
2019-12-09 23:27:26	-->	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has joined #python
2019-12-09 23:27:57	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 240 seconds)
2019-12-09 23:27:58	<--	renlolo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2019-12-09 23:28:46	Syzygy__	shady_traveller I'm trying to implement owlready2 for ontologies. here's the code where I found this: bitbucket.org/jibalamy/owlready2/src/default/test/drug.py
2019-12-09 23:29:24	-->	traptrip (trip@brigaid.xs4all.nl) has joined #python
2019-12-09 23:29:57	<--	vpathak (~vpathak@c-73-197-108-42.hsd1.nj.comcast.net) has quit (Ping timeout: 240 seconds)
2019-12-09 23:30:07	-->	AbedB (~AbedBhuty@bzq-79-176-12-208.red.bezeqint.net) has joined #python
2019-12-09 23:30:45	Syzygy__	I guess it's possible that the Thing class overrides it for some reason...
2019-12-09 23:30:46	<--	octav1a (~Rboreal_F@rcb-fwall-00-users2.pmacs.upenn.edu) has quit (Remote host closed the connection)
2019-12-09 23:30:54	-->	Darkhunter (~mmojzis@ip-89-176-175-30.net.upcbroadband.cz) has joined #python
2019-12-09 23:31:41	<--	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has quit (Ping timeout: 276 seconds)
2019-12-09 23:31:42	<--	owenc_ (~owen@79-65-119-111.host.pobb.as13285.net) has quit (Ping timeout: 250 seconds)
2019-12-09 23:32:15	shady_traveller	I'm not familiar with this library, sorry. But assuming that Drug inherits from Thing, then probably yes. I'd look for __rshift__ method of the metaclass of Thing.
2019-12-09 23:33:08	Syzygy__	Right now I'm having trouble even finding the thing class...
2019-12-09 23:33:16	-->	octav1a (~Rboreal_F@2607:f470:6:2001:8962:c186:1948:58e3) has joined #python
2019-12-09 23:33:45	-->	dastier (~dastier@mm-74-45-120-178.brest.dynamic.pppoe.byfly.by) has joined #python
2019-12-09 23:34:16	<--	asimon (~asimon@206.205.22.129) has quit (Quit: NOW WE CAN GO LOOKING FOR ANY UPDATES)
2019-12-09 23:34:17	-->	hutch1 (~hutch@ip70-171-3-97.ga.at.cox.net) has joined #python
2019-12-09 23:34:26	shady_traveller	Syzygy__: I think I found the definition though to be honest I don't understand anything because I'm not familiar with the library.
2019-12-09 23:34:27	shady_traveller	https://bitbucket.org/jibalamy/owlready2/src/37c3ef7e481c94ae8a59796d37d64f60ba686014/class_construct.py#lines-197
2019-12-09 23:34:59	-->	s2013 (~textual@cpe-24-243-145-239.rgv.res.rr.com) has joined #python
2019-12-09 23:35:09	-->	dunpeal (~dunpeal@unaffiliated/dunpeal) has joined #python
2019-12-09 23:35:18	<--	srandon111 (~srandon11@5.102.20.11) has quit (Ping timeout: 252 seconds)
2019-12-09 23:35:51	<--	ciccio2000 (~fbeninca@84.88.185.62) has left #python
2019-12-09 23:36:14	-->	joshisanonymous (~joshisano@198.137.18.120) has joined #python
2019-12-09 23:36:43	<--	pxs (~pxs@176.60.138.31) has quit (Read error: Connection reset by peer)
2019-12-09 23:36:46	<--	sandbox1 (~unbanked_@c-67-167-239-14.hsd1.il.comcast.net) has quit (Ping timeout: 252 seconds)
2019-12-09 23:37:08	<--	nichlas (uid374954@gateway/web/irccloud.com/x-axouncvfpbtcxwpy) has quit (Quit: Connection closed for inactivity)
2019-12-09 23:37:32	-->	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-27.dsl.bell.ca) has joined #python
2019-12-09 23:37:38	Syzygy__	shady_traveller thanks. Tells me next to nothing as well.
2019-12-09 23:37:40	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 23:37:41	shady_traveller	Syzygy__: Ah, I found an explanation in the docs. Again, doesn't speak much to me but you may find it helpful: https://pythonhosted.org/Owlready2/properties.html
2019-12-09 23:38:16	-->	marloi (~mark@modemcable138.66-70-69.static.videotron.ca) has joined #python
2019-12-09 23:38:35	<--	brinzhang (~brinzhang@218.29.111.74) has quit (Remote host closed the connection)
2019-12-09 23:38:40	--	kitties is now known as neolibbies
2019-12-09 23:38:50	--	neolibbies is now known as kitties
2019-12-09 23:38:52	<--	floppydh (~floppydh@buro.mquadr.at) has quit (Quit: WeeChat 2.6)
2019-12-09 23:39:00	-->	brinzhang (~brinzhang@218.29.111.74) has joined #python
2019-12-09 23:39:41	Syzygy__	I knew I saw it somewhere in the documentation, but couldn't find it earlier when looking again.
2019-12-09 23:39:42	marloi	Hello. I have strings that look like dictionaries coming from an sql database that look like this: '{key1=val1, key2=val2, key3=val3}', note that the keys and vals don't have quotes around them. Is there an easy way to convert this to an actual dictionary?
2019-12-09 23:40:10	<--	boxr (~boxr@panopticon.cybergaraget.org) has quit (Quit: Lost terminal)
2019-12-09 23:41:09	<--	Skripter (~Skripter@unaffiliated/skripter) has quit (Remote host closed the connection)
2019-12-09 23:41:40	dunpeal	marloi: not easily, you'll basically have to parse.
2019-12-09 23:41:43	<--	tiwula (~lane@70.89.246.241-Busname-UT.hfc.comcastbusiness.net) has quit (Ping timeout: 265 seconds)
2019-12-09 23:41:52	Syzygy__	shady_traveller thanks for your help, I'll do my best to decypher the documentation some more.
2019-12-09 23:41:57	marloi	ok
2019-12-09 23:42:04	-->	Nozzzle (~Nozzzle@unaffiliated/nozzzle) has joined #python
2019-12-09 23:42:16	-->	Nozzlle (~Nozzzle@unaffiliated/nozzzle) has joined #python
2019-12-09 23:42:26	<--	Vornicus (~Vornicus@2605:e000:1218:255d:1dbb:ff02:47cc:cc7a) has quit (Read error: Connection reset by peer)
2019-12-09 23:42:38	dunpeal	this isn't valid Python so you can't just use the Python parser.
2019-12-09 23:43:33	dunpeal	I'm designing the classification system for my team's test suite. Most important is to separate by time-to-complete, so my current planned scheme is:
2019-12-09 23:43:34	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-09 23:44:23	dunpeal	no mark: <5 seconds. "long": 5+ seconds. "minutes": 1+ minutes. "hours": 1+ hours. "days": 1+ days.
2019-12-09 23:44:25	-->	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has joined #python
2019-12-09 23:44:26	dunpeal	Does that make sense?
2019-12-09 23:45:23	<--	jroth (60e6f869@pool-96-230-248-105.bstnma.fios.verizon.net) has quit (Remote host closed the connection)
2019-12-09 23:46:24	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 23:46:25	<--	is_null (~jpic@pdpc/supporter/professional/is-null) has quit (Ping timeout: 250 seconds)
2019-12-09 23:46:51	<--	Haudegen (~quassel@91.114.49.10) has quit (Quit: Bin weg.)
2019-12-09 23:46:51	<--	joshisanonymous (~joshisano@198.137.18.120) has quit (Ping timeout: 250 seconds)
2019-12-09 23:47:10	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 23:47:17	<--	soniya29 (~soniya@2409:4042:2104:2048:9ef8:b3c:40ee:50c9) has quit (Ping timeout: 250 seconds)
2019-12-09 23:47:33	-->	boratet (~bort@cpe-173-89-74-11.neo.res.rr.com) has joined #python
2019-12-09 23:47:35	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 23:48:39	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 268 seconds)
2019-12-09 23:48:40	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 23:48:52	-->	Skripter (~Skripter@unaffiliated/skripter) has joined #python
2019-12-09 23:49:05	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 23:49:26	-->	mikami (~scurfee@broadband-77-37-146-212.ip.moscow.rt.ru) has joined #python
2019-12-09 23:49:30	-->	IRCNew (~Elrick@76-10-173-219.dsl.teksavvy.com) has joined #python
2019-12-09 23:49:49	<--	shady_traveller (~shady_tra@80.169.46.234) has quit (Quit: WeeChat 1.4)
2019-12-09 23:50:06	-->	dale_ (~dale@unaffiliated/dale) has joined #python
2019-12-09 23:50:10	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 23:50:14	--	dale_ is now known as dale
2019-12-09 23:50:23	-->	dijitol (~Thunderbi@p200300D477217400B4C67DC5D22FDA20.dip0.t-ipconnect.de) has joined #python
2019-12-09 23:50:35	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 23:50:43	<--	Anthaas (~Anthaas@unaffiliated/anthaas) has quit (Ping timeout: 245 seconds)
2019-12-09 23:51:40	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 23:52:05	-->	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has joined #python
2019-12-09 23:52:10	<--	ExtraCrispy (~ExtraCris@gateway/tor-sasl/extracrispy) has quit (Remote host closed the connection)
2019-12-09 23:52:11	-->	Anthaas (~Anthaas@unaffiliated/anthaas) has joined #python
2019-12-09 23:53:08	-->	fflori (~fflori@194.230.155.144) has joined #python
2019-12-09 23:53:17	-->	qlixed (~qlixed@190.2.28.97) has joined #python
2019-12-09 23:53:17	<--	iflema (~ian@unaffiliated/iflema) has quit (Quit: iflema)
2019-12-09 23:53:19	<--	drmbls (~drmbls@78-56-83-14.static.zebra.lt) has quit (Quit: Leaving)
2019-12-09 23:53:42	-->	drease (~conchey@134.117.223.210) has joined #python
2019-12-09 23:54:55	<--	moaz (~moaz@trivialand/student/moaz) has quit (Ping timeout: 246 seconds)
2019-12-09 23:55:06	<--	drease (~conchey@134.117.223.210) has quit (Quit: WeeChat 2.7)
2019-12-09 23:55:06	-->	moaz_ (~moaz@trivialand/student/moaz) has joined #python
2019-12-09 23:56:54	<--	Grayson (~Grayson@unaffiliated/grayson) has quit (Read error: Connection reset by peer)
2019-12-09 23:56:55	-->	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2019-12-09 23:57:16	-->	Grayson (~Grayson@unaffiliated/grayson) has joined #python
2019-12-09 23:57:16	-->	ellcs (~ellcs@200116b86849660062f677fffebe55f5.dip.versatel-1u1.de) has joined #python
2019-12-09 23:57:41	<--	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2019-12-09 23:58:43	-->	stoopkid (uid137696@gateway/web/irccloud.com/x-trbgwxoeonpoqvdw) has joined #python
2019-12-09 23:58:45	-->	is_null (~jpic@pdpc/supporter/professional/is-null) has joined #python
2019-12-09 23:59:03	-->	ebernhardson (~guy@unaffiliated/ebernhardson) has joined #python
2019-12-09 23:59:38	<--	peterandre (peterandre@gateway/shell/qz/x-mnptlgxjxoadlvrd) has quit (Quit: Oooh mysterious girl!)
2019-12-09 23:59:43	ebernhardson	Any suggestions for libraries to help build a custom REPL? Not trying to build a python REPL, trying to make a custom REPL (imagine something like pdb)
2019-12-09 23:59:45	<--	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has quit (Ping timeout: 268 seconds)
2019-12-10 00:00:03	-->	avimanyu (~avimanyu@106.203.139.182) has joined #python
2019-12-10 00:00:08	ebernhardson	i guess pdb is still off, because it still executes the code as python
2019-12-10 00:00:14	-->	Saukk (~Saukk@2001:998:fe:2716:f8e9:21fa:72ec:8e8f) has joined #python
2019-12-10 00:00:48	<--	funeral (~Funeral@246.109-247-210.customer.lyse.net) has quit (Read error: Connection reset by peer)
2019-12-10 00:00:52	dale	ebernhardson: Maybe prompt_toolkit?
2019-12-10 00:00:55	<--	ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) has quit (Quit: Leaving)
2019-12-10 00:01:03	<--	csed (~CSED]@cbg-off-client.mpi-cbg.de) has quit (Ping timeout: 265 seconds)
2019-12-10 00:01:07	dale	I believe that's what IPython uses for its REPL these days.
2019-12-10 00:01:19	-->	funeral (~Funeral@246.109-247-210.customer.lyse.net) has joined #python
2019-12-10 00:01:32	<--	television (~alex@unaffiliated/arexr) has quit (Ping timeout: 265 seconds)
2019-12-10 00:01:46	-->	JackK_ (~jack@pdpc/supporter/active/Jkessler) has joined #python
2019-12-10 00:01:51	ebernhardson	dale: i'll take a look, thanks!
2019-12-10 00:02:02	<--	JackK (~jack@pdpc/supporter/active/Jkessler) has quit (Ping timeout: 265 seconds)
2019-12-10 00:02:02	<--	salparadise (~salparadi@129.146.17.140) has quit (Ping timeout: 265 seconds)
2019-12-10 00:02:02	-->	dhellmann_ (~dhellmann@97-81-99-73.dhcp.athn.ga.charter.com) has joined #python
2019-12-10 00:02:14	<--	CoolerY (~coolerext@14.139.38.136) has left #python ("Leaving")
2019-12-10 00:02:23	<--	xrogaan (~xrogaan@unaffiliated/xrogaan) has quit (Quit: Leaving)
2019-12-10 00:02:24	-->	peterandre (peterandre@gateway/shell/qz/x-yxgncyfsoxxqhmeb) has joined #python
2019-12-10 00:02:30	<--	jgwak (jgwak@gateway/vpn/nordvpn/jgwak) has quit (Ping timeout: 265 seconds)
2019-12-10 00:02:48	<--	dhellmann (~dhellmann@97-81-99-73.dhcp.athn.ga.charter.com) has quit (Ping timeout: 245 seconds)
2019-12-10 00:02:56	--	dhellmann_ is now known as dhellmann
2019-12-10 00:03:36	<--	zeSoup (~jsc@2003:5b:203b:100:3580:c637:f15b:4411) has quit (Quit: Leaving.)
2019-12-10 00:03:40	-->	jgwak (jgwak@gateway/vpn/nordvpn/jgwak) has joined #python
2019-12-10 00:03:44	-->	hostile (~quassel@adsl-65.176.58.194.tellas.gr) has joined #python
2019-12-10 00:03:45	<--	ellcs (~ellcs@200116b86849660062f677fffebe55f5.dip.versatel-1u1.de) has quit (Ping timeout: 250 seconds)
2019-12-10 00:03:55	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-10 00:04:54	-->	ValekoZ (~valekoz@193.57.120.254) has joined #python
2019-12-10 00:04:58	<--	avimanyu (~avimanyu@106.203.139.182) has quit (Quit: avimanyu)
2019-12-10 00:05:33	<--	fflori (~fflori@194.230.155.144) has quit (Remote host closed the connection)
2019-12-10 00:06:04	-->	joshisanonymous (~joshisano@198.137.18.120) has joined #python
2019-12-10 00:06:13	<--	funeral (~Funeral@246.109-247-210.customer.lyse.net) has quit (Read error: Connection reset by peer)
2019-12-10 00:06:43	-->	mmfood (~mmfood@178.73.201.248) has joined #python
2019-12-10 00:06:50	<--	infina (~infina@unaffiliated/infina) has quit (Ping timeout: 252 seconds)
2019-12-10 00:07:01	-->	television (~alex@unaffiliated/arexr) has joined #python
2019-12-10 00:07:26	-->	salparadise (~salparadi@129.146.17.140) has joined #python
2019-12-10 00:07:34	-->	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-10 00:07:49	<--	pombreda_ (~pombreda@host-78-129-86-230.dynamic.voo.be) has quit (Ping timeout: 265 seconds)
2019-12-10 00:08:06	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-10 00:08:26	-->	purplex88 (~purplex88@unaffiliated/purplex88) has joined #python
2019-12-10 00:08:47	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 265 seconds)
2019-12-10 00:08:54	IRCNew	I'm wondering if I'm trying to insert a bunch of data into a db should I use threads or processes
2019-12-10 00:09:45	<--	morenoh11 (~nope@ool-4350370b.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2019-12-10 00:09:46	IRCNew	Also does it make sense to create a function that make a new db connection or should I create one and use it for all processes/threads
2019-12-10 00:10:59	IRCNew	Comparing some different modules it looks like concurrent.futures is a what I would want
2019-12-10 00:11:33	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Ping timeout: 246 seconds)
2019-12-10 00:12:10	<--	salsa4life (~salsa4lif@2.57.100.21) has quit (Ping timeout: 265 seconds)
2019-12-10 00:12:49	dunpeal	IRCNew: why do you think threads or processes would make a difference?
2019-12-10 00:13:14	-->	avimanyu (~avimanyu@106.203.139.182) has joined #python
2019-12-10 00:13:18	<--	novum (~novumsens@gateway/tor-sasl/novumsensum) has quit (Remote host closed the connection)
2019-12-10 00:13:21	<--	escanor (uid387784@gateway/web/irccloud.com/x-knsphqhwcocadmma) has quit (Quit: Connection closed for inactivity)
2019-12-10 00:13:23	-->	jarthur (~jarthur@207.114.244.5) has joined #python
2019-12-10 00:13:28	IRCNew	My data is 800MB of json which is an array and I'm currently doing a for loop on it
2019-12-10 00:13:29	dunpeal	Generally, establishing a new db connection is costly, so reusing is advisable.
2019-12-10 00:13:29	<--	avimanyu (~avimanyu@106.203.139.182) has quit (Remote host closed the connection)
2019-12-10 00:13:49	<--	sincorchetes (c3376cee@unaffiliated/sincorchetes) has quit (Quit: The Lounge - https://thelounge.chat)
2019-12-10 00:13:57	<--	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2019-12-10 00:14:07	dunpeal	IRCNew: OK, but multiplexing that won't necessarily improve performance.
2019-12-10 00:14:13	<--	rindolf (~rindolf@IGLD-84-229-96-151.inter.net.il) has quit (Remote host closed the connection)
2019-12-10 00:14:14	dunpeal	Of course, you're welcome to benchmark.
2019-12-10 00:14:26	<--	Jonopoly (~Jonopoly@unaffiliated/jonopoly) has quit (Quit: WeeChat 2.5)
2019-12-10 00:14:32	dunpeal	For instance, you may be able to saturate your DB with just one thread.
2019-12-10 00:14:48	dunpeal	Or the network may be the bottleneck.
2019-12-10 00:14:56	IRCNew	Would multiprocessing work better?
2019-12-10 00:15:04	<--	mcsontos (mcsontos@nat/redhat/x-fyireofjbwisulnz) has quit (Quit: Leaving)
2019-12-10 00:15:07	<--	subsonick (~subsonik@matrix.netspectrum.de) has quit (Quit: ZNC - https://znc.in)
2019-12-10 00:15:12	IRCNew	Everything currently is localhost
2019-12-10 00:15:19	dunpeal	I'm trying to explain that multiplexing isn't a magic bullet that would definitely make your INSERT faster.
2019-12-10 00:15:32	<--	truthseeker_ (~Bharath@183.82.21.107) has quit (Remote host closed the connection)
2019-12-10 00:15:33	dunpeal	In some case it may indeed slow it down since multiplexing has a cost.
2019-12-10 00:15:38	-->	The_Tick (~headliner@growl/the-tick) has joined #python
2019-12-10 00:15:45	<--	marloi (~mark@modemcable138.66-70-69.static.videotron.ca) has quit (Ping timeout: 246 seconds)
2019-12-10 00:15:48	<--	The_Tick (~headliner@growl/the-tick) has left #python
2019-12-10 00:15:59	dunpeal	The key question is whether you can gain anything by running multiple concurrent INSERTs.
2019-12-10 00:16:17	<--	Velgor (~Velgor@HSI-KBW-109-193-081-230.hsi7.kabel-badenwuerttemberg.de) has quit (Quit: Night)
2019-12-10 00:16:35	dunpeal	If that's the case (you can establish this by benchmarking) then whether you do it with processes or threads is a relatively minor concern.
2019-12-10 00:16:55	-->	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2019-12-10 00:16:57	dunpeal	So pick whichever is most comfortable and benchmark.
2019-12-10 00:17:11	dunpeal	`multiprocessing` is just a multi-process approach.
2019-12-10 00:17:37	<--	blobsson (~infer@68.235.43.37) has quit (Ping timeout: 240 seconds)
2019-12-10 00:17:37	-->	novumsensum (~novumsens@gateway/tor-sasl/novumsensum) has joined #python
2019-12-10 00:18:01	IRCNew	the nice thing about concurrent.futures is that you just need to change "ThreadPoolExecuter" to "ProcessPoolExecuter" making it quick to change
2019-12-10 00:18:05	<--	hostile (~quassel@adsl-65.176.58.194.tellas.gr) has quit (Quit: hostile)
2019-12-10 00:18:15	IRCNew	but it looks like it is slower then some other modules
2019-12-10 00:18:37	<--	jalalsfs_ (~jalalsfs@unaffiliated/jalalsfs) has quit (Ping timeout: 240 seconds)
2019-12-10 00:18:44	dunpeal	...not really why you're still focused on this thread/process false dilemma.
2019-12-10 00:19:47	-->	tmm88 (~tmm88@unaffiliated/tmm88) has joined #python
2019-12-10 00:20:01	IRCNew	I'm just thinking it would be faster.
2019-12-10 00:20:03	-->	subsonik (~subsonik@matrix.netspectrum.de) has joined #python
2019-12-10 00:20:04	<--	jaredce (5ee4442f@94.228.68.47) has quit (Remote host closed the connection)
2019-12-10 00:20:17	<--	Nozzlle (~Nozzzle@unaffiliated/nozzzle) has quit (Ping timeout: 240 seconds)
2019-12-10 00:20:22	IRCNew	but I suppose it could be slower because of overhead
2019-12-10 00:20:28	IRCNew	is what you are saying
2019-12-10 00:20:53	-->	Harlin (~hseritt@c-73-14-133-234.hsd1.co.comcast.net) has joined #python
2019-12-10 00:20:58	dunpeal	I'm saying you should benchmark.
2019-12-10 00:21:05	-->	pombreda_ (~pombreda@host-78-129-86-230.dynamic.voo.be) has joined #python
2019-12-10 00:21:21	<--	Nozzzle (~Nozzzle@unaffiliated/nozzzle) has quit (Ping timeout: 268 seconds)
2019-12-10 00:21:38	IRCNew	any recommendations on modules for that
2019-12-10 00:21:38	-->	Forsaken87 (~quassel@2a02:908:1860:bec0:c179:63c7:fe6c:8293) has joined #python
2019-12-10 00:21:59	dunpeal	It's quite possible that both would be slower than a uniplex approach.
2019-12-10 00:22:07	dunpeal	Just try with multiprocessing.
2019-12-10 00:28:23	--	irc: disconnected from server
2019-12-10 00:28:50	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-10 00:28:50	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-10 00:28:50	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-10 00:28:51	--	Channel #python: 1858 nicks (0 ops, 0 voices, 1858 normals)
2019-12-10 00:29:04	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-10 00:29:32	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 276 seconds)
2019-12-10 00:29:45	<--	Andecy (~andecy@bzq-218-29-26.cablep.bezeqint.net) has quit (Ping timeout: 246 seconds)
2019-12-10 00:31:23	-->	MrTorgo (~torgo@75-4-203-5.lightspeed.sntcca.sbcglobal.net) has joined #python
2019-12-10 00:31:25	-->	lnxw37d4 (lnxw37d4ma@gateway/shell/matrix.org/x-jmsguwkscwxsytuh) has joined #python
2019-12-10 00:32:06	--	irc: disconnected from server
2019-12-13 03:38:38	-->	duy (~laduyhaha@113.190.149.78) has joined #python
2019-12-13 03:38:38	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-13 03:38:38	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-13 03:38:38	--	Channel #python: 1843 nicks (0 ops, 0 voices, 1843 normals)
2019-12-13 03:38:44	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-13 03:39:06	--	irc: disconnected from server
2019-12-13 03:43:21	-->	duy (~laduyhaha@113.190.149.78) has joined #python
2019-12-13 03:43:21	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-13 03:43:21	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-13 03:43:21	--	Channel #python: 1845 nicks (0 ops, 0 voices, 1845 normals)
2019-12-13 03:43:27	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-13 03:43:59	-->	wingsorc_ (~wingsorc@unaffiliated/wingsorc) has joined #python
2019-12-13 03:44:22	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 265 seconds)
2019-12-13 03:44:37	cdunklau	sphinxo: pathlib and ipaddress are pretty good
2019-12-13 03:45:02	cdunklau	worst... now that's a hard question
2019-12-13 03:45:12	sphinxo	could be not in the standard library
2019-12-13 03:45:14	<--	wingsorc_ (~wingsorc@unaffiliated/wingsorc) has quit (Client Quit)
2019-12-13 03:45:29	cdunklau	sphinxo: all the ones that encourage subclassing are candidates
2019-12-13 03:45:39	sphinxo	just a commonly used library, that has some very confusing functions that either do the wrong thing or blow up in your face
2019-12-13 03:45:39	sphinxo	ok
2019-12-13 03:45:40	-->	Siecje (~cody@64.119.220.154) has joined #python
2019-12-13 03:45:41	cdunklau	sphinxo: oh! duh
2019-12-13 03:45:43	cdunklau	sphinxo: asyncio
2019-12-13 03:45:54	energizer	sphinxo: https://github.com/energizah/python-stdlib-alternatives
2019-12-13 03:45:55	-->	gchristensen (~grahamc@NixOS/user/gchristensen) has joined #python
2019-12-13 03:45:55	cdunklau	it's massively confusing
2019-12-13 03:46:01	energizer	multiprocessing
2019-12-13 03:46:06	-->	pyusr (4fb6714d@unaffiliated/db42) has joined #python
2019-12-13 03:46:09	sphinxo	what are some bad functions?
2019-12-13 03:46:25	gchristensen	I'm trying to make a typing.NamedTuple with a "count" value, and getting: error: Incompatible types in assignment (expression has type "int", base class "tuple" defined the type as "Callable[[Tuple[object, ...], Any], int]") is there a way to override th edefault count?
2019-12-13 03:46:27	pyusr	Is this considered a bug in PDB ? (typing in the repl): (Pdb) ![x for x in a if 2 in a[x]] # a is a dict
2019-12-13 03:46:27	cdunklau	sphinxo: hasattr used to be bad
2019-12-13 03:46:31	Siecje	I'm updating a project to use marshmallow version 3. If a method returns missing the .dump() method will not return multiple values.
2019-12-13 03:46:42	energizer	cdunklau: it's still bad. but it used to be bad too.
2019-12-13 03:47:00	-->	frrs (uid130725@gateway/web/irccloud.com/x-uhhjfesajovzjbsx) has joined #python
2019-12-13 03:47:04	cdunklau	energizer: nah, at least now it only traps AttributeError :)
2019-12-13 03:47:06	-->	Nozzzle (~Nozzzle@unaffiliated/nozzzle) has joined #python
2019-12-13 03:47:08	<--	torak (~torak@31.155.118.228) has quit (Remote host closed the connection)
2019-12-13 03:47:13	sphinxo	cdunklau that sounds perfect, https://hynek.me/articles/hasattr/ seems to describe it well
2019-12-13 03:47:28	bjs	pyusr: is what a bug?  what did that line do?
2019-12-13 03:47:32	Nozzzle	hello, how do I view my jupyter files on Nikola?
2019-12-13 03:47:33	cdunklau	gchristensen: ...code?
2019-12-13 03:47:52	pyusr	bjs: output the line after it ? (i pasted 2 lines)
2019-12-13 03:47:57	-->	mat001_ (~mat001@198.151.206.196) has joined #python
2019-12-13 03:47:58	Nozzzle	this darn static thing is everything other than simple. non-static websites are much easier
2019-12-13 03:48:13	FunkyBob	heh
2019-12-13 03:48:15	<--	sdu (~doo@80.107.19.194) has quit (Quit: leaving)
2019-12-13 03:48:17	FunkyBob	oh, the irony :)
2019-12-13 03:48:18	cdunklau	Nozzzle: nah, your issue is you aren't comfortable with git
2019-12-13 03:48:24	cdunklau	which is okay
2019-12-13 03:48:25	pyusr	bjs: it seems as if "a" in the if part of the list comprehension isn't known for some weird reason
2019-12-13 03:48:33	<--	cdown (~cdown@199.201.66.0) has quit (Ping timeout: 250 seconds)
2019-12-13 03:48:34	bjs	pyusr: what makes you think it isn't known?
2019-12-13 03:48:45	FunkyBob	Nozzzle: I second that... nobody should every get comfortable with git.. that's when it bites you
2019-12-13 03:48:47	energizer	gchristensen: have you considered using http://attrs.org or https://docs.python.org/3/library/dataclasses.html for the reasons here http://www.attrs.org/en/stable/why.html#namedtuples
2019-12-13 03:48:48	pyusr	bjs huh ? thats the output of PDB
2019-12-13 03:48:53	Yhg1s	pyusr: yes, that's unfortunately the case, because of how scoping works.
2019-12-13 03:48:56	Yhg1s	pyusr: you only pasted one line.
2019-12-13 03:49:03	Nozzzle	so how can I view them?
2019-12-13 03:49:05	bjs	pyusr: i don't see your second line
2019-12-13 03:49:10	bjs	Yhg1s: only if a is a local variable right
2019-12-13 03:49:13	pyusr	strange.. the webchat is borked then, 2nd line: *** NameError: name 'a' is not defined
2019-12-13 03:49:14	gchristensen	sure: https://gist.github.com/grahamc/c72d55db26f30afd3ebdcb337491b17b
2019-12-13 03:49:18	Yhg1s	bjs: yes.
2019-12-13 03:49:35	pyusr	Yhg1s: i thought "!" passes it directly to python repl or os
2019-12-13 03:49:42	FunkyBob	Nozzzle: maybe I missed the context.... view which "them"?
2019-12-13 03:49:46	Nozzzle	I copied them in a folder, but they are not shown like a text post. conf file contains ipynb format
2019-12-13 03:49:54	gchristensen	dataclasses look nice, thanks energizer
2019-12-13 03:49:56	<--	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2019-12-13 03:49:58	Nozzzle	FunkyBob, python files
2019-12-13 03:49:58	bjs	Yhg1s: tbh I'd be happy to call this a bug because it's not really "how scopes work"
2019-12-13 03:50:19	-->	b10n1k (~b10n1k@94.142.239.79) has joined #python
2019-12-13 03:50:24	-->	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has joined #python
2019-12-13 03:50:41	<--	mat001 (~mat001@198.151.206.196) has quit (Ping timeout: 246 seconds)
2019-12-13 03:51:03	bjs	Yhg1s: it's more some weird oddity of how Python compiles the list comp and how pdb works
2019-12-13 03:51:09	<--	voices (~voices@unaffiliated/tjt263) has quit (Ping timeout: 250 seconds)
2019-12-13 03:51:09	-->	red666 (~redastabl@unaffiliated/pkcloud) has joined #python
2019-12-13 03:51:12	red666	hello
2019-12-13 03:51:23	<--	Kaedenn (~kaedenn@unaffiliated/kaedenn) has quit (Ping timeout: 246 seconds)
2019-12-13 03:51:28	cdunklau	bjs: AFAICT ! is like a side-load thing
2019-12-13 03:51:34	Nozzzle	the following happened; because I wrestled the whole day with git and couldnt manage to run Nikola website from its local setup, I moved it to the web the conventional way. but it is still in the dark how I can make it display python files on a browser.
2019-12-13 03:51:37	cdunklau	"Python statements can also be prefixed with an exclamation point (!). This is a powerful way to inspect the program being debugged; it is even possible to change a variable or call a function. When an exception occurs in such a statement, the exception name is printed but the debugger’s state is not changed."
2019-12-13 03:51:49	<--	red666 (~redastabl@unaffiliated/pkcloud) has quit (Remote host closed the connection)
2019-12-13 03:51:58	cdunklau	the last bit there makes me think there's some kind of isolation happening
2019-12-13 03:52:11	cdunklau	pyusr: what happens with p instead of ~
2019-12-13 03:52:14	cdunklau	err instead of !
2019-12-13 03:52:16	<--	elegast (~elegast@83-161-161-141.mobile.xs4all.nl) has quit (Ping timeout: 240 seconds)
2019-12-13 03:52:25	Yhg1s	bjs: nope, I said "how scoping works", not "how scopes work" :)
2019-12-13 03:52:33	Yhg1s	bjs: it *is* about how scoping works, in Python.
2019-12-13 03:52:35	bjs	Yhg1s: fair enough
2019-12-13 03:52:44	Yhg1s	bjs: it's also about how pdb runs things, though.
2019-12-13 03:52:46	-->	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-13 03:53:01	<--	Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz) has quit (Quit: Leaving.)
2019-12-13 03:53:20	pyusr	cdunklau both p and ! and print() dont work
2019-12-13 03:53:35	cdunklau	pyusr: k. what does `where` output
2019-12-13 03:53:41	bjs	cdunklau: Yhg1s and I are talking about the way compiling that list comp will put a LOAD_GLOBAL (?) because it doesn't know 'a' is a local var
2019-12-13 03:53:52	-->	xyt (~xyt@157.130.212.6) has joined #python
2019-12-13 03:53:53	pyusr	cdunklau somewher ein my code ?
2019-12-17 01:28:47	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:28:47	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:28:47	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 01:28:47	--	Channel #python: 1745 nicks (0 ops, 0 voices, 1745 normals)
2019-12-17 01:28:53	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:28:56	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Remote host closed the connection)
2019-12-17 01:29:02	-->	ArchDebian (~us@ool-3f8fedbe.dyn.optonline.net) has joined #python
2019-12-17 01:29:21	<--	x256 (~Jace@2001:638:60f:1000:603d:120e:5e41:b147) has quit (Quit: Leaving)
2019-12-17 01:29:26	-->	DTZUZO (~DTZUZO@S0106bcd165662a4d.vs.shawcable.net) has joined #python
2019-12-17 01:29:27	-->	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-17 01:29:50	<--	ArchDebian (~us@ool-3f8fedbe.dyn.optonline.net) has quit (Client Quit)
2019-12-17 01:30:09	-->	ArchDebian (~us@ool-3f8fedbe.dyn.optonline.net) has joined #python
2019-12-17 01:31:07	-->	duy (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:31:07	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:31:07	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 01:31:08	--	Channel #python: 1747 nicks (0 ops, 0 voices, 1747 normals)
2019-12-17 01:31:15	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:31:17	eck0	chris, one parameter is like an accumulator and other is current value
2019-12-17 01:32:25	chris_99	ahh, i think i get that then, thanks, so the accumulator, gets built up, by taking the current value and processing it, and adding it to the accumulator?
2019-12-17 01:32:38	-->	b1tninja (~b1tninja@unaffiliated/b1tninja) has joined #python
2019-12-17 01:32:53	-->	hackinghorn (~hackingho@unaffiliated/hackinghorn) has joined #python
2019-12-17 01:33:22	eck0	yes or however you please, you can use it to sort or divide or whatever
2019-12-17 01:33:28	eck0	in this case it’s concatting
2019-12-17 01:33:54	chris_99	cheers, that makes sense now
2019-12-17 01:34:04	eck0	np
2019-12-17 01:34:45	zumba_addict	I hope this **kwargs input will work. I mean it will accept it but I am not sure if the lambda functions are going to get created in each regions in AWS. `env = [{'region': 'us-east-1'}, {'region': 'us-east-2'}, {'region': 'us-west-1'}, {'region': 'us-west-2'}],`
2019-12-17 01:35:12	-->	xcm (~xcm@ipa210.225.tellas.gr) has joined #python
2019-12-17 01:35:22	eck0	is there a reason it’s in a list
2019-12-17 01:35:46	eck0	you can’t unpack that dictionary like that can you?
2019-12-17 01:36:44	<--	tos9 (~tos9@python/site-packages/tos9) has quit (Quit: Bye)
2019-12-17 01:36:47	<--	Dan_au (~Dan@syd.danscomp.net) has quit (Ping timeout: 246 seconds)
2019-12-17 01:36:52	eck0	did you make that env variable?
2019-12-17 01:37:01	-->	tos9 (~tos9@python/site-packages/tos9) has joined #python
2019-12-17 01:37:02	<--	humitos (~humitos@139.47.122.65) has quit (Remote host closed the connection)
2019-12-17 01:37:38	-->	laduygaga (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:37:38	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:37:38	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 01:37:39	--	Channel #python: 1749 nicks (0 ops, 0 voices, 1749 normals)
2019-12-17 01:37:45	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:38:24	<--	tos9 (~tos9@python/site-packages/tos9) has quit (Client Quit)
2019-12-17 01:38:28	<--	Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz) has quit (Quit: Leaving.)
2019-12-17 01:38:49	-->	laduygaga (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:38:49	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:38:49	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:58
2019-12-17 01:38:50	--	Channel #python: 1748 nicks (0 ops, 0 voices, 1748 normals)
2019-12-17 01:38:56	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:39:05	--	hberaud is now known as hberaud|gone
2019-12-17 01:39:05	<--	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 268 seconds)
2019-12-17 01:39:05	-->	xyt (~xyt@157.130.212.6) has joined #python
2019-12-17 01:39:06	<--	tos9 (~tos9@python/site-packages/tos9) has quit (Client Quit)
2019-12-17 01:39:06	<--	shoogz (~shoogz@unaffiliated/shoogz) has quit (Ping timeout: 265 seconds)
2019-12-17 01:39:06	-->	ArchDebian (~us@ool-3f8fedbe.dyn.optonline.net) has joined #python
2019-12-17 01:39:20	cluelessperson	So, I have a design question
2019-12-17 01:39:22	-->	tos9 (~tos9@python/site-packages/tos9) has joined #python
2019-12-17 01:39:32	<--	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has quit (Quit: Leaving)
2019-12-17 01:39:42	cluelessperson	AdventOfCode's second challenge involves making an intcode computer.  Easy enough.
2019-12-17 01:40:03	zumba_addict	It failed eck0 with `Error: Got an array where a @aws-cdk/core.Environment was expected. Did you mean to pass a variable number of arguments?`
2019-12-17 01:40:14	cluelessperson	I figured I should create an object "Computer" which I could .register(class Operation)  operations that the computer might perform.
2019-12-17 01:40:21	<--	w1kl4s (~w1kl4s@159.69.34.145) has quit (Remote host closed the connection)
2019-12-17 01:40:28	-->	lakitu (~lakitu@unaffiliated/lakitu) has joined #python
2019-12-17 01:40:36	cluelessperson	The computer simply raises an exception if it wanders across an opcode that isn't a known operation, make sense?
2019-12-17 01:40:41	cluelessperson	is this design sane?
2019-12-17 01:42:26	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:42:26	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:42:26	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 01:42:27	--	Channel #python: 1747 nicks (0 ops, 0 voices, 1747 normals)
2019-12-17 01:42:33	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:43:09	-->	Dan_au (~Dan@syd.danscomp.net) has joined #python
2019-12-17 01:43:17	<--	xyt (~xyt@157.130.212.6) has quit (Ping timeout: 248 seconds)
2019-12-17 01:43:35	zumba_addict	but I don't understand how to write the value, maybe it should be written as `env='default'`
2019-12-17 01:44:10	zumba_addict	I mean `env={'region': 'default'}`
2019-12-17 01:44:16	zumba_addict	I'll try that now
2019-12-17 01:44:28	-->	DebianArch (~us@ool-3f8fedbe.dyn.optonline.net) has joined #python
2019-12-17 01:44:30	<--	ArchDebian (~us@ool-3f8fedbe.dyn.optonline.net) has quit (Ping timeout: 250 seconds)
2019-12-17 01:45:32	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 01:45:32	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 01:45:32	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 01:45:33	--	Channel #python: 1748 nicks (0 ops, 0 voices, 1748 normals)
2019-12-17 01:45:37	-->	owenc_ (~owen@88-145-2-196.host.pobb.as13285.net) has joined #python
2019-12-17 01:45:39	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 01:45:40	zumba_addict	yup, no more errors. I'm hoping the lamdba func will be created in few regions I'm expecting it too
2019-12-17 01:45:43	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2019-12-17 01:46:08	zumba_addict	I don't know what `agnostic` means. I think it means `does not depend on region`
2019-12-17 01:46:10	TheRedRipper	i want to make a file that stores your answers and puts them together to understand what the program/drawing should look like. anyone know how?
2019-12-17 01:46:39	zumba_addict	or maybe, I should remove the env={.....} and see where it's going to go
2019-12-17 01:47:17	CrtxReavr	zumba_addict, a more modern/adaptive definition of agnostic is that it doesn't care about something, or can work with any of a certain type of things.
2019-12-17 01:47:31	zumba_addict	yeah, that's what I mean
2019-12-17 01:47:34	zumba_addict	cool
2019-12-17 01:48:08	zumba_addict	I removed `env` from app.py and `cdk synth ` didn't have an error but added more output to the screen
2019-12-17 01:48:41	<--	chewyDelicious (~nooblet@musketeer-63.fusion.uni-jena.de) has quit (Read error: Connection reset by peer)
2019-12-17 01:48:42	-->	renlolo (lhoward@gateway/vpn/privateinternetaccess/renlo) has joined #python
2019-12-17 01:49:15	zumba_addict	this is what it added to the output - https://nopaste.xyz/?f6d6325f7ce088c3#QfUMClum3bLBhzjXwBJ6TT5962pdbtRzvJduF96Yhlg=
2019-12-17 01:49:56	<--	Linzeestomp (~lindsey@64.44.80.28) has quit (Read error: Connection reset by peer)
2019-12-17 01:50:05	-->	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has joined #python
2019-12-17 01:50:11	<--	owenc_ (~owen@88-145-2-196.host.pobb.as13285.net) has quit (Ping timeout: 268 seconds)
2019-12-17 01:50:36	-->	chewyDelicious (~nooblet@musketeer-63.fusion.uni-jena.de) has joined #python
2019-12-17 01:51:54	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-17 01:52:13	-->	macaronus (macaronus@gateway/vpn/privateinternetaccess/macaronus) has joined #python
2019-12-17 01:52:37	CrtxReavr	zumba_addict, you should probably use the pastebin in the topic.
2019-12-17 01:52:38	<--	w4lL8 (w4lL8@82.120.196.231) has quit (Ping timeout: 265 seconds)
2019-12-17 01:52:49	zumba_addict	it was down
2019-12-17 01:53:01	zumba_addict	I'll repaste it later when it's back up
2019-12-17 01:53:12	CrtxReavr	dpaste.de then
2019-12-17 01:53:42	CrtxReavr	Though bpaste.net seems up now.
2019-12-17 01:53:57	josef_October	could someone please upload this file to wikileaks it is endlessly important!!! Its about safety of the whole human mankind | https://ufile.io/c7dtbmnl
2019-12-17 01:54:17	josef_October	my computer is beeing controled thats why i cannot upload it
2019-12-17 01:54:29	<--	renlo (~lhoward@pool-108-21-111-112.nycmny.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2019-12-17 01:54:36	-->	Rapture (~Rapture@50-204-232-30-static.hfc.comcastbusiness.net) has joined #python
2019-12-17 01:54:48	<--	fookara (~user@37.57.118.55) has quit (Remote host closed the connection)
2019-12-17 01:55:33	<--	maxpowa (~maxpowa@brought.to.you.by.maxpowa.us) has quit (Ping timeout: 276 seconds)
2019-12-17 01:55:43	-->	subho (~subho@fedora/subho) has joined #python
2019-12-17 01:55:46	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Ping timeout: 250 seconds)
2019-12-17 01:56:26	-->	BeerLove_ (~BeerBuddy@171.50.137.211) has joined #python
2019-12-17 01:57:35	-->	iam730 (~iam730@c-71-198-201-85.hsd1.ca.comcast.net) has joined #python
2019-12-17 01:57:35	<--	DebianArch (~us@ool-3f8fedbe.dyn.optonline.net) has quit (Read error: Connection reset by peer)
2019-12-17 01:57:36	pingveno	Is there a way to make mypy treat an Enum subclass as an Enum?
2019-12-17 01:57:50	-->	DebianArch (~us@ool-3f8fedbe.dyn.optonline.net) has joined #python
2019-12-17 01:58:02	pingveno	There's a library I'm working with that subclasses Enum and it's causing type errors.
2019-12-17 01:58:41	pingveno	e.g. `class SomeEnum(EnumSubclass): COMPLETED = 'C'`
2019-12-17 01:59:03	pingveno	`SomeEnum.COMPLETED` -> `str`
2019-12-17 01:59:40	pingveno	Is there some way to say "treat this as an Enum"?
2019-12-17 02:00:10	-->	jcarl43 (~jcarl@208.181.54.130) has joined #python
2019-12-17 02:00:26	<--	zzzoid (~zzzoid@212-147-55-201.fix.access.vtx.ch) has quit (Quit: This computer has gone to sleep)
2019-12-17 02:01:14	<--	DebianArch (~us@ool-3f8fedbe.dyn.optonline.net) has quit (Client Quit)
2019-12-17 02:01:21	-->	HenryTheGreat (~HenryTheG@c-75-69-184-220.hsd1.nh.comcast.net) has joined #python
2019-12-17 02:01:31	<--	rendar (~rendar@unaffiliated/rendar) has quit
2019-12-17 02:01:46	The-Compiler	josef_October: how is that related to Python?
2019-12-17 02:02:19	eck0	https://docs.python.org/3/library/enum.html#restricted-subclassing-of-enumerations
2019-12-17 02:02:33	<--	LKoen (~LKoen@lstlambert-657-1-123-43.w92-154.abo.wanadoo.fr) has quit (Remote host closed the connection)
2019-12-17 02:02:34	eck0	looks like it’s not allowed if your base class has any members already
2019-12-17 02:02:35	<--	HenryTheGreat (~HenryTheG@c-75-69-184-220.hsd1.nh.comcast.net) has quit (Client Quit)
2019-12-17 02:03:52	-->	HenryTheGreat (~HenryTheG@c-75-69-184-220.hsd1.nh.comcast.net) has joined #python
2019-12-17 02:04:04	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-17 02:04:20	--	Mode #python [+o cdunklau] by ChanServ
2019-12-17 02:04:28	--	Mode #python [+b *!*josef_Oct@2a01:598:8190:6ad8:c0c9:8cff:feb1:*] by cdunklau
2019-12-17 02:04:28	<--	cdunklau has kicked josef_October (nope)
2019-12-17 02:04:34	<--	jcarl43 (~jcarl@208.181.54.130) has quit (Client Quit)
2019-12-17 02:05:04	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 02:05:04	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 02:05:04	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 02:05:04	--	Channel #python: 1747 nicks (2 ops, 0 voices, 1745 normals)
2019-12-17 02:05:08	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 02:05:55	-->	jarthur (~jarthur@207.114.244.5) has joined #python
2019-12-17 02:06:02	<--	Atlenohen (~Walter@cpe-194-152-22-87.static.triera.net) has quit (Quit: Shutdown - Closing IRC)
2019-12-17 02:06:06	The-Compiler	cdunklau: or that, i guess.
2019-12-17 02:06:16	-->	whaley (~whaley@smtp.hosted.acftechnologies.com) has joined #python
2019-12-17 02:06:27	<--	tesseract (~tesseract@2a01:e35:2424:84a0:72c:f72:86cc:a023) has quit (Quit: Leaving)
2019-12-17 02:06:56	<--	lucid-lullaby (lucid-lull@gateway/vpn/privateinternetaccess/lucid-lullaby) has quit (Read error: Connection reset by peer)
2019-12-17 02:06:59	-->	w1kl4s (~w1kl4s@159.69.34.145) has joined #python
2019-12-17 02:07:06	-->	jcarl43 (~jcarl@208.181.54.130) has joined #python
2019-12-17 02:07:26	-->	Rurik (~textual@unaffiliated/temur) has joined #python
2019-12-17 02:07:59	<--	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 02:08:42	jfhbrook	howdy, I'm trying to publish a stale project to pypi and it appears that I need to migrate from bdist_wheel upload to twine upload and there's a cli flag here I can't find any docs on
2019-12-17 02:08:46	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 250 seconds)
2019-12-17 02:08:54	<--	HenryTheGreat (~HenryTheG@c-75-69-184-220.hsd1.nh.comcast.net) has quit (Remote host closed the connection)
2019-12-17 02:09:10	jfhbrook	any y'all good at this stuff? https://github.com/Squarespace/pgbedrock/blob/master/Makefile#L61
2019-12-17 02:09:20	jfhbrook	wanna know what the -r flag is
2019-12-17 02:09:49	--	Mode #python [-o infobob] by infobob
2019-12-17 02:11:07	jfhbrook	-r for registry I guess
2019-12-17 02:11:25	-->	owlscientist (~owlscient@sburn/devel/name) has joined #python
2019-12-17 02:11:29	jfhbrook	and I think my specific blocker mighta been due to using the wrong local python version, oops
2019-12-17 02:11:48	@cdunklau	jfhbrook: setup.py upload --help might be informative
2019-12-17 02:12:01	--	Mode #python [-o cdunklau] by ChanServ
2019-12-17 02:12:07	<--	panikovsky (~panikovsk@84.51.219.27) has quit (Quit: Leaving)
2019-12-17 02:13:37	pingveno	eck0: I'm working with https://github.com/hzdg/django-enumfields/blob/master/enumfields/enums.py
2019-12-17 02:14:02	danyeaw	jfhbrook: you usually use -r or --repository to use a different default repo to upload instead of PyPI. The default is pypi, but you could also upload to https://test.pypi.org or even host your own repository.
2019-12-17 02:14:04	<--	TheRedRipper (~u0_a51@198.236.27.247) has quit (Quit: WeeChat 2.7)
2019-12-17 02:14:08	<--	wreed (~wreed@ool-182f2441.dyn.optonline.net) has quit (Quit: Goodbye)
2019-12-17 02:14:47	pingveno	I wonder if the subclassing of EnumMeta that they do is interfering. :/
2019-12-17 02:14:53	jfhbrook	I see
2019-12-17 02:14:58	jfhbrook	and yeah probably what's going on here
2019-12-17 02:14:59	<--	wellds (~wellds@179.176.249.211.dynamic.adsl.gvt.net.br) has quit (Quit: Leaving)
2019-12-17 02:15:28	<--	pombreda_ (~pombreda@host-78-129-86-230.dynamic.voo.be) has quit (Ping timeout: 246 seconds)
2019-12-17 02:16:46	<--	xrogaan (~xrogaan@unaffiliated/xrogaan) has quit (Quit: Leaving)
2019-12-17 02:17:45	<--	throstur (~throstur@unaffiliated/throstur) has quit (Ping timeout: 265 seconds)
2019-12-17 02:19:15	-->	Ruhan (uid76353@gateway/web/irccloud.com/x-pcnjnxfbldkgnfqt) has joined #python
2019-12-17 02:19:52	-->	matsaman (~matsaman@unaffiliated/matsaman) has joined #python
2019-12-17 02:21:01	-->	Slartibart (~kvirc@c-cf2c70d5.217486-0-69706f6e6c79.bbcust.telenor.se) has joined #python
2019-12-17 02:21:23	-->	gnumojo (~Thunderbi@87.18.42.88) has joined #python
2019-12-17 02:21:55	-->	nishantagrawal (dfe69df8@223.230.157.248) has joined #python
2019-12-17 02:21:57	-->	burakcank (~burakcank@159.146.10.86) has joined #python
2019-12-17 02:22:02	-->	maxpowa (~maxpowa@brought.to.you.by.maxpowa.us) has joined #python
2019-12-17 02:22:06	cluelessperson	Hi there, I'm confused about something
2019-12-17 02:22:19	cluelessperson	I'm "registering" classes that extend another class
2019-12-17 02:22:31	jfhbrook	it seems that twine respects -r as well
2019-12-17 02:22:32	cluelessperson	uh, lemme test something
2019-12-17 02:22:32	-->	_bart (~textual@12.52.67.99) has joined #python
2019-12-17 02:22:34	jfhbrook	so that works for me
2019-12-17 02:22:36	<--	jcarl43 (~jcarl@208.181.54.130) has quit (Quit: WeeChat 2.7)
2019-12-17 02:22:36	<--	gnumojo (~Thunderbi@87.18.42.88) has quit (Remote host closed the connection)
2019-12-17 02:22:37	<--	pepee (~pepee@unaffiliated/pepee) has quit (Quit: pepee)
2019-12-17 02:22:49	-->	jcarl43 (~jcarl@208.181.54.130) has joined #python
2019-12-17 02:22:52	<--	Mattiaslndstrm (~Mattiasln@c-136be555.018-449-6e6b701.bbcust.telenor.se) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 02:23:08	cluelessperson	Okay, so I've added the method __repr__ to my objects
2019-12-17 02:23:13	cluelessperson	but it doesn't seem to be working
2019-12-17 02:23:14	cluelessperson	I'm confused.
2019-12-17 02:23:16	cluelessperson	<class '__main__.Addition'>
2019-12-17 02:23:45	energizer	repr affects the instances not the class
2019-12-17 02:23:47	-->	definity (8ea77268@142.167.114.104) has joined #python
2019-12-17 02:24:16	-->	shiroininja (shiroininj@gateway/vpn/privateinternetaccess/shiroininja) has joined #python
2019-12-17 02:25:21	tos9	A class called "Addition" is also a bit of an odd thing unless you're writing an implementation of groups.
2019-12-17 02:25:37	cdunklau	cluelessperson: if you need to change the repr of the class itself (yikes why), you need to do metaclass shenanigans
2019-12-17 02:25:51	cluelessperson	ah
2019-12-17 02:25:55	-->	rpg (~rpg@sift.net) has joined #python
2019-12-17 02:25:57	cluelessperson	I'm screwing around
2019-12-17 02:25:58	-->	stoopkid (uid137696@gateway/web/irccloud.com/x-glsqxfmzxnxysfbn) has joined #python
2019-12-17 02:26:06	<--	BeerLove_ (~BeerBuddy@171.50.137.211) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 02:26:22	-->	aslicedbanjo (~aslicedba@host86-160-19-113.range86-160.btcentralplus.com) has joined #python
2019-12-17 02:26:33	-->	singularity00 (~singulari@85.187.64.126.client.entry.bg) has joined #python
2019-12-17 02:26:35	cluelessperson	cdunklau, this is the dumbness I'm doing: https://gist.github.com/aa2c88e1e9e6f1ebe56810bd2ef5d629
2019-12-17 02:26:42	-->	Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz) has joined #python
2019-12-17 02:27:11	<--	subho (~subho@fedora/subho) has quit (Quit: laptop going to sleep. ZZZzzz…)
2019-12-17 02:27:27	cdunklau	cluelessperson: aaah can't look
2019-12-17 02:27:37	cluelessperson	cdunklau, why
2019-12-17 02:27:50	cdunklau	although i doubt i'll be spoiled by python AoC code
2019-12-17 02:27:55	-->	JoshS_ (~JoshS@50.56.229.19) has joined #python
2019-12-17 02:27:59	-->	baweaver (~baweaver@ruby/staff/baweaver) has joined #python
2019-12-17 02:28:00	cluelessperson	cdunklau, It's Day 2
2019-12-17 02:28:04	cdunklau	i'm doing it in haskell
2019-12-17 02:28:08	cdunklau	cluelessperson: yes, i'm on day 2!
2019-12-17 02:28:09	cdunklau	 :D
2019-12-17 02:28:20	cluelessperson	cdunklau, I'm sure you'll find this exceedingly easy.
2019-12-17 02:28:24	cluelessperson	cdunklau, This is where I'm at.
2019-12-17 02:28:33	cluelessperson	cdunklau, These challenges have all been very easy, yet tedious.
2019-12-17 02:28:43	cluelessperson	cdunklau, but I want to learn to do things "right", so I'm redoing this.
2019-12-17 02:28:50	<--	burakcank (~burakcank@159.146.10.86) has quit (Quit: WeeChat 2.6)
2019-12-17 02:29:00	cluelessperson	if this code makes your hair scream or stand on end, WHY
2019-12-17 02:29:01	<--	Rurik (~textual@unaffiliated/temur) has quit (Quit: Rurik)
2019-12-17 02:29:03	cdunklau	cluelessperson: yeah, that's kinda how AoC goes. its either tedious and boring, or like, nigh-impossible
2019-12-17 02:29:06	cluelessperson	and how the hell am I supposed to do it?
2019-12-17 02:29:20	cdunklau	cluelessperson: first of all, way too many classes
2019-12-17 02:29:34	cluelessperson	cdunklau, Let's start there!
2019-12-17 02:29:35	-->	gloomy (~Gloomy@213.61.70.210) has joined #python
2019-12-17 02:29:39	cluelessperson	why?
2019-12-17 02:29:41	-->	burakcank (~burakcank@159.146.10.86) has joined #python
2019-12-17 02:29:54	definity	I got a dictionary this shape: {'USD': {'rate': 1.22, 'time': 124432432}, 'GBP': {'rate': 0.65, 'time': 12423523}, 'EUR': {'rate': 0.98, 'time': 12433432}} How can I get the keys EUR, GBP, USD as strings?
2019-12-17 02:30:06	cluelessperson	cdunklau, There are multiple challenges that require adding other operations to the computer, so I figured I'd make the operations themselves classes that I add on to it.
2019-12-17 02:30:08	cdunklau	cluelessperson: use a dict of optcode -> (arity, operate)
2019-12-17 02:30:15	<--	jarthur (~jarthur@207.114.244.5) has quit (Quit: BRB)
2019-12-17 02:30:23	<--	muhlinux (~muhlinux@45.83.91.18) has quit (Quit: Leaving)
2019-12-17 02:30:27	cdunklau	operate takes `arity` args
2019-12-17 02:30:29	cluelessperson	definity, a = dict(that);   a.keys()   done.
2019-12-17 02:30:32	<--	jim (~jim@about/linux/staff/jim) has quit (Remote host closed the connection)
2019-12-17 02:30:46	cluelessperson	definity, also, you should google simple questions like that.
2019-12-17 02:31:11	cluelessperson	cdunklau, I don't know wtf `arity` is
2019-12-17 02:31:24	cdunklau	cluelessperson: number of args
2019-12-17 02:31:33	-->	Beam_Inn_ (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has joined #python
2019-12-17 02:31:44	-->	pombreda_ (~pombreda@host-78-129-86-230.dynamic.voo.be) has joined #python
2019-12-17 02:31:57	<--	chewyDelicious (~nooblet@musketeer-63.fusion.uni-jena.de) has quit (Ping timeout: 276 seconds)
2019-12-17 02:31:59	<--	nishantagrawal (dfe69df8@223.230.157.248) has left #python
2019-12-17 02:32:11	cdunklau	ah, sorry. operate takes `arity + 1` args, because you give it the int list as the first arg
2019-12-17 02:32:33	cdunklau	cluelessperson: but overall, i've always found that trying to plan ahead for AoC is like, never worth it
2019-12-17 02:33:37	cdunklau	cluelessperson: and it's kinda funny that i'm telling you this, because i have horrible confusing ideas about how i can maybe generalize intcode computer operations in a typeclass, or god forbid, a monad
2019-12-17 02:33:44	cdunklau	send help
2019-12-17 02:33:54	<--	sauvin (sauvin@about/linux/staff/sauvin) has quit (Ping timeout: 276 seconds)
2019-12-17 02:34:47	-->	desophos (~Thunderbi@c-24-14-63-128.hsd1.il.comcast.net) has joined #python
2019-12-17 02:35:02	-->	jim (~jim@about/linux/staff/jim) has joined #python
2019-12-17 02:35:40	<--	Jerrynicki (~niklas@p200300F573C0F6003DB24683DF88A860.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-17 02:35:51	<--	Beam_Inn (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has quit (Ping timeout: 276 seconds)
2019-12-17 02:35:58	--	Beam_Inn_ is now known as Beam_Inn
2019-12-17 02:36:07	cluelessperson	cdunklau, wtf is a typeclass, or monad
2019-12-17 02:36:28	cluelessperson	cdunklau, what is arity, much less arity + 1?
2019-12-17 02:36:42	definity	cluelessperson: That returns a keys_dict object not a string
2019-12-17 02:37:28	-->	unit37 (~IceChat9@173-31-162-74.client.mchsi.com) has joined #python
2019-12-17 02:37:33	cluelessperson	definity,   ...   for key in dict.keys():  print(key)  # str
2019-12-17 02:37:36	<--	legola (~legola@unaffiliated/legola) has quit (Remote host closed the connection)
2019-12-17 02:37:53	cluelessperson	definity, keys is a generator that outputs a key at a time.
2019-12-17 02:37:59	energizer	cluelessperson: the "arity" of a function is the number of arguments that it takes
2019-12-17 02:38:20	ChaiTRex	cluelessperson: A typeclass is a certain set of functions that work on a certain set of types. Arity is the number of arguments to a function. Monads are pretty abstract and hard to describe.
2019-12-17 02:38:20	definity	cluelessperson: oh yeah I missed the __it__ dunder opn dir() my bad. Thanks :)
2019-12-17 02:38:27	<--	funeral (~Funeral@246.109-247-210.customer.lyse.net) has quit (Ping timeout: 276 seconds)
2019-12-17 02:39:10	-->	isokee (~isokee@unaffiliated/isokee) has joined #python
2019-12-17 02:39:33	energizer	cluelessperson: those terms are used in haskell, we dont talk about them much in python
2019-12-17 02:40:06	-->	funeral (~Funeral@45.12.223.84) has joined #python
2019-12-17 02:41:03	-->	gnumojo (~Thunderbi@87.18.42.88) has joined #python
2019-12-17 02:41:23	<--	tuskkk____ (uid18470@gateway/web/irccloud.com/x-flvcebeparybnirn) has quit (Quit: Connection closed for inactivity)
2019-12-17 02:41:56	-->	JTa (~Thunderbi@unaffiliated/jta) has joined #python
2019-12-17 02:41:59	<--	rardiol (~quassel@177.52.229.215) has quit (Ping timeout: 268 seconds)
2019-12-17 02:42:12	-->	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has joined #python
2019-12-17 02:42:17	-->	alexgr (~alexgr@unaffiliated/alexgr) has joined #python
2019-12-17 02:42:27	<--	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has quit (Client Quit)
2019-12-17 02:42:56	-->	longshi (~mist_@2a02:a311:a242:ae00:badf:e4d5:e74c:e2c1) has joined #python
2019-12-17 02:43:22	-->	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has joined #python
2019-12-17 02:43:54	<--	slamtime (~textual@108.63.250.69) has quit (Quit: slamtime)
2019-12-17 02:44:18	<--	burakcank (~burakcank@159.146.10.86) has quit (Ping timeout: 276 seconds)
2019-12-17 02:44:20	<--	gnumojo (~Thunderbi@87.18.42.88) has quit (Client Quit)
2019-12-17 02:45:03	cdunklau	cluelessperson: typeclass and monads are haskell, i'm expressing my bewilderment with my code :)
2019-12-17 02:45:12	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-17 02:45:20	cluelessperson	cdunklau, oh, I thought you were judging my code.
2019-12-17 02:45:22	cluelessperson	very confusing.
2019-12-17 02:45:26	cdunklau	cluelessperson: nope, sorry
2019-12-17 02:45:29	<--	chriys (~Thunderbi@modemcable050.26-73-45.static.videotron.ca) has quit (Remote host closed the connection)
2019-12-17 02:45:36	cluelessperson	cdunklau, I would like your judgement. :)
2019-12-17 02:45:40	cluelessperson	energizer, yours too? :)
2019-12-17 02:45:48	-->	chriys (~Thunderbi@modemcable050.26-73-45.static.videotron.ca) has joined #python
2019-12-17 02:46:11	energizer	cluelessperson: i havent been doing aoc
2019-12-17 02:46:42	energizer	nedbat has been posting a link about it recently, maybe it interests you
2019-12-17 02:46:44	-->	__stranac__ (~stranac@83-131-240-219.adsl.net.t-com.hr) has joined #python
2019-12-17 02:46:45	<--	zalt__ (~devp@unaffiliated/lambda443) has quit (Ping timeout: 248 seconds)
2019-12-17 02:46:51	<--	arj15 (~arj15@185.47.223.198) has quit (Read error: Connection reset by peer)
2019-12-17 02:47:10	<--	chriys (~Thunderbi@modemcable050.26-73-45.static.videotron.ca) has quit (Client Quit)
2019-12-17 02:47:38	<--	ap4lmtree (ap4lmtree@unaffiliated/ap4lmtree) has quit (Quit: Leaving)
2019-12-17 02:47:38	<--	cliluw (~cliluw@unaffiliated/cliluw) has quit (Read error: Connection reset by peer)
2019-12-17 02:47:49	-->	legola (~legola@unaffiliated/legola) has joined #python
2019-12-17 02:47:57	<--	GnomosOrg (~matrixirc@183.51-175-188.customer.lyse.net) has quit (Remote host closed the connection)
2019-12-17 02:48:11	nedbat	cdunklau, cluelessperson: i have a leaderboard if you want to join it. I had to kind of go cold turkey on advent after yesterday. you can join it at https://adventofcode.com/2019/leaderboard/private with join code 33698-d7f39dcb if you want
2019-12-17 02:48:12	-->	GnomosOrg (~matrixirc@183.51-175-188.customer.lyse.net) has joined #python
2019-12-17 02:48:34	cdunklau	cluelessperson: so what i'm saying is you make a dict like {1: (3, do_add)} with `def do_add(intcodes, idx_x, idx_y, idx_dst): ...`
2019-12-17 02:48:39	<--	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has quit (Ping timeout: 245 seconds)
2019-12-17 02:49:15	cdunklau	cluelessperson: and do_add then does the actual transformation (or mutation) called for
2019-12-17 02:49:40	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined #python
2019-12-17 02:49:42	cdunklau	nedbat: i might. not sure how far i'll get with this
2019-12-17 02:49:57	<--	canarts (~stranac@m83-178-234-229.cust.tele2.hr) has quit (Ping timeout: 248 seconds)
2019-12-17 02:50:02	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2019-12-17 02:50:09	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 265 seconds)
2019-12-17 02:50:11	nedbat	cdunklau: i'm on another private board where one of the people has zero stars.  It doesn't have to be a competition :)
2019-12-17 02:50:18	-->	alexandre9099 (~alexandre@unaffiliated/alexandre9099) has joined #python
2019-12-17 02:50:50	-->	yoller (6a4213ab@106.66.19.171) has joined #python
2019-12-17 02:50:53	-->	_jonathan_ (~jonathan@cpe-66-65-138-2.nyc.res.rr.com) has joined #python
2019-12-17 02:50:54	cdunklau	lol
2019-12-17 02:51:00	cdunklau	k
2019-12-17 02:51:04	-->	fphilipe_ (~phil@2a02:168:f7b6:0:1135:3b88:d127:db7c) has joined #python
2019-12-17 02:51:29	-->	wreed (~wreed@ool-182f2441.dyn.optonline.net) has joined #python
2019-12-17 02:51:45	cluelessperson	nedbat, why thank you
2019-12-17 02:51:51	yoller	Many suggest emacs and vim text editor for python...which should i choose i am a beginner
2019-12-17 02:51:52	-->	zalt (~devp@unaffiliated/lambda443) has joined #python
2019-12-17 02:52:05	energizer	yoller: vscode
2019-12-17 02:52:07	-->	philr (~phil@ppp14-2-90-166.adl-apt-pir-bras31.tpg.internode.on.net) has joined #python
2019-12-17 02:52:07	-->	_afx_ (~Thunderbi@5.180.62.43) has joined #python
2019-12-17 02:52:12	nedbat	yoller: do you already use an editor of some kind?
2019-12-17 02:54:16	<--	legola (~legola@unaffiliated/legola) has quit (Ping timeout: 246 seconds)
2019-12-17 02:54:16	eck0	i did day 2 in c#
2019-12-17 02:54:16	-->	pepee (~pepee@unaffiliated/pepee) has joined #python
2019-12-17 02:54:16	eck0	:(
2019-12-17 02:54:16	-->	lacrymology (~lacrymolo@static-21-49-228-77.ipcom.comunitel.net) has joined #python
2019-12-17 02:54:16	cluelessperson	nedbat, I started late and I'm getting caught up in learning and these design problems
2019-12-17 02:54:16	yoller	energizer yes sublime for c++
2019-12-17 02:54:16	cdunklau	cluelessperson: i suggest solving it simply first
2019-12-17 02:54:16	eck0	1st intcode one isn’t bad , the rest are wtf
2019-12-17 02:54:16	<--	_afx_ (~Thunderbi@5.180.62.43) has quit (Remote host closed the connection)
2019-12-17 02:54:16	grym	yoller: vscode edges out sublime at this point, which i'm kind of sad about, but it'll make sense real fast
2019-12-17 02:54:16	-->	sameerynho (~lxsameer@unaffiliated/lxsameer) has joined #python
2019-12-17 02:54:16	<--	afx_ (~Thunderbi@adsl-230.37.6.226.tellas.gr) has quit (Ping timeout: 268 seconds)
2019-12-17 02:54:16	-->	afx_ (~Thunderbi@5.180.62.43) has joined #python
2019-12-17 02:54:16	-->	rardiol (~quassel@177.52.226.158) has joined #python
2019-12-17 02:54:16	<--	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has quit (Remote host closed the connection)
2019-12-17 02:54:16	cluelessperson	nedbat, I've added myself. :)
2019-12-17 02:54:16	<--	tabaqui1 (~tabaqui@31.44.93.25) has quit (Quit: WeeChat 2.6)
2019-12-17 02:54:16	-->	Jerrynicki (~niklas@p200300F573C0F6003DB24683DF88A860.dip0.t-ipconnect.de) has joined #python
2019-12-17 02:54:16	yoller	has ayone python build system code for sublime
2019-12-17 02:54:16	cluelessperson	wut
2019-12-17 02:54:19	nedbat	yoller: lots of python people use sublime
2019-12-17 02:54:32	-->	Sasazuka (~Sasazuka@unaffiliated/sasazuka) has joined #python
2019-12-17 02:54:40	-->	tabaqui1 (~tabaqui@31.44.93.25) has joined #python
2019-12-17 02:54:49	nedbat	cluelessperson: your self-deprecating manner notwithstanding, you seem to be doing fine in advent
2019-12-17 02:54:54	<--	definity (8ea77268@142.167.114.104) has quit (Remote host closed the connection)
2019-12-17 02:55:19	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 245 seconds)
2019-12-17 02:55:32	yoller	has ayone python build system code for sublime .... that can take input in terminal only as soon as i press build code
2019-12-17 02:56:07	nedbat	yoller: google around for advice on how to do python dev in sublime, i'm sure there are plugins to do what you need
2019-12-17 02:56:37	<--	codydh (uid373109@gateway/web/irccloud.com/x-gtkkpoobpogjsibp) has quit (Quit: Connection closed for inactivity)
2019-12-17 02:56:43	yoller	nedbat ... i have googled it but no working buld system code was found
2019-12-17 02:57:38	cluelessperson	nedbat, Thanks.  It depends on how I frame my approach.   So far the challenges have been very easy, if not occasionally tedious.  But it takes much longer to rewrite them repeatedly trying to make my code "perfect"
2019-12-17 02:58:05	-->	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has joined #python
2019-12-17 02:58:30	<--	halfbit (~tburdick@unaffiliated/submersive) has quit (Ping timeout: 246 seconds)
2019-12-17 02:59:20	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 02:59:20	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 02:59:20	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 02:59:21	--	Channel #python: 1754 nicks (0 ops, 0 voices, 1754 normals)
2019-12-17 02:59:25	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 02:59:45	yoller	at what time this channel is most active
2019-12-17 02:59:51	-->	gelignite (~gelignite@55d4d0ac.access.ecotel.net) has joined #python
2019-12-17 03:01:12	energizer	yoller: i dont think any of the channel regulars use sublime
2019-12-17 03:01:50	yoller	ok thanks
2019-12-17 03:02:18	matsaman	yoller: I'd say generally the network is most active about 7am to midnight UTC-5
2019-12-17 03:02:38	<--	afx_ (~Thunderbi@5.180.62.43) has quit (Quit: afx_)
2019-12-17 03:03:09	<--	pro_z (~pro_z@37.214.24.25) has quit (Ping timeout: 276 seconds)
2019-12-17 03:03:36	-->	afx_ (~Thunderbi@5.180.62.43) has joined #python
2019-12-17 03:04:40	yoller	matsaman: thanks
2019-12-17 03:04:49	nedbat	yoller: can you say more about what you need? "build" is a verb that is often missing from python, because you just run the .py files.
2019-12-17 03:05:29	-->	glow8 (~mario@132.116.221.87.dynamic.jazztel.es) has joined #python
2019-12-17 03:05:36	<--	afx_ (~Thunderbi@5.180.62.43) has quit (Client Quit)
2019-12-17 03:06:31	CrtxReavr	Lots of Python people use Sublime Text. . . not sure how many use full Sublime.
2019-12-17 03:06:34	<--	s00pcan (~chris@75-133-56-178.dhcp.trcy.mi.charter.com) has quit (Ping timeout: 245 seconds)
2019-12-17 03:06:38	yoller	while creating new build system generall we create a file name with sublime-build extension.......in that we enter some commands that runs as soon as we enter build
2019-12-17 03:06:51	yoller	more like this
2019-12-17 03:07:07	yoller	{ cmd: blah blah..... }
2019-12-17 03:07:21	-->	xrogaan (~xrogaan@unaffiliated/xrogaan) has joined #python
2019-12-17 03:07:48	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-17 03:07:49	<--	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has quit (Ping timeout: 245 seconds)
2019-12-17 03:08:05	-->	afx_ (~Thunderbi@adsl-230.37.6.226.tellas.gr) has joined #python
2019-12-17 03:08:29	-->	s00pcan (~chris@104.254.90.83) has joined #python
2019-12-17 03:08:35	yoller	for c++ i use
2019-12-17 03:08:37	yoller	 {  "cmd": ["g++", "$file", "-o", "${file_path}/${file_base_name}"],  "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",  "working_dir": "${file_path}",  "selector": "source.c, source.c++, source.cxx, source.cpp",  "variants":  [      {          "name": "Run",          "shell": true,          "cmd": ["gnome-terminal -e 'bash -c
2019-12-17 03:08:38	yoller	\"${file_path}/${file_base_name};echo;echo;  echo Press ENTER to continue; read line;exit; exec bash\"'"]      }  ]}
2019-12-17 03:09:33	<--	sdu (~doo@80.107.19.194) has quit (Quit: leaving)
2019-12-17 03:10:32	nedbat	yoller: ok, and what do you want these commands to do?
2019-12-17 03:10:44	<--	rippa (~rippa@ppp-vpdn-37.1.85.157.yarnet.ru) has quit (Quit: {#`%${%&`+'${`%&NO CARRIER)
2019-12-17 03:10:47	nedbat	yoller: (btw, please show >1 line of code in a pastebin, not here)
2019-12-17 03:12:12	<--	MrNightmare (~MrNightma@otwaon0147w-lp130-01-64-231-70-62.dsl.bell.ca) has quit (Ping timeout: 268 seconds)
2019-12-17 03:12:21	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 248 seconds)
2019-12-17 03:12:53	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 03:12:53	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 03:12:53	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 03:12:53	--	Channel #python: 1752 nicks (0 ops, 0 voices, 1752 normals)
2019-12-17 03:12:58	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 03:13:21	<--	jim (~jim@about/linux/staff/jim) has quit (Remote host closed the connection)
2019-12-17 03:13:37	-->	halfbit (~tburdick@unaffiliated/submersive) has joined #python
2019-12-17 03:13:44	-->	wordsToLiveBy (~wordsToLi@unaffiliated/wordstoliveby) has joined #python
2019-12-17 03:13:46	-->	MrNightmare (~MrNightma@otwaon0147w-lp130-01-64-231-70-62.dsl.bell.ca) has joined #python
2019-12-17 03:14:02	-->	derk0pf (~derk0pf@p5B2E5D2F.dip0.t-ipconnect.de) has joined #python
2019-12-17 03:14:20	<--	yoller (6a4213ab@106.66.19.171) has quit (Ping timeout: 260 seconds)
2019-12-17 03:14:30	<--	otto_j (~otto_j@otto.hadiko.de) has quit (Quit: Gateway shutdown)
2019-12-17 03:15:30	-->	shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) has joined #python
2019-12-17 03:16:24	-->	prepend (~textual@198.246.100.83) has joined #python
2019-12-17 03:16:29	<--	sdoherty (sdoherty@nat/redhat/x-epsfxjqgpgrfleap) has quit (Remote host closed the connection)
2019-12-17 03:16:32	-->	Eleanor (~E@h77-53-169-12.cust.a3fiber.se) has joined #python
2019-12-17 03:17:31	-->	cowpacity (~kevin@2601:1c0:5300:470::ce0f) has joined #python
2019-12-17 03:17:48	-->	saxarba (~saxarba@104.238.58.94) has joined #python
2019-12-17 03:18:20	-->	ircuser-1 (~Johnny@69.62.183.158) has joined #python
2019-12-17 03:19:01	-->	jim (~jim@about/linux/staff/jim) has joined #python
2019-12-17 03:19:40	-->	LKoen (~LKoen@81.255.219.130) has joined #python
2019-12-17 03:20:05	-->	altab (~altab@37.165.200.238) has joined #python
2019-12-17 03:21:04	-->	arj15 (~arj15@185.47.223.198) has joined #python
2019-12-17 03:21:09	-->	hiroaki (~hiroaki@ip4d166aa9.dynamic.kabel-deutschland.de) has joined #python
2019-12-17 03:21:10	<--	owlscientist (~owlscient@sburn/devel/name) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2019-12-17 03:21:28	<--	gloomy (~Gloomy@213.61.70.210) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 03:22:49	-->	Luke (~Luke@bitnomial/staff/luke) has joined #python
2019-12-17 03:22:53	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined #python
2019-12-17 03:23:01	-->	zyeri (~zyeri@tilde.team/users/zyeri) has joined #python
2019-12-17 03:24:11	-->	jonesy (~textual@70-91-15-1-panjde.hfc.comcastbusiness.net) has joined #python
2019-12-17 03:24:47	<--	sporkf (~jerry@50-76-125-141-static.hfc.comcastbusiness.net) has quit (Quit: Lost terminal)
2019-12-17 03:24:53	--	irc: disconnected from server
2019-12-17 03:25:25	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 03:25:25	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 03:25:25	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:57
2019-12-17 03:25:25	--	Channel #python: 1764 nicks (0 ops, 0 voices, 1764 normals)
2019-12-17 03:25:39	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 03:26:25	-->	seds (~seds@2804:14d:baa0:949b:1d61:2eb4:b097:6dad) has joined #python
2019-12-17 03:26:41	-->	owlscientist (~owlscient@sburn/devel/name) has joined #python
2019-12-17 03:26:45	<--	esro (~esro@b00001.krakowskiinternet.pl) has quit (Quit: Leaving)
2019-12-17 03:26:56	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-17 03:26:57	-->	jarthur (~jarthur@207.114.244.5) has joined #python
2019-12-17 03:27:26	--	McDonaldsWiFi is now known as PublicWiFi
2019-12-17 03:27:54	-->	muhlinux (~muhlinux@45.12.220.250) has joined #python
2019-12-17 03:28:27	zq	poetry 1.0 cool
2019-12-17 03:29:20	energizer	yes!
2019-12-17 03:30:44	<--	edrocks (~ed@2603:9000:c900:1eeb:2c3e:3e04:4e6f:5385) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 03:30:47	-->	arij (uid225068@gateway/web/irccloud.com/x-hnhnxlalvchgswzx) has joined #python
2019-12-17 03:31:57	-->	AbedB (~AbedBhuty@bzq-79-176-25-145.red.bezeqint.net) has joined #python
2019-12-17 03:32:34	<--	Mr0rris0 (g@gateway/vpn/privateinternetaccess/mr0rris0) has quit (Read error: Connection reset by peer)
2019-12-17 03:32:39	-->	winston_ (~winston_@2a04:4540:6c12:5900:9fe0:d1f4:5d5a:e4f8) has joined #python
2019-12-17 03:33:08	-->	Beam_Inn_ (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has joined #python
2019-12-17 03:33:28	<--	jonesy (~textual@70-91-15-1-panjde.hfc.comcastbusiness.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 03:33:42	<--	bzdocha (~bzdocha__@adsl-dyn127.78-98-68.t-com.sk) has quit (Ping timeout: 250 seconds)
2019-12-17 03:33:42	<--	drymer_ (~drymer@unaffiliated/drymer) has quit (Read error: Connection reset by peer)
2019-12-17 03:35:15	<--	Beam_Inn (~Beam_Inn@unaffiliated/beam-inn/x-3943829) has quit (Read error: Connection reset by peer)
2019-12-17 03:35:20	-->	ksft (~ksft@wikipedia/KSFT) has joined #python
2019-12-17 03:35:22	-->	drymer_ (~drymer@unaffiliated/drymer) has joined #python
2019-12-17 03:35:23	--	Beam_Inn_ is now known as Beam_Inn
2019-12-17 03:35:31	FunkyBob	I started a new project using poetry the other day... so far, no significant friction
2019-12-17 03:35:42	<--	iNs (~ins@gateway/tor-sasl/ins) has quit (Remote host closed the connection)
2019-12-17 03:36:02	-->	iNs (~ins@gateway/tor-sasl/ins) has joined #python
2019-12-17 03:36:03	-->	chewyDelicious (~nooblet@ip4d16fc78.dynamic.kabel-deutschland.de) has joined #python
2019-12-17 03:36:03	<--	_bart (~textual@12.52.67.99) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-12-17 03:36:44	<--	caglorithm (~caglorith@p4FED3B5E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-17 03:36:52	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 268 seconds)
2019-12-17 03:37:04	-->	Deknos (~some@unaffiliated/menace) has joined #python
2019-12-17 03:37:54	matsaman	I'm going to try Cummings' poetry fork today. Pretty intrigued.
2019-12-17 03:38:29	-->	caglorithm (~caglorith@p4FED3B5E.dip0.t-ipconnect.de) has joined #python
2019-12-17 03:39:27	<--	Ariakenom (~Ariakenom@h-158-174-186-131.NA.cust.bahnhof.se) has quit (Quit: Leaving)
2019-12-17 03:39:32	<--	shiroininja (shiroininj@gateway/vpn/privateinternetaccess/shiroininja) has quit (Quit: WeeChat 2.6)
2019-12-17 03:40:05	<--	RangerBob (~brian@pool-96-247-192-162.clppva.fios.verizon.net) has quit (Quit: Leaving)
2019-12-17 03:40:07	<--	hostile (~hostile@adsl-41.176.58.193.tellas.gr) has quit (Quit: Leaving)
2019-12-17 03:40:29	grym	matsaman: i bet it's all lowercased
2019-12-17 03:40:33	grym	and with
2019-12-17 03:40:34	grym	odd
2019-12-17 03:40:34	grym	line
2019-12-17 03:40:36	grym	brea
2019-12-17 03:40:37	grym	ks
2019-12-17 03:41:48	<--	mikami (~scurfee@broadband-77-37-146-212.ip.moscow.rt.ru) has quit
2019-12-17 03:42:19	SnoopJeDi	poetry[shatner]
2019-12-17 03:42:21	matsaman	=D
2019-12-17 03:42:30	<--	unit37 (~IceChat9@173-31-162-74.client.mchsi.com) has quit (Quit: East bound and down, loaded up and truckin')
2019-12-17 03:42:54	<--	caglorithm (~caglorith@p4FED3B5E.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-17 03:42:58	grym	(with up so floating many bells down)
2019-12-17 03:43:04	<--	Luke (~Luke@bitnomial/staff/luke) has quit (Quit: sleep)
2019-12-17 03:43:07	energizer	cumming should use black
2019-12-17 03:43:33	matsaman	black should have a cummings mode
2019-12-17 03:44:01	CrtxReavr	Clearly you know nothing about the author of black.
2019-12-17 03:44:21	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Ping timeout: 246 seconds)
2019-12-17 03:44:38	<--	pepee (~pepee@unaffiliated/pepee) has quit (Quit: pepee)
2019-12-17 03:44:57	matsaman	clearly
2019-12-17 03:45:09	grym	CrtxReavr: all 127 of them
2019-12-17 03:45:34	-->	caglorithm (~caglorith@p4FED3B5E.dip0.t-ipconnect.de) has joined #python
2019-12-17 03:45:38	-->	jonesy (~textual@70-91-15-1-panjde.hfc.comcastbusiness.net) has joined #python
2019-12-17 03:46:08	-->	laduyhaha (~laduyhaha@42.112.108.198) has joined #python
2019-12-17 03:46:08	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | bit.ly/psf-survey-2019 | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2019-12-17 03:46:08	--	Topic set by Yhg1s (uid387777@python/psf/thomas) on Fri, 01 Nov 2019 04:55:58
2019-12-17 03:46:08	--	Channel #python: 1760 nicks (0 ops, 0 voices, 1760 normals)
2019-12-17 03:46:12	--	Channel created on Sun, 26 Nov 2006 13:42:41
2019-12-17 03:46:27	-->	owenc_ (~owen@88-145-2-196.host.pobb.as13285.net) has joined #python
2019-12-17 03:46:50	-->	indistylo (~aruns_@106.51.26.248) has joined #python
2019-12-17 03:47:07	<--	levi13 (~levi@p200300E1BF05A255B577A8A6E78739A4.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2019-12-17 03:47:28	CrtxReavr	Well for starters it's called "The Uncompromising Code Formatter."
2019-12-17 03:49:01	-->	Mr0rris0 (g@gateway/vpn/privateinternetaccess/mr0rris0) has joined #python
2019-12-17 03:49:01	<--	wreed (~wreed@ool-182f2441.dyn.optonline.net) has quit (Quit: Goodbye)
2019-12-17 03:50:12	-->	[itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) has joined #python
2019-12-17 03:50:18	CrtxReavr	grym, I was referring to Lukasz.
2019-12-17 03:50:45	<--	owenc_ (~owen@88-145-2-196.host.pobb.as13285.net) has quit (Ping timeout: 248 seconds)
2019-12-17 03:50:58	CrtxReavr	There may have been some contributions to the software, but from what I understand, there's no contributing to the formatting standard.
2019-12-17 03:51:18	grym	i'm kind of lost now
2019-12-17 03:51:38	<--	Elodin (~weechat@unaffiliated/padawan) has quit (Ping timeout: 252 seconds)
2019-12-17 03:52:01	-->	legola (~legola@unaffiliated/legola) has joined #python
2019-12-17 03:52:07	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2019-12-17 03:52:11	cluelessperson	I think that applications should implement "translation" interfaces
2019-12-17 03:52:21	<--	indistylo (~aruns_@106.51.26.248) has quit (Ping timeout: 248 seconds)
2019-12-17 03:52:27	cluelessperson	for example, I find it annoying that in linux, different cli applications have different words or "uninstall"
2019-12-17 03:52:39	grym	cluelessperson: naming things is the hard thing, yes
2019-12-17 03:52:46	-->	Xaldafax (~Xaldafax@cpe-104-34-193-119.socal.res.rr.com) has joined #python
2019-12-17 03:52:58	grym	and cache invalidation, canonicallyh
2019-12-17 03:53:00	--	irc: disconnected from server
2020-05-22 23:17:00	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-22 23:17:00	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-22 23:17:00	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-22 23:17:01	--	Channel #python: 1906 nicks (0 ops, 0 voices, 1906 normals)
2020-05-22 23:17:02	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-22 23:17:15	tompaw	damn, it worked
2020-05-22 23:17:23	tompaw	supakeen thanks ;D
2020-05-22 23:17:34	<--	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has quit (Ping timeout: 272 seconds)
2020-05-22 23:17:36	-->	dude-x (~dude-x@pool-100-35-43-218.nwrknj.fios.verizon.net) has joined #python
2020-05-22 23:17:45	supakeen	:)
2020-05-22 23:17:48	<--	psachin (~psachin@103.51.234.94) has quit (Ping timeout: 265 seconds)
2020-05-22 23:18:17	tompaw	soo... wait. at this point, the calls list, what is a type of its element? a "called async function"??
2020-05-22 23:18:39	supakeen	Each element in the list is a <coroutine>, it's what you get when you call an `async def ...`.
2020-05-22 23:18:49	<--	Adbray (~Adbray@2600:6c48:6f7f:d764:1d76:2d1d:aedd:87d4) has quit (Disconnected by services)
2020-05-22 23:18:54	-->	Adbray_ (~Adbray@2600:6c48:6f7f:d764:1d76:2d1d:aedd:87d4) has joined #python
2020-05-22 23:18:56	supakeen	coroutines can be ran themselves, for example by awaiting them or stuffing them in asyncio.gather
2020-05-22 23:18:56	<--	KindOne (kindone@freenode/father-christmas/kindone) has quit (Ping timeout: 258 seconds)
2020-05-22 23:19:05	tompaw	ah, that's the part that confused me
2020-05-22 23:19:10	<--	gandalfdwite (~gandalfdw@49.205.220.210) has quit (Remote host closed the connection)
2020-05-22 23:19:13	-->	throsturx (~throstur@unaffiliated/throstur) has joined #python
2020-05-22 23:19:13	tompaw	if I just call() a coroutine it doesn't execute it
2020-05-22 23:19:17	supakeen	Correct.
2020-05-22 23:19:35	supakeen	The scheduling/running happens when you await it or put it on the event loop in another way (such as gather, etc)
2020-05-22 23:19:47	supakeen	Now some things do have silly APIs like they want a callable that returns a coroutine.
2020-05-22 23:19:52	supakeen	But not this one :)
2020-05-22 23:20:22	<--	mr_sm1th (~mr_sm1th@2001:1c01:3dca:5700:8c26:7412:cbfe:d28c) has quit (Remote host closed the connection)
2020-05-22 23:20:36	-->	wordsToLiveBy (~wordsToLi@unaffiliated/wordstoliveby) has joined #python
2020-05-22 23:20:37	<--	mattmurr (~mattmurr@185.210.219.244) has quit (Max SendQ exceeded)
2020-05-22 23:20:53	tompaw	makes perfect sense. just weird, as [foo()] could mean two completely different things
2020-05-22 23:20:58	-->	psachin (~psachin@103.51.234.101) has joined #python
2020-05-22 23:20:58	tompaw	need to get used to it
2020-05-22 23:20:58	-->	mattmurr (~mattmurr@185.210.219.244) has joined #python
2020-05-22 23:21:09	dTal	anyone wanna lend me a second pair of eyes? I have the strangest problem
2020-05-22 23:21:10	dTal	https://paste.debian.net/1148313/
2020-05-22 23:21:37	-->	KindOne (kindone@freenode/father-christmas/kindone) has joined #python
2020-05-22 23:21:40	supakeen	What is the problem?
2020-05-22 23:21:42	-->	Beanzilla (~Beanzilla@unaffiliated/beanzilla) has joined #python
2020-05-22 23:21:55	dTal	I'm just trying to edit a templated file. The print statements correctly output the "before" and "after" versions of the file, but the file remains unmodified on disk.
2020-05-22 23:22:11	-->	__stranac__ (~stranac@93-141-143-133.adsl.net.t-com.hr) has joined #python
2020-05-22 23:22:11	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-22 23:22:24	<--	throsturt (~throstur@unaffiliated/throstur) has quit (Ping timeout: 240 seconds)
2020-05-22 23:22:32	-->	TimeTrap (~TimeTrap@2601:44:c280:def:cdbd:8403:9afb:7ecd) has joined #python
2020-05-22 23:23:01	-->	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has joined #python
2020-05-22 23:23:09	tompaw	whoa. asyncio is like 8x slower than threading
2020-05-22 23:23:17	dTal	I use an identical formulation elsewhere in the code, and of course it works as expected
2020-05-22 23:23:19	supakeen	tompaw: It depends on the workload.
2020-05-22 23:23:20	<--	lizzin (~lizzin@unaffiliated/lizzin) has quit (Ping timeout: 260 seconds)
2020-05-22 23:23:22	<--	kosh (~kosh@p200300d08f0d6000bc1bd3b324cd725b.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-05-22 23:23:31	tompaw	or probably me misusing the asyncio.sleep()
2020-05-22 23:23:45	dTal	I must have done something dumb but I cannot for life of me see it
2020-05-22 23:23:50	supakeen	dTal: Most likely something finicky is going on with a re-used file object and its offset, toy around with `.offset` and `.seek`.
2020-05-22 23:23:58	supakeen	I have to have dinner so if you're still stuck later I'll take a look.
2020-05-22 23:24:04	<--	throsturx (~throstur@unaffiliated/throstur) has quit (Ping timeout: 256 seconds)
2020-05-22 23:24:09	dTal	I thought "with" was supposed to take care of all that
2020-05-22 23:24:18	supakeen	Same.
2020-05-22 23:24:20	--	Skeer is now known as Skeer_Away
2020-05-22 23:24:32	dTal	(That's why I threw in "f.close()"
2020-05-22 23:24:36	-->	causasui (~causasui@wikipedia/causa-sui) has joined #python
2020-05-22 23:25:03	<--	aasutosh (~aa@27.34.68.84) has quit (Ping timeout: 265 seconds)
2020-05-22 23:25:34	--	Skeer_Away is now known as Skeer
2020-05-22 23:25:42	<--	canarts (~stranac@m90-137-139-43.cust.tele2.hr) has quit (Ping timeout: 256 seconds)
2020-05-22 23:25:46	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-22 23:26:41	tompaw	supakeen it's a DB stress tester, fairly straight forward: https://bpa.st/IKNA
2020-05-22 23:26:50	dTal	I changed the name of the file objects for kicks, "f1", "f2" etc, and the problem persists
2020-05-22 23:26:53	-->	aasutosh (~aa@27.34.68.84) has joined #python
2020-05-22 23:27:13	-->	Guest20 (~textual@115.110.205.84) has joined #python
2020-05-22 23:27:25	tompaw	the threading version can hit 400 batches/sec. asyncio caps at 50.
2020-05-22 23:28:29	-->	DeadTOm (~deadtom@174-045-073-016.res.spectrum.com) has joined #python
2020-05-22 23:28:32	tompaw	I wonder... for this whole thing to make sense... my run_query should also be async, no?
2020-05-22 23:28:34	-->	dethos (~dethos@213.190.211.160) has joined #python
2020-05-22 23:28:36	dTal	I added a "sleep(1)" between the calls to open(), and the problem persists
2020-05-22 23:28:55	tompaw	otherwise it's just the asyncio.sleep that's "run" in parallel?
2020-05-22 23:30:22	-->	Gerula (~Gerula@unaffiliated/gerula) has joined #python
2020-05-22 23:30:29	tompaw	I'm pretty sure that's it. gonna google async pyodbc.
2020-05-22 23:31:25	tompaw	"Note that ODBC async mode is not supported by all drivers, and modifying pyODBC to allow using those that do would be nontrivial."
2020-05-22 23:31:39	tompaw	sigh... celery it is I guess...
2020-05-22 23:31:53	-->	Sathiana (~kath@c188-148-238-78.bredband.comhem.se) has joined #python
2020-05-22 23:33:39	-->	QBic (~kvirc@125.183.35.183) has joined #python
2020-05-22 23:33:41	<--	Speeder_ (~Speeder@2804:14d:ac83:4f59:3127:d070:5951:bcc8) has quit (Ping timeout: 272 seconds)
2020-05-22 23:33:44	dTal	Even weirder. I changed the template file to "measure.template" and the target file "measure" was created... empty
2020-05-22 23:33:46	<--	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has quit (Quit: fission6)
2020-05-22 23:35:14	-->	Gudddu (~Guddu@unaffiliated/guddu) has joined #python
2020-05-22 23:35:29	-->	Speeder (~Speeder@2804:14d:ac83:4f59:3127:d070:5951:bcc8) has joined #python
2020-05-22 23:36:57	<--	Lando-SpacePimp (~Lando@unaffiliated/lando-spacepimp) has quit (Ping timeout: 258 seconds)
2020-05-22 23:38:14	tompaw	ChrisWarrick are you still here? you suggested I use asyncio rather than threading for DB calls, but it looks like there's hardly any support for asyncio and odbc
2020-05-22 23:38:29	<--	Guddu (~Guddu@unaffiliated/guddu) has quit (Ping timeout: 258 seconds)
2020-05-22 23:38:31	tompaw	so maybe threading + celery would be a better option?
2020-05-22 23:38:35	ChrisWarrick	tompaw: google found aioodbc
2020-05-22 23:38:45	ChrisWarrick	tompaw: why celery?
2020-05-22 23:38:48	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Ping timeout: 256 seconds)
2020-05-22 23:38:53	<--	psachin (~psachin@103.51.234.101) has quit (Ping timeout: 260 seconds)
2020-05-22 23:39:12	tompaw	ChrisWarrick that's exactly what I was looking at and they're saying it's buggy as hell with sql server.
2020-05-22 23:39:57	tompaw	ChrisWarrick I was thinking this: find the max number of threads per 1 cpu, say 50 agents, where it caps.
2020-05-22 23:40:16	<--	Mulugruntz (~Mulugrunt@37.120.210.92) has quit (Quit: ZZZzzz…)
2020-05-22 23:40:17	tompaw	then spawn 8 celery workers, each running those 50 threads
2020-05-22 23:40:29	ChrisWarrick	tompaw: what is your end goal?
2020-05-22 23:40:52	--	irc: disconnected from server
2020-05-22 23:44:51	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-22 23:44:51	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-22 23:44:51	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-22 23:44:52	--	Channel #python: 1907 nicks (0 ops, 0 voices, 1907 normals)
2020-05-22 23:44:54	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-22 23:44:57	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 260 seconds)
2020-05-22 23:44:58	tompaw	ChrisWarrick: with the existing setup, we measure the sql load vs IIS load, and sql maxes out while IIS is chilling at 2%. this tells me that SQL is the key player here.
2020-05-22 23:45:13	tompaw	(by "measure" I mean "observe actual use")
2020-05-22 23:45:43	tompaw	I captured the queries using a sql profiler, put them in a .py app and now I want to batter the new sql server with them.
2020-05-22 23:46:45	-->	stonks7903 (~stonks790@pool-173-73-14-112.washdc.fios.verizon.net) has joined #python
2020-05-22 23:47:05	<--	diogenese (~diogenese@diogenese.velotech.net) has quit (Quit: Has anybody seen the bridge?)
2020-05-22 23:47:29	tompaw	I'll try the aioodbc, it seems to be a drop-in replacement.
2020-05-22 23:47:36	-->	diogenese (~diogenese@diogenese.velotech.net) has joined #python
2020-05-22 23:47:50	--	irc: disconnected from server
2020-05-22 23:48:03	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-22 23:48:03	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-22 23:48:03	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-22 23:48:03	--	Channel #python: 1907 nicks (0 ops, 0 voices, 1907 normals)
2020-05-22 23:48:04	-->	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has joined #python
2020-05-22 23:48:06	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-22 23:48:36	<--	Xiti (~Xiti-@unaffiliated/xiti) has quit (Ping timeout: 272 seconds)
2020-05-22 23:48:46	--	irc: disconnected from server
2020-05-22 23:49:29	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-22 23:49:29	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-22 23:49:29	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-22 23:49:29	--	Channel #python: 1909 nicks (0 ops, 0 voices, 1909 normals)
2020-05-22 23:49:31	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-22 23:50:13	-->	renich (~renich@189.192.133.251) has joined #python
2020-05-22 23:50:19	-->	P1ro (~quassel@gentoo/user/p1ro) has joined #python
2020-05-22 23:50:32	<--	audioburn (~audioburn@unaffiliated/theology) has quit (Ping timeout: 260 seconds)
2020-05-22 23:50:34	<--	gobostone (~Ace@174-16-168-254.hlrn.qwest.net) has quit (Read error: Connection reset by peer)
2020-05-22 23:50:42	-->	canarts (~stranac@m90-137-139-43.cust.tele2.hr) has joined #python
2020-05-22 23:50:56	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-22 23:51:01	-->	gobostone (~Ace@174-16-168-254.hlrn.qwest.net) has joined #python
2020-05-22 23:52:02	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-22 23:52:06	theseb	hi
2020-05-22 23:52:46	theseb	Can i ask how much fast pypy is over CPython and if/when it will replace CPython everywhere like is major linux distros?
2020-05-22 23:52:56	theseb	s/is/in
2020-05-22 23:53:02	<--	psachin (~psachin@103.51.234.125) has quit (Ping timeout: 272 seconds)
2020-05-22 23:53:03	<--	burningserenity (burningser@gateway/vpn/privateinternetaccess/burningserenity) has quit (Remote host closed the connection)
2020-05-22 23:53:11	bjs	theseb: a lot and maybe never
2020-05-22 23:53:38	theseb	bjs: wait..if it is faster/better/more wonderful/magical/lalala....why isn't it taking over?
2020-05-22 23:53:53	bjs	theseb: nobody said it was better, more wonderful and magical
2020-05-22 23:53:59	ChrisWarrick	pypy is compatible with python 3.6 right now
2020-05-22 23:54:20	P1ro	hi, im trying to remove duplicate ips but still getting duplicated ips, here is what im trying so far: https://bpa.st/PPVA
2020-05-22 23:54:21	ChrisWarrick	and there are things that pypy isn’t compatible with
2020-05-22 23:54:24	bjs	theseb: it's certainly faster.  But it's far behind,  it doesn't have as much support,  it's not as universally compatible with libraries as CPython is,  and CPython has existed longer
2020-05-22 23:54:25	altendky	and requires cpython c-api packages to get special support in various cases to work at all
2020-05-22 23:54:29	<--	chele (~chele@ip5b413b52.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-05-22 23:54:32	<--	__stranac__ (~stranac@93-141-143-133.adsl.net.t-com.hr) has quit (Ping timeout: 265 seconds)
2020-05-22 23:55:11	altendky	pyside2 decided for example that pypy support was a thing to consider after they had already developed the whole library...  *sigh*
2020-05-22 23:55:11	ChrisWarrick	P1ro: You create a new list and set on every iteration.
2020-05-22 23:55:16	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-22 23:55:31	supakeen	P1ro: You're continually making a new list and set every time, define the list before the loop and the set after (or skip the list).
2020-05-22 23:55:34	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 272 seconds)
2020-05-22 23:55:35	-->	kosh (~kosh@p200300d08f0d6000bc1bd3b324cd725b.dip0.t-ipconnect.de) has joined #python
2020-05-22 23:56:00	-->	Forsaken87 (~quassel@2a02:908:186c:a6a0:c121:c8f9:5ae8:2899) has joined #python
2020-05-22 23:56:12	<--	codingthings (~codingthi@ool-182ec1d7.dyn.optonline.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-22 23:56:46	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-05-22 23:56:49	P1ro	supakeen, ChrisWarrick if i dont create the list ill get output like this: {'0', '.', '1', '2', '5', '3'}
2020-05-22 23:56:50	theseb	bjs: "far behind"...*sigh*....you'd think in all this time it would have caught up
2020-05-22 23:57:03	-->	codingthings (~codingthi@ool-182ec1d7.dyn.optonline.net) has joined #python
2020-05-22 23:57:03	bjs	theseb: that's only a fair statement if CPython stood still :)
2020-05-22 23:57:09	ChrisWarrick	theseb: contributions are welcome
2020-05-22 23:57:20	<--	audiofile (~notanaudi@unaffiliated/audiofile) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-05-22 23:57:24	<--	stonks7903 (~stonks790@pool-173-73-14-112.washdc.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2020-05-22 23:57:24	<--	rns (~rns@c-69-180-72-207.hsd1.fl.comcast.net) has quit (Read error: Connection reset by peer)
2020-05-22 23:57:32	ChrisWarrick	P1ro: create one (empty) set and add to it
2020-05-22 23:57:32	bjs	theseb: also PyPy pretty much by definition has to be behind CPython
2020-05-22 23:57:40	bjs	because CPython is the reference implementation, it gets things first.
2020-05-22 23:57:48	theseb	bjs: ok...so as long as someone doesn't need the latest/greatest features, they should use pypy in anger to turbo their work
2020-05-22 23:57:53	<--	Codaraxis (~Codaraxis@ip68-5-90-227.oc.oc.cox.net) has quit (Remote host closed the connection)
2020-05-22 23:58:01	-->	rns (~rns@196.247.50.36) has joined #python
2020-05-22 23:58:10	ChrisWarrick	theseb: there are use-cases where pypy does not work or does not speed up by much
2020-05-22 23:58:19	bjs	theseb: so long as someone doesn't want an up to date version of Python,  they're not using 3rd party libraries or features incompatible with pypy and they really only care about speed then yes
2020-05-22 23:58:40	P1ro	ChrisWarrick: let em try it
2020-05-22 23:58:40	-->	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has joined #python
2020-05-22 23:58:45	-->	Codaraxis (~Codaraxis@ip68-5-90-227.oc.oc.cox.net) has joined #python
2020-05-22 23:58:51	bjs	theseb: in the end if all people cared about was speed then they'd not be using Python at all :)
2020-05-22 23:59:02	theseb	bjs: good point ;)
2020-05-22 23:59:09	bjs	theseb: so it's harder for a compiler like PyPy to even start to gain traction.  The fact it has is just a testament to how much faster it is
2020-05-22 23:59:12	theseb	bjs: or doing c extensions of their bottlenecks
2020-05-22 23:59:17	ChrisWarrick	theseb: well-written numpy code should be ultra fast with cpython, because it does all its calculation in vectorized C
2020-05-23 00:00:00	theseb	ChrisWarrick: what are some cases when it does not work?
2020-05-23 00:00:14	Ninpo	I often reach for pypy, there's not a _lot_ I run into issues wise with the 3.6 compatible version
2020-05-23 00:00:28	-->	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has joined #python
2020-05-23 00:00:29	Ninpo	but some C libs are slower because they don't use cffi
2020-05-23 00:00:33	Ninpo	e.g. mysqlclient
2020-05-23 00:00:36	-->	psachin (~psachin@103.51.234.155) has joined #python
2020-05-23 00:00:37	Ninpo	pymysql ends up faster
2020-05-23 00:00:45	<--	gelignite (~gelignite@55d4e777.access.ecotel.net) has quit (Quit: Stay safe! Stay at home! Stop the chain reaction!)
2020-05-23 00:01:28	tompaw	yup, aioodbc doesn't work with sql server. back to threading :-(
2020-05-23 00:02:11	Ninpo	tompaw: A good while ago I wrote a tool that queried SQL concurrently making use of trio+pymysql+sqlalchemy+sqlalchemy_aio
2020-05-23 00:02:31	Ninpo	if there's a drop in replacement for sql server that'll work with that (replace pymysql) it might help?
2020-05-23 00:02:58	setuid	I found a module called 'pythontail' that tails a log (even on Windows, very straightforward). What's the best way to take that and tail for specific strings, without having to recreate what it's doing with my own seek()/tell() functions?
2020-05-23 00:02:59	tompaw	Ninpo: I have to use literal queries, because I'm mimicking an actual app behavior. alchemy builds its own queries, no?
2020-05-23 00:03:01	ChrisWarrick	tompaw: as mentioned before, there are libraries which do not work with pypy
2020-05-23 00:03:20	-->	gandalfdwite (~gandalfdw@49.205.220.210) has joined #python
2020-05-23 00:03:20	ChrisWarrick	theseb: as mentioned before, there are libraries which do not work with pypy
2020-05-23 00:03:25	ChrisWarrick	tompaw: sorry, tabfail
2020-05-23 00:03:35	Ninpo	tompaw: stick with core and you can either write your queries as methods, or just stick them in text() methods and pass in whatever SQL you want
2020-05-23 00:03:36	tompaw	no worries, I was scratching my head a bit lol
2020-05-23 00:03:51	-->	cow0w_ (~cow0w@unaffiliated/cow0w) has joined #python
2020-05-23 00:03:58	tompaw	Ninpo in your example, you're still confined to 1 CPU, yes?
2020-05-23 00:04:01	Ninpo	tompaw: my app slung a mix of method chains building queries and straight up literals
2020-05-23 00:04:11	ChrisWarrick	tompaw: re the sql thing… before reaching for celery, I would try the multiprocessing module. Usually considered a blashpemy in this channel, but if you’re just doing stress testing, it might happen to work
2020-05-23 00:04:29	<--	sdoherty (~sdoherty@pool-100-0-19-58.bstnma.fios.verizon.net) has quit (Quit: Leaving)
2020-05-23 00:04:32	-->	alx13 (uid440583@gateway/web/irccloud.com/x-wpjhagggdxzbpzbc) has joined #python
2020-05-23 00:04:35	-->	CodePoint (~CodePoint@99-89-92-208.lightspeed.tukrga.sbcglobal.net) has joined #python
2020-05-23 00:04:37	tompaw	I'm agnostic, don't care about what gods think.
2020-05-23 00:04:45	Ninpo	tompaw: not necessarily. The main thread did a lot of aio work and I pounded data with subprocesses
2020-05-23 00:04:50	theseb	ChrisWarrick: multiprocessing module isn't getting universal love? i thought it was wonderful
2020-05-23 00:05:15	Ninpo	concurrent.futures.ProcessPool :P
2020-05-23 00:05:26	ChrisWarrick	theseb: in general, it’s terrible
2020-05-23 00:05:31	Ninpo	I'm a fan of controlling subprocess groups with trio myself
2020-05-23 00:05:35	-->	oncall-pokemon (uid134758@gateway/web/irccloud.com/x-sjhuxtzxyqwfffac) has joined #python
2020-05-23 00:06:20	theseb	ChrisWarrick: you simply do a map over all your data....and you automagically get parallelism....what's not to love?
2020-05-23 00:06:27	ChrisWarrick	theseb: pickle
2020-05-23 00:06:35	ChrisWarrick	theseb: it tries to be too magical
2020-05-23 00:06:38	-->	prit (uid382930@gateway/web/irccloud.com/x-htufptepjcvrhvve) has joined #python
2020-05-23 00:06:58	<--	cow0w (~cow0w@unaffiliated/cow0w) has quit (Ping timeout: 272 seconds)
2020-05-23 00:07:02	Ninpo	Pickle is why I try and make the things I want to kick into other processes callable via subprocess
2020-05-23 00:07:29	bjs	theseb: also processes aren't magic, automatic parallelism like that can sometimes be slower and it often goes wrong
2020-05-23 00:07:38	Ninpo	(largely my own limitation as I hate trying to remember what can and can't be pickled)
2020-05-23 00:07:48	bjs	theseb: the COW kills a lot of things :)
2020-05-23 00:08:01	bjs	especially in a reference counting interpreter :(
2020-05-23 00:08:13	theseb	bjs: i know about the GIL but not the "COW" ;)
2020-05-23 00:08:45	<--	zarjg (b2319abc@178.49.154.188) has quit (Remote host closed the connection)
2020-05-23 00:08:45	bjs	theseb: COW or Copy-On-Write is a standard part of the UNIX processes API,  when you fork() to get a child process you get a whole new address space that is a copy of the parent one
2020-05-23 00:08:55	bjs	theseb: whenever you try access something,  it has to copy it :)
2020-05-23 00:08:59	-->	devanshbatra04 (6746a57b@103.70.165.123) has joined #python
2020-05-23 00:09:02	<--	P1ro (~quassel@gentoo/user/p1ro) has quit (Ping timeout: 246 seconds)
2020-05-23 00:09:06	jwhisnant	theseb: cowsay dont use multiprocessing :)
2020-05-23 00:09:11	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 260 seconds)
2020-05-23 00:09:29	bjs	(there are ways around it but generally copy-on-write is the semantics you get)
2020-05-23 00:09:36	-->	KindTwo (kindone@freenode/father-christmas/kindone) has joined #python
2020-05-23 00:10:35	<--	ThePortWhisperer (~ThePortWh@unaffiliated/theportwhisperer) has quit (Ping timeout: 264 seconds)
2020-05-23 00:11:03	<--	KindOne (kindone@freenode/father-christmas/kindone) has quit (Ping timeout: 272 seconds)
2020-05-23 00:11:17	-->	mplavsic (~mplavsic@213.144.151.202) has joined #python
2020-05-23 00:12:12	-->	RangerBob (~brian@pool-173-72-244-228.clppva.fios.verizon.net) has joined #python
2020-05-23 00:13:22	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 00:13:26	-->	jamiejackson (cfac5722@gateway/web/cgi-irc/kiwiirc.com/ip.207.172.87.34) has joined #python
2020-05-23 00:13:58	--	Skeer is now known as Skeer_Away
2020-05-23 00:14:17	<--	zebrag (~inkbottle@aaubervilliers-654-1-297-54.w86-198.abo.wanadoo.fr) has quit (Quit: Konversation terminated!)
2020-05-23 00:14:26	-->	sublade (~anonymous@31.132.35.96) has joined #python
2020-05-23 00:14:39	-->	zebrag (~inkbottle@aaubervilliers-654-1-297-54.w86-198.abo.wanadoo.fr) has joined #python
2020-05-23 00:15:25	-->	ponyride1 (~ponyrider@unaffiliated/ponyrider) has joined #python
2020-05-23 00:15:25	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 00:15:26	<--	ponyrider (~ponyrider@unaffiliated/ponyrider) has quit (Read error: Connection reset by peer)
2020-05-23 00:16:27	-->	KindOne (kindone@freenode/father-christmas/kindone) has joined #python
2020-05-23 00:17:50	<--	KindTwo (kindone@freenode/father-christmas/kindone) has quit (Ping timeout: 256 seconds)
2020-05-23 00:18:15	<--	snails (~snails@pool-96-248-97-17.cmdnnj.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 00:18:15	grym	theseb: i normally get slammed by how fat a worker is with multiprocessing.  and fretting about what in my workers are not picklable is deeply annoying
2020-05-23 00:18:22	<--	psachin (~psachin@103.51.234.155) has quit (Ping timeout: 272 seconds)
2020-05-23 00:19:33	-->	jarthur (~jarthur@2605:6000:1019:4971:84c9:79ce:8982:d224) has joined #python
2020-05-23 00:19:36	<--	Laniakea (~Laniakea@2.30.100.73) has quit (Ping timeout: 256 seconds)
2020-05-23 00:19:47	theseb	grym: that's too bad
2020-05-23 00:19:59	theseb	too bad that multiprocessing isn't magic that is
2020-05-23 00:20:11	grym	theseb: the parallel story in python isn't great
2020-05-23 00:20:12	grym	imo
2020-05-23 00:20:21	mefistofeles	hey, trying to extract a float/decimal number from a string, I tried with https://bpa.st/K4OA but it doesn't work (it gives false). Any ideas on how to do this?
2020-05-23 00:20:30	-->	rns_ (~rns@c-69-180-72-207.hsd1.fl.comcast.net) has joined #python
2020-05-23 00:21:20	-->	multifractal (~multifrac@host-92-2-120-196.as43234.net) has joined #python
2020-05-23 00:21:26	-->	detseg (~segv@71-147-44-107.lightspeed.livnmi.sbcglobal.net) has joined #python
2020-05-23 00:21:29	-->	jay-m_ (~jay-m@129.0.205.80) has joined #python
2020-05-23 00:21:46	telemachus	mefistofeles:  float()
2020-05-23 00:21:54	<--	xcm (~xcm@ipd114.250.tellas.gr) has quit (Remote host closed the connection)
2020-05-23 00:21:57	graingert	subinterpreters
2020-05-23 00:21:59	-->	MightyJoe (~joe@189.158.139.123) has joined #python
2020-05-23 00:22:05	-->	Xiti (~Xiti-@unaffiliated/xiti) has joined #python
2020-05-23 00:22:05	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 00:22:14	mefistofeles	telemachus: yes, manually casting could work, but for example what happens if I have "0.12312N" and I want to extract the 0.12312 part
2020-05-23 00:22:27	-->	xcm (~xcm@ipd114.250.tellas.gr) has joined #python
2020-05-23 00:22:35	<--	edlinde (~edlinde@183.83.146.78) has quit (Quit: edlinde)
2020-05-23 00:23:03	telemachus	mefistofeles:  This happens "ValueError: invalid literal for float(): 1.23N"
2020-05-23 00:23:04	telemachus	:)
2020-05-23 00:23:06	--	Skeer_Away is now known as Skeer
2020-05-23 00:23:23	<--	cyraxjoe (~joe@CableLink-187-161-5-13.PCs.InterCable.net) has quit (Ping timeout: 246 seconds)
2020-05-23 00:23:25	mefistofeles	telemachus: yeah, I mean, how to extract just the number in that case?
2020-05-23 00:23:28	telemachus	try...except ValueError and try again? Sorry, I didn't know if you were unaware of float or had other specifications, lol
2020-05-23 00:23:32	<--	rns (~rns@196.247.50.36) has quit (Ping timeout: 265 seconds)
2020-05-23 00:23:39	mefistofeles	telemachus: no worries, thanks anyways
2020-05-23 00:23:51	mefistofeles	it may be enough with float, but I want to get all these other cases
2020-05-23 00:23:58	mefistofeles	but yeah, a try-except may do it
2020-05-23 00:24:15	telemachus	mefistofeles:  Do you have any control (or knowledge) of the range of inputs?
2020-05-23 00:24:32	mefistofeles	telemachus: it's from a 3rd party app in some log file, so not really
2020-05-23 00:24:38	telemachus	If not, then I suppose you could use a regex to carve away the numeric portion, but that seems pretty error prone...
2020-05-23 00:25:10	telemachus	Someone else may know better. Presumably there's a library that provides something more robust than rolling your own...
2020-05-23 00:25:22	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 00:25:53	-->	AbedB (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has joined #python
2020-05-23 00:26:01	-->	GeekOfflineNL (~GeekOffli@2001:1c03:540c:4000:c12b:ffdf:2e56:9307) has joined #python
2020-05-23 00:26:11	<--	Xiti` (~Xiti-@unaffiliated/xiti) has quit (Ping timeout: 264 seconds)
2020-05-23 00:26:51	<--	sharktamer (~sharktame@cpc157207-watf11-2-0-cust5.15-2.cable.virginm.net) has quit (Read error: Connection reset by peer)
2020-05-23 00:27:16	-->	eukreign (~lex@64.223.173.35) has joined #python
2020-05-23 00:27:27	<--	hd1 (4c5b0bf5@gateway/web/cgi-irc/kiwiirc.com/ip.76.91.11.245) has quit (Quit: Connection closed)
2020-05-23 00:27:49	-->	PhizzyNoodlePie (~phillip@77.44.49.73) has joined #python
2020-05-23 00:27:56	-->	sharktamer (~sharktame@cpc157207-watf11-2-0-cust5.15-2.cable.virginm.net) has joined #python
2020-05-23 00:27:58	eukreign	calling `asyncio.create_task()` is taking longer than 0.1 seconds, any tips on debugging this or trying to figure out what could be causing the slow down?
2020-05-23 00:28:16	graingert	eukreign: just the call?
2020-05-23 00:28:17	Ninpo	eukreign: share the code and how you pinned it to that exact line?
2020-05-23 00:28:33	eukreign	yes, specifically `tasks.Task(coro, loop=self)` inside of `asyncio.create_task()`
2020-05-23 00:28:34	telemachus	mefistofeles: e.g., numpy provides .fromstring that returns an array of numbers found in a string
2020-05-23 00:28:34	graingert	asyncio.create_task(coroutinefunction())
2020-05-23 00:28:43	-->	troulouliou_div2 (~troulouli@unaffiliated/troulouliou-div2/x-0271439) has joined #python
2020-05-23 00:28:44	<--	veek (~veek@unaffiliated/veek) has quit (Quit: Leaving)
2020-05-23 00:29:14	graingert	eukreign: is it slow for say
2020-05-23 00:29:15	graingert	async def noop(): return None
2020-05-23 00:29:15	graingert	asyncio.create_task(noop())
2020-05-23 00:29:35	eukreign	https://bpa.st/CV3Q
2020-05-23 00:29:52	graingert	yeah I know what the python source is
2020-05-23 00:30:06	eukreign	i set breakpoint on line 13
2020-05-23 00:30:13	eukreign	and it's hit sometimes
2020-05-23 00:30:18	mefistofeles	telemachus: oh, that looks promising, will check that one
2020-05-23 00:30:21	mefistofeles	thanks
2020-05-23 00:30:21	-->	_alguien_ (~MA2G1@62.117.236.175.dyn.user.ono.com) has joined #python
2020-05-23 00:30:28	eukreign	i tried stepping into Task() but doesn't work well, i guess that's written in C?
2020-05-23 00:30:56	eukreign	`return None` would make it that slow?
2020-05-23 00:31:14	graingert	eukreign: it's probably something in your coro that's slow
2020-05-23 00:31:16	graingert	not cpython
2020-05-23 00:31:23	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 00:31:38	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 00:31:57	-->	mnx (~mnx@unaffiliated/suggarmouth) has joined #python
2020-05-23 00:32:01	eukreign	this is the coro: async def printer(m): print(m)
2020-05-23 00:32:15	graingert	so print is blocking IO
2020-05-23 00:32:27	graingert	what do you pass as m?
2020-05-23 00:32:34	-->	AbedB_ (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has joined #python
2020-05-23 00:32:45	eukreign	if i make the coro blocking (by adding time.sleep()) i get a different message from asyncio, saying that that method is slow
2020-05-23 00:32:48	graingert	eukreign: can you repeat the slowness with my noop async def?
2020-05-23 00:32:48	-->	cthulchu (~Cthulchu@69.172.160.196) has joined #python
2020-05-23 00:32:55	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 00:33:18	<--	Tanvir (~tanvir@wikimedia/wikitanvir) has quit (Ping timeout: 258 seconds)
2020-05-23 00:34:00	eukreign	just did, async def printer(m): return None, still getting the slowness
2020-05-23 00:34:14	graingert	try with my noop
2020-05-23 00:34:20	<--	AbedB (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has quit (Ping timeout: 256 seconds)
2020-05-23 00:34:29	<--	jw4 (~jw4@unaffiliated/jw4) has quit (Read error: Connection reset by peer)
2020-05-23 00:35:04	<--	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has quit (Quit: Out.)
2020-05-23 00:35:42	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Client Quit)
2020-05-23 00:36:12	-->	burningserenity (~burningse@050-088-149-178.res.spectrum.com) has joined #python
2020-05-23 00:36:36	<--	mnx (~mnx@unaffiliated/suggarmouth) has quit (Client Quit)
2020-05-23 00:36:37	eukreign	okay, doing this:            async def noop(): return None
2020-05-23 00:36:38	eukreign	            asyncio.run_coroutine_threadsafe(noop(), self.loop)
2020-05-23 00:36:42	-->	ijens (~ijens@unaffiliated/ijens) has joined #python
2020-05-23 00:36:43	eukreign	and still reproduces
2020-05-23 00:36:44	-->	jw4 (~jw4@unaffiliated/jw4) has joined #python
2020-05-23 00:37:00	eukreign	Executing <Handle run_coroutine_threadsafe.<locals>.callback() at /usr/lib/python3.7/asyncio/tasks.py:839 created at /usr/lib/python3.7/asyncio/tasks.py:847> took 0.132 seconds
2020-05-23 00:37:04	-->	ooboyle (~ooboyle@modemcable042.178-70-69.static.videotron.ca) has joined #python
2020-05-23 00:37:21	-->	qlixed (~qlixed@2800:810:471:1255::1000) has joined #python
2020-05-23 00:37:24	eukreign	not consistently of course, but about 1 in 4 times
2020-05-23 00:37:39	<--	han-solo (~han-solo@unaffiliated/han-solo) has quit (Quit: leaving)
2020-05-23 00:38:18	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Ping timeout: 256 seconds)
2020-05-23 00:38:23	eukreign	but, i also can't seem to reproduce this in an isolated way, the problem is only while running the rest of my project which triggers the code to run many many times
2020-05-23 00:39:01	eukreign	i tried making a simple isolated case where i called it a lot of times and that didn't reproduce it, so just calling it a lot isn't enough
2020-05-23 00:39:08	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-05-23 00:39:12	eukreign	any ideas on what else to try?
2020-05-23 00:39:13	<--	QBic (~kvirc@125.183.35.183) has quit (Read error: Connection reset by peer)
2020-05-23 00:39:15	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-05-23 00:39:33	-->	lunaa (lunaa@156.223.253.190) has joined #python
2020-05-23 00:39:55	lunaa	hello, easy Q: is there is such a command to return the whole script at that point ??
2020-05-23 00:40:06	-->	nathacof_ (~nathacof@c-24-23-179-197.hsd1.ca.comcast.net) has joined #python
2020-05-23 00:40:16	lunaa	something like return but break the script at that point.
2020-05-23 00:40:30	grym	lunaa: a breakpoint?
2020-05-23 00:40:30	<--	ignloidas (~ignaloida@86.38.252.76) has quit (Read error: Connection reset by peer)
2020-05-23 00:40:34	-->	pombreda__ (~pombreda@host-78-129-33-156.dynamic.voo.be) has joined #python
2020-05-23 00:40:43	grym	lunaa: or "cease execution right here and exit"
2020-05-23 00:40:57	lunaa	grym: okay thanks. just wanted to know the name of the command.
2020-05-23 00:40:58	lunaa	thanks.
2020-05-23 00:40:59	-->	ignloidas (~ignaloida@86.38.252.76) has joined #python
2020-05-23 00:41:21	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-05-23 00:41:26	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 00:41:39	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 00:41:56	-->	rom1dep[x] (~rom1depx]@unaffiliated/rom1dep) has joined #python
2020-05-23 00:42:03	<--	ijens (~ijens@unaffiliated/ijens) has quit (Remote host closed the connection)
2020-05-23 00:42:45	-->	Xiti` (~Xiti-@unaffiliated/xiti) has joined #python
2020-05-23 00:43:17	<--	rendar (~rendar@unaffiliated/rendar) has quit
2020-05-23 00:43:24	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2020-05-23 00:43:28	<--	Xiti` (~Xiti-@unaffiliated/xiti) has quit (Client Quit)
2020-05-23 00:43:48	-->	mnx (~mnx@unaffiliated/suggarmouth) has joined #python
2020-05-23 00:43:48	<--	zebrag (~inkbottle@aaubervilliers-654-1-297-54.w86-198.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2020-05-23 00:43:54	grym	lunaa: as of 3.7 it's breakpoint(), otherwise it's pdb.set_trace()  https://www.python.org/dev/peps/pep-0553/
2020-05-23 00:44:16	-->	Saukk (~Saukk@2001:998:c9:1181:986f:9a9:3912:5004) has joined #python
2020-05-23 00:44:23	-->	zebrag (~inkbottle@aaubervilliers-654-1-297-54.w86-198.abo.wanadoo.fr) has joined #python
2020-05-23 00:45:11	<--	mnx (~mnx@unaffiliated/suggarmouth) has quit (Client Quit)
2020-05-23 00:45:36	<--	Xiti (~Xiti-@unaffiliated/xiti) has quit (Ping timeout: 272 seconds)
2020-05-23 00:46:14	-->	ghost2501 (~ghost2501@unaffiliated/ghost2501) has joined #python
2020-05-23 00:46:23	<--	dude-x (~dude-x@pool-100-35-43-218.nwrknj.fios.verizon.net) has quit (Remote host closed the connection)
2020-05-23 00:46:44	<--	burningserenity (~burningse@050-088-149-178.res.spectrum.com) has quit (Ping timeout: 256 seconds)
2020-05-23 00:47:45	graingert	lunaa: you might want to move your script into a `def main():` function
2020-05-23 00:47:47	graingert	then you can use return
2020-05-23 00:48:00	-->	mnx (~mnx@unaffiliated/suggarmouth) has joined #python
2020-05-23 00:48:07	graingert	but it's not clear if you want to stop midway for debugging reasons
2020-05-23 00:48:08	-->	inkbottle (~inkbottle@aaubervilliers-654-1-220-94.w90-61.abo.wanadoo.fr) has joined #python
2020-05-23 00:48:15	graingert	or something you want to do in production lunaa
2020-05-23 00:48:23	<--	christoph_ (~christoph@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has quit (Ping timeout: 264 seconds)
2020-05-23 00:48:46	<--	SpinTronix (~SpinTroni@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has quit (Ping timeout: 272 seconds)
2020-05-23 00:48:59	<--	philr_ (~phil@ppp118-210-77-184.adl-adc-lon-bras32.tpg.internode.on.net) has quit (Ping timeout: 264 seconds)
2020-05-23 00:49:03	graingert	lunaa: ^
2020-05-23 00:49:04	<--	zebrag (~inkbottle@aaubervilliers-654-1-297-54.w86-198.abo.wanadoo.fr) has quit (Ping timeout: 240 seconds)
2020-05-23 00:49:08	<--	Sathiana (~kath@c188-148-238-78.bredband.comhem.se) has quit (Quit: WeeChat 2.8)
2020-05-23 00:50:36	-->	choy (~choy@2001:16b8:2e88:5e00:8455:4bac:a33e:73ed) has joined #python
2020-05-23 00:51:41	<--	pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) has quit (Remote host closed the connection)
2020-05-23 00:52:00	-->	XenGi (~quassel@c-base/crew/XeN) has joined #python
2020-05-23 00:52:10	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 00:52:30	-->	KindTwo (kindone@freenode/father-christmas/kindone) has joined #python
2020-05-23 00:52:31	-->	pkapp (~pkapp@2601:58c:c500:6900:28b2:a121:3edd:72b1) has joined #python
2020-05-23 00:52:59	-->	D4mned (d465e040@212.101.224.64) has joined #python
2020-05-23 00:53:05	D4mned	hello
2020-05-23 00:54:07	<--	KindOne (kindone@freenode/father-christmas/kindone) has quit (Ping timeout: 272 seconds)
2020-05-23 00:54:42	-->	maryo_s (~Maryo@unaffiliated/maryo) has joined #python
2020-05-23 00:55:20	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 00:55:29	D4mned	https://pastebin.com/USHiwqGn
2020-05-23 00:55:31	infobob	https://bpaste.net/SRHQ (repasted for D4mned)
2020-05-23 00:55:34	-->	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has joined #python
2020-05-23 00:55:38	-->	dude-x (~dude-x@pool-100-35-43-218.nwrknj.fios.verizon.net) has joined #python
2020-05-23 00:55:46	D4mned	this worked fine on linux
2020-05-23 00:55:51	D4mned	and failing to work on windows
2020-05-23 00:56:01	D4mned	if i remove this if and else statement
2020-05-23 00:56:04	D4mned	it works just fine
2020-05-23 00:56:06	<--	frrs (uid130725@gateway/web/irccloud.com/x-wkqjknawsolacknw) has quit (Quit: Connection closed for inactivity)
2020-05-23 00:56:19	D4mned	could it be the os.remove ?
2020-05-23 00:56:29	-->	Newami (~Newami@ip174-68-64-138.sd.sd.cox.net) has joined #python
2020-05-23 00:56:30	D4mned	os works in windows ?
2020-05-23 00:56:38	nedbat	D4mned: get rid of the "except:", and we could see the error
2020-05-23 00:56:45	JordiGH	`from typing import Union; Union[Thing1, Thing2]`  # Why was Union defined with [] instead of ()?
2020-05-23 00:56:46	--	KindTwo is now known as KindOne
2020-05-23 00:57:05	nedbat	JordiGH: all of the typing things are like that
2020-05-23 00:57:13	nedbat	JordiGH: List[int].  Callable is even worse :)
2020-05-23 00:57:26	JordiGH	subscriptable?
2020-05-23 00:57:28	JordiGH	This is weird, man.
2020-05-23 00:57:29	JordiGH	Why?
2020-05-23 00:57:38	<--	Newami (~Newami@ip174-68-64-138.sd.sd.cox.net) has quit (Remote host closed the connection)
2020-05-23 00:57:45	nedbat	JordiGH: i'm not quite sure why. probably the other syntax wouldn't have worked for some reason
2020-05-23 00:57:45	-->	Soo_Slow (Soo_Slow@gateway/vpn/privateinternetaccess/sooslow/x-31376162) has joined #python
2020-05-23 00:58:00	JordiGH	>_>
2020-05-23 00:58:05	-->	gavlee_ (~gav@unaffiliated/gavlee) has joined #python
2020-05-23 00:58:05	<--	mplavsic (~mplavsic@213.144.151.202) has quit (Quit: mplavsic)
2020-05-23 00:58:11	JordiGH	If this is because someone wanted to mimic Java/C++ syntax... <_<
2020-05-23 00:58:20	<--	gavlee (~gav@unaffiliated/gavlee) has quit (Ping timeout: 265 seconds)
2020-05-23 00:58:35	-->	wogi (~wogi@2a02:8108:4740:3420:159d:e5ca:bbd2:ef1b) has joined #python
2020-05-23 00:58:36	<--	haslo (uid390999@gateway/web/irccloud.com/x-gosgsbmiixcceexm) has quit (Quit: Connection closed for inactivity)
2020-05-23 00:59:25	Ninpo	is it because the parser would interpret Union(thing1, thing2) as a method/function call?
2020-05-23 00:59:25	-->	aidanh_ (~aidanh@unaffiliated/aidanh) has joined #python
2020-05-23 00:59:29	JordiGH	So I could do this myself, right? Create my own class, and uhhhhhh, change its metaclass so I can define __get__ on it?
2020-05-23 00:59:30	Soo_Slow	can pillow capture pixel's alpha channel?
2020-05-23 01:00:09	SnoopJeDi	Soo_Slow, "capture?"
2020-05-23 01:00:10	<--	aidanh (~aidanh@unaffiliated/aidanh) has quit (Ping timeout: 272 seconds)
2020-05-23 01:00:10	--	aidanh_ is now known as aidanh
2020-05-23 01:00:13	-->	burningserenity (burningser@gateway/vpn/privateinternetaccess/burningserenity) has joined #python
2020-05-23 01:00:13	JordiGH	Ninpo: But isn't Union[] a function call too? It's calling __get__ unless I'm much mistaken.
2020-05-23 01:00:22	-->	dongcarl (~dongcarl@unaffiliated/dongcarl) has joined #python
2020-05-23 01:00:45	<--	gandalfdwite (~gandalfdw@49.205.220.210) has quit (Remote host closed the connection)
2020-05-23 01:00:57	D4mned	nedbat
2020-05-23 01:00:59	D4mned	     if "jpeg" in r.content:
2020-05-23 01:01:00	<--	greedom (~greedom@2001:16b8:2ed4:3100:8982:7384:9a37:acb3) has quit (Quit: Konversation terminated!)
2020-05-23 01:01:00	Ninpo	hrm yeah
2020-05-23 01:01:14	Soo_Slow	SnoopJeDi, well, I need to get rpg color values, coordinates and alpha channel for all pixels on image. While first and second arent issue, I cant google for third one
2020-05-23 01:01:15	<--	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has quit (Quit: fission6)
2020-05-23 01:01:24	Soo_Slow	*rgb
2020-05-23 01:01:26	D4mned	but it worked on linux
2020-05-23 01:01:30	nedbat	D4mned: i don't know what you're showing.  pastebin the latest code, and error report.
2020-05-23 01:01:40	Ninpo	D4mned: take the except out so we can see the traceback
2020-05-23 01:01:46	D4mned	i did
2020-05-23 01:01:57	<--	Saukk (~Saukk@2001:998:c9:1181:986f:9a9:3912:5004) has quit (Remote host closed the connection)
2020-05-23 01:02:10	-->	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has joined #python
2020-05-23 01:02:30	nedbat	D4mned: ok, now show us the code and the traceback
2020-05-23 01:02:40	<--	MightyJoe (~joe@189.158.139.123) has quit (Ping timeout: 256 seconds)
2020-05-23 01:02:42	-->	cotsuka (cameronmat@gateway/shell/matrix.org/x-bfdpqbudztwsgilr) has joined #python
2020-05-23 01:03:04	bigjazzsound	When I install packages with pip in a bash script, the binaries are installed without the execute bit set. I have tried setting my umask to 0000. When I do 'pip install' on the command line I do not experience the issue. Does anyone have any idea why this is happening?
2020-05-23 01:03:34	<--	devanshbatra04 (6746a57b@103.70.165.123) has quit (Ping timeout: 245 seconds)
2020-05-23 01:05:05	graingert	bigjazzsound: show what's in your bash script
2020-05-23 01:05:15	-->	gato (57cf4dfc@gateway/web/cgi-irc/kiwiirc.com/ip.87.207.77.252) has joined #python
2020-05-23 01:05:20	-->	XsiSec (~xsisec@h-37-123-162-226.NA.cust.bahnhof.se) has joined #python
2020-05-23 01:05:28	graingert	bigjazzsound: try using path/to/your/virt/environment/bin/python -m pip install ...
2020-05-23 01:05:57	<--	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-05-23 01:06:37	-->	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has joined #python
2020-05-23 01:07:15	-->	Sonderblade (~helloman@94.191.139.45.mobile.tre.se) has joined #python
2020-05-23 01:07:18	<--	Sonderblade (~helloman@94.191.139.45.mobile.tre.se) has quit (Client Quit)
2020-05-23 01:07:19	-->	bilb_ono (~alexmarsh@ip70-185-130-174.sb.sd.cox.net) has joined #python
2020-05-23 01:07:44	-->	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has joined #python
2020-05-23 01:10:26	-->	cry0 (~cry0@2607:fea8:8520:4a01:fce9:c2ab:6171:d255) has joined #python
2020-05-23 01:10:44	-->	karab44 (~karab44@unaffiliated/karab44) has joined #python
2020-05-23 01:11:16	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Quit: Bin weg.)
2020-05-23 01:11:56	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-05-23 01:12:04	-->	operateur (~operateur@89.110.227.199) has joined #python
2020-05-23 01:12:20	-->	christoph_ (~christoph@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has joined #python
2020-05-23 01:12:21	-->	SpinTronix (~SpinTroni@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has joined #python
2020-05-23 01:12:30	-->	gelignite (~gelignite@55d4e777.access.ecotel.net) has joined #python
2020-05-23 01:12:39	eukreign	graingert, i finally managed to reproduce it in an isolated way: https://bpa.st/GV2A
2020-05-23 01:12:53	<--	KeiraT (~k4ra@gateway/tor-sasl/k4ra) has quit (Ping timeout: 240 seconds)
2020-05-23 01:13:15	-->	gambl0re (~rickyjw@unaffiliated/gambl0re) has joined #python
2020-05-23 01:13:47	eukreign	how can i get `asyncio.run_coroutine_threadsafe()` to scale better with a lot of events coming from the queue?
2020-05-23 01:13:48	-->	darkstardevx (darkstarde@gateway/vpn/privateinternetaccess/darkstardevx) has joined #python
2020-05-23 01:13:49	<--	oedi (~rue@1-162-53-202.dynamic-ip.hinet.net) has quit (Quit: WeeChat 2.8)
2020-05-23 01:14:02	<--	pnwise (~pnwise@unaffiliated/pnwise) has quit (Read error: Connection reset by peer)
2020-05-23 01:14:35	-->	cry0_ (~cry0@2607:fea8:8520:4a01:906e:599c:4244:6f2b) has joined #python
2020-05-23 01:14:37	-->	KeiraT (~k4ra@gateway/tor-sasl/k4ra) has joined #python
2020-05-23 01:15:02	-->	_gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has joined #python
2020-05-23 01:15:06	<--	cry0 (~cry0@2607:fea8:8520:4a01:fce9:c2ab:6171:d255) has quit (Ping timeout: 260 seconds)
2020-05-23 01:15:08	<--	gobostone (~Ace@174-16-168-254.hlrn.qwest.net) has quit (Ping timeout: 256 seconds)
2020-05-23 01:15:08	<--	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has quit (Ping timeout: 256 seconds)
2020-05-23 01:15:40	bigjazzsound	graingert: https://bpa.st/VJHQ
2020-05-23 01:15:41	--	Skeer is now known as Skeer_Away
2020-05-23 01:16:06	-->	pnwise (~pnwise@unaffiliated/pnwise) has joined #python
2020-05-23 01:16:10	--	_gobostone is now known as gobostone
2020-05-23 01:16:44	<--	operateur (~operateur@89.110.227.199) has quit (Ping timeout: 260 seconds)
2020-05-23 01:17:15	-->	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has joined #python
2020-05-23 01:17:25	<--	GeekOfflineNL (~GeekOffli@2001:1c03:540c:4000:c12b:ffdf:2e56:9307) has quit (Quit: Leaving)
2020-05-23 01:17:48	<--	XenGi (~quassel@c-base/crew/XeN) has quit (Ping timeout: 252 seconds)
2020-05-23 01:18:26	-->	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has joined #python
2020-05-23 01:18:34	f8e4	is this ok: https://bpa.st/QAKA way of annotating?
2020-05-23 01:18:36	-->	XenGi (~quassel@c-base/crew/XeN) has joined #python
2020-05-23 01:19:02	<--	vuoto (~vuoto@80.71.142.174) has quit (Ping timeout: 256 seconds)
2020-05-23 01:19:04	<--	penth (~rachel@pool-74-109-20-147.phlapa.fios.verizon.net) has quit (Remote host closed the connection)
2020-05-23 01:19:24	-->	contained (contained@gateway/vpn/privateinternetaccess/contained) has joined #python
2020-05-23 01:19:26	ChrisWarrick	eukreign: asyncio + threading + threadpoolexecutor? are you sure all that is required? perhaps you could try to devise a different solution to your problem?
2020-05-23 01:19:54	eukreign	i need something that can work with both threading and with multiprocessing (hence the mp.Queue)
2020-05-23 01:20:06	ChrisWarrick	f8e4: how is this used?
2020-05-23 01:20:12	--	Skeer_Away is now known as Skeer
2020-05-23 01:20:41	-->	greedom (~greedom@2001:16b8:2ed4:3100:8982:7384:9a37:acb3) has joined #python
2020-05-23 01:21:00	eukreign	so, it whether i'm using ThreadPoolExecutor or ProcessPoolExecutor is configurable in the app, i was hoping that i could use mp.Queue in both cases
2020-05-23 01:21:32	<--	burningserenity (burningser@gateway/vpn/privateinternetaccess/burningserenity) has quit (Ping timeout: 265 seconds)
2020-05-23 01:21:36	f8e4	ChrisWarrick the app is a dash app with built in server; is function annotation ok, because inside func is runningoutofscope
2020-05-23 01:21:41	tompaw	ok, it might be lame, but celery + threading got the job done ;)
2020-05-23 01:21:47	ChrisWarrick	f8e4: ?
2020-05-23 01:21:54	-->	Jerrynicki (~niklas@p200300f5770318003f16fbda89eb7469.dip0.t-ipconnect.de) has joined #python
2020-05-23 01:21:57	-->	yakiza (~yakiza@05418fcd.skybroadband.com) has joined #python
2020-05-23 01:22:01	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 01:22:07	f8e4	i cannot annototate inside module due app not avail there
2020-05-23 01:22:14	f8e4	so i pass in via app call
2020-05-23 01:22:23	eukreign	the goal in short is: i have a bunch of stuff happening in threads or processes, i want to send events from those threads/processes and have access to them in the main asyncio loop, what's a good way to do that?
2020-05-23 01:22:33	ChrisWarrick	f8e4: oh, I wouldn’t do that then
2020-05-23 01:22:34	<--	sauvin (sauvin@about/linux/staff/sauvin) has quit (Read error: Connection reset by peer)
2020-05-23 01:22:47	f8e4	ChrisWarrick: example: https://dash.plotly.com/basic-callbacks
2020-05-23 01:22:51	ChrisWarrick	f8e4: all decorator usages can be rewritten without the decorator syntax
2020-05-23 01:22:52	f8e4	i just remove callback to another file
2020-05-23 01:23:52	-->	derk0pf (~derk0pf@x527179e6.dyn.telefonica.de) has joined #python
2020-05-23 01:24:19	ChrisWarrick	f8e4: you can just do: app.callback(…)(update_output)
2020-05-23 01:24:22	<--	Ublx (~Alex@2a02:810c:280:59c:9066:3f47:a63f:9732) has quit (Quit: WeeChat 2.8)
2020-05-23 01:24:26	ChrisWarrick	f8e4: without resorting to nested functions and stuff
2020-05-23 01:25:01	graingert	eukreign: https://github.com/aio-libs/janus ?
2020-05-23 01:25:10	<--	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has quit (Quit: fission6)
2020-05-23 01:25:16	<--	darkstardevx (darkstarde@gateway/vpn/privateinternetaccess/darkstardevx) has quit (Ping timeout: 256 seconds)
2020-05-23 01:25:16	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 01:25:29	graingert	eukreign: but generally it's easier to process everything in asyncio and running some sync things in a TPE
2020-05-23 01:26:13	<--	ignloidas (~ignaloida@86.38.252.76) has quit (Read error: Connection reset by peer)
2020-05-23 01:26:15	eukreign	that's what i'm trying to do: process everything in asyncio, but mp.Queue is not asyncio friendly, so that was the problem i was having
2020-05-23 01:26:29	graingert	you can use PPE
2020-05-23 01:26:33	graingert	ProcessPoolExecutor
2020-05-23 01:26:44	ChrisWarrick	graingert: less acronyms == better
2020-05-23 01:27:02	graingert	fewer
2020-05-23 01:27:22	-->	ignloidas (~ignaloida@86.38.252.76) has joined #python
2020-05-23 01:28:14	-->	Ublx (~Alex@2a02:810c:280:59c:9066:3f47:a63f:9732) has joined #python
2020-05-23 01:28:41	<--	Ublx (~Alex@2a02:810c:280:59c:9066:3f47:a63f:9732) has quit (Client Quit)
2020-05-23 01:31:37	-->	johefernan (~ck3t@unaffiliated/johefernan) has joined #python
2020-05-23 01:34:16	eukreign	yeah, PPE works, but i need to support both (it's configurable)
2020-05-23 01:34:47	graingert	both?
2020-05-23 01:35:00	graingert	you just run whichever one you need
2020-05-23 01:36:14	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 01:36:58	<--	XenGi (~quassel@c-base/crew/XeN) has quit (Ping timeout: 260 seconds)
2020-05-23 01:37:02	-->	cliluw (~cliluw@unaffiliated/cliluw) has joined #python
2020-05-23 01:37:08	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 01:37:09	-->	burningserenity (~burningse@050-088-149-178.res.spectrum.com) has joined #python
2020-05-23 01:37:12	-->	csevast (~csevast@79.103.51.222.dsl.dyn.forthnet.gr) has joined #python
2020-05-23 01:37:41	rangergord	does anyone know any non-trivial Qt QML open-source apps? (not Qt Widgets)
2020-05-23 01:38:04	-->	lembron (~admin@unaffiliated/lembron) has joined #python
2020-05-23 01:38:17	-->	gandalfdwite (~gandalfdw@49.205.220.210) has joined #python
2020-05-23 01:39:04	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Client Quit)
2020-05-23 01:39:28	lembron	given [{name:a, opt:2},{name:b, opt:5}] - is there a online to check "if that has one with name=="xyz"?
2020-05-23 01:39:33	-->	Alexander-47u (~Alexander@85.203.44.133) has joined #python
2020-05-23 01:39:42	-->	Ublx (~Alex@2a02:810c:280:59c:f1f2:ea6a:941e:3365) has joined #python
2020-05-23 01:40:18	nedbat	lembron: any(d['name'] == 'xyz' for d in that_list)
2020-05-23 01:40:19	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Read error: Connection reset by peer)
2020-05-23 01:40:22	eukreign	yes, for example, this code has to run on Android and there PPE does not work, so we drop back to TPE, but on desktop we can use PPE
2020-05-23 01:40:32	<--	Gerula (~Gerula@unaffiliated/gerula) has quit (Quit: Leaving)
2020-05-23 01:40:44	-->	jadesoturi (~jadesotur@unaffiliated/kfj) has joined #python
2020-05-23 01:40:48	lembron	that looks neat, thanks nedbat
2020-05-23 01:40:58	<--	XsiSec (~xsisec@h-37-123-162-226.NA.cust.bahnhof.se) has quit (Remote host closed the connection)
2020-05-23 01:41:02	Skeer	So last assignment of teh week: https://bpa.st/4ATA  The result from this is 1 email address with it's associated count. Whats weird is that it prints on two lines. How can I get bigword and bigcount to print both on the same line?
2020-05-23 01:41:04	grym	i always forget that any and all don't take key functions
2020-05-23 01:41:21	<--	MrTrick (uid181961@gateway/web/irccloud.com/x-jexytamfuulpnmjt) has quit (Quit: Connection closed for inactivity)
2020-05-23 01:42:08	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 01:42:14	-->	velix (~velix@unaffiliated/velix) has joined #python
2020-05-23 01:42:15	ChrisWarrick	(and they return True or False)
2020-05-23 01:42:34	-->	edlinde (~edlinde@183.83.146.78) has joined #python
2020-05-23 01:42:45	velix	Does anyone know `pipx`? If yes, is it possible to join the venv using pipx directly?
2020-05-23 01:42:48	<--	gandalfdwite (~gandalfdw@49.205.220.210) has quit (Ping timeout: 265 seconds)
2020-05-23 01:43:03	-->	Xiti (~Xiti-@unaffiliated/xiti) has joined #python
2020-05-23 01:43:04	<--	cry0_ (~cry0@2607:fea8:8520:4a01:906e:599c:4244:6f2b) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2020-05-23 01:43:26	<--	theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) has quit (Quit: Leaving)
2020-05-23 01:43:36	grym	velix: sure, you can reach inside pipx created venvs
2020-05-23 01:43:56	grym	velix: what do you want to do
2020-05-23 01:43:57	velix	grym: Yeah, but I mean using a pipx command or only via venv ?
2020-05-23 01:44:15	grym	velix: i'm confused.  what are you wanting?
2020-05-23 01:44:26	-->	quod (~textual@047-013-133-209.res.spectrum.com) has joined #python
2020-05-23 01:44:32	velix	grym: I want to visit the environment and start its python interpreter for debugging.
2020-05-23 01:44:36	<--	christoph_ (~christoph@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has quit (Ping timeout: 256 seconds)
2020-05-23 01:44:40	velix	normally, I'm just doing activate ;)
2020-05-23 01:45:01	velix	Which also works  right now, of course. But I thought, there's a switch to do this directly in pipx.
2020-05-23 01:45:02	<--	contained (contained@gateway/vpn/privateinternetaccess/contained) has quit (Quit: like a fart in the wind)
2020-05-23 01:45:13	<--	Miggy` (sid422602@gateway/web/irccloud.com/x-sffurnqvecqxwmdj) has quit (Excess Flood)
2020-05-23 01:45:31	grym	velix: ~/.local/pipx/venvs/<somevenv>/bin/python
2020-05-23 01:46:01	velix	Yeah, but that's the "normal" venv approach. I thought, there's something like "pipx enter <venv name>" :)
2020-05-23 01:46:08	velix	Maybe I should request this feature?
2020-05-23 01:47:09	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 01:47:43	-->	nomic (~nomic@host86-180-10-84.range86-180.btcentralplus.com) has joined #python
2020-05-23 01:47:51	grym	velix: there's now pipx runpip
2020-05-23 01:48:08	velix	Yeah, but this runs pip ;)
2020-05-23 01:48:19	-->	theorangeone (~quassel@host81-143-201-103.in-addr.btopenworld.com) has joined #python
2020-05-23 01:48:32	velix	"pipx run pip" or "pip run python" might be better
2020-05-23 01:48:34	grym	afaik there's no "jump into an interpreter for" command, but you can certainly propose it
2020-05-23 01:48:48	grym	it's not really what pipx is designed for, but ..
2020-05-23 01:48:57	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 01:49:09	velix	I know, but - let me face it - a docker like behaviour :)
2020-05-23 01:49:12	<--	AbedB_ (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2020-05-23 01:49:12	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 272 seconds)
2020-05-23 01:51:18	<--	gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has quit (Read error: Connection reset by peer)
2020-05-23 01:51:29	velix	grym: For example, I need to build a package in an pipx environment. So I need to set in there to not mess with the host.
2020-05-23 01:51:36	velix	grym: https://github.com/mapnik/python-mapnik
2020-05-23 01:52:11	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 01:52:33	-->	gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has joined #python
2020-05-23 01:52:35	<--	lucad111 (~lucad111@linaro/lucad111) has quit (Quit: Leaving)
2020-05-23 01:52:43	<--	Ublx (~Alex@2a02:810c:280:59c:f1f2:ea6a:941e:3365) has quit (Quit: WeeChat 2.8)
2020-05-23 01:52:49	-->	PolitePenguin (~textual@c-67-187-173-26.hsd1.ca.comcast.net) has joined #python
2020-05-23 01:53:25	-->	__stranac__ (~stranac@93-141-143-133.adsl.net.t-com.hr) has joined #python
2020-05-23 01:53:34	<--	burningserenity (~burningse@050-088-149-178.res.spectrum.com) has quit (Remote host closed the connection)
2020-05-23 01:53:36	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 260 seconds)
2020-05-23 01:54:48	<--	aasutosh (~aa@27.34.68.84) has quit (Ping timeout: 256 seconds)
2020-05-23 01:55:06	-->	thoros (~thoros@192-164-128-162.hdsl.highway.telekom.at) has joined #python
2020-05-23 01:55:16	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 01:56:18	-->	HAL9000^ (sid422602@gateway/web/irccloud.com/x-hjbjirqxjwewhupe) has joined #python
2020-05-23 01:56:36	<--	bdonnahue1 (~bdonnahue@207.181.203.71) has quit (Remote host closed the connection)
2020-05-23 01:56:49	-->	Lucas_Gray (~Wryhder@197.210.227.204) has joined #python
2020-05-23 01:56:59	-->	bdonnahue1 (~bdonnahue@207.181.203.71) has joined #python
2020-05-23 01:57:07	grym	velix: you mean you have a pipx-installed cli tool in which you wish to install that package?
2020-05-23 01:57:22	-->	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has joined #python
2020-05-23 01:57:39	velix	grym: Yeah, but I need to build them manually, since they're not packaged in pip
2020-05-23 01:57:40	<--	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has quit (Client Quit)
2020-05-23 01:57:44	CoolerZ	is this silly? https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L21-L22
2020-05-23 01:57:48	<--	canarts (~stranac@m90-137-139-43.cust.tele2.hr) has quit (Ping timeout: 272 seconds)
2020-05-23 01:57:56	grym	velix: ew.  maybe just packge them
2020-05-23 01:58:06	velix	grym: I'm a user only, no dev :(
2020-05-23 01:58:06	CoolerZ	they override a method in the base class with the exact same code
2020-05-23 01:58:15	grym	CoolerZ: yes
2020-05-23 01:58:24	velix	grym: But it seems like pipx isn't the right solution for me then.
2020-05-23 01:58:25	grym	velix: what better place than here? what better time than now
2020-05-23 01:58:38	-->	hyper_dave (~hyper_dav@196.188.242.167) has joined #python
2020-05-23 01:59:21	-->	boB_K7IQ (~boB_K7IQ@c-73-42-129-198.hsd1.wa.comcast.net) has joined #python
2020-05-23 01:59:53	grym	CoolerZ: getters like that are silly in python anyway
2020-05-23 01:59:55	<--	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has quit (Ping timeout: 258 seconds)
2020-05-23 02:01:35	<--	NccT (~NccT@unaffiliated/ncct) has quit (Ping timeout: 264 seconds)
2020-05-23 02:02:10	<--	jadesoturi (~jadesotur@unaffiliated/kfj) has quit (Ping timeout: 256 seconds)
2020-05-23 02:02:52	<--	marcello (~petem87@46.59.174.110) has quit (Ping timeout: 272 seconds)
2020-05-23 02:02:55	Dev0n	would you put your "tests" folder outside or inside the "/app" folder? (in the context of a FastAPI project)
2020-05-23 02:03:15	Dev0n	so the "app" folder is basically all the source code
2020-05-23 02:04:07	-->	Tanvir (~tanvir@wikimedia/wikitanvir) has joined #python
2020-05-23 02:04:40	-->	Vornicus (~Vornicus@2605:e000:1218:255d:145d:e50:73e9:7c0e) has joined #python
2020-05-23 02:04:43	<--	platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) has quit (Ping timeout: 240 seconds)
2020-05-23 02:05:16	-->	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has joined #python
2020-05-23 02:05:28	-->	DeaDSouL (~DeaDSouL@194.99.104.130) has joined #python
2020-05-23 02:05:37	-->	adamholmberg (~adamholmb@69.80.114.2) has joined #python
2020-05-23 02:06:03	<--	st8less (~st8less@inet-167-224-197-181.isp.ozarksgo.net) has quit (Quit: WeeChat 2.7.1)
2020-05-23 02:06:13	lembron	hm and another dum Q. i have code that generates other code, in the first one "file.write("obj = "+str(genobj))" - i want to pretty-print that json, but json.dumps isnt pythong anymore, is there any other equiv. to say phps var_export? (currently this generates "obj = {'bla':True,'mo':'mi'}" - dumps turns this into "obj = {"bla":true, "mo":"mi"}" and py blows onthe "true vs True"
2020-05-23 02:06:45	_habnabit	lembron, you parse json with json.loads
2020-05-23 02:07:02	_habnabit	lembron, you're trying to generate python code?
2020-05-23 02:07:17	lembron	yes -> i have code that generates other code
2020-05-23 02:07:31	_habnabit	lembron, perhaps you want repr() then
2020-05-23 02:07:51	<--	edlinde (~edlinde@183.83.146.78) has quit (Ping timeout: 256 seconds)
2020-05-23 02:07:53	lembron	can i just sling a json.loads() with some kinda of HEREDoc or so?
2020-05-23 02:08:02	_habnabit	lembron, i suppose you could
2020-05-23 02:08:17	_habnabit	lembron, or pprint.pformat if you want it pretty-printed i guess
2020-05-23 02:09:54	-->	edlinde (~edlinde@203.191.56.226) has joined #python
2020-05-23 02:10:11	<--	karab44 (~karab44@unaffiliated/karab44) has quit
2020-05-23 02:10:21	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 265 seconds)
2020-05-23 02:10:28	-->	kpiyushlucky (6ee14286@110.225.66.134) has joined #python
2020-05-23 02:10:52	kpiyushlucky	How can I get the non-duplicate elements from a list?
2020-05-23 02:10:53	<--	joocain2 (~joocain2@gateway/tor-sasl/joocain2) has quit (Ping timeout: 240 seconds)
2020-05-23 02:10:59	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 02:11:07	SnoopJeDi	Does someone have a link to the right documentation for install_requires that includes ^x.y notation?
2020-05-23 02:11:29	-->	djapo (~archie@unaffiliated/djapo) has joined #python
2020-05-23 02:11:35	ChrisWarrick	is this even supported in Python?
2020-05-23 02:11:38	_habnabit	kpiyushlucky, use a set instead of a list
2020-05-23 02:11:51	-->	waldo323__ (~waldo323@d149-67-45-83.clv.wideopenwest.com) has joined #python
2020-05-23 02:12:12	kpiyushlucky	that would give me unique elements i need the non-duplicate ones.
2020-05-23 02:12:22	-->	P1ro (~quassel@gentoo/user/p1ro) has joined #python
2020-05-23 02:12:32	SnoopJeDi	ChrisWarrick, hmm, is it poetry only? That would explain my confusion
2020-05-23 02:12:35	_habnabit	kpiyushlucky, collections.Counter then
2020-05-23 02:12:57	SnoopJeDi	Not that it's any less mysterious to find the right documentation when I need it, so, same question minus the caret
2020-05-23 02:12:59	-->	joocain2 (~joocain2@gateway/tor-sasl/joocain2) has joined #python
2020-05-23 02:13:02	kpiyushlucky	we should be able to do this with sets, no?
2020-05-23 02:13:27	_habnabit	kpiyushlucky, it would be more complicated with sets alone
2020-05-23 02:13:35	SnoopJeDi	https://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-dependencies seems to be the most complete thing, but ugh, there's so many sources of information
2020-05-23 02:13:40	-->	gil1701 (~Thunderbi@148.103.118.4) has joined #python
2020-05-23 02:13:50	<--	Sylhouette (~johan@85-147-130-226.cable.dynamic.v4.ziggo.nl) has quit (Remote host closed the connection)
2020-05-23 02:13:54	kpiyushlucky	can you please show
2020-05-23 02:14:11	lembron	pprint looks neat.. but im to dum to use that i think...
2020-05-23 02:14:13	kpiyushlucky	just want to see how it would work with sets
2020-05-23 02:14:13	<--	panikovsky (~panikovsk@84.51.218.158) has quit (Quit: Leaving)
2020-05-23 02:14:13	<--	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has quit (Quit: Out.)
2020-05-23 02:14:13	<--	xcombelle (~c2c@abayonne-652-1-593-233.w90-38.abo.wanadoo.fr) has quit (Ping timeout: 265 seconds)
2020-05-23 02:14:26	SnoopJeDi	lembron, pprint.pprint() works exactly like print()
2020-05-23 02:14:47	SnoopJeDi	The rest is there if you want to customize how it prettifies things
2020-05-23 02:14:54	<--	waldo323_ (~waldo323@12.239.4.120) has quit (Ping timeout: 272 seconds)
2020-05-23 02:15:04	_habnabit	kpiyushlucky, it'd be complicated enough that i'd use Counter instead always
2020-05-23 02:15:26	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 02:15:30	-->	Conjecture_ (~Conjectur@mobile-166-175-62-176.mycingular.net) has joined #python
2020-05-23 02:15:33	kpiyushlucky	oh, okay.
2020-05-23 02:15:57	SnoopJeDi	Oh right, PEP440 is I think the thing I'm thinking of.
2020-05-23 02:16:02	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 258 seconds)
2020-05-23 02:16:23	<--	bdonnahue1 (~bdonnahue@207.181.203.71) has quit (Read error: Connection reset by peer)
2020-05-23 02:16:44	-->	perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has joined #python
2020-05-23 02:16:59	<--	csevast (~csevast@79.103.51.222.dsl.dyn.forthnet.gr) has quit (Quit: IRC for eric6 IDE)
2020-05-23 02:17:15	-->	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has joined #python
2020-05-23 02:17:22	-->	csevast (~csevast@79.103.51.222.dsl.dyn.forthnet.gr) has joined #python
2020-05-23 02:17:41	lembron	think i got it... ty =)
2020-05-23 02:17:41	-->	knited (~knited@unaffiliated/knited) has joined #python
2020-05-23 02:17:56	<--	Conjecture (~Conjectur@mobile-166-175-62-176.mycingular.net) has quit (Ping timeout: 258 seconds)
2020-05-23 02:18:03	-->	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2020-05-23 02:18:11	<--	Hanii (~Hanii@2a00:23c5:c587:6d00:597b:a742:505e:ead1) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-05-23 02:19:16	<--	Ergo (~ergo@91.238.59.144) has quit (Remote host closed the connection)
2020-05-23 02:19:34	<--	suuuper (~suuuper@37.179.119.14) has quit
2020-05-23 02:19:45	kpiyushlucky	although this was asked in sets section so i think it shouldn't go that hard, note is they have defined additional property of this list: there is exactly one number which is non-repeated, we need to find that.
2020-05-23 02:20:43	<--	lunaa (lunaa@156.223.253.190) has quit (Ping timeout: 240 seconds)
2020-05-23 02:20:45	-->	skinnym (~skinnym@2601:8c0:4300:4e90:7162:62ab:8a74:9cbb) has joined #python
2020-05-23 02:20:49	<--	D4mned (d465e040@212.101.224.64) has quit (Remote host closed the connection)
2020-05-23 02:20:50	<--	PolitePenguin (~textual@c-67-187-173-26.hsd1.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 02:21:10	<--	Conjecture_ (~Conjectur@mobile-166-175-62-176.mycingular.net) has quit (Read error: Connection reset by peer)
2020-05-23 02:21:24	-->	Silmarilion (~Silmarili@87.116.183.249) has joined #python
2020-05-23 02:22:00	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 02:22:03	-->	bdonnahue1 (~bdonnahue@207.181.203.71) has joined #python
2020-05-23 02:22:10	-->	purplex88 (75cd302f@gateway/web/cgi-irc/kiwiirc.com/ip.117.205.48.47) has joined #python
2020-05-23 02:22:14	-->	Conjecture (~Conjectur@mobile-166-175-62-176.mycingular.net) has joined #python
2020-05-23 02:22:33	<--	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 240 seconds)
2020-05-23 02:22:33	<--	BestSteve (~weechat@gateway/tor-sasl/beststeve) has quit (Ping timeout: 240 seconds)
2020-05-23 02:25:09	-->	stinkpot (~none@ip174-66-146-188.sd.sd.cox.net) has joined #python
2020-05-23 02:25:18	CoolerZ	grym, have you used BLEU score?
2020-05-23 02:25:35	purplex88	after killing process i.e. with os.system("sudo pkill -9 pname") i want to know it what it said when it was killed, e.g. it says "killed" , can i get this message?
2020-05-23 02:25:47	artistsvoid	can someone recommend a good free site to paste python code to and where one is able to run it also? (like get the output of the python script on the website)?
2020-05-23 02:25:48	-->	XenGi (~quassel@c-base/crew/XeN) has joined #python
2020-05-23 02:26:03	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 02:26:23	Habbie	artistsvoid, repl.it
2020-05-23 02:26:42	ChrisWarrick	purplex88: pkill doesn’t say that, the process/shell might
2020-05-23 02:26:49	<--	Aattas (~Aattas@176.25.249.219) has quit (Quit: Aattas)
2020-05-23 02:26:57	purplex88	yes i want that shell message
2020-05-23 02:27:03	ChrisWarrick	purplex88: you can’t access it
2020-05-23 02:27:30	ChrisWarrick	purplex88: also, use psutil, or subprocess if you must, never os.system
2020-05-23 02:27:34	<--	Sheilong (uid293653@gateway/web/irccloud.com/x-tbcpzfwjuiulylhy) has quit (Quit: Connection closed for inactivity)
2020-05-23 02:27:44	Habbie	purplex88, why do you want the message?
2020-05-23 02:27:51	artistsvoid	Habbie: k, I bookmarked the link and will consider trying it in the future
2020-05-23 02:28:00	artistsvoid	Habbie: right now it's not worth making an account for it, but thanks
2020-05-23 02:28:18	-->	Sylhouette (~johan@85-147-130-226.cable.dynamic.v4.ziggo.nl) has joined #python
2020-05-23 02:28:21	Habbie	artistsvoid, it does not require you to make an account
2020-05-23 02:28:35	purplex88	ChrisWarrick: subprocess can give that message?
2020-05-23 02:28:44	Habbie	artistsvoid, i don't have an account and i made this for you https://repl.it/repls/LuckyDifferentScientist
2020-05-23 02:29:04	purplex88	Habbie: i want to see what happened, just curious
2020-05-23 02:29:15	-->	zoko (~zoko@149.red-81-45-129.staticip.rima-tde.net) has joined #python
2020-05-23 02:29:22	CodePoint	when I close my python application it keeps running...
2020-05-23 02:29:26	CodePoint	-- sigh --
2020-05-23 02:29:37	artistsvoid	Habbie: awesome thanks, yep already got my code going
2020-05-23 02:29:41	Habbie	artistsvoid, cool
2020-05-23 02:29:43	artistsvoid	Habbie: superb, exactly what I was looking for
2020-05-23 02:29:47	CodePoint	... even in commandline mode.
2020-05-23 02:30:06	Habbie	artistsvoid, i know there's a couple of other sites like it but this one seems most popular in here and other channels
2020-05-23 02:30:36	artistsvoid	Habbie: :) thanks
2020-05-23 02:30:41	Habbie	np :)
2020-05-23 02:32:04	<--	quod (~textual@047-013-133-209.res.spectrum.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 02:32:17	-->	snails (~snails@pool-96-248-97-17.cmdnnj.fios.verizon.net) has joined #python
2020-05-23 02:33:17	artistsvoid	Habbie: https://repl.it/repls/DarkmagentaUnkemptSolaris tells you something about my level of expertise
2020-05-23 02:33:22	artistsvoid	Habbie: but we all have to start somewhere :)
2020-05-23 02:33:44	-->	quod (~textual@047-013-133-209.res.spectrum.com) has joined #python
2020-05-23 02:34:18	Habbie	artistsvoid, playing around is good :)
2020-05-23 02:34:20	<--	sublade (~anonymous@31.132.35.96) has quit (Ping timeout: 260 seconds)
2020-05-23 02:34:51	artistsvoid	Habbie: playing around? I will sell this script for a million dollars
2020-05-23 02:34:54	artistsvoid	Habbie: serioues business here
2020-05-23 02:35:00	-->	Rudolf (~rodolfo@unaffiliated/rudolf) has joined #python
2020-05-23 02:35:05	Habbie	:)
2020-05-23 02:35:29	<--	Proklantis (~Proklanti@unaffiliated/proklantis) has quit (Ping timeout: 265 seconds)
2020-05-23 02:36:18	-->	naitsabe1 (~naitsabes@unaffiliated/naitsabes) has joined #python
2020-05-23 02:36:53	<--	RangerBob (~brian@pool-173-72-244-228.clppva.fios.verizon.net) has quit (Quit: Leaving)
2020-05-23 02:37:02	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 244 seconds)
2020-05-23 02:37:16	<--	d3sync|3 (~d3sync@unaffiliated/d3sync) has quit (Read error: Connection reset by peer)
2020-05-23 02:37:17	<--	kype (uid176843@gateway/web/irccloud.com/x-umdnewjbntmayvjx) has quit (Quit: Connection closed for inactivity)
2020-05-23 02:37:30	<--	XenGi (~quassel@c-base/crew/XeN) has quit (Quit: KTHXBYE!)
2020-05-23 02:38:24	<--	edlinde (~edlinde@203.191.56.226) has quit (Ping timeout: 260 seconds)
2020-05-23 02:38:44	-->	d3sync (~d3sync@unaffiliated/d3sync) has joined #python
2020-05-23 02:39:09	f8e4	ChrisWarrick thank you yes.
2020-05-23 02:39:11	<--	led_dark_1 (~Thunderbi@217.66.160.14) has quit (Remote host closed the connection)
2020-05-23 02:39:21	-->	sublade (~anonymous@31.132.35.96) has joined #python
2020-05-23 02:39:28	-->	led_dark_1 (~Thunderbi@217.66.160.14) has joined #python
2020-05-23 02:39:59	f8e4	how do i bind X directly to the module name? X=3, import app.x -> use app.x +3 = 6 ?
2020-05-23 02:40:20	nedbat	f8e4: i don't understand the question
2020-05-23 02:41:13	Tefad	he wants X at the module level
2020-05-23 02:41:16	f8e4	obj defined in module should be acccessable after import directly
2020-05-23 02:41:24	bjs	f8e4: isn't that how imports work already?
2020-05-23 02:41:37	bjs	f8e4: `import foo` then if foo.py did `bar =12` you can do `foo.bar` directly
2020-05-23 02:41:43	vlt	f8e4: Should work exactly like that.
2020-05-23 02:41:52	-->	wildtrees (wildtrees@gateway/vpn/protonvpn/wildtrees) has joined #python
2020-05-23 02:41:57	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 02:42:08	<--	Leonarbro (~Leonarbro@S01067824af93741c.cg.shawcable.net) has quit (Ping timeout: 260 seconds)
2020-05-23 02:42:45	CodePoint	if I had as many threads as are in the software I'm currently working on, I could sew a shirt.
2020-05-23 02:42:55	<--	EmreKasgur (3ef84bad@62.248.75.173) has quit (Remote host closed the connection)
2020-05-23 02:43:12	<--	bilb_ono (~alexmarsh@ip70-185-130-174.sb.sd.cox.net) has quit (Quit: bilb_ono)
2020-05-23 02:43:35	<--	quod (~textual@047-013-133-209.res.spectrum.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 02:43:39	_habnabit	Tefad, 'he'? ;)
2020-05-23 02:44:00	nedbat	f8e4: can you tell us more about why you want importing a module to make the module name be a different value instead?
2020-05-23 02:44:14	<--	johefernan (~ck3t@unaffiliated/johefernan) has quit (Remote host closed the connection)
2020-05-23 02:44:29	CoolerZ	hmm is this weird? https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L73
2020-05-23 02:44:57	CoolerZ	it's making a number of threads based on cpu core count?
2020-05-23 02:45:11	bjs	CoolerZ: those aren't threads
2020-05-23 02:45:25	CoolerZ	a thread pool
2020-05-23 02:45:31	CoolerZ	process pool?
2020-05-23 02:45:34	-->	zebrag (~inkbottle@aaubervilliers-654-1-104-58.w86-212.abo.wanadoo.fr) has joined #python
2020-05-23 02:45:38	[Tritium]	CodePoint: ....teeshirts are usually single-threaded (at least the main trunk of them - if there is no seam down the side, it was knit with a single thread.
2020-05-23 02:45:41	bjs	CoolerZ: it seems to be coming from multiprocessing which implies it's a process pool
2020-05-23 02:45:51	Tefad	"he" in the gender neutral internet sense.
2020-05-23 02:45:57	<--	inkbottle (~inkbottle@aaubervilliers-654-1-220-94.w90-61.abo.wanadoo.fr) has quit (Ping timeout: 256 seconds)
2020-05-23 02:46:01	CoolerZ	but why is it dependent on the core count?
2020-05-23 02:46:12	_habnabit	Tefad, 'he' isn't gender-neutral.. 'they' is tho
2020-05-23 02:46:17	CoolerZ	is it the virtual cpu count? with hyperthreading?
2020-05-23 02:46:18	-->	edlinde (~edlinde@183.83.146.78) has joined #python
2020-05-23 02:46:18	<--	tm (~sinnlos@unaffiliated/tm) has quit (Ping timeout: 258 seconds)
2020-05-23 02:46:26	CoolerZ	so dual core would appear as 4 cores
2020-05-23 02:46:29	Tefad	yes but they is confusing as it is often interpreted as plural out of context
2020-05-23 02:46:32	bjs	CoolerZ: because if the processes are doing lots of CPU work then there's no point having (much) more than the number of CPUs
2020-05-23 02:46:47	Tefad	i assume 'he' until told otherwise
2020-05-23 02:46:47	_habnabit	Tefad, nah, not confusing. singular they is very common
2020-05-23 02:46:48	[Tritium]	just use names, pronouns are a lost cause
2020-05-23 02:46:52	CoolerZ	bjs, why not allocate a fixed number?
2020-05-23 02:47:01	bjs	CoolerZ: because you might not know how many CPUs there are ...
2020-05-23 02:47:03	_habnabit	Tefad, assuming 'he' is quite rude
2020-05-23 02:47:04	<--	Tefad (~tefad@unaffiliated/tefad) has left #python ("jesus christ you guys. choose your battles.")
2020-05-23 02:47:06	CoolerZ	bjs, who cares
2020-05-23 02:47:27	CoolerZ	bjs, even if there are 4 cores and you make 4 processes that doesn't mean each process will run on a different core
2020-05-23 02:47:27	bjs	CoolerZ: a machine with 8 CPUs can run twice as many processes at once as a machine with 4 CPUs
2020-05-23 02:47:36	<--	Lucas_Gray (~Wryhder@197.210.227.204) has quit (Read error: Connection reset by peer)
2020-05-23 02:47:42	<--	elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) has quit (Quit: A random quit message)
2020-05-23 02:48:11	bjs	CoolerZ: right some might be waiting/sleeping,  but those switch to ones that are executing
2020-05-23 02:48:21	-->	elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) has joined #python
2020-05-23 02:48:25	-->	yrungr (~yrungr@178.62.65.106) has joined #python
2020-05-23 02:48:38	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 256 seconds)
2020-05-23 02:48:40	bjs	CoolerZ: but if there was lots of waiting, then you'd want to use threads.  Processes have a high overhead so doing it for IO-bound stuff is generally not the usual use-case
2020-05-23 02:48:45	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined #python
2020-05-23 02:48:47	<--	SpinTronix (~SpinTroni@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has quit (Ping timeout: 256 seconds)
2020-05-23 02:49:14	-->	Lucas_Gray (~Wryhder@197.210.227.135) has joined #python
2020-05-23 02:49:30	CoolerZ	bjs, this doesn't say much https://docs.python.org/3/library/os.html#os.cpu_count
2020-05-23 02:49:35	<--	zoko (~zoko@149.red-81-45-129.staticip.rima-tde.net) has quit (Quit: Leaving)
2020-05-23 02:49:44	f8e4	mmh, i dunno, bjs is right i think
2020-05-23 02:49:48	bjs	CoolerZ: what did you want it to tell you?
2020-05-23 02:50:11	<--	edlinde (~edlinde@183.83.146.78) has quit (Client Quit)
2020-05-23 02:50:13	CoolerZ	does it take into account hyperthreading?
2020-05-23 02:50:18	<--	theorangeone (~quassel@host81-143-201-103.in-addr.btopenworld.com) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2020-05-23 02:50:22	-->	truthr (~truthr@unaffiliated/truthr) has joined #python
2020-05-23 02:50:23	CoolerZ	for a dual core will it report 4?
2020-05-23 02:50:35	bjs	CoolerZ: I'd guess yes
2020-05-23 02:50:43	<--	wogi (~wogi@2a02:8108:4740:3420:159d:e5ca:bbd2:ef1b) has quit (Read error: Connection reset by peer)
2020-05-23 02:51:00	<--	Trieste (~T@unaffiliated/trieste) has quit (Ping timeout: 260 seconds)
2020-05-23 02:51:22	-->	aslicedbanjo (~aslicedba@host86-160-16-10.range86-160.btcentralplus.com) has joined #python
2020-05-23 02:51:24	CoolerZ	I don't even get how this works https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L73-L85
2020-05-23 02:51:30	-->	SpinTronix (~SpinTroni@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has joined #python
2020-05-23 02:51:31	-->	DravenX (48c8c057@ip72-200-192-87.ok.ok.cox.net) has joined #python
2020-05-23 02:51:47	-->	ThePortWhisperer (~ThePortWh@unaffiliated/theportwhisperer) has joined #python
2020-05-23 02:51:57	[Tritium]	os.cpu_count() is misnamed - it should be thread count
2020-05-23 02:52:01	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 02:52:01	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 02:52:13	[Tritium]	my SMT enabled 6 core reports as 12
2020-05-23 02:52:22	djapo	is it ok to use camel case to name python modules?
2020-05-23 02:52:34	nedbat	djapo: it will look odd
2020-05-23 02:52:45	CoolerZ	that's some funky multi processing https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L78
2020-05-23 02:52:50	[Tritium]	i mean, its called cpu_count, i have 1 cpu, with 3 dies, 6 cores and 12 threads
2020-05-23 02:52:59	-->	Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) has joined #python
2020-05-23 02:53:32	<--	TomDotTom (~TomDotTom@c-73-141-225-227.hsd1.de.comcast.net) has quit (Ping timeout: 272 seconds)
2020-05-23 02:53:43	-->	Trieste (~T@unaffiliated/trieste) has joined #python
2020-05-23 02:54:21	-->	GDiaX (~GDiaX@bl21-3-251.dsl.telepac.pt) has joined #python
2020-05-23 02:54:22	<--	DravenX (48c8c057@ip72-200-192-87.ok.ok.cox.net) has quit (Remote host closed the connection)
2020-05-23 02:54:59	-->	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has joined #python
2020-05-23 02:55:01	<--	drymer (~drymer@unaffiliated/drymer) has quit (Read error: Connection reset by peer)
2020-05-23 02:55:23	-->	DravenX (~textual@ip72-200-192-87.ok.ok.cox.net) has joined #python
2020-05-23 02:56:00	-->	drymer (~drymer@unaffiliated/drymer) has joined #python
2020-05-23 02:56:01	<--	gambl0re (~rickyjw@unaffiliated/gambl0re) has quit (Ping timeout: 260 seconds)
2020-05-23 02:56:09	<--	SpinTronix (~SpinTroni@HSI-KBW-078-043-004-207.hsi4.kabel-badenwuerttemberg.de) has quit (Ping timeout: 256 seconds)
2020-05-23 02:56:11	-->	borisrunak (~pkarpesis@217.146.90.34.bc.googleusercontent.com) has joined #python
2020-05-23 02:56:11	borisrunak	hello ! Trying to fetch data for my music library and have this code https://paste.ubuntu.com/p/JqHWJ3Fhc8/ . What would be a way to rewrite it more efficiently ?
2020-05-23 02:56:13	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 02:56:23	djapo	nedbat: should i instead use underscores?
2020-05-23 02:56:42	<--	Lucas_Gray (~Wryhder@197.210.227.135) has quit (Read error: Connection reset by peer)
2020-05-23 02:56:42	-->	quod (~textual@047-013-133-209.res.spectrum.com) has joined #python
2020-05-23 02:56:50	nedbat	djapo: yes
2020-05-23 02:57:06	<--	eck0 (uid375984@gateway/web/irccloud.com/x-yarouahympqxcilf) has quit (Quit: Connection closed for inactivity)
2020-05-23 02:57:19	_habnabit	borisrunak, i'm not actually sure what your intent is there
2020-05-23 02:57:19	[Tritium]	CoolerZ: what's confusing about it?
2020-05-23 02:57:26	CoolerZ	[Tritium], everything
2020-05-23 02:57:29	<--	thorre (~thorre@90-230-32-217-no78.tbcn.telia.com) has quit (Quit: thorre)
2020-05-23 02:57:50	-->	thorre (~thorre@90-230-32-217-no78.tbcn.telia.com) has joined #python
2020-05-23 02:57:53	_habnabit	borisrunak, maybe you want to do something like `missing = not artist or not song or not release`
2020-05-23 02:58:14	gsnedders	[Tritium]: it's the number of "logical CPUs", given OSes at a basic level see SMT-enabled CPUs are multiple CPUs
2020-05-23 02:58:19	[Tritium]	CoolerZ: ...first the big bang happened, and the universe came into being.  300k years later, the universe started to cool....  i mean.... we can skip this part if you can narrow down to the confusing part
2020-05-23 02:58:59	<--	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has quit (Quit: Connection closed)
2020-05-23 02:59:10	CoolerZ	[Tritium], list.append is a normal blocking call on the main thread
2020-05-23 02:59:13	ChrisWarrick	[Tritium]: it should be what_or*cle_will_multiply_the_license_price_by, obviously
2020-05-23 02:59:21	borisrunak	_habnabit: my intent is to get metadata for whatever I can . If I get artist and songtitle then get get metadata for songtitle, elif ... get for the release else get for artist etc.
2020-05-23 02:59:26	[Tritium]	gsnedders:but do they really?  the schedulers do, but the OSes themselves are SMT and SMP aware and function differently ... windows certainly does, if just to do a license check.
2020-05-23 02:59:56	<--	kpiyushlucky (6ee14286@110.225.66.134) has quit (Remote host closed the connection)
2020-05-23 03:00:03	[Tritium]	CoolerZ: that is adding a proxy object - i hesitate to call it a future, because it isnt...
2020-05-23 03:00:14	CoolerZ	[Tritium], how is it processing in parallel when the outer call is a normal synchronous call?
2020-05-23 03:00:16	-->	d7x (~os@unaffiliated/d7x) has joined #python
2020-05-23 03:00:20	gsnedders	[Tritium]: the schedulers are aware, but at the lowest level in legacy compatible ways, they each appear as a different CPU
2020-05-23 03:00:30	CoolerZ	[Tritium], oh proxy objects
2020-05-23 03:00:37	CoolerZ	like a Promise
2020-05-23 03:01:05	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-05-23 03:01:14	[Tritium]	multiprocessing docs just call it a result object, but its similar to a promise or future
2020-05-23 03:01:16	CoolerZ	[Tritium], and how does that work?
2020-05-23 03:01:24	CoolerZ	is it transparent to the user?
2020-05-23 03:01:26	_habnabit	borisrunak, why is it so complicated instead of e.g. `if release: get_release()` ?
2020-05-23 03:01:26	gsnedders	[Tritium]: like, you enumerate the CPUs and get that many logical CPUs, and then you try to figure out which are physical CPUs and any non-uniform CPU/memory structure
2020-05-23 03:01:36	borisrunak	i have somewhere read about doing multiplication with 111 for three conditions but I really can't remember where , or how exactly this was implemented... was very clever and nice though 🙂 However I am not looking for that specific approach but something better than I have
2020-05-23 03:01:42	<--	quod (~textual@047-013-133-209.res.spectrum.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-05-23 03:02:01	CoolerZ	[Tritium], that's weird https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L82
2020-05-23 03:02:08	<--	mickeelm (~micke@ec2-18-185-150-20.eu-central-1.compute.amazonaws.com) has quit (Quit: Lost terminal)
2020-05-23 03:02:13	[Tritium]	CoolerZ: of course its not transparent to the user, you are using a multiprocessing api....
2020-05-23 03:02:14	CoolerZ	proxy.get() is how you get the result?
2020-05-23 03:02:24	CoolerZ	but then you are blocking again
2020-05-23 03:02:31	-->	csevast_ (~csevast@79.103.51.222.dsl.dyn.forthnet.gr) has joined #python
2020-05-23 03:02:33	<--	alexandre42 (~Alexandre@2a01cb000b2095018dde9e91e3449615.ipv6.abo.wanadoo.fr) has quit (Ping timeout: 246 seconds)
2020-05-23 03:02:39	[Tritium]	CoolerZ: the work is done at that point
2020-05-23 03:02:43	CoolerZ	well I guess the other proxy objects can finish in the mean time
2020-05-23 03:03:00	<--	DeaDSouL (~DeaDSouL@194.99.104.130) has quit (Quit: Changing server)
2020-05-23 03:03:18	CoolerZ	[Tritium], well that code is kinda hoping that the proxy objects finish their work in the order they were started
2020-05-23 03:03:39	CoolerZ	if you have a list of proxy objects [p1, p2, p3, ..., pn]
2020-05-23 03:03:46	[Tritium]	CoolerZ: add is transitive
2020-05-23 03:04:14	CoolerZ	if p2 doesn't finish until all the others finish then that code ends up waiting for everything
2020-05-23 03:04:22	CoolerZ	[Tritium], ok?
2020-05-23 03:04:25	borisrunak	_habnabit: what I am really looking here is songtitle meta data . If I don't find for the song , then look for release (if I have the name) and if neither is found then look for the artist metadata . But you re definitely right I could simplify the conditions, let me try
2020-05-23 03:04:27	-->	Brainium (~brainium@unaffiliated/brainium) has joined #python
2020-05-23 03:04:37	-->	fRit_^ (~fRit_^@gateway/tor-sasl/frit/x-29331989) has joined #python
2020-05-23 03:04:38	<--	Python_2020 (uid84198@gateway/web/irccloud.com/x-hnafjceaurmsvhwa) has quit (Quit: Connection closed for inactivity)
2020-05-23 03:04:39	CoolerZ	[Tritium], that code just does a normal add, not some fancy multiprocessing add
2020-05-23 03:04:40	[Tritium]	CoolerZ: that doesn't matter... all the jobs will take exactly the same length of time to complete if you wait for them in that loop or not
2020-05-23 03:04:59	[Tritium]	CoolerZ: so?
2020-05-23 03:05:19	CoolerZ	so it doesn't matter that addition is associative
2020-05-23 03:05:32	CoolerZ	and commutative
2020-05-23 03:06:03	[Tritium]	CoolerZ: they will get done, when they get done, you might have to wait A BIT if one is taking longer than the other, but as soon as its done processing it can collect results immediately after.
2020-05-23 03:06:04	CoolerZ	" all the jobs will take exactly the same length of time to complete" what?
2020-05-23 03:06:05	CoolerZ	why?
2020-05-23 03:06:10	CoolerZ	how do you know that?
2020-05-23 03:06:11	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 03:06:24	artistsvoid	Habbie: did something using the turtle module, repl.it even runs that
2020-05-23 03:06:28	[Tritium]	....because thats how these things work
2020-05-23 03:06:31	artistsvoid	Habbie: did not expect that one
2020-05-23 03:06:32	-->	DeaDSouL (~DeaDSouL@89.249.73.21) has joined #python
2020-05-23 03:06:35	gsnedders	[Tritium]: for x86, basically the topology is exposed through CPUID in various ways and the kernel reads that at startup for each logical CPU and figures out the topology based on that AFAIK
2020-05-23 03:07:11	CoolerZ	[Tritium], each job involves a complicated function that has different running times based on the input https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L54
2020-05-23 03:07:29	CoolerZ	oops not that one
2020-05-23 03:07:32	CoolerZ	this one https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L59
2020-05-23 03:07:34	[Tritium]	CoolerZ: and that running time is nearly invariable given the same input
2020-05-23 03:07:55	[Tritium]	CoolerZ: so it doesn't matter HOW you run it, it will take the same time either way
2020-05-23 03:08:15	CoolerZ	why is it joining AFTER closing? https://github.com/geek-ai/Texygen/blob/master/utils/metrics/Bleu.py#L84-L85
2020-05-23 03:08:24	CoolerZ	it should join all the processes first
2020-05-23 03:08:32	CoolerZ	close is the last thing you do
2020-05-23 03:08:36	CoolerZ	to release resources
2020-05-23 03:08:37	[Tritium]	CoolerZ: because the api requires joining.  Or sloppy coding
2020-05-23 03:09:07	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 260 seconds)
2020-05-23 03:09:15	-->	TomDotTom (~TomDotTom@c-73-141-225-227.hsd1.de.comcast.net) has joined #python
2020-05-23 03:09:19	<--	maryo_s (~Maryo@unaffiliated/maryo) has quit (Ping timeout: 265 seconds)
2020-05-23 03:09:34	CoolerZ	[Tritium], each job has a different input tho
2020-05-23 03:09:41	CoolerZ	so the times will be different
2020-05-23 03:10:11	[Tritium]	CoolerZ: close prevents jobs from being added, join waits on all the process to finish.  You do know that documentation exists?
2020-05-23 03:10:16	CoolerZ	for one thing hypothesis will have different lengths at the very least
2020-05-23 03:10:23	<--	gil1701 (~Thunderbi@148.103.118.4) has quit (Ping timeout: 240 seconds)
2020-05-23 03:10:36	<--	DravenX (~textual@ip72-200-192-87.ok.ok.cox.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2020-05-23 03:10:53	CoolerZ	not to mention how many unique n-grams are in the references and hypothesis make a big difference
2020-05-23 03:11:02	<--	derk0pf (~derk0pf@x527179e6.dyn.telefonica.de) has quit (Read error: Connection reset by peer)
2020-05-23 03:11:07	[Tritium]	CoolerZ: IT DOESN'T MATTER
2020-05-23 03:11:19	<--	iNs (~ins@gateway/tor-sasl/ins) has quit (Remote host closed the connection)
2020-05-23 03:11:20	[Tritium]	It doesn't matter WHAT your function does, it could do anything.
2020-05-23 03:11:32	[Tritium]	its irrelevant to the multiprocessing
2020-05-23 03:12:05	-->	iNs (~ins@gateway/tor-sasl/ins) has joined #python
2020-05-23 03:12:16	CoolerZ	so Pool let's it allocate a number of processes first and then reuse them over and over?
2020-05-23 03:12:34	CoolerZ	lets
2020-05-23 03:12:48	-->	platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) has joined #python
2020-05-23 03:13:22	[Tritium]	f(x) and pool.apply_async(f, args=[x]) .... f will take roughly the same length of time in either case.  since you can run N instances of f at the same time, you get a speedup.  You still get that speedup if the first call takes longer, since the subsequent calls finish and wait for you to collect the data in the background.
2020-05-23 03:13:33	-->	netcrash (~charmande@97.245.60.94.rev.vodafone.pt) has joined #python
2020-05-23 03:13:35	netcrash	Hello, Using NFS reading remotely always the same file causes the python3 script to fail on that situation. Any ideas?
2020-05-23 03:14:31	CoolerZ	[Tritium], this is where I wish I had AMD Ryzen to actually take advantage of this
2020-05-23 03:14:35	<--	dillon (~dillon@dsl-dhcp-conrtxxahre-76-164-91-106.consolidated.net) has quit (Remote host closed the connection)
2020-05-23 03:14:39	-->	cry0 (~cry0@2607:fea8:8520:4a01:15cf:4595:ef3d:5ea2) has joined #python
2020-05-23 03:14:40	-->	kype (uid176843@gateway/web/irccloud.com/x-nduqgenrdhtywwuq) has joined #python
2020-05-23 03:15:06	[Tritium]	CoolerZ: You're running nltk, just put two potatoes next to each other
2020-05-23 03:15:49	-->	zoko (~zoko@149.red-81-45-129.staticip.rima-tde.net) has joined #python
2020-05-23 03:16:13	CoolerZ	>>> os.cpu_count()
2020-05-23 03:16:14	CoolerZ	12
2020-05-23 03:16:15	CoolerZ	nice
2020-05-23 03:16:20	<--	irrgit (~ch33se@192.241.175.183) has quit (Ping timeout: 272 seconds)
2020-05-23 03:16:35	CoolerZ	I was expecting 4
2020-05-23 03:16:35	[Tritium]	grubhub.com
2020-05-23 03:16:43	[Tritium]	....this isn't my addressbar
2020-05-23 03:16:51	-->	foolishhart (~foolishha@5.2.99.220) has joined #python
2020-05-23 03:17:10	CoolerZ	oh but my server reports os.cpu_count() == 2
2020-05-23 03:17:15	CoolerZ	ew
2020-05-23 03:17:17	CoolerZ	single core
2020-05-23 03:17:18	<--	gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has quit (Quit: ZNC - https://znc.in)
2020-05-23 03:17:28	<--	is0ke3 (~is0ke3@unaffiliated/isokee) has quit (Quit: WeeChat 1.9.1)
2020-05-23 03:17:34	<--	Alzadoua (~Alzadoua@unaffiliated/alzadoua) has quit (Read error: Connection reset by peer)
2020-05-23 03:17:35	-->	jab416171 (~jab416171@c-67-163-70-50.hsd1.ut.comcast.net) has joined #python
2020-05-23 03:17:45	<--	PJBoy (~PJBoy@unaffiliated/pjboy) has quit (Killed (tepper.freenode.net (Nickname regained by services)))
2020-05-23 03:17:53	-->	PJBoy (~PJBoy@unaffiliated/pjboy) has joined #python
2020-05-23 03:17:59	CoolerZ	[Tritium], if nltk is so bad why haven't they reimplemented it?
2020-05-23 03:17:59	-->	Alzadoua (~Alzadoua@unaffiliated/alzadoua) has joined #python
2020-05-23 03:18:02	[Tritium]	if its a vps, you might not even be on the same numa node
2020-05-23 03:18:07	CoolerZ	in numpy
2020-05-23 03:18:11	CoolerZ	or numba
2020-05-23 03:18:13	CoolerZ	or pytorch
2020-05-23 03:18:16	CoolerZ	or tensorflow
2020-05-23 03:18:24	-->	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2020-05-23 03:18:30	[Tritium]	CoolerZ: i said it could run on a potato
2020-05-23 03:18:45	_habnabit	netcrash, you'd have to show us what you mean by 'fails'
2020-05-23 03:18:45	CoolerZ	well python can run on a potato
2020-05-23 03:18:47	<--	zoko (~zoko@149.red-81-45-129.staticip.rima-tde.net) has quit (Client Quit)
2020-05-23 03:19:09	CoolerZ	but it matters to me when I have to do this 2000+ times with large inputs
2020-05-23 03:19:12	-->	gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has joined #python
2020-05-23 03:19:35	<--	vuoto (~vuoto@80.71.142.174) has quit (Ping timeout: 264 seconds)
2020-05-23 03:19:40	CoolerZ	and I don't even wanna know how tqdm interacts with all of this
2020-05-23 03:19:52	CoolerZ	since it's a normal for loop, it might work just fine
2020-05-23 03:19:58	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 03:20:31	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-05-23 03:21:12	-->	loreloc (~loreloc@host81-77-dynamic.247-95-r.retail.telecomitalia.it) has joined #python
2020-05-23 03:21:50	CoolerZ	[Tritium], unrelated but if you put a \n to end a file will that show when you do    for line in file: print(line)
2020-05-23 03:21:53	<--	Tanvir (~tanvir@wikimedia/wikitanvir) has quit (Ping timeout: 265 seconds)
2020-05-23 03:21:57	<--	fRit_^ (~fRit_^@gateway/tor-sasl/frit/x-29331989) has quit (Remote host closed the connection)
2020-05-23 03:22:00	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 03:22:17	-->	wogi (~wogi@2a02:8108:4740:3420:dc17:b474:efa4:9ace) has joined #python
2020-05-23 03:22:28	<--	thoros (~thoros@192-164-128-162.hdsl.highway.telekom.at) has quit (Quit: WeeChat 2.8)
2020-05-23 03:22:28	<--	eukreign (~lex@64.223.173.35) has quit (Quit: Ex-Chat)
2020-05-23 03:22:32	<--	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 240 seconds)
2020-05-23 03:22:46	<--	vuoto (~vuoto@80.71.142.174) has quit (Client Quit)
2020-05-23 03:23:08	-->	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has joined #python
2020-05-23 03:23:21	-->	fRit_^ (~fRit_^@gateway/tor-sasl/frit/x-29331989) has joined #python
2020-05-23 03:23:33	netcrash	_habnabit: trying to undestand that
2020-05-23 03:23:45	netcrash	still debuging
2020-05-23 03:23:54	_habnabit	netcrash, you can show us what you're seeing
2020-05-23 03:23:55	solrize	is there a way to put an initialization file into .idlerc that gets run whenever i start idle?
2020-05-23 03:23:57	CoolerZ	it doesn't seem to appear
2020-05-23 03:24:38	<--	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has quit (Remote host closed the connection)
2020-05-23 03:25:13	CoolerZ	hmmm
2020-05-23 03:25:22	CoolerZ	so
2020-05-23 03:25:51	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 03:26:02	CoolerZ	it seems that the line comes with the \n character at the end
2020-05-23 03:26:04	CoolerZ	gross
2020-05-23 03:26:58	CoolerZ	so line = line.strip() is mandatory
2020-05-23 03:27:01	-->	neonetstat (~net@186.137.117.100) has joined #python
2020-05-23 03:27:17	<--	tgamblin (~tgamblin@CPE64777de11593-CM64777de11590.cpe.net.cable.rogers.com) has quit (Read error: Connection reset by peer)
2020-05-23 03:27:28	-->	tgamblin (~tgamblin@CPE64777de11593-CM64777de11590.cpe.net.cable.rogers.com) has joined #python
2020-05-23 03:27:45	-->	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has joined #python
2020-05-23 03:28:17	--	Skeer is now known as Skeer_Away
2020-05-23 03:28:19	<--	foolishhart (~foolishha@5.2.99.220) has quit
2020-05-23 03:28:21	CoolerZ	is there a reason why it comes with the \n?
2020-05-23 03:28:35	-->	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has joined #python
2020-05-23 03:28:43	netcrash	_habnabit: https://paste.debian.net/1148341/ <- this
2020-05-23 03:28:44	-->	michelem (~Adium@51.154.167.11) has joined #python
2020-05-23 03:28:49	geirha	so you'll know if the last line lacks one or not
2020-05-23 03:29:18	CoolerZ	is it so you can do   with open('foo.txt', 'r') as f, open('bar.txt', 'w') as g:
2020-05-23 03:29:28	papna	CoolerZ: There's a lot of history, older APIs that didn't have the opportunity to hide the newline character
2020-05-23 03:29:29	<--	Lord-Kamina (~Lord-Kami@pc-5-46-86-200.cm.vtr.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-05-23 03:29:29	CoolerZ	for line in f: g.write(line)
2020-05-23 03:29:36	CoolerZ	that way you make a perfect copy
2020-05-23 03:29:48	papna	CoolerZ: This way you get all the data in the file
2020-05-23 03:29:53	-->	AbedB (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has joined #python
2020-05-23 03:29:54	<--	michelem (~Adium@51.154.167.11) has quit (Client Quit)
2020-05-23 03:29:58	SnoopJeDi	I need to implement an Image class, but would prefer to just subclass someone else's implementation. PIL seems like a natural choice, but their class seems to make subclassing really clumsy. Any pointers?
2020-05-23 03:30:05	<--	wafflehunter (~wafflehun@ip-176-199-211-193.hsi06.unitymediagroup.de) has quit (Read error: Connection reset by peer)
2020-05-23 03:30:13	papna	CoolerZ: In the world where it didn't include the newline, you'd probably do "for line in f: g.writeline(line)" for a copy -- but this isn't that world
2020-05-23 03:30:18	_habnabit	SnoopJeDi, why do you need subclassing
2020-05-23 03:30:27	papna	SnoopJeDi: An image class to...?
2020-05-23 03:30:47	CoolerZ	does python have streams?
2020-05-23 03:30:51	<--	Trashlord (~trash@wikipedia/Sentient-Planet) has quit (Quit: "True ignorance is not the absence of knowledge, but the refusal to acquire it.")
2020-05-23 03:31:04	<--	jamiejackson (cfac5722@gateway/web/cgi-irc/kiwiirc.com/ip.207.172.87.34) has quit (Quit: Connection closed)
2020-05-23 03:31:22	papna	CoolerZ: Streams?
2020-05-23 03:31:30	-->	recursive_curse (~miller@S0106f81d0f6109e3.wp.shawcable.net) has joined #python
2020-05-23 03:31:35	<--	wogi (~wogi@2a02:8108:4740:3420:dc17:b474:efa4:9ace) has quit (Read error: Connection reset by peer)
2020-05-23 03:31:55	<--	Wulf (~Wulf@unaffiliated/wulf) has quit (Ping timeout: 258 seconds)
2020-05-23 03:32:02	_habnabit	netcrash, but what's the failure?
2020-05-23 03:32:07	SnoopJeDi	_habnabit, I'd prefer to do it that way so that it could be backed by something else in the future, but as I think about it I guess that'd rattle through the code anyway.
2020-05-23 03:32:09	[Tritium]	open(...).read() returns the newline because there is a newline in the file.
2020-05-23 03:32:24	CoolerZ	papna, I will take that as a no
2020-05-23 03:32:35	meejah	CoolerZ: what is a "Stream"?
2020-05-23 03:32:42	SnoopJeDi	Maybe I should just PIL's Image directly and cross that bridge if it ever comes up, and focus on the other stuff that is built from sequences of Images and modifications to them
2020-05-23 03:32:53	CoolerZ	python does have the iterator protocol
2020-05-23 03:32:58	CoolerZ	so that can be a read stream
2020-05-23 03:33:01	CoolerZ	read only
2020-05-23 03:33:12	papna	CoolerZ: Python has an iterator protocol - Python's iterator protocol
2020-05-23 03:33:18	meejah	CoolerZ: we don't know what you mean by "Streams"
2020-05-23 03:33:36	papna	CoolerZ: You seem to think that you are appealing to a universal concept, but there are lots of things reusing the same names different places
2020-05-23 03:33:48	CoolerZ	meejah, exactly there's no such thing in python
2020-05-23 03:33:50	SnoopJeDi	_habnabit, e.g. it's plausible we'd want to swap in some of the Image stuff from our core product, and we definitely have some formats floating around that PIL won't know about out of the box etc.
2020-05-23 03:34:07	[Tritium]	twitch.tv and stdio are conceptually different, but both...streams
2020-05-23 03:34:09	papna	CoolerZ: There are many things called 'streams' in Python
2020-05-23 03:34:23	bjs	CoolerZ: what do you mean by stream?
2020-05-23 03:34:25	<--	rocia (~rocia@chihaya.best.moe) has quit (Quit: Bye!)
2020-05-23 03:34:36	<--	fn3t (~fn3t@unaffiliated/fn3t) has quit (Quit: Bye)
2020-05-23 03:34:40	CoolerZ	bjs, something similar to C++
2020-05-23 03:34:44	CoolerZ	or javascript streams
2020-05-23 03:34:57	CoolerZ	NodeJS uses streams
2020-05-23 03:35:15	papna	C++ iostreams?
2020-05-23 03:35:22	bjs	CoolerZ: arent' files a kind of stream
2020-05-23 03:35:22	-->	tomtomgps (~tomtomgps@2a01:cb14:4f6:8f00:875e:f9de:c940:505a) has joined #python
2020-05-23 03:35:28	-->	hexorg (~hexorg@static-173-48-146-3.bstnma.ftas.verizon.net) has joined #python
2020-05-23 03:35:35	netcrash	_habnabit: difficult to explain I did a rundown on what could be the error and ended there
2020-05-23 03:35:38	SnoopJeDi	oh, interesting, I didn't realize Pillow can be extended for decoders. Well, that settles that I guess, I'll just use PIL for now
2020-05-23 03:35:52	[Tritium]	CoolerZ: forget that the word stream exists, and describe what you want to do
2020-05-23 03:36:28	[Tritium]	SnoopJeDi: i hope you mean PIL the import name, not PIL the project name... i mean, you JUST said Pillow
2020-05-23 03:36:29	_habnabit	netcrash, right, but you're seeing an error message or something, right? you're not just guessing that there was an error; you see some indication of it
2020-05-23 03:36:43	SnoopJeDi	[Tritium], yes, Pillow
2020-05-23 03:36:45	CoolerZ	[Tritium], I was thinking of using multiprocessing to read a file, pipe it through a tokenizer line by line, pipe those tokens through a BLEU calc, etc.
2020-05-23 03:36:59	CoolerZ	but now that I think about it it seems way too much like word
2020-05-23 03:37:01	CoolerZ	work*
2020-05-23 03:37:01	SnoopJeDi	[Tritium], does *anyone* use the PIL project?
2020-05-23 03:37:03	bjs	CoolerZ: okay... sod o that?
2020-05-23 03:37:06	royal_screwup21	anyone have experience writing cython modules? Say I wanted to use something from the c++ stl and expose to as a python module. Is it easy to do it with cython?
2020-05-23 03:37:18	_habnabit	royal_screwup21, easier to use cppyy
2020-05-23 03:37:18	-->	rocia (~rocia@chihaya.best.moe) has joined #python
2020-05-23 03:37:33	<--	tood (uid107332@gateway/web/irccloud.com/x-yjdijesrdsctdwos) has quit (Quit: Connection closed for inactivity)
2020-05-23 03:37:36	[Tritium]	SnoopJeDi: legacy code uses legacy code... and there are legacy docs that still advocate people use legacy code
2020-05-23 03:37:37	royal_screwup21	cool thanks, will look into it
2020-05-23 03:37:37	papna	royal_screwup21: It can be -- The C++ support is incomplete, which can be annoying.
2020-05-23 03:37:49	netcrash	_habnabit: No message, this is code deep inside the workings. It's just failling without error.
2020-05-23 03:37:50	CoolerZ	bjs,   file >> tokenizer >> bleu >> add >> print
2020-05-23 03:37:51	graingert	SnoopJeDi: like PIL instead of Pillow?
2020-05-23 03:37:52	-->	calloc (~mrwildric@047-006-018-108.res.spectrum.com) has joined #python
2020-05-23 03:38:06	<--	calloc (~mrwildric@047-006-018-108.res.spectrum.com) has quit (Client Quit)
2020-05-23 03:38:07	bjs	CoolerZ: I mean files are an example of a stream
2020-05-23 03:38:09	_habnabit	netcrash, then what makes you think it's failing at all..?
2020-05-23 03:38:10	bjs	i don't know what you're getting at
2020-05-23 03:38:18	SnoopJeDi	graingert, yea
2020-05-23 03:38:22	CoolerZ	I don't know either, it's too much work to do it that way
2020-05-23 03:38:26	-->	calloc (~mrwildric@047-006-018-108.res.spectrum.com) has joined #python
2020-05-23 03:38:28	-->	AbedB_ (~AbedBhuty@176.113.72.212) has joined #python
2020-05-23 03:38:29	bjs	CoolerZ: that way?
2020-05-23 03:38:39	netcrash	_habnabit: yes because a process that should happen fails. It's not creating a file output.
2020-05-23 03:38:43	graingert	SnoopJeDi: I remember when django needed a pillow-pil shim module to use Pillow
2020-05-23 03:38:47	SnoopJeDi	Aside from what [Tritium] pointed out I don't really think anyone uses a 14 year old project, and I thought the whole point of Pillow is to be a swap-in
2020-05-23 03:38:49	CoolerZ	bjs, with them on different threads/processes
2020-05-23 03:38:55	CoolerZ	each part of the pipeline
2020-05-23 03:38:56	bjs	CoolerZ: for line in f: toks = tokenize(line); bleu_thing = bleu(toks); added_thing = add(bleu_thing); print(thing)
2020-05-23 03:39:13	hexorg	Hey guys, I have a ctypes.cdll library that returns a complex c structure. What's the best way of writing a python class that wraps this cdll? Should I have cdll as a property of the python class, or can I somehow inherit from the cdll class? Or something else?
2020-05-23 03:39:13	[Tritium]	SnoopJeDi: pillow is swap in except one small problem with PIL
2020-05-23 03:39:13	netcrash	_habnabit: and checking went into this and found out that a message from this function was not being printed
2020-05-23 03:39:18	CoolerZ	bjs, that's not multiprocessed
2020-05-23 03:39:27	bjs	CoolerZ: where does multiprocessing come in?
2020-05-23 03:39:27	CoolerZ	bjs, I already have that
2020-05-23 03:39:34	_habnabit	netcrash, if it's not being printed, perhaps the code didn't run at all
2020-05-23 03:39:49	[Tritium]	SnoopJeDi: PIL changes sys.path so you can import PIL.Image or import Image
2020-05-23 03:39:51	CoolerZ	bjs, well in the pipeline you could put each part on a different process/thread
2020-05-23 03:39:54	royal_screwup21	papna my use-case is using C++'s multiset and exposing it as a python module...afaik, python doesn't have it and it would be good to have a performant library
2020-05-23 03:40:05	_habnabit	royal_screwup21, collections.Counter
2020-05-23 03:40:05	SnoopJeDi	[Tritium], yikes
2020-05-23 03:40:18	<--	rememberYou (~user@unaffiliated/rememberyou) has quit (Remote host closed the connection)
2020-05-23 03:40:32	[Tritium]	SnoopJeDi: pillow does not make Image available in the top level, so if you coded to that, you need a shim
2020-05-23 03:40:46	SnoopJeDi	yea I see. In this case, it's all new code, so strictly Pillow
2020-05-23 03:40:53	royal_screwup21	_habnabit it's not a multiset :)  A multiset is basically a container that stores everything you put in it in sorted order, including duplicates
2020-05-23 03:40:56	papna	royal_screwup21: storing PyObject's in a STL container ends up annoying
2020-05-23 03:40:56	[Tritium]	SnoopJeDi: it was a different time - flat is better than nested taken to extremes
2020-05-23 03:40:58	-->	indigaz (~indigaz@unaffiliated/indigaz) has joined #python
2020-05-23 03:41:09	_habnabit	royal_screwup21, sounds like collections.Counter
2020-05-23 03:41:22	SnoopJeDi	Until I bump my head on something that necessitates thinking about it some more, but the point is well taken: I'm getting carried away writing abstraction instead of making code that does something
2020-05-23 03:41:31	<--	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has quit (Ping timeout: 258 seconds)
2020-05-23 03:41:39	royal_screwup21	_habnabit does counter store keys in sorted order? I don't think so, but I'll check
2020-05-23 03:41:58	papna	It doesn't
2020-05-23 03:41:59	_habnabit	royal_screwup21, sorted? no, but you can sort them if you want
2020-05-23 03:42:07	[Tritium]	SnoopJeDi:  thats...the way it works, isn't it?  You spend weeks writing abstraction and maybe an hour actual implementation
2020-05-23 03:42:22	<--	AbedB (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has quit (Ping timeout: 260 seconds)
2020-05-23 03:42:24	[Tritium]	thats what it feels like at least
2020-05-23 03:42:28	SnoopJeDi	[Tritium], too true
2020-05-23 03:42:35	papna	royal_screwup21: There are existing sorted dicts in Python, one of which is fairly popular
2020-05-23 03:42:44	royal_screwup21	right, it would be better to use a multiset module for that specific use-case
2020-05-23 03:42:46	royal_screwup21	ah yeah
2020-05-23 03:42:47	SnoopJeDi	The good news is that the thing I'm hacking on right now is a standalone tool instead of "hey just design us an architecture that serves both teams needs"
2020-05-23 03:43:09	tos9	royal_screwup21: (just saying "multiset" wouldn't connote sorted, so if you want sorted you should say sorted multiset)
2020-05-23 03:43:19	papna	royal_screwup21: This property is somewhat orthogonal to being a multiset per se, which is less relevant in Python, because distinct but equal objects are a bit of an antipattern and because values tend to be big so people often don't store n of them to store the count of n
2020-05-23 03:43:31	royal_screwup21	https://en.cppreference.com/w/cpp/container/multiset
2020-05-23 03:43:41	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 244 seconds)
2020-05-23 03:43:51	tos9	royal_screwup21: it's presumably an implementation detail in C++ that they're sorted
2020-05-23 03:44:07	papna	It's not an implementation detail
2020-05-23 03:44:11	tos9	royal_screwup21: just the word multiset is not sorted -- https://en.wikipedia.org/wiki/Multiset
2020-05-23 03:44:12	papna	It's a part of the standard
2020-05-23 03:44:19	royal_screwup21	oh ok fair enough :)
2020-05-23 03:44:28	tos9	sorry, not implementation detail, but not part of the inherent concept
2020-05-23 03:44:32	papna	For std::multiset
2020-05-23 03:44:34	papna	Right
2020-05-23 03:44:36	papna	Certainly
2020-05-23 03:44:42	royal_screwup21	yeah, unordered_multiset is also a thing so you're probably correct
2020-05-23 03:45:12	<--	yakiza (~yakiza@05418fcd.skybroadband.com) has quit (Read error: Connection reset by peer)
2020-05-23 03:45:19	papna	Good ol' C++ standard: "We're not sayin' it's a BST...but it's a BST."
2020-05-23 03:45:49	-->	yakiza (~yakiza@05418fcd.skybroadband.com) has joined #python
2020-05-23 03:46:02	-->	lenochka (1838f510@gateway/web/cgi-irc/kiwiirc.com/ip.24.56.245.16) has joined #python
2020-05-23 03:46:03	<--	cry0 (~cry0@2607:fea8:8520:4a01:15cf:4595:ef3d:5ea2) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2020-05-23 03:46:33	<--	bkraptor (~bkraptor@unaffiliated/bkraptor) has quit (Quit: Leaving)
2020-05-23 03:46:39	lenochka	question about asyncio: could someone explain why do you need to cancel tasks before gathering?
2020-05-23 03:46:53	-->	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has joined #python
2020-05-23 03:47:50	-->	audiofile (~notanaudi@unaffiliated/audiofile) has joined #python
2020-05-23 03:49:36	<--	nathacof_ (~nathacof@c-24-23-179-197.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2020-05-23 03:49:47	graingert	lenochka: you don't
2020-05-23 03:49:53	graingert	lenochka: what makes you think you do?
2020-05-23 03:49:58	-->	nathacof_ (~nathacof@c-24-23-179-197.hsd1.ca.comcast.net) has joined #python
2020-05-23 03:50:05	-->	edlinde (~edlinde@203.191.56.226) has joined #python
2020-05-23 03:50:07	-->	hypc1 (~Thunderbi@175.164.8.168) has joined #python
2020-05-23 03:50:11	lenochka	you do. In the examples I see that we cancel pending tasks
2020-05-23 03:50:34	lenochka	i thought gather is supposed to basically end these tasks
2020-05-23 03:50:40	graingert	the examples are probably just showing what happens if they are cancelled
2020-05-23 03:50:43	<--	hypc (~Thunderbi@175.164.8.168) has quit (Ping timeout: 260 seconds)
2020-05-23 03:50:44	--	hypc1 is now known as hypc
2020-05-23 03:50:52	-->	ovnicraft (~ovnicraft@corp-179-49-42-23.uio.puntonet.ec) has joined #python
2020-05-23 03:50:56	<--	tomtomgps (~tomtomgps@2a01:cb14:4f6:8f00:875e:f9de:c940:505a) has quit (Remote host closed the connection)
2020-05-23 03:51:25	lenochka	nope, it shows that all pending tasks need to be cancelled and then we use gather to gather them all, then we also loop.run_until_complete(gathered_tasks)
2020-05-23 03:51:41	lenochka	I mean that's the case when we don't use asycio.run
2020-05-23 03:51:45	-->	johefernan (~ck3t@unaffiliated/johefernan) has joined #python
2020-05-23 03:51:51	graingert	use asyncio.run
2020-05-23 03:52:05	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 03:52:07	graingert	lenochka: but yeah you can gather tasks before you cancel them
2020-05-23 03:52:08	lenochka	in my examples I need to use NOT asyncio.run
2020-05-23 03:52:18	graingert	in your examples?
2020-05-23 03:52:24	-->	bkraptor (~bkraptor@unaffiliated/bkraptor) has joined #python
2020-05-23 03:52:27	lenochka	graingert: that doesn't explain much. Yes, I know I can
2020-05-23 03:52:30	graingert	what's wrong with asyncio.run?
2020-05-23 03:52:47	lenochka	but I am trying to understand why we are cancelling, shouldn't gather do the work?
2020-05-23 03:52:52	graingert	either the tutorial is wrong or you're misinterpreting it
2020-05-23 03:52:55	-->	dlam (~user@2600:1700:dac0:52d0:506d:6f34:9e95:7c6b) has joined #python
2020-05-23 03:53:04	jwhisnant	(or both) :)
2020-05-23 03:53:06	lenochka	graingert: the tutorial isn't wrong.
2020-05-23 03:53:22	lenochka	what am I misinterpreting?
2020-05-23 03:53:26	lenochka	I'll paste the example in a sec
2020-05-23 03:53:32	graingert	a smart move
2020-05-23 03:54:24	lenochka	there! https://bpa.st/XQNA
2020-05-23 03:54:31	-->	abf (~abf@2601:404:c100:7e40::16f8) has joined #python
2020-05-23 03:54:34	lenochka	the idea is not use asyncio.run for educational purpose
2020-05-23 03:54:48	-->	nbro (~nbro@2a02:aa13:3142:3100:89c9:decf:9f42:c52c) has joined #python
2020-05-23 03:55:09	[Tritium]	lenochka: I assume the integers at the end of some lines are not literally in the code?
2020-05-23 03:55:20	lenochka	yeah.. obviously
2020-05-23 03:55:33	ChrisWarrick	lenochka: I don’t understand what you’re trying to do here
2020-05-23 03:55:35	<--	millido (~millido@148-252-99.248.3p.ntebredband.no) has quit (Remote host closed the connection)
2020-05-23 03:55:38	[Tritium]	lenochka: you need to hang out in here more if thats "obvious" :)
2020-05-23 03:55:46	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 03:55:57	lenochka	ChrisWarrick: I am trying to run that example :D
2020-05-23 03:56:01	lenochka	and understand it
2020-05-23 03:56:05	lenochka	I can run it
2020-05-23 03:56:06	ChrisWarrick	lenochka: this example is terrible
2020-05-23 03:56:12	<--	renich (~renich@189.192.133.251) has quit (Ping timeout: 265 seconds)
2020-05-23 03:56:16	-->	millido (~millido@148-252-99.248.3p.ntebredband.no) has joined #python
2020-05-23 03:56:20	lenochka	OK, I dont want to hear how terrible is the example
2020-05-23 03:56:20	supakeen	I don't understand what it's trying to do.
2020-05-23 03:56:23	ChrisWarrick	lenochka: loop.create_task schedules the task already
2020-05-23 03:56:24	lenochka	It has a purpose
2020-05-23 03:56:45	<--	millido (~millido@148-252-99.248.3p.ntebredband.no) has quit (Client Quit)
2020-05-23 03:56:46	lenochka	ChrisWarrick: ok, and?
2020-05-23 03:56:59	ChrisWarrick	lenochka: if you want to run them later at once, don’t schedule them
2020-05-23 03:57:00	lenochka	it does schedule
2020-05-23 03:57:08	<--	jay-m_ (~jay-m@129.0.205.80) has quit (Read error: Connection reset by peer)
2020-05-23 03:57:23	graingert	lenochka: you can do this instead: https://github.com/python/cpython/blob/3.8/Lib/asyncio/runners.py#L53
2020-05-23 03:57:25	ChrisWarrick	lenochka: asyncio.gather(main(), main(), main(), return_exceptions=True)
2020-05-23 03:57:40	<--	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has quit (Quit: Connection closed)
2020-05-23 03:57:43	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 240 seconds)
2020-05-23 03:57:55	lenochka	I think we gather at the end not for that main() task
2020-05-23 03:57:56	-->	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has joined #python
2020-05-23 03:58:01	graingert	lenochka: it's because coros can start other tasks
2020-05-23 03:58:14	supakeen	Perhaps it's an effort to cancel all running coroutines after main has ended (not that there are any)?
2020-05-23 03:58:16	lenochka	we gather to catch anything that was scheduled but wasn't completed
2020-05-23 03:58:22	supakeen	But like.
2020-05-23 03:58:24	-->	tomtomgps (~tomtomgps@2a01:cb14:4f6:8f00:875e:f9de:c940:505a) has joined #python
2020-05-23 03:58:26	lenochka	supakeen: yes!! this!
2020-05-23 03:58:28	graingert	supakeen: yep it looks like a poor copy of https://github.com/python/cpython/blob/3.8/Lib/asyncio/runners.py#L53
2020-05-23 03:58:40	<--	pradhvan (uid244250@gateway/web/irccloud.com/x-renigkpfxbqltzyk) has quit (Quit: Connection closed for inactivity)
2020-05-23 03:58:42	<--	linux_dream (~isaac@unaffiliated/linux-dream/x-5839402) has quit (Quit: WeeChat 2.8)
2020-05-23 03:58:44	lenochka	what I am trying to understand here is why do we cancel before gather
2020-05-23 03:58:52	lenochka	why can't we just gather?
2020-05-23 03:59:05	supakeen	lenochka: Because perhaps those coros would be stuck awaiting 'forever'.
2020-05-23 03:59:12	supakeen	So you want to raise CancelledErrors in them.
2020-05-23 03:59:20	lenochka	wouldn't gather get them?
2020-05-23 03:59:26	supakeen	lenochka: They wouldn't finish.
2020-05-23 03:59:35	<--	edlinde (~edlinde@203.191.56.226) has quit (Ping timeout: 265 seconds)
2020-05-23 03:59:41	graingert	lenochka: you've posted a poor alternative to asyncio.run
2020-05-23 03:59:42	supakeen	Imagine just `await asyncio.sleep(123123123123)`.
2020-05-23 03:59:46	supakeen	But yea.
2020-05-23 03:59:51	lenochka	but then why even gather if you anyway have a list of them
2020-05-23 04:00:05	lenochka	and you can just cancel them and goodbye
2020-05-23 04:00:05	lenochka	no need to gather
2020-05-23 04:00:17	supakeen	Because they aren't done after the cancel.
2020-05-23 04:00:22	<--	CodePoint (~CodePoint@99-89-92-208.lightspeed.tukrga.sbcglobal.net) has quit (Quit: WeeChat 1.9.1)
2020-05-23 04:00:24	supakeen	They might be doing cleanup or what have you.
2020-05-23 04:00:32	lenochka	I just dont understand why we have both cancel and gather
2020-05-23 04:00:32	lenochka	why not?
2020-05-23 04:00:33	graingert	lenochka: things might be in a try: await finally:
2020-05-23 04:00:41	<--	bomb-on (~bomb-on@139-142-17-89.fiber.hringdu.is) has quit (Quit: SO LONG, SUCKERS!)
2020-05-23 04:01:00	lenochka	what means "done"?
2020-05-23 04:01:03	-->	floatingman (~dnewman@c-69-139-119-74.hsd1.tn.comcast.net) has joined #python
2020-05-23 04:06:46	--	irc: disconnected from server
2020-05-23 04:08:32	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-23 04:08:32	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-23 04:08:32	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-23 04:08:32	--	Channel #python: 1920 nicks (0 ops, 0 voices, 1920 normals)
2020-05-23 04:08:34	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-23 04:08:37	-->	P1ro (~quassel@gentoo/user/p1ro) has joined #python
2020-05-23 04:08:39	lenochka	to me it would seem intuitive that if you cancel a task, you are done with it
2020-05-23 04:08:40	<--	fweht (uid404746@gateway/web/irccloud.com/x-mjksvdbihmdzkqje) has quit (Quit: Connection closed for inactivity)
2020-05-23 04:08:51	lenochka	after all you are sending a cancellation so it has nothing else to do
2020-05-23 04:09:00	graingert	https://www.irccloud.com/pastebin/WrYoYVnl/database.py
2020-05-23 04:09:07	graingert	lenochka: ok what about that ^
2020-05-23 04:09:14	graingert	you need it to rollback the transaction
2020-05-23 04:09:35	-->	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has joined #python
2020-05-23 04:09:40	<--	Seirdy (~Seirdy@149.248.24.10) has quit (Quit: exiting 2.9-dev)
2020-05-23 04:09:49	lenochka	well you can do that with try finally
2020-05-23 04:09:54	lenochka	but why would you need to gather?
2020-05-23 04:09:58	-->	Python_2020 (uid84198@gateway/web/irccloud.com/x-rmdwntzvwkhroqxz) has joined #python
2020-05-23 04:10:09	graingert	you need to await the tasks for them to execute
2020-05-23 04:10:29	lenochka	after an exception is raised finally is still run
2020-05-23 04:10:31	-->	Haudegen (~quassel@178.115.237.87.static.drei.at) has joined #python
2020-05-23 04:10:33	graingert	nope
2020-05-23 04:10:40	graingert	well sorta
2020-05-23 04:10:43	lenochka	what?
2020-05-23 04:10:51	graingert	once it hits an await it doesn't execute
2020-05-23 04:10:53	lenochka	finally is run even if you have an exception
2020-05-23 04:11:06	lenochka	what await?
2020-05-23 04:11:07	<--	Hal9k (~Hal9k@unaffiliated/kusanagi) has quit (Remote host closed the connection)
2020-05-23 04:11:08	lenochka	there's no await
2020-05-23 04:11:09	graingert	sure but the task doesn't get to execute unless you gather and run it
2020-05-23 04:11:23	<--	adamholmberg (~adamholmb@69.80.114.2) has quit (Ping timeout: 240 seconds)
2020-05-23 04:11:24	graingert	in the await tx.__aexit__()
2020-05-23 04:11:28	lenochka	it does get to execute, because you created a task and started the lop
2020-05-23 04:11:31	graingert	or the await undo_the_thing()
2020-05-23 04:11:36	graingert	it doesn't though
2020-05-23 04:11:48	-->	Hal9k (~Hal9k@unaffiliated/kusanagi) has joined #python
2020-05-23 04:11:51	graingert	as soon as the loop stops (in run_until_complete) the task cannot continue
2020-05-23 04:12:00	lenochka	hmm
2020-05-23 04:12:35	lenochka	maybe...
2020-05-23 04:12:40	graingert	no definitely
2020-05-23 04:12:56	-->	vuoto (~vuoto@80.71.142.174) has joined #python
2020-05-23 04:12:57	lenochka	hmm, ok
2020-05-23 04:12:58	-->	bomb-on (~bomb-on@139-142-17-89.fiber.hringdu.is) has joined #python
2020-05-23 04:13:05	<--	Beanzilla (~Beanzilla@unaffiliated/beanzilla) has quit (Quit: Nap time!)
2020-05-23 04:13:10	lenochka	so you are saying those tasks are paused sort of
2020-05-23 04:13:21	lenochka	once the run_until_complete is run
2020-05-23 04:13:30	lenochka	is finished
2020-05-23 04:13:33	-->	SpinTronix (~SpinTroni@37.209.46.140) has joined #python
2020-05-23 04:13:35	-->	flex14 (~flex14@c-75-70-155-244.hsd1.co.comcast.net) has joined #python
2020-05-23 04:13:44	<--	troulouliou_div2 (~troulouli@unaffiliated/troulouliou-div2/x-0271439) has quit (Quit: Leaving)
2020-05-23 04:14:24	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2020-05-23 04:15:25	-->	jarthur_ (~jarthur@2605:6000:1019:4971:e41f:77b7:82c6:10d2) has joined #python
2020-05-23 04:15:34	lenochka	that is strange though... To be honest I am not sure what exactly is run_until_complete
2020-05-23 04:15:44	lenochka	I guess it stops the loop right after it's executed
2020-05-23 04:16:16	bjs	lenochka: it doesn't 'stop' the loop it just returns once the task has finished that you told it to run.  I'm not sure how this conversation relates to your original paste
2020-05-23 04:16:19	bjs	I lost some context in between
2020-05-23 04:16:40	CoolerZ	how can I test out tqdm?
2020-05-23 04:16:45	lenochka	bjs: if so, then why aren't the other tasks run?
2020-05-23 04:16:51	bjs	lenochka: what other tasks?
2020-05-23 04:16:57	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 04:17:00	CoolerZ	will for i in tqdm(range(10)): sleep(1)  work?
2020-05-23 04:17:13	lenochka	anyway, my initial question was why do cancel and gather at the end for cleanup
2020-05-23 04:17:28	ChrisWarrick	CoolerZ: yes
2020-05-23 04:17:46	lenochka	why isn't cancel enough
2020-05-23 04:17:50	<--	bigjazzsound (~craig.fie@75-60-207-113.lightspeed.tukrga.sbcglobal.net) has quit (Quit: leaving)
2020-05-23 04:17:59	<--	vuoto (~vuoto@80.71.142.174) has quit (Quit: WeeChat 2.9-dev)
2020-05-23 04:18:01	bjs	lenochka: because a cancel is just an exception that gets raised in the task
2020-05-23 04:18:08	bjs	lenochka: which doesn't happen immediately
2020-05-23 04:18:11	CoolerZ	ChrisWarrick, something weird is happening
2020-05-23 04:18:13	bjs	lenochka: it happens when the task is next scheduled.
2020-05-23 04:18:18	CoolerZ	it doesn't print the progressbar
2020-05-23 04:18:40	lenochka	ok, it gets scheduled and gets run at some point, where it does the cleanup in the finally
2020-05-23 04:18:49	-->	ferdna (~ferdna@cpe-69-23-148-218.elp.res.rr.com) has joined #python
2020-05-23 04:18:50	-->	ClaymorePT (~Claymore@188.251.245.88) has joined #python
2020-05-23 04:18:54	ChrisWarrick	CoolerZ: cannot reproduce
2020-05-23 04:18:56	bjs	lenochka: what's "the finally",  what finally?
2020-05-23 04:19:03	<--	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has quit (Ping timeout: 240 seconds)
2020-05-23 04:19:14	CoolerZ	how do I send you an image?
2020-05-23 04:19:15	lenochka	bjs: sorry :D I mean that in the task you have the try except finally
2020-05-23 04:19:21	CoolerZ	do you have a wormhole?
2020-05-23 04:19:26	lenochka	bjs: in the finally you do cleanup
2020-05-23 04:19:26	<--	jarthur (~jarthur@2605:6000:1019:4971:84c9:79ce:8982:d224) has quit (Ping timeout: 260 seconds)
2020-05-23 04:19:29	bjs	lenochka: I didn't mention any try except finallies
2020-05-23 04:19:32	ChrisWarrick	CoolerZ: show full code that reproduces the issue
2020-05-23 04:19:40	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 272 seconds)
2020-05-23 04:19:51	CoolerZ	ChrisWarrick, https://i.imgur.com/MIH81DI.png
2020-05-23 04:20:01	<--	jarthur_ (~jarthur@2605:6000:1019:4971:e41f:77b7:82c6:10d2) has quit (Ping timeout: 260 seconds)
2020-05-23 04:20:04	-->	gopper (~Gr@188.252.198.26) has joined #python
2020-05-23 04:20:12	lenochka	bjb: ok, have you seen the example I pasted?
2020-05-23 04:20:30	ChrisWarrick	CoolerZ: can you reproduce outside of tmux? (unlikely, but still)
2020-05-23 04:20:34	-->	ThePortWhisperer (~ThePortWh@unaffiliated/theportwhisperer) has joined #python
2020-05-23 04:20:40	bjs	lenochka: I saw https://bpa.st/XQNA
2020-05-23 04:20:45	CoolerZ	ChrisWarrick, https://bpa.st/ZQOQ
2020-05-23 04:21:01	CoolerZ	I commented out the part does the heavy work
2020-05-23 04:21:12	<--	kndee (~kndee@89-67-112-11.dynamic.chello.pl) has quit (Ping timeout: 260 seconds)
2020-05-23 04:21:14	lenochka	bjs: yes, that's the one. Could you explain why do we do gather at the end?
2020-05-23 04:21:15	ChrisWarrick	CoolerZ: that’s a long sample
2020-05-23 04:21:15	CoolerZ	line 42
2020-05-23 04:21:19	<--	gopper (~Gr@188.252.198.26) has quit (Client Quit)
2020-05-23 04:21:24	bjs	lenochka: in this example I don't think it does anything
2020-05-23 04:21:24	ChrisWarrick	CoolerZ: this should work if your terminal works
2020-05-23 04:21:27	-->	sphenxes (~sphenxes@80.123.111.76) has joined #python
2020-05-23 04:21:27	<--	kosh (~kosh@p200300d08f0d6000bc1bd3b324cd725b.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-05-23 04:21:38	CoolerZ	ChrisWarrick, I have 2 other scripts running in other tmux tabs
2020-05-23 04:21:42	CoolerZ	those have progress bars
2020-05-23 04:21:43	bjs	lenochka: because the tasks are already finished
2020-05-23 04:21:46	bjs	task
2020-05-23 04:21:47	lenochka	bjs: in this example yes, because we have just one task
2020-05-23 04:21:47	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 04:21:57	lenochka	bjb: but what if there was an unfinished one
2020-05-23 04:21:58	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 04:22:29	-->	Dubroialon (~tedflint@host213-120-54-124.range213-120.btcentralplus.com) has joined #python
2020-05-23 04:22:50	CoolerZ	ChrisWarrick, I changed it to for i, hypo in tqdm(enumerate(hypos[:420]), total=420):
2020-05-23 04:22:53	CoolerZ	and now it works
2020-05-23 04:22:56	-->	cry0 (~cry0@2607:fea8:8520:4a01:9c93:c534:7767:ad4a) has joined #python
2020-05-23 04:22:57	<--	aslicedbanjo (~aslicedba@host86-160-16-10.range86-160.btcentralplus.com) has quit (Quit: Leaving.)
2020-05-23 04:23:03	lenochka	bjb: aren't those unfinished tasks still run after the first run_until_complete?
2020-05-23 04:23:03	CoolerZ	it seems for whatever reason it can't get the length of the list?
2020-05-23 04:23:07	lenochka	they are cancelled
2020-05-23 04:23:13	nedbat	CoolerZ: enumerate doesn't make a list
2020-05-23 04:23:19	CoolerZ	but on line 38 it prints out the length
2020-05-23 04:23:27	CoolerZ	nedbat, oh
2020-05-23 04:23:27	nedbat	CoolerZ: hypos is a list.
2020-05-23 04:23:31	CoolerZ	I see
2020-05-23 04:23:44	CoolerZ	so enumerate(tqdm(hypos)):
2020-05-23 04:23:45	-->	cisco (~cisco@a109-49-63-150.cpe.netcabo.pt) has joined #python
2020-05-23 04:24:03	<--	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-115.dsl.bell.ca) has quit (Ping timeout: 258 seconds)
2020-05-23 04:24:13	-->	XenGi (~quassel@c-base/crew/XeN) has joined #python
2020-05-23 04:24:37	graingert	https://www.irccloud.com/pastebin/o7CarfNP/lenochka.py
2020-05-23 04:24:41	graingert	lenochka: try that
2020-05-23 04:24:43	graingert	with 0 1 and 2
2020-05-23 04:25:00	graingert	./lenocha.py 0; ./lenocha.py 1; ./lenocha.py 2;
2020-05-23 04:25:22	lenochka	graingert: k, thanks, will try
2020-05-23 04:25:23	CoolerZ	nedbat, these things are never as transparent as I want them to be
2020-05-23 04:25:24	graingert	python3.8 ./lenocha.py 0; python3.8 ./lenocha.py 1; python3.8 ./lenocha.py 2;
2020-05-23 04:25:25	graingert	even
2020-05-23 04:25:35	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 04:25:41	<--	hyper_dave (~hyper_dav@196.188.242.167) has quit (Ping timeout: 256 seconds)
2020-05-23 04:25:48	-->	eukreign (~lex@64.223.173.35) has joined #python
2020-05-23 04:26:30	-->	kndee (~kndee@89-67-112-11.dynamic.chello.pl) has joined #python
2020-05-23 04:26:36	<--	sphenxes (~sphenxes@80.123.111.76) has quit (Ping timeout: 256 seconds)
2020-05-23 04:26:45	-->	Seirdy (~Seirdy@68.235.43.134) has joined #python
2020-05-23 04:27:01	graingert	essentially because asyncio allows tasks to be created without any attachment to their parent task
2020-05-23 04:27:15	graingert	trio and anyio forces you to spawn tasks in a scope
2020-05-23 04:27:23	bjs	lenochka: my name isn't bjb.  Also taks can be bad and cancel the cancel by swallowing the exception
2020-05-23 04:27:27	bjs	lenochka: as in graingert's example
2020-05-23 04:27:38	graingert	I don't cancel the cancel
2020-05-23 04:27:56	graingert	bjs: the code is well behaved, except that it starts a task and forgets about it
2020-05-23 04:27:57	lenochka	sorry! bjs
2020-05-23 04:28:23	<--	Dubroialon (~tedflint@host213-120-54-124.range213-120.btcentralplus.com) has quit (Quit: Leaving)
2020-05-23 04:28:27	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 260 seconds)
2020-05-23 04:28:32	lenochka	bjs: if we assume they are good and do not swallow anything, would we still need the gather?
2020-05-23 04:28:46	graingert	lenochka: yes, did you see the output?
2020-05-23 04:28:50	-->	renich (~renich@189.192.133.251) has joined #python
2020-05-23 04:28:59	lenochka	graingert: not yet
2020-05-23 04:28:59	<--	sublade (~anonymous@31.132.35.96) has quit (Ping timeout: 260 seconds)
2020-05-23 04:29:00	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-05-23 04:29:12	eukreign	graingert, i managed to fix the issue by adding buffering in my event publishing class (works really well now and is actually faster/higher throughput than before): https://bpa.st/XGQQ
2020-05-23 04:29:21	-->	hd1 (4c5b0bf5@gateway/web/cgi-irc/kiwiirc.com/ip.76.91.11.245) has joined #python
2020-05-23 04:29:25	<--	hd1 (4c5b0bf5@gateway/web/cgi-irc/kiwiirc.com/ip.76.91.11.245) has left #python
2020-05-23 04:29:25	<--	kunningd (~qwe@unaffiliated/kunningd) has quit (Ping timeout: 258 seconds)
2020-05-23 04:29:32	graingert	lenochka: see if you can get mode 1 to print the f"cancelled {v=}" message
2020-05-23 04:29:38	graingert	lenochka: without using gather
2020-05-23 04:30:11	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 04:30:28	-->	hyper_dave (~hyper_dav@196.188.242.167) has joined #python
2020-05-23 04:30:35	-->	sphenxes (~sphenxes@80.123.111.76) has joined #python
2020-05-23 04:31:02	-->	Laniakea (~Laniakea@2.30.100.73) has joined #python
2020-05-23 04:31:09	-->	sublade (~anonymous@31.132.35.96) has joined #python
2020-05-23 04:31:29	<--	cisco (~cisco@a109-49-63-150.cpe.netcabo.pt) has quit (Ping timeout: 265 seconds)
2020-05-23 04:31:38	-->	kunningd (~qwe@unaffiliated/kunningd) has joined #python
2020-05-23 04:31:57	-->	Archaeus6 (~archaeus@2607:fea8:6520:19ce::9) has joined #python
2020-05-23 04:32:01	<--	Archaeus6 (~archaeus@2607:fea8:6520:19ce::9) has left #python
2020-05-23 04:33:02	<--	bitdex (~bitdex@gateway/tor-sasl/bitdex) has quit (Remote host closed the connection)
2020-05-23 04:33:28	<--	multifractal (~multifrac@host-92-2-120-196.as43234.net) has quit (Ping timeout: 256 seconds)
2020-05-23 04:33:36	<--	XenGi (~quassel@c-base/crew/XeN) has quit (Ping timeout: 252 seconds)
2020-05-23 04:33:55	-->	bitdex (~bitdex@gateway/tor-sasl/bitdex) has joined #python
2020-05-23 04:34:45	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2020-05-23 04:35:10	<--	djapo (~archie@unaffiliated/djapo) has quit (Ping timeout: 258 seconds)
2020-05-23 04:35:43	<--	loreloc (~loreloc@host81-77-dynamic.247-95-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2020-05-23 04:36:02	<--	neceve (~quassel@unaffiliated/neceve) has quit (Ping timeout: 260 seconds)
2020-05-23 04:36:36	<--	gato (57cf4dfc@gateway/web/cgi-irc/kiwiirc.com/ip.87.207.77.252) has quit (Ping timeout: 260 seconds)
2020-05-23 04:37:01	<--	hyper_dave (~hyper_dav@196.188.242.167) has quit (Ping timeout: 256 seconds)
2020-05-23 04:37:35	<--	eukreign (~lex@64.223.173.35) has quit (Quit: Ex-Chat)
2020-05-23 04:39:14	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 246 seconds)
2020-05-23 04:39:23	-->	billybigrigger2 (~billybigr@S0106000c292e42fd.cg.shawcable.net) has joined #python
2020-05-23 04:39:59	<--	billybigrigger (~billybigr@S0106000c292e42fd.cg.shawcable.net) has quit (Ping timeout: 264 seconds)
2020-05-23 04:39:59	--	billybigrigger2 is now known as billybigrigger
2020-05-23 04:40:12	-->	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has joined #python
2020-05-23 04:42:41	-->	lauxley (~lauxley@2a01:e35:2fd5:2700:bc21:a00c:b260:8b02) has joined #python
2020-05-23 04:43:36	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 258 seconds)
2020-05-23 04:43:46	-->	gdarko (~sparky@77.29.52.139) has joined #python
2020-05-23 04:44:06	<--	Conjecture (~Conjectur@mobile-166-175-62-176.mycingular.net) has quit (Remote host closed the connection)
2020-05-23 04:44:23	gdarko	Any idea why the list is loosing it's value after iterating over it with for loop? I mean i can't iterate it again, no values in the list.
2020-05-23 04:44:29	-->	jarthur (~jarthur@2605:6000:1019:4971:d895:ef0a:c2c0:4b3e) has joined #python
2020-05-23 04:44:29	-->	Conjecture (~Conjectur@mobile-166-175-62-176.mycingular.net) has joined #python
2020-05-23 04:44:34	graingert	gdarko: show your code
2020-05-23 04:44:36	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 04:45:01	Nalt	Can someone point me to the documentation for 'with open ...  as f' https://i.imgur.com/HYF4TPR.png ? I cannot find it
2020-05-23 04:45:24	graingert	Nalt: https://docs.python.org/3/library/functions.html#open
2020-05-23 04:45:31	<--	Laniakea (~Laniakea@2.30.100.73) has quit (Ping timeout: 256 seconds)
2020-05-23 04:46:05	-->	akoana (~ah@089144219204.atnat0028.highway.a1.net) has joined #python
2020-05-23 04:46:07	Nalt	I don't see the 'with' thing there
2020-05-23 04:46:20	<--	nullheroes (~danielvu@168.235.66.22) has quit (Quit: WeeChat 2.8)
2020-05-23 04:46:31	graingert	Nalt: https://docs.python.org/3/library/io.html#io.IOBase
2020-05-23 04:46:37	graingert	Nalt: open returns an IOBase instance
2020-05-23 04:46:46	Nalt	ooh
2020-05-23 04:46:58	nedbat	gdarko: probably it isn't a list. it's a generator.
2020-05-23 04:47:04	-->	katana (~hentai@unaffiliated/katana) has joined #python
2020-05-23 04:47:13	Nalt	hm, and that ".format(x)" ?
2020-05-23 04:47:15	<--	jarthur (~jarthur@2605:6000:1019:4971:d895:ef0a:c2c0:4b3e) has quit (Remote host closed the connection)
2020-05-23 04:47:22	gdarko	nedbat: Yes, it's generator.
2020-05-23 04:47:34	-->	multifractal (~multifrac@host-92-2-120-196.as43234.net) has joined #python
2020-05-23 04:47:34	gdarko	https://bpa.st/KXWQ both find_* functions return generators
2020-05-23 04:47:38	nedbat	gdarko: ok, that's why: you can't re-iterate it
2020-05-23 04:47:42	<--	a_b_m (~abm@088156197168.unknown.vectranet.pl) has quit (Remote host closed the connection)
2020-05-23 04:47:57	<--	naitsabe1 (~naitsabes@unaffiliated/naitsabes) has quit (Quit: WeeChat 2.8)
2020-05-23 04:48:00	nedbat	gdarko: put the print inside the second loop and only have one loop
2020-05-23 04:48:04	-->	nullheroes (~danielvu@168.235.66.22) has joined #python
2020-05-23 04:48:16	nedbat	gdarko: hmm, except you have three...
2020-05-23 04:48:41	<--	Smeef (~deathonat@unaffiliated/smeef) has quit (Quit: (╯°□°）╯︵ ┻━━┻)
2020-05-23 04:48:42	gdarko	nedbat: those were for testing only, sorry. I am going to convert the generators to list now and clean up the code
2020-05-23 04:50:23	<--	recursive_curse (~miller@S0106f81d0f6109e3.wp.shawcable.net) has quit (Quit: leaving)
2020-05-23 04:50:57	-->	CoolerY (~coolerext@202.83.42.165) has joined #python
2020-05-23 04:51:55	<--	P1ro (~quassel@gentoo/user/p1ro) has quit (Quit: No Ping reply in 180 seconds.)
2020-05-23 04:52:04	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 04:52:20	<--	eXino (~eXino@5E8A5920.rev.sefiber.dk) has quit (Remote host closed the connection)
2020-05-23 04:53:15	<--	medard (~medard@unaffiliated/medard) has quit (Quit: Leaving)
2020-05-23 04:53:16	-->	P1ro (~quassel@gentoo/user/p1ro) has joined #python
2020-05-23 04:53:37	velix	gdarko: I've built a wheel and source package now, yipee. How can I inject/install it into the existing venv created by pipx the best way? Perhaps runpip?
2020-05-23 04:54:05	<--	DeadTOm (~deadtom@174-045-073-016.res.spectrum.com) has quit (Quit: DeadTOm)
2020-05-23 04:54:38	<--	CoolerZ (~coolerext@202.83.42.165) has quit (Ping timeout: 246 seconds)
2020-05-23 04:55:03	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2020-05-23 04:56:04	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 04:57:23	<--	honigkuchen (~honigkuch@ip5f5a65af.dynamic.kabel-deutschland.de) has quit (Ping timeout: 264 seconds)
2020-05-23 04:57:51	<--	codingthings (~codingthi@ool-182ec1d7.dyn.optonline.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 04:58:02	velix	This could work: pipx runpip --verbose mapproxy "install $PWD/mapnik-3.0.23-cp37-cp37m-linux_x86_64.whl"
2020-05-23 04:58:46	velix	ERROR: unknown command "install"
2020-05-23 04:58:51	bjs	gdarko: lists and generators aren't the same thing and they behave differently when you iterate them
2020-05-23 04:59:30	-->	Smeef (~deathonat@unaffiliated/smeef) has joined #python
2020-05-23 04:59:46	<--	wyclif (~daniel@unaffiliated/wyclif) has quit (Ping timeout: 264 seconds)
2020-05-23 04:59:47	<--	cry0 (~cry0@2607:fea8:8520:4a01:9c93:c534:7767:ad4a) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2020-05-23 04:59:54	<--	Techcable (znc@irc.techcable.net) has quit (Quit: ZNC - http://znc.in)
2020-05-23 05:00:10	<--	[MNEMONIC] (~while@62-210-114-224.rev.poneytelecom.eu) has quit (Read error: Connection reset by peer)
2020-05-23 05:00:13	<--	dastier (~dastier@178.127.56.107) has quit (Remote host closed the connection)
2020-05-23 05:00:22	-->	[MNEMONIC] (~while@62-210-114-224.rev.poneytelecom.eu) has joined #python
2020-05-23 05:00:31	velix	ah, got it working.
2020-05-23 05:00:41	velix	pipx inject mapproxy ./mapnik-3.0.23-cp37-cp37m-linux_x86_64.whl
2020-05-23 05:00:49	<--	XanGotBan (~XanGotBan@148.251.76.131) has quit (Quit: Seeya bois.)
2020-05-23 05:01:26	Nalt	in python for the regular expression package: https://docs.python.org/3.8/library/re.html How do I parse on every second or third tab?
2020-05-23 05:02:00	-->	aleagori (~ale@2a02:a312:c63d:8e00:c411:258a:9840:3209) has joined #python
2020-05-23 05:02:12	-->	Techcable (znc@irc.techcable.net) has joined #python
2020-05-23 05:02:14	-->	XanGotBan (~XanGotBan@148.251.76.131) has joined #python
2020-05-23 05:02:15	<--	sphenxes (~sphenxes@80.123.111.76) has quit (Quit: Leaving)
2020-05-23 05:02:37	Nalt	doing re.split('\s*[\t]\s*') does every tab, but I am trying to figure out how to do every second or third tab
2020-05-23 05:03:14	<--	audiofile (~notanaudi@unaffiliated/audiofile) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-05-23 05:03:31	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 05:03:32	velix	grym: Yipee. Lib has been found. Thanks for help.
2020-05-23 05:03:38	SnoopJeDi	Nalt, you might just want to use str.partition() with "\t" instead
2020-05-23 05:04:06	-->	slivera (~slivera@116.206.228.243) has joined #python
2020-05-23 05:04:27	SnoopJeDi	then slice the result and fuse the slices back together
2020-05-23 05:04:34	SnoopJeDi	(where appropriate, I mean)
2020-05-23 05:04:40	-->	jaziz (~jaziz@unaffiliated/jaziz) has joined #python
2020-05-23 05:04:58	-->	whiteduk3 (~whiteduk3@82.118.6.114) has joined #python
2020-05-23 05:05:12	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 256 seconds)
2020-05-23 05:05:33	<--	Pio (~pio@167.71.127.248) has quit (Quit: Coyote finally caught me)
2020-05-23 05:05:49	Nalt	mmm...
2020-05-23 05:05:50	<--	kunningd (~qwe@unaffiliated/kunningd) has quit (Ping timeout: 258 seconds)
2020-05-23 05:06:01	-->	Pio (~pio@167.71.127.248) has joined #python
2020-05-23 05:06:14	<--	whiteduk3 (~whiteduk3@82.118.6.114) has quit (Client Quit)
2020-05-23 05:06:36	<--	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has quit (Client Quit)
2020-05-23 05:06:56	<--	FnorZ (~FnorZ@unaffiliated/fnorz) has quit (Ping timeout: 260 seconds)
2020-05-23 05:07:44	<--	lazarus1 (~lazarus1@91.214.44.137) has quit (Read error: Connection reset by peer)
2020-05-23 05:07:57	<--	corvus-corax (~corvus-co@c-24-21-32-6.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2020-05-23 05:08:04	-->	kunningd (~qwe@unaffiliated/kunningd) has joined #python
2020-05-23 05:08:53	-->	snits (jsnitsel@nat/redhat/x-kjiogphadpbczhcq) has joined #python
2020-05-23 05:09:26	<--	nbro (~nbro@2a02:aa13:3142:3100:89c9:decf:9f42:c52c) has quit (Remote host closed the connection)
2020-05-23 05:10:05	<--	edlinde (~edlinde@183.83.146.78) has quit (Quit: edlinde)
2020-05-23 05:10:14	<--	snits (jsnitsel@nat/redhat/x-kjiogphadpbczhcq) has quit (Read error: Connection reset by peer)
2020-05-23 05:10:26	<--	legola (~legola@unaffiliated/legola) has quit (Remote host closed the connection)
2020-05-23 05:10:47	-->	brad (~brad@2600:1700:b420:d360:4e1d:96ff:fea6:3c59) has joined #python
2020-05-23 05:10:56	--	brad is now known as Brad73
2020-05-23 05:10:59	<--	Silmarilion (~Silmarili@87.116.183.249) has quit (Quit: Leaving)
2020-05-23 05:11:39	Brad73	Hi does anyone know how to get terminal commands like control+a control+k (start of buffer, kill buffer) working in pycharm python console?
2020-05-23 05:12:15	-->	abm (~abm@088156197168.unknown.vectranet.pl) has joined #python
2020-05-23 05:12:31	-->	AugustusCaesar24 (~AugustusC@99-190-112-116.lightspeed.irvnca.sbcglobal.net) has joined #python
2020-05-23 05:12:48	velix	Can I make this build in parallel? python3 setup.py sdist bdist_wheel
2020-05-23 05:13:15	-->	Conjecture_ (~Conjectur@mobile-166-175-57-63.mycingular.net) has joined #python
2020-05-23 05:13:21	meejah	velix: run two commands ("python3 setup.py sdist" and "... bdist_wheel")
2020-05-23 05:13:49	velix	meejah: Do I need sdist at all? my pip3 is up to date.
2020-05-23 05:13:59	-->	snits (jsnitsel@nat/redhat/x-kclvfaagrokyfwoh) has joined #python
2020-05-23 05:14:00	graingert	velix: you probably don't need sdist
2020-05-23 05:14:07	velix	graingert: Okay :)
2020-05-23 05:14:13	meejah	velix: depends if you want a .tar.gz or just wheels
2020-05-23 05:14:32	velix	meejah: Actually, wheels worked here. And I'm not planning to update it
2020-05-23 05:14:46	<--	kapsh (~kapsh@broadband-46-242-13-201.ip.moscow.rt.ru) has quit (Ping timeout: 264 seconds)
2020-05-23 05:15:22	s_	does anyone know why the re.Scanner documentation is missing?
2020-05-23 05:15:23	<--	Conjecture (~Conjectur@mobile-166-175-62-176.mycingular.net) has quit (Ping timeout: 240 seconds)
2020-05-23 05:15:44	s_	is it raymond hettinger's fault? heh
2020-05-23 05:16:33	syntaxman	What is the practical difference between a) setting a variable inside the __init__() function, and b) setting it in the class definition outside of any function?
2020-05-23 05:16:45	<--	jcarl43 (~jcarl@S01061c1b689d9d2f.vc.shawcable.net) has quit (Quit: WeeChat 2.8)
2020-05-23 05:16:49	<--	fission6 (~textual@cpe-72-231-0-7.nyc.res.rr.com) has quit (Quit: fission6)
2020-05-23 05:17:23	s_	its very weird. the docs actually have an implementation of a scanner in them... https://docs.python.org/3/library/re.html#writing-a-tokenizer
2020-05-23 05:17:31	-->	sid21g (~sid21g@2409:4052:601:6e66:6832:248b:186a:dc61) has joined #python
2020-05-23 05:17:31	<--	P1ro (~quassel@gentoo/user/p1ro) has quit (Ping timeout: 260 seconds)
2020-05-23 05:18:32	sid21g	Hey guys! Wanted to know the difference between dictionary and python objects, if they are similar why are we able to access members of one with dot and not other? Or are they not similar?
2020-05-23 05:18:34	<--	purplex88 (75cd302f@gateway/web/cgi-irc/kiwiirc.com/ip.117.205.48.47) has quit (Ping timeout: 272 seconds)
2020-05-23 05:18:49	velix	Hmm, but can I run bdist_wheel in parallel? Sorry, I've read, `bdist_wheel -- -- -j24` might work?
2020-05-23 05:19:05	dsc_	-j24? you mad man
2020-05-23 05:19:47	vlt	sid21g: Dicts can have other types than strings as keys, for example.
2020-05-23 05:20:13	<--	quetz (~quetz@93.185.30.25) has quit
2020-05-23 05:20:28	s_	"What's Scanner?" --GVR  https://mail.python.org/pipermail/python-dev/2003-April/035073.html
2020-05-23 05:20:42	velix	dsc_: Why? Xeon :)
2020-05-23 05:21:01	sid21g	thanks vit, that was a good one. Could you tell why can we not access the dict elements using '.'
2020-05-23 05:21:13	Brad73	object."hello" = val ;)
2020-05-23 05:21:58	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 05:22:08	-->	jmarston (~ncostarj@2804:14d:5c9c:828d:490a:e27:5d79:bd06) has joined #python
2020-05-23 05:22:13	velix	dsc_: hmm, seems like my setuptools don't like -j
2020-05-23 05:22:30	vlt	sid21g: For exactly that reason (among others).
2020-05-23 05:22:39	<--	cecep (~weechat@x4db77a29.dyn.telefonica.de) has quit (Ping timeout: 260 seconds)
2020-05-23 05:22:40	<--	sparkles (~sparkles@rrcs-70-63-80-182.midsouth.biz.rr.com) has quit (Ping timeout: 260 seconds)
2020-05-23 05:22:40	<--	Conjecture_ (~Conjectur@mobile-166-175-57-63.mycingular.net) has quit (Read error: Connection reset by peer)
2020-05-23 05:22:57	velix	but `build` seems to have -j
2020-05-23 05:23:01	<--	snails (~snails@pool-96-248-97-17.cmdnnj.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-05-23 05:23:13	davidsong	hiya. is there an easy way to execute python scripts from my webserver, like I can bung an index.php in a dir and it just works?
2020-05-23 05:23:13	-->	BigShip[m]9 (~Bigshipm]@unaffiliated/bigship) has joined #python
2020-05-23 05:23:19	nedbat	sid21g: dicts have two kinds of things: keys, which are data, and methods, which are part of the dict class
2020-05-23 05:23:20	<--	djhankb (~djhankb@208.113.164.68) has quit (Quit: Ping timeout (120 seconds))
2020-05-23 05:23:33	davidsong	is CGI what I'm looking for?
2020-05-23 05:23:38	<--	CubicEarth (~CubicEart@c-67-168-1-172.hsd1.wa.comcast.net) has quit (Ping timeout: 272 seconds)
2020-05-23 05:23:40	nedbat	sid21g: if keys were accessed with . , then those two things would be mixed together.
2020-05-23 05:23:44	davidsong	or are there more modern solutions?
2020-05-23 05:23:49	-->	Conjecture (~Conjectur@mobile-166-175-57-63.mycingular.net) has joined #python
2020-05-23 05:23:49	-->	cecep (~weechat@x4db77a29.dyn.telefonica.de) has joined #python
2020-05-23 05:23:49	-->	djhankb (~djhankb@208.113.164.68) has joined #python
2020-05-23 05:23:54	nedbat	sid21g: d['get'] and d.get are two different things, and they don't collide.
2020-05-23 05:24:09	velix	I don't like Python. It's so hard to get support and those 1000 versions and builds and tools makes it as worde as node :(
2020-05-23 05:24:10	<--	calloc (~mrwildric@047-006-018-108.res.spectrum.com) has quit (Ping timeout: 265 seconds)
2020-05-23 05:24:11	s_	does anyone know who "/F" might be in reference to the python re implementation
2020-05-23 05:24:16	<--	foul_owl_ (~foul_owl@104.140.79.44) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:16	<--	death916 (~Death916@unaffiliated/death916) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:18	<--	kype (uid176843@gateway/web/irccloud.com/x-nduqgenrdhtywwuq) has quit (Quit: Connection closed for inactivity)
2020-05-23 05:24:28	velix	as worse*
2020-05-23 05:24:29	nedbat	s_: where do you see that?
2020-05-23 05:24:31	-->	_Warl0ck- (~warl0ck@c-73-83-145-12.hsd1.wa.comcast.net) has joined #python
2020-05-23 05:24:38	s_	nedbat: https://mail.python.org/pipermail/python-dev/2003-April/035070.html
2020-05-23 05:24:39	<--	tomku (~tomku@unaffiliated/tomku) has quit (Ping timeout: 265 seconds)
2020-05-23 05:24:44	<--	lakitu (~lakitu@unaffiliated/lakitu) has quit (Ping timeout: 246 seconds)
2020-05-23 05:24:44	<--	aleagori (~ale@2a02:a312:c63d:8e00:c411:258a:9840:3209) has left #python ("Konversation terminated!")
2020-05-23 05:24:54	<--	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:54	<--	BigShip[m] (~Bigshipm]@unaffiliated/bigship) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:54	<--	seoul_man (~meh@wilug/newlug/seoul-man) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:54	<--	_Warl0ck (~warl0ck@c-73-83-145-12.hsd1.wa.comcast.net) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:54	<--	KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) has quit (Ping timeout: 272 seconds)
2020-05-23 05:24:54	--	BigShip[m]9 is now known as BigShip[m]
2020-05-23 05:24:59	graingert	davidsong: not really no
2020-05-23 05:25:04	graingert	davidsong: you might like django it's very easy
2020-05-23 05:25:21	nedbat	s_: i don't know.  You are digging deep in the archives
2020-05-23 05:25:26	-->	Lucas_Gray (~Wryhder@197.210.226.75) has joined #python
2020-05-23 05:25:32	<--	gimmic (~gimmic@unaffiliated/gimmic) has quit (Ping timeout: 272 seconds)
2020-05-23 05:25:37	-->	Conjecture_ (~Conjectur@mobile-166-175-57-63.mycingular.net) has joined #python
2020-05-23 05:25:52	s_	nedbat: well, yeah. i was hoping to find an answer to the question "Why isn't re.scanner documented?"
2020-05-23 05:26:03	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 05:26:03	<--	Soo_Slow (Soo_Slow@gateway/vpn/privateinternetaccess/sooslow/x-31376162) has quit (Quit: Soo_Slow)
2020-05-23 05:26:17	-->	tomku (~tomku@unaffiliated/tomku) has joined #python
2020-05-23 05:26:20	davidsong	graingert: aw that sucks. I'm basically squirting out a quick script that I want friends to be able to execute from the web. it'd be nice if I could just write it in Python
2020-05-23 05:26:32	-->	gimmic (~gimmic@unaffiliated/gimmic) has joined #python
2020-05-23 05:26:35	nedbat	s_: if you want to know who /F is, I would go back in the git history to april 2003, and git blame
2020-05-23 05:26:36	-->	KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) has joined #python
2020-05-23 05:26:42	<--	flex14 (~flex14@c-75-70-155-244.hsd1.co.comcast.net) has quit (Quit: Leaving, lenovo notebook life (sorry, maybe my battery died?))
2020-05-23 05:26:44	-->	nbro (~nbro@31-10-153-18.cgn.dynamic.upc.ch) has joined #python
2020-05-23 05:26:45	s_	surprisingly little talk about it, esp given its covered in a relatively famous dbeaz presentation on generators where he live codes a compiler
2020-05-23 05:26:53	graingert	davidsong: https://adamj.eu/tech/2019/04/03/django-versus-flask-with-single-file-applications/
2020-05-23 05:27:01	-->	Conjecture__ (~Conjectur@mobile-166-175-57-63.mycingular.net) has joined #python
2020-05-23 05:27:06	graingert	davidsong: you can use django with very little code
2020-05-23 05:27:17	-->	Tanvir (~tanvir@wikimedia/wikitanvir) has joined #python
2020-05-23 05:27:24	Brad73	does anyone know any good introduction to django that is not as wordy as the docs but still very technical?
2020-05-23 05:27:31	nedbat	davidsong: cgi is the closest thing you will find.
2020-05-23 05:27:43	auser0	hello, i am trying to use xpath to find elements which are similar to  <script type="text/template">
2020-05-23 05:28:04	auser0	i did m = root.xpath(".//*[local-name()='script']/[@type='text/template']") but seems wrong, any idea?
2020-05-23 05:28:07	<--	nbro (~nbro@31-10-153-18.cgn.dynamic.upc.ch) has quit (Remote host closed the connection)
2020-05-23 05:28:10	<--	Rudolf (~rodolfo@unaffiliated/rudolf) has quit (Remote host closed the connection)
2020-05-23 05:28:23	<--	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has quit (Quit: ZNC - https://znc.in)
2020-05-23 05:28:25	<--	Conjecture (~Conjectur@mobile-166-175-57-63.mycingular.net) has quit (Ping timeout: 256 seconds)
2020-05-23 05:28:32	<--	Conjecture__ (~Conjectur@mobile-166-175-57-63.mycingular.net) has quit (Remote host closed the connection)
2020-05-23 05:28:38	nedbat	auser0: does this not work?  ".//script/[@type='text/template']"
2020-05-23 05:28:46	davidsong	nedbat: I guess I'll give CGI a try. graingert, I don't want to run a webserver, I've already got one of those
2020-05-23 05:28:52	davidsong	thanks guys
2020-05-23 05:28:58	<--	jmarston (~ncostarj@2804:14d:5c9c:828d:490a:e27:5d79:bd06) has quit (Ping timeout: 272 seconds)
2020-05-23 05:29:01	graingert	:/
2020-05-23 05:29:01	nedbat	davidsong: django isn't a webserver
2020-05-23 05:29:11	<--	octav1a (~Rboreal_F@69.136.97.6) has quit (Ping timeout: 264 seconds)
2020-05-23 05:29:25	s_	nedbat: you are testing my git knowledge. fair enough
2020-05-23 05:29:27	graingert	nedbat: it's a wsgi... middleware?
2020-05-23 05:29:33	graingert	or a wsgi app?
2020-05-23 05:29:39	graingert	I'm not sure what it "is"
2020-05-23 05:29:42	-->	calloc (~mrwildric@047-006-018-108.res.spectrum.com) has joined #python
2020-05-23 05:29:46	-->	CubicEarth (~CubicEart@c-67-168-1-172.hsd1.wa.comcast.net) has joined #python
2020-05-23 05:29:58	<--	Conjecture_ (~Conjectur@mobile-166-175-57-63.mycingular.net) has quit (Ping timeout: 246 seconds)
2020-05-23 05:30:16	-->	Conjecture (~Conjectur@mobile-166-175-57-63.mycingular.net) has joined #python
2020-05-23 05:30:48	nedbat	s_: https://github.com/nedbat/cpython/blob/ff139a8a44d079a8261292044c82f128343fea09/Lib/re.py
2020-05-23 05:30:49	-->	foul_owl_ (~foul_owl@104.140.79.44) has joined #python
2020-05-23 05:31:02	bjs	s_: it seems to be written by https://wiki.python.org/moin/FredrikLundh
2020-05-23 05:31:06	nedbat	s_: (oops, that's my fork, but same thing)
2020-05-23 05:31:47	-->	gambl0re (~rickyjw@unaffiliated/gambl0re) has joined #python
2020-05-23 05:31:53	bjs	s_: re.Scanner that is
2020-05-23 05:32:09	SnoopJeDi	s_, http://lucumr.pocoo.org/2015/11/18/pythons-hidden-re-gems/ is also a rewrite and a good article besides
2020-05-23 05:32:14	<--	Betal (~Betal@unaffiliated/betal) has quit (Quit: WeeChat 2.8)
2020-05-23 05:32:26	s_	SnoopJeDi: yeah, found the same article
2020-05-23 05:32:31	davidsong	nedbat: oh I just skim-read the top half. I guess I don't care about routes or anything. I want to spit out some HTML, capture a POST, execute a function
2020-05-23 05:32:50	ChrisWarrick	davidsong: CGI is a thing, but not a very supported or liked thing in the Python world
2020-05-23 05:32:51	davidsong	last time I did something like this I used PHP, and it was awful
2020-05-23 05:32:56	SnoopJeDi	s_, it points out that re.Scanner is undocumented, but also not very useful :)
2020-05-23 05:33:02	-->	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2020-05-23 05:33:17	davidsong	anything as simple as PHP but not as... well, PHP?
2020-05-23 05:33:19	-->	jarthur (~jarthur@2605:6000:1019:4971:d895:ef0a:c2c0:4b3e) has joined #python
2020-05-23 05:33:21	ChrisWarrick	davidsong: what made PHP awful?
2020-05-23 05:33:25	-->	frank1e (~frank1e@unaffiliated/frank1e) has joined #python
2020-05-23 05:33:27	-->	lakitu (~lakitu@unaffiliated/lakitu) has joined #python
2020-05-23 05:33:28	<--	lakitu (~lakitu@unaffiliated/lakitu) has quit (Max SendQ exceeded)
2020-05-23 05:33:46	<--	Tanvir (~tanvir@wikimedia/wikitanvir) has quit (Ping timeout: 272 seconds)
2020-05-23 05:34:10	davidsong	ChrisWarrick: it's just awful. "a fractal of bad design" as others have put it
2020-05-23 05:34:31	-->	Alternity8 (~tinycat@unaffiliated/tinycat) has joined #python
2020-05-23 05:34:34	auser0	ya nedbat errors out too
2020-05-23 05:34:40	Seirdy	hello again everyone! so i think i hit a good baseline level of functionality for my new program weestats (https://git.sr.ht/~seirdy/weestats) which analyzes weechat logs and outputs stats for a given duration (sorting channels by active nicks/messages and displaying chattiest nicks per channel). i was wondering if anybody could take a look.
2020-05-23 05:34:41	Seirdy	i was also wondering if the massive amount of stdlib imports in https://git.sr.ht/~seirdy/weestats/tree/master/weestats/gather_stats.py is worrying and if i should refactor it.
2020-05-23 05:34:49	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 05:34:53	davidsong	ChrisWarrick: https://www.pixelstech.net/article/1334166417-PHP%3A-a-fractal-of-bad-design if you've not read it
2020-05-23 05:34:55	nedbat	auser0: if you have an error, share it with us
2020-05-23 05:35:04	Seirdy	gotta add some tests and more extensive docs (currently i just have a bunch of one-line docstrings).
2020-05-23 05:35:40	ChrisWarrick	davidsong: I have (and you linked to some shady copy of Eevee’s original article)
2020-05-23 05:35:53	ChrisWarrick	davidsong: so the only problems you had with PHP was that PHP code is ugly?
2020-05-23 05:35:59	davidsong	oh have I?
2020-05-23 05:36:11	ChrisWarrick	davidsong: the correct link is https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/
2020-05-23 05:36:28	davidsong	yeah I guses it's like programming in a script that tries to be C, with all C's ugliness
2020-05-23 05:36:30	<--	Alternity (~tinycat@unaffiliated/tinycat) has quit (Ping timeout: 258 seconds)
2020-05-23 05:36:30	--	Alternity8 is now known as Alternity
2020-05-23 05:36:38	<--	jarthur (~jarthur@2605:6000:1019:4971:d895:ef0a:c2c0:4b3e) has quit (Remote host closed the connection)
2020-05-23 05:36:44	davidsong	it's better than bash I guess
2020-05-23 05:36:54	<--	Alternity (~tinycat@unaffiliated/tinycat) has quit (Client Quit)
2020-05-23 05:36:57	<--	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has quit (Ping timeout: 256 seconds)
2020-05-23 05:37:11	davidsong	but Python and Ruby are trying to be BASIC. I guess that's what I'm looking for.
2020-05-23 05:37:16	Seirdy	> better than bash
2020-05-23 05:37:18	Seirdy	that's a low bar
2020-05-23 05:37:19	-->	lakitu (~lakitu@unaffiliated/lakitu) has joined #python
2020-05-23 05:37:27	s_	https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/
2020-05-23 05:37:28	-->	Alternity (~tinycat@unaffiliated/tinycat) has joined #python
2020-05-23 05:37:45	davidsong	can I run JavaScript by bunging it in a dir?
2020-05-23 05:37:57	-->	ghost43_ (~daer@gateway/tor-sasl/daer) has joined #python
2020-05-23 05:38:05	<--	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-05-23 05:38:05	Seirdy	more like python is trying to be ABC (cuz i mean it literally is intended to be its spiritual successor)
2020-05-23 05:38:13	davidsong	actually maybe JavaScript is too constrained, and doesn't have a standard library
2020-05-23 05:38:24	ChrisWarrick	davidsong: the PHP way of just putting files on a server and requesting them directly doesn’t work with any other language
2020-05-23 05:38:28	-->	cisco (~cisco@a109-49-63-150.cpe.netcabo.pt) has joined #python
2020-05-23 05:38:28	<--	Franch (~Username@59.red-83-53-217.dynamicip.rima-tde.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-05-23 05:38:32	<--	ghost43 (~daer@gateway/tor-sasl/daer) has quit (Ping timeout: 240 seconds)
2020-05-23 05:38:33	-->	eigenstate (~eigenstat@unaffiliated/eigenstate) has joined #python
2020-05-23 05:38:38	-->	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has joined #python
2020-05-23 05:38:40	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-05-23 05:38:44	ChrisWarrick	(unless you do CGI, which node probably doesn’t support, and Python/Ruby discourage)
2020-05-23 05:38:48	davidsong	ah balls to it then, I'll bite the bullet and go back in time 20 years and put my PHP hat on
2020-05-23 05:38:59	ChrisWarrick	davidsong: why not just use flask?
2020-05-23 05:39:12	<--	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 240 seconds)
2020-05-23 05:39:25	davidsong	can I drop an index.py in a dir and it'll just run?
2020-05-23 05:39:28	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Ping timeout: 272 seconds)
2020-05-23 05:39:29	graingert	no
2020-05-23 05:39:39	-->	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has joined #python
2020-05-23 05:39:58	<--	jay-m_ (~jay-m@129.0.205.80) has quit (Ping timeout: 264 seconds)
2020-05-23 05:40:00	-->	Betal (~Betal@unaffiliated/betal) has joined #python
2020-05-23 05:40:37	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 265 seconds)
2020-05-23 05:40:47	davidsong	I'm making an interface to youtube-dl that my dad can run on my webserver instead of pestering me to download music to his mp3 player
2020-05-23 05:40:59	graingert	ok write a django app
2020-05-23 05:41:09	graingert	it will pay off in the short and long term
2020-05-23 05:41:12	Seirdy	davidsong: your dad needs persepolis
2020-05-23 05:41:45	Seirdy	persepolis has youtube-dl and aria2 baked, wrapped up in a noob-friendly PyQt interface.
2020-05-23 05:42:07	davidsong	oh cool, that sounds reasonable Seirdy, I might just point him at that
2020-05-23 05:42:28	davidsong	graingert: if I have to start servers after a reboot then it's probably a bad idea
2020-05-23 05:42:31	<--	AbedB_ (~AbedBhuty@176.113.72.212) has quit (Ping timeout: 256 seconds)
2020-05-23 05:42:38	graingert	you don't need to reboot
2020-05-23 05:42:42	davidsong	I don't really want more infrastructure to manage
2020-05-23 05:42:57	davidsong	there's enough plates spinning around here without adding more to the show
2020-05-23 05:43:07	graingert	Seirdy: like this? https://github.com/persepolisdm/persepolis
2020-05-23 05:43:18	Seirdy	graingert: that's the one
2020-05-23 05:43:48	<--	snits (jsnitsel@nat/redhat/x-kclvfaagrokyfwoh) has quit (Ping timeout: 258 seconds)
2020-05-23 05:44:53	-->	jarthur (~jarthur@2605:6000:1019:4971:d895:ef0a:c2c0:4b3e) has joined #python
2020-05-23 05:45:12	davidsong	hrm maybe I should just write something that makes CGI from Python easy
2020-05-23 05:45:28	graingert	asgi and wsgi is better though
2020-05-23 05:45:40	<--	Asmodean (~Asmodean@91.141.1.12.wireless.dyn.drei.com) has quit (Ping timeout: 260 seconds)
2020-05-23 05:47:16	SnoopJeDi	Yes, ideally don't write CGI at all
2020-05-23 05:47:45	-->	luischi (~luischi@116.red-88-1-220.dynamicip.rima-tde.net) has joined #python
2020-05-23 05:47:50	davidsong	well, I guess I'm thinking I'd like to write some HTMLish template with Python in it
2020-05-23 05:47:53	<--	kindling (u1Afx9cD@unaffiliated/kindling) has quit (Quit: The cake is a lie!)
2020-05-23 05:48:06	-->	AbedB_ (~AbedBhuty@bzq-79-179-89-207.red.bezeqint.net) has joined #python
2020-05-23 05:48:07	davidsong	like moustache or whatever the other one is called
2020-05-23 05:48:19	<--	TomDotTom (~TomDotTom@c-73-141-225-227.hsd1.de.comcast.net) has quit (Ping timeout: 260 seconds)
2020-05-23 05:48:22	SnoopJeDi	That seems unrelated to the interface
2020-05-23 05:48:44	davidsong	and some default place where a python module is imported, and gets executed as the template is parsed
2020-05-23 05:48:50	-->	snails (~snails@pool-96-248-97-17.cmdnnj.fios.verizon.net) has joined #python
2020-05-23 05:49:11	-->	Asmodean (~Asmodean@178.115.128.218.wireless.dyn.drei.com) has joined #python
2020-05-23 05:49:14	davidsong	so I get a similar developer experience as a php script
2020-05-23 05:49:19	-->	snits (jsnitsel@nat/redhat/x-belcemzwzhxvmslm) has joined #python
2020-05-23 05:49:20	SnoopJeDi	davidsong, are you familiar with Jinja?
2020-05-23 05:49:34	davidsong	ah yeah that's it, Jinja, forgot what it was called
2020-05-23 05:50:42	Seirdy	quick question: at what point does a python file have too many stdlib imports?
2020-05-23 05:50:58	bjs	Seirdy: when you are importing things you dont use
2020-05-23 05:51:10	SnoopJeDi	good answer
2020-05-23 05:51:10	Seirdy	the file in question: https://git.sr.ht/~seirdy/weestats/tree/master/weestats/gather_stats.py
2020-05-23 05:51:11	<--	gelignite (~gelignite@55d4e777.access.ecotel.net) has quit (Quit: Stay safe! Stay at home! Stop the chain reaction!)
2020-05-23 05:51:41	SnoopJeDi	10 imports is definitely not "a lot," assuming you pass bjs's bar
2020-05-23 05:51:43	-->	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has joined #python
2020-05-23 05:51:57	SnoopJeDi	err, 11, I missed the weestats one :)
2020-05-23 05:51:58	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 05:52:01	Seirdy	bjs: don't unused imports typically cause like all 500 static analysis tools/linter to summon the living dead to torment you until you repent?
2020-05-23 05:52:11	SnoopJeDi	no
2020-05-23 05:52:14	<--	frank1e (~frank1e@unaffiliated/frank1e) has quit
2020-05-23 05:52:25	bjs	Seirdy: unused imports is exactly the point it becomes 'too many' :)
2020-05-23 05:52:28	SnoopJeDi	unless the things you're importing do it themselves, which is definitely nothing in stdlib
2020-05-23 05:52:33	bjs	Seirdy: if you're using the imports then by definition it's not too many
2020-05-23 05:52:40	SnoopJeDi	these are tools that are usually invoked from not-Python, though.
2020-05-23 05:53:12	Seirdy	flake8, pylint, py-unused-imports, etc. all throw a hissy-fit whenever i have an unused import.
2020-05-23 05:53:24	-->	honigkuchen (~honigkuch@ip5f5a65af.dynamic.kabel-deutschland.de) has joined #python
2020-05-23 05:53:26	Seirdy	and some vim plugins and IDEs auto-delete them
2020-05-23 05:53:26	SnoopJeDi	oh, I misread that question, oops
2020-05-23 05:53:42	SnoopJeDi	it's a good thing to check for, yea
2020-05-23 05:53:56	<--	lambda (~xiretza@213-47-232-21.cable.dynamic.surfer.at) has quit (Ping timeout: 256 seconds)
2020-05-23 05:54:06	SnoopJeDi	and if it matters to your code, it probably means the import is having serious side effects and you probably have bigger fish to fry in that case
2020-05-23 05:54:39	<--	honigkuchen (~honigkuch@ip5f5a65af.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-05-23 05:54:40	<--	cecep (~weechat@x4db77a29.dyn.telefonica.de) has quit (Ping timeout: 272 seconds)
2020-05-23 05:55:22	-->	christoph_ (~christoph@37.209.46.140) has joined #python
2020-05-23 05:55:25	Seirdy	also, when should i switch from "from <lib> import <modules>" to just "import <lib>" and using "lib.module"? i know that people usually don't ever do it with the typing lib unless they're avoiding a name collision.
2020-05-23 05:55:53	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 05:55:55	davidsong	Seirdy: when your code looks long/ugly/difficult to read
2020-05-23 05:56:31	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Quit: Bin weg.)
2020-05-23 05:56:34	<--	cisco (~cisco@a109-49-63-150.cpe.netcabo.pt) has quit (Quit: leaving)
2020-05-23 05:56:36	<--	AugustusCaesar24 (~AugustusC@99-190-112-116.lightspeed.irvnca.sbcglobal.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2020-05-23 05:56:39	ChrisWarrick	Seirdy: I tend to use `import module` much more than from-imports
2020-05-23 05:57:40	davidsong	if you're repeating module.stuff all over the place and it looks verbose, then use from module import thing1, thing2
2020-05-23 05:57:58	Seirdy	got it.
2020-05-23 05:58:36	<--	methyl (~methyl@64.44.55.108) has quit (Read error: Connection reset by peer)
2020-05-23 05:58:51	Seirdy	any other general feedback on weestats would be appreciated
2020-05-23 05:59:07	gambl0re	is github down?
2020-05-23 05:59:31	Seirdy	gambl0re: works on my machine^TM
2020-05-23 05:59:31	<--	wymillerlinux (~wymillerl@097-084-004-094.res.spectrum.com) has quit (Ping timeout: 256 seconds)
2020-05-23 05:59:34	--	Skeer_Away is now known as Skeer
2020-05-23 05:59:40	davidsong	gambl0re: yes
2020-05-23 05:59:49	davidsong	500 here
2020-05-23 05:59:53	Seirdy	aaand it's donwn
2020-05-23 06:00:05	Seirdy	this is why i always use multiple remotes
2020-05-23 06:00:11	Habbie	https://www.githubstatus.com/
2020-05-23 06:00:36	davidsong	Seirdy: any reason for the 'is not None' rather than just using the falsey property of dates?
2020-05-23 06:00:49	<--	LKoen (~LKoen___@81.255.219.130) has quit (Remote host closed the connection)
2020-05-23 06:00:55	Seirdy	davidsong: didn't think of that. lemme try it out.
2020-05-23 06:01:27	davidsong	Seirdy: also IRCChannel, I'd put "Stats" in the class name so you don't need the helpdoc
2020-05-23 06:01:51	Seirdy	davidsong: good idea.
2020-05-23 06:01:51	<--	sharktamer (~sharktame@cpc157207-watf11-2-0-cust5.15-2.cable.virginm.net) has quit (Read error: Connection reset by peer)
2020-05-23 06:02:00	-->	sharktamer (~sharktame@cpc157207-watf11-2-0-cust5.15-2.cable.virginm.net) has joined #python
2020-05-23 06:02:15	ChrisWarrick	gambl0re: F5 can fix it
2020-05-23 06:02:25	SnoopJeDi	gambl0re, they're been having trouble for half the day
2020-05-23 06:02:39	<--	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2020-05-23 06:03:17	-->	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has joined #python
2020-05-23 06:03:32	Seirdy	also in parse.py, i'm currently defining IRCMessage._nick outside __init__ so i can distinguish between it being "None" (i.e., we already found that there is nick for the message) and non-existent (i.e., we haven't yet checked). is there a better way to do this?
2020-05-23 06:03:43	<--	snits (jsnitsel@nat/redhat/x-belcemzwzhxvmslm) has quit (Ping timeout: 260 seconds)
2020-05-23 06:03:44	-->	nbro (~nbro@2a02:aa13:3142:3100:bcd2:9dda:8b02:aaa) has joined #python
2020-05-23 06:03:46	gambl0re	SnoopJeDi: o really?
2020-05-23 06:03:52	Seirdy	s/there is nick/there is no nick/
2020-05-23 06:04:03	<--	Tenobrus (~Tenobrus@c-24-7-63-190.hsd1.ca.comcast.net) has quit (Quit: Out.)
2020-05-23 06:04:07	SnoopJeDi	gambl0re, see the link that Habbie shared
2020-05-23 06:04:08	-->	localhost522 (8d9b8f11@141.155.143.17) has joined #python
2020-05-23 06:04:25	<--	borisrunak (~pkarpesis@217.146.90.34.bc.googleusercontent.com) has quit (Quit: Idle timeout reached: 10800s)
2020-05-23 06:04:45	davidsong	Seirdy: what do you mean there's no nick for a message? don't all messages have a sender?
2020-05-23 06:04:58	-->	snits (jsnitsel@nat/redhat/x-oyitfssaxodoakpg) has joined #python
2020-05-23 06:05:23	Seirdy	davidsong: in weechat logs, you might get messages generated by scripts or join/leave msgs with an ascii arrow in the nick column.
2020-05-23 06:05:40	<--	snits (jsnitsel@nat/redhat/x-oyitfssaxodoakpg) has quit (Read error: Connection reset by peer)
2020-05-23 06:05:40	<--	ghost43_ (~daer@gateway/tor-sasl/daer) has quit (Remote host closed the connection)
2020-05-23 06:05:53	<--	kolbrich (~quassel@185-118-198-140.clients.srvfarm.net) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2020-05-23 06:05:56	-->	ghost43 (~daer@gateway/tor-sasl/daer) has joined #python
2020-05-23 06:06:02	Seirdy	a "normal message" with a nick and message body is currently the only thing that weestats cares about, but it might utilize join/leave/chanmsg for some other stuff in the future.
2020-05-23 06:06:02	davidsong	Seirdy: ah okay. So maybe create a default value for those?
2020-05-23 06:06:15	<--	donaman (~donaman@host86-145-6-152.range86-145.btcentralplus.com) has quit
2020-05-23 06:06:32	<--	Alexander-47u (~Alexander@85.203.44.133) has quit (Remote host closed the connection)
2020-05-23 06:07:14	davidsong	I mean, Python None being not checked, but SystemMessage or NoUser or similar being those things explicitly
2020-05-23 06:07:21	<--	dlam (~user@2600:1700:dac0:52d0:506d:6f34:9e95:7c6b) has quit (Ping timeout: 260 seconds)
2020-05-23 06:07:36	-->	audioburn (~audioburn@unaffiliated/theology) has joined #python
2020-05-23 06:07:43	<--	localhost522 (8d9b8f11@141.155.143.17) has quit (Remote host closed the connection)
2020-05-23 06:08:04	-->	localhost522 (8d9b8f11@141.155.143.17) has joined #python
2020-05-23 06:08:19	-->	gar (~textual@pdpc/supporter/professional/gar) has joined #python
2020-05-23 06:08:23	<--	localhost522 (8d9b8f11@141.155.143.17) has quit (Remote host closed the connection)
2020-05-23 06:08:31	Seirdy	davidsong: what i currently do is set nick to "none" if there isn't a nick, or to the nick string. if self._nick exists i just return it, if it doesn't exist i find it. so there's different behavior for self._nick not existing (find and return it) and self._nick existing, meaning it was previously found (return whether it's a None or string).
2020-05-23 06:08:32	<--	Trieste (~T@unaffiliated/trieste) has quit (Ping timeout: 260 seconds)
2020-05-23 06:08:39	Seirdy	so self._nick is kind of like a cached value
2020-05-23 06:08:52	davidsong	I can't say I'm a fan of all this typing, not really a criticism of your code but in general, not that I have much experience with it. Seems like a lot of boilerplate
2020-05-23 06:09:27	-->	kolbrich (~quassel@185-118-198-140.clients.srvfarm.net) has joined #python
2020-05-23 06:10:05	davidsong	Seirdy: have you heard the good news of our lord and saviour, @lru_cache?
2020-05-23 06:10:09	<--	theorangeone (~quassel@host81-143-201-103.in-addr.btopenworld.com) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2020-05-23 06:10:25	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 06:10:28	Seirdy	davidsong: it's saved me from several errors. i try to be specific in what i return (list/tuple/dict) but generous in what i accept (iterable/sequence or mapping)
2020-05-23 06:10:53	-->	Trieste (~T@unaffiliated/trieste) has joined #python
2020-05-23 06:11:03	Seirdy	davidsong: yeah i'll try it out. i think it caused an issue last time but my code looks different now.
2020-05-23 06:11:08	-->	theology (~audioburn@unaffiliated/theology) has joined #python
2020-05-23 06:11:12	davidsong	I probably overuse this pattern, but I really like it: https://bpa.st/WQJA
2020-05-23 06:11:20	sid21g	Hey nedbat: Always a pleasure to hear from you. Thanks for the reply!
2020-05-23 06:11:32	nedbat	sid21g: hey hey
2020-05-23 06:11:56	-->	methyl (~methyl@c-73-210-224-53.hsd1.il.comcast.net) has joined #python
2020-05-23 06:12:16	sid21g	nedbat: Have been helped by you many times over the years :P
2020-05-23 06:12:28	-->	methyl_ (~methyl@170.130.139.91) has joined #python
2020-05-23 06:12:29	nedbat	sid21g: so you;re the one :)
2020-05-23 06:12:34	davidsong	Decorate a method with @cached_property and you get object.attribute that gets calculated the first time it's called
2020-05-23 06:12:53	-->	lambda (~xiretza@mail.xiretza.xyz) has joined #python
2020-05-23 06:12:54	Seirdy	davidsong: thing is, it might be helpful to distinguish whether self._nick is unknown (we have to find it) or whether we previously found it and discovered its value to be None.
2020-05-23 06:13:15	Seirdy	yeah i've used @lru_cache in the past for simple memoization
2020-05-23 06:13:46	<--	audioburn (~audioburn@unaffiliated/theology) has quit (Ping timeout: 260 seconds)
2020-05-23 06:13:54	Seirdy	davidsong: cached_property isn't py36 right?
2020-05-23 06:13:58	Seirdy	i might need a backport
2020-05-23 06:14:10	<--	velix (~velix@unaffiliated/velix) has left #python ("Leaving")
2020-05-23 06:14:10	davidsong	Seirdy: the snippet I posted reimplements it
2020-05-23 06:14:20	-->	bilb_ono (~alexmarsh@ip70-185-130-174.sb.sd.cox.net) has joined #python
2020-05-23 06:14:25	davidsong	it was taken out I think
2020-05-23 06:14:47	Seirdy	i already use a backport of dataclasses if python < 3.7
2020-05-23 06:15:12	davidsong	anyway, if you have a nick that has been checked and it turns out it's not a real nickname, just set it to something that represents that
2020-05-23 06:15:59	<--	bluesmonk_ (uid318026@gateway/web/irccloud.com/x-tmzdrnjwisrgejbi) has quit (Quit: Connection closed for inactivity)
2020-05-23 06:16:25	Seirdy	yeah https://docs.python.org/3/library/functools.html#functools.cached_property <- new in py37
2020-05-23 06:16:35	Seirdy	wait no i mean py38
2020-05-23 06:16:50	<--	methyl (~methyl@c-73-210-224-53.hsd1.il.comcast.net) has quit (Ping timeout: 272 seconds)
2020-05-23 06:16:50	<--	ajnul0 (~ajnul0@ip5f5af6fa.dynamic.kabel-deutschland.de) has quit (Ping timeout: 272 seconds)
2020-05-23 06:16:53	<--	Rootsudo (~rootsudo@unaffiliated/rootsudo) has quit (Quit: Textual IRC Client: www.textualapp.com)
2020-05-23 06:17:04	ChrisWarrick	Seirdy: consider using attrs instead of dataclasses
2020-05-23 06:17:10	Seirdy	im trying to support pypy which is way faster at running weestats on machines with few cpu threads.
2020-05-23 06:17:14	-->	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has joined #python
2020-05-23 06:17:37	Seirdy	ChrisWarrick: but i like that with the latest cpython there are no external deps; dataclasses does what i need and more.
2020-05-23 06:17:56	davidsong	maybe its __repr__ is an empty string and it evaluates to False, but it 'is not None'
2020-05-23 06:17:56	_habnabit	wow, cached_property is way more complex than pyramid's reify and still isn't as good
2020-05-23 06:18:23	_habnabit	https://docs.pylonsproject.org/projects/pyramid/en/latest/api/decorator.html
2020-05-23 06:18:34	Seirdy	is https://pypi.org/project/cached-property/ any different from https://docs.python.org/3/library/functools.html#functools.cached_property
2020-05-23 06:19:03	_habnabit	Seirdy, i'd use reify instead
2020-05-23 06:19:13	Seirdy	_habnabit: is that in the stdlib
2020-05-23 06:19:17	<--	wordsToLiveBy (~wordsToLi@unaffiliated/wordstoliveby) has quit (Quit: (( _ _ ))..zzzZZ)
2020-05-23 06:19:38	_habnabit	Seirdy, no, but i've often copy-pasted its source from pyramid if i'm not already using pyramid
2020-05-23 06:20:05	<--	christoph_ (~christoph@37.209.46.140) has quit (Remote host closed the connection)
2020-05-23 06:20:12	Seirdy	_habnabit: i kind of want weestats to be small. at one point i even considered making it a single file that you could just drop into $PATH but it got big.
2020-05-23 06:20:23	-->	christoph_ (~christoph@37.209.46.140) has joined #python
2020-05-23 06:20:37	_habnabit	Seirdy, its source is tiny; the docstring is longer than the implementation https://docs.pylonsproject.org/projects/pyramid/en/latest/_modules/pyramid/decorator.html#reify
2020-05-23 06:20:39	Seirdy	i mean, its predecessor was a single-file shell script that you chould just curl into shell
2020-05-23 06:20:51	Seirdy	hmm lemme take a look
2020-05-23 06:21:03	-->	zahlman (~zahlman@toroon4432w-lp130-10-70-26-87-115.dsl.bell.ca) has joined #python
2020-05-23 06:21:20	<--	nbro (~nbro@2a02:aa13:3142:3100:bcd2:9dda:8b02:aaa) has quit (Remote host closed the connection)
2020-05-23 06:21:36	-->	nbro (~nbro@2a02:aa13:3142:3100:89c9:decf:9f42:c52c) has joined #python
2020-05-23 06:21:37	<--	dinis (~root@217.136.27.77.dynamic.reverse-mundo-r.com) has quit (Ping timeout: 256 seconds)
2020-05-23 06:21:56	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 06:21:58	Seirdy	oh that's hella simple
2020-05-23 06:22:29	_habnabit	Seirdy, easy enough to add the attribution to your LICENSE too
2020-05-23 06:23:16	Seirdy	so why is cached_property (https://github.com/python/cpython/blob/3.8/Lib/functools.py#L931) like 10 times bigger?
2020-05-23 06:23:21	_habnabit	Seirdy, i have no idea!
2020-05-23 06:23:28	Seirdy	it seems to be doing a lot of checks under the hood
2020-05-23 06:23:30	-->	CoolerZ (~coolerext@202.83.42.165) has joined #python
2020-05-23 06:23:38	Seirdy	_habnabit: ooh, idea!
2020-05-23 06:23:44	Seirdy	oh, i misread
2020-05-23 06:23:51	Seirdy	misread "no" as "an" lol
2020-05-23 06:24:29	davidsong	ew. I think I prefer my cached_property. what does Pyramid's one look like
2020-05-23 06:24:37	davidsong	oh I see it
2020-05-23 06:24:40	-->	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has joined #python
2020-05-23 06:24:52	Seirdy	it's literally 9 lines of code
2020-05-23 06:25:02	-->	hussar (~hussar@modemcable027.157-202-24.mc.videotron.ca) has joined #python
2020-05-23 06:25:06	-->	wordsToLiveBy (~wordsToLi@unaffiliated/wordstoliveby) has joined #python
2020-05-23 06:25:17	--	gavlee_ is now known as gavlee
2020-05-23 06:25:24	<--	bilb_ono (~alexmarsh@ip70-185-130-174.sb.sd.cox.net) has quit (Quit: bilb_ono)
2020-05-23 06:25:24	davidsong	oh wow reify looks good. I like it
2020-05-23 06:25:33	-->	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2020-05-23 06:25:38	-->	theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) has joined #python
2020-05-23 06:25:40	Seirdy	so how would i provide attribution for reify?
2020-05-23 06:25:42	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 06:25:42	davidsong	mine would be slower I guess
2020-05-23 06:26:00	Seirdy	assuming i just paste it in without the doctest
2020-05-23 06:26:24	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 240 seconds)
2020-05-23 06:26:27	_habnabit	Seirdy, https://github.com/habnabit/passacre/blob/master/COPYING#L143-L183
2020-05-23 06:26:31	Seirdy	weestats is AGPL (cuz i might use it in a web service for channels that want to take part)
2020-05-23 06:27:04	<--	CoolerY (~coolerext@202.83.42.165) has quit (Ping timeout: 260 seconds)
2020-05-23 06:27:13	ChrisWarrick	Seirdy: are you sure about this?
2020-05-23 06:27:25	ChrisWarrick	Seirdy: many people avoid AGPL software
2020-05-23 06:27:40	davidsong	reify is probably small enough to argue it's not got copyright protection, but novel enough to argue that it does
2020-05-23 06:28:00	 *	CrtxReavr prefers functionality over software license zealousy.
2020-05-23 06:28:14	Seirdy	ChrisWarrick: i mean with GPL3 it could be provided as SASS if i end up making the bespoke web service
2020-05-23 06:28:44	Seirdy	and FOSS served as SASS without sharing backend/unminified isn't any different from proprietary
2020-05-23 06:28:49	davidsong	the freedom to abuse users is a very valid freedom, whether you want to enable that is a matter of ethics and personal politics
2020-05-23 06:29:03	-->	padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) has joined #python
2020-05-23 06:29:23	--	Skeer is now known as Skeer_Away
2020-05-23 06:29:24	davidsong	I personally care more about computers than people, so I tend towards the WTFPL, but I respect rms
2020-05-23 06:29:29	-->	_gobostone (~Ace@174-16-170-244.hlrn.qwest.net) has joined #python
2020-05-23 06:29:31	Seirdy	davidsong: user freedom != developer freedom. maximizing the former often means limiting the latter. case in point is what i described.
2020-05-23 06:29:53	<--	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 240 seconds)
2020-05-23 06:30:16	Seirdy	licensee/licensor is probably a better division than user/developer
2020-05-23 06:30:20	<--	gobostone (~Ace@174-16-166-80.hlrn.qwest.net) has quit (Ping timeout: 260 seconds)
2020-05-23 06:30:26	Seirdy	or user/licensor
2020-05-23 06:30:48	_habnabit	davidsong, wtfpl unfortunately lacks an attribution clause so it's not very useful in practice compared to unlicense or cc0
2020-05-23 06:30:49	-->	carljm (~carljm@django/moderator/carljm) has joined #python
2020-05-23 06:30:53	davidsong	Seirdy: yeah I think history will be on your side eventually. yeah developer freedom usually equals the power of companies that hire the developers, and that power is power over everyone else
2020-05-23 06:31:34	davidsong	_habnabit: why would I care about attribution? I usually say "wtfpl with one additional clause: don't blame me"
2020-05-23 06:31:42	<--	carljm (~carljm@django/moderator/carljm) has quit (Client Quit)
2020-05-23 06:31:43	Seirdy	i mean if you only plan on making FOSS then AGPL shouldn't be a problem for you.
2020-05-23 06:31:56	Seirdy	davidsong: WTFPL has a "no warranty" disclaimer iirc lemme check
2020-05-23 06:31:56	_habnabit	davidsong, errrrr i entirely flubbed that
2020-05-23 06:32:07	_habnabit	davidsong, i meant it has no warranty disclaimer clause
2020-05-23 06:32:14	davidsong	ah I see yeah I add the warranty clause myself
2020-05-23 06:32:24	<--	veevax (~veevax@212-198-32-77.rev.numericable.fr) has quit (Quit: Leaving.)
2020-05-23 06:32:30	_habnabit	davidsong, at that point i'd just use an established license tho
2020-05-23 06:32:42	altendky	yay, take a license that people don't want to deal with and customize it to make it even harder to use...  :|
2020-05-23 06:32:45	Seirdy	davidsong: wait no it doesn't nvm
2020-05-23 06:34:01	davidsong	it's an implied statement about maximal freedom, in fun projects it's often more important to have fun than be practical
2020-05-23 06:34:39	<--	christoph_ (~christoph@37.209.46.140) has quit (Ping timeout: 256 seconds)
2020-05-23 06:34:47	<--	methyl_ (~methyl@170.130.139.91) has quit (Read error: Connection reset by peer)
2020-05-23 06:35:30	Seirdy	davidsong: i'd rather use CC0 for pubdom, ISC for permissive, Apache for large permissive projects, (A)GPL for copyleft, and the Good Luck With That license for half-finished personal projects i sleep-typed in a flight that you should absolutely use in mission-critical production environments.
2020-05-23 06:36:15	Seirdy	https://github.com/me-shaon/GLWTPL <- best license
2020-05-23 06:36:31	<--	MmeQuignon (~matthieu@2a01:e0a:1ab:f090:515a:340d:1125:dd60) has quit (Ping timeout: 260 seconds)
2020-05-23 06:36:35	tpr	please think about the lawyers, jslint had some "funny" do no evil thing in place which caused some gray hairs in the past..
2020-05-23 06:36:54	tpr	it's better to use well known licenses instead of doing something like that
2020-05-23 06:37:02	Seirdy	tpr: the point of the GLWTPL is that software shouldn't be used by the kind of orgs that have a legal dept
2020-05-23 06:37:04	davidsong	lol cool license
2020-05-23 06:37:12	-->	wyclif (~daniel@unaffiliated/wyclif) has joined #python
2020-05-23 06:37:23	davidsong	yeah same with the wtfpl
2020-05-23 06:38:38	<--	roadie (~user@2a02:8108:ec0:1427:499c:85e9:15a0:ac7c) has quit (Ping timeout: 272 seconds)
2020-05-23 07:30:05	--	irc: disconnected from server
2020-05-23 07:30:32	-->	spamgaga (~w33chat@gateway/tor-sasl/spamgaga) has joined #python
2020-05-23 07:30:32	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://bpaste.net/+python | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-uk #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu"
2020-05-23 07:30:32	--	Topic set by papna on Thu, 26 Dec 2019 10:09:25
2020-05-23 07:30:33	--	Channel #python: 1870 nicks (0 ops, 0 voices, 1870 normals)
2020-05-23 07:30:35	--	Channel created on Sun, 26 Nov 2006 13:42:41
2020-05-23 07:30:35	bjs	CoolerZ: I mean you can just google or go to -offtopic and I'll explain,  they're definitely not Python code
2020-05-23 07:31:11	_habnabit	CDuv, usually i make an entry point.. you put in your pyproject.toml or equivalent the name of the binary you want to call it and what python function to run
2020-05-23 07:32:06	<--	greedom (~greedom@2001:16b8:2ed4:3100:8982:7384:9a37:acb3) has quit (Quit: Konversation terminated!)
2020-05-23 07:32:22	Brad73	do python debuggers also use ptrace or is there an equivalent?
2020-05-23 07:32:33	_habnabit	Brad73, sys.settrace
2020-05-23 07:32:48	bjs	Brad73: Python is very high-level and provides a way to trace through execution of a Python program (see trace functions, aka sys.settrace)
2020-05-23 07:32:57	bjs	Brad73: they don't need to play the tricks that e.g. GDB does :)
2020-05-23 07:33:48	CoolerZ	bjs, wouldn't the fact that the memory is writeable make it so that you lose any performance benefits because of locking?
2020-05-23 07:33:56	bjs	CoolerZ: I don't know what you mean
2020-05-23 07:34:31	CoolerZ	if the memory is read only then it doesn't have to worry about the instructions changing
2020-05-23 07:34:55	bjs	CoolerZ: well,  no.  But you can't lock the instructions :)
2020-05-23 07:34:57	CoolerZ	if it is writeable then the instructions might change and you need to have locking
2020-05-23 07:35:22	<--	Dauthiwarlord (~Dauthiwar@189.172.73.242) has quit (Ping timeout: 256 seconds)
2020-05-23 07:35:30	CoolerZ	to avoid race conditions where you are reading instructions in the middle of them being changed
2020-05-23 07:35:47	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined #python
2020-05-23 07:36:40	CoolerZ	also now your instruction can might become stale and you need to keep fetching
2020-05-23 07:36:50	-->	cgundersson (~christian@195.216.38.78) has joined #python
2020-05-23 07:36:51	CoolerZ	further degrading performance
2020-05-23 07:37:06	bjs	CoolerZ: heh,  you're getting close to why this is a terrible language feature that noone should use unless they need to.  But no,  you don't put locks around everything.
2020-05-23 07:37:14	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-05-23 07:37:22	CoolerZ	instruction cache*
2020-05-23 07:37:35	bjs	CoolerZ: you're now straying away from 'self-modifying' since you seem to be talking about concurrency and caches and things
2020-05-23 07:37:55	<--	lauxley (~lauxley@2a01:e35:2fd5:2700:bc21:a00c:b260:8b02) has quit (Remote host closed the connection)
2020-05-23 07:38:14	CoolerZ	bjs, well one of the main reasons to use self modifying code is for performance reasons
2020-05-23 07:38:15	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 07:38:20	_habnabit	is it???
2020-05-23 07:38:23	-->	Lord_of_Life_ (~Lord@unaffiliated/lord-of-life/x-0885362) has joined #python
2020-05-23 07:38:29	<--	lembron (~admin@unaffiliated/lembron) has left #python
2020-05-23 07:38:55	CoolerZ	_habnabit, well also as a virus/malicious program you might want to do this
2020-05-23 07:39:07	CoolerZ	https://en.wikipedia.org/wiki/Self-modifying_code#Usage
2020-05-23 07:39:09	bjs	CoolerZ: eh.  self-modifying code as you describe can maybe improve performance (by removing an "if" branch or a read of a pointer)
2020-05-23 07:39:44	<--	DravenX (~textual@ip72-200-192-87.ok.ok.cox.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2020-05-23 07:39:48	<--	katana (~hentai@unaffiliated/katana) has quit (Ping timeout: 272 seconds)
2020-05-23 07:39:55	bjs	which is what it's used for in JITs,  where you dynamically replace a jump table with new entries to new functions.  The only 'self-modifying' happens on exactly 1 instruction.  It's very subtle and hard to get right
2020-05-23 07:40:40	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2020-05-23 07:40:42	CoolerZ	"Because of the security implications of self-modifying code, all of the major operating systems are careful to remove such vulnerabilities as they become known"
2020-05-23 07:40:48	bjs	Yes
2020-05-23 07:40:58	<--	dethos (~dethos@213.190.211.160) has quit (Ping timeout: 256 seconds)
2020-05-23 07:41:14	CDuv	_habnabit, is you "entrypoint" approach related to this: https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html ?
2020-05-23 07:41:21	_habnabit	CDuv, it is that
2020-05-23 07:41:26	<--	bilb_ono (~alexmarsh@ip70-185-130-174.sb.sd.cox.net) has quit (Quit: bilb_ono)
2020-05-23 07:41:27	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Ping timeout: 265 seconds)
2020-05-23 07:41:31	_habnabit	CDuv, i normally use poetry to generate them
2020-05-23 07:41:31	--	Lord_of_Life_ is now known as Lord_of_Life
2020-05-23 07:41:44	<--	cgundersson (~christian@195.216.38.78) has quit (Ping timeout: 260 seconds)
2020-05-23 07:42:02	bjs	CoolerZ: I can guarantee you that (1) your O/S is doing it to load processes to run them,  (2) your browser is doing it in the way i describe in its JIT implementation and (3) GDB/ptrace is doing it when you use them.  Pretty much nowhere else does it,  and it's really not worth the effort to get right :)
2020-05-23 07:42:10	Brad73	In bash there is a bug where you self modify code and delete a line and you continue reading from the wrong spot. Does that happen in python?
2020-05-23 07:42:11	-->	ronin_anubis (~chrx@23-116-232-232.lightspeed.sntcca.sbcglobal.net) has joined #python
2020-05-23 07:42:20	_habnabit	Brad73, it does not
2020-05-23 07:42:22	Brad73	you can accidentally execute commented out code, etc
2020-05-23 07:42:32	CoolerZ	"A relatively portable way to bypass W^X is to create a file with all permissions, then map the file into memory twice." what?
2020-05-23 07:42:34	bjs	Brad73: Python does not read the file as it executes
2020-05-23 07:42:40	CoolerZ	how does that work?
2020-05-23 07:42:43	<--	nixjdm (~nixjdm@2605:a601:aa3e:e400:bc56:aa4e:4614:ea54) has quit (Ping timeout: 260 seconds)
2020-05-23 07:42:47	nedbat	Brad73: the whole file is compiled, then the bytecode is run
2020-05-23 07:43:02	_habnabit	Brad73, all the python implementations i'm aware of do one full read of the file before executing any of it
2020-05-23 07:43:23	bjs	CoolerZ: now you're asking questions that are totally not Python.  But it's what I said earlier,  you can have multiple addresses for the same bit of memory.
2020-05-23 07:43:23	<--	royal_screwup21 (522565dc@gateway/web/cgi-irc/kiwiirc.com/ip.82.37.101.220) has quit (Quit: Connection closed)
2020-05-23 07:43:28	-->	hackinghorn (~hackingho@unaffiliated/hackinghorn) has joined #python
2020-05-23 07:43:28	bjs	CoolerZ: with different protections
2020-05-23 07:43:46	CDuv	Thanks, it's the "guide" I was following but had yet reached the "execute you stuff" part. It's my first Python Package: I usually did some small scripts and put all my code in a few files and ran the "main" one using `python3 -m run.py` ;)
2020-05-23 07:43:50	bjs	CoolerZ: #python-offtopic now for random systems questions :)
2020-05-23 07:44:01	_habnabit	CDuv, -m doesn't take paths
2020-05-23 07:44:21	bjs	nedbat: but I did learn that traceback printing *does* read the file again
2020-05-23 07:44:22	CDuv	Right s/-m //
2020-05-23 07:45:03	Brad73	are we talking about using language functionality to recompile code or editing code in some way other than writing to a file?
2020-05-23 07:45:05	bjs	nedbat: which implies it doesn't even keep the original source about :)
2020-05-23 07:45:11	bjs	Brad73: yes
2020-05-23 07:45:20	ronin_anubis	Hi, I'm trying to use threading in python3. If I do, for t in thread_list: t.join() . Does it halt at the first thread that didnt't complete or it keeps rotating? Howe can I use threading module to do what concurrent.futures as_completed() does?
2020-05-23 07:45:31	<--	ogo (~ogo@gateway/tor-sasl/ogo) has quit (Quit: Leaving)
2020-05-23 07:45:43	bjs	Brad73: in most languages once the program starts running the file is useless and changes to it don't affect anything
2020-05-23 07:45:44	nedbat	bjs: right. if the pyc is there, it doesn't need the source
2020-05-23 07:46:02	_habnabit	ronin_anubis, yes, .join() blocks until the thread in question has exited
2020-05-23 07:46:05	Brad73	that's why the cool kids use bash 8)
2020-05-23 07:46:06	bjs	nedbat: I have no idea what happens with a traceback when there's only a pyc now you mention it
2020-05-23 07:46:09	_habnabit	ronin_anubis, why don't you use concurrent.futures?
2020-05-23 07:46:22	-->	gvsa123 (~gvsa123@d50-93-31-58.abhsia.telus.net) has joined #python
2020-05-23 07:46:22	nedbat	bjs: i think it just doesn't have the source lines
2020-05-23 07:46:29	_habnabit	bjs, nedbat is right
2020-05-23 07:46:42	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 07:46:51	bjs	fair enough
2020-05-23 07:47:01	bjs	seems sub-optimal as far as error reporting goes
2020-05-23 07:47:09	_habnabit	indeed
2020-05-23 07:47:22	<--	Jerrynicki (~niklas@p200300f5770318003f16fbda89eb7469.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2020-05-23 07:48:48	Brad73	how much of this previous discussion was python implementation dependent?
2020-05-23 07:49:11	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2020-05-23 07:49:14	SnoopJeDi	all of it
2020-05-23 07:49:37	ronin_anubis	_habnabit, I can't find a way to name each of the threads in the thread pool executor if I use concurrent.futures
2020-05-23 07:49:43	nedbat	Brad73: you *could* have a python implementation that read the file as it went, but none do that.
2020-05-23 07:49:57	_habnabit	ronin_anubis, does that matter/
2020-05-23 07:49:59	SnoopJeDi	There's got to be one out there, but nothing anybody uses in production code
2020-05-23 07:50:11	<--	tasse (~tasse@55d42d3b.access.ecotel.net) has quit (Ping timeout: 264 seconds)
2020-05-23 07:50:45	ronin_anubis	_habnabit, might be nice when debugging, I'm very concerned about debugging threads when the time comes.
2020-05-23 07:50:49	<--	nbro (~nbro@2a02:aa13:3142:3100:89c9:decf:9f42:c52c) has quit
2020-05-23 07:51:12	_habnabit	ronin_anubis, the name doesn't tell you much about how the work is distributed
2020-05-23 07:51:35	-->	ffs (uid158779@gateway/web/irccloud.com/x-ocfsqfolmzcjlvrg) has joined #python
2020-05-23 07:51:56	-->	tasse (~tasse@55d41d48.access.ecotel.net) has joined #python
2020-05-23 07:51:56	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 07:52:11	ronin_anubis	_habnabit, it tells which thread is causing a problem, esp. if using logging module I guess.
2020-05-23 07:52:36	-->	recursive_curse (~miller@S0106f81d0f6109e3.wp.shawcable.net) has joined #python
2020-05-23 07:52:50	_habnabit	ronin_anubis, sure, but in a thread pool, which thread gets what work is practically random
2020-05-23 07:53:56	_habnabit	ronin_anubis, the threads having names doesn't help identify anything; each thread has the same code before 'execute a job', and the function being run is nondeterministic
2020-05-23 07:54:03	-->	selimcan (~selimcan@89.232.118.200) has joined #python
2020-05-23 07:54:54	-->	czer0 (~toaster@170.199.140.177) has joined #python
2020-05-23 07:54:57	ronin_anubis	_habnabit, Ah, in my case, I wanted the thread name to be the file name that the thread will process, so that I can tell which file crashed or so.
2020-05-23 07:55:00	-->	nixjdm (~nixjdm@2605:a601:aa3e:e400:5432:f128:58d:3003) has joined #python
2020-05-23 07:55:23	_habnabit	ronin_anubis, that's not a thread pool then
2020-05-23 07:55:29	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 07:55:38	<--	YaknotiS (~YaknotiS@cpc91250-cmbg18-2-0-cust68.5-4.cable.virginm.net) has quit (Ping timeout: 272 seconds)
2020-05-23 07:55:53	_habnabit	ronin_anubis, there's better ways of reporting that kind of context
2020-05-23 07:55:53	-->	fstd_ (~fstd@unaffiliated/fisted) has joined #python
2020-05-23 07:56:04	bjs	Brad73: the most common implementation of Python does as nedbat describes;  reading the file and generating bytecode then executing that.  Not all do that though,  but it is (today) a very common way of implementing a programming language.
2020-05-23 07:56:13	<--	kish` (~oracle@gateway/tor-sasl/oracle) has quit (Ping timeout: 240 seconds)
2020-05-23 07:56:15	-->	aasutosh (~aa@27.34.68.84) has joined #python
2020-05-23 07:56:21	-->	drincruz (~adriancru@ool-44c7491c.dyn.optonline.net) has joined #python
2020-05-23 07:56:54	<--	ColdKeyboard (~ColdKeybo@unaffiliated/coldkeyboard) has quit (Ping timeout: 272 seconds)
2020-05-23 07:56:56	-->	DeadTOm (~deadtom@2001:4b98:dc0:41:216:3eff:fe58:44d0) has joined #python
2020-05-23 07:56:59	-->	ralof (~ralof@x4d070b47.dyn.telefonica.de) has joined #python
2020-05-23 07:57:02	-->	kish` (~oracle@gateway/tor-sasl/oracle) has joined #python
2020-05-23 07:57:03	<--	blallo (~Blallo@104.167.103.80) has quit (Ping timeout: 256 seconds)
2020-05-23 07:57:22	-->	dskullz (~dskull@unaffiliated/daynaskully) has joined #python
2020-05-23 07:57:53	<--	logex (~logex@64.235.98.186) has quit (Ping timeout: 265 seconds)
2020-05-23 07:57:53	<--	dskull (~dskull@unaffiliated/daynaskully) has quit (Ping timeout: 265 seconds)
2020-05-23 07:58:10	<--	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has quit (Ping timeout: 272 seconds)
2020-05-23 07:58:10	<--	Petrushka (~devcon@deathstar.devconproductions.org) has quit (Ping timeout: 272 seconds)
2020-05-23 07:58:10	<--	bjb (~bjb@sourcerer.ca) has quit (Ping timeout: 272 seconds)
2020-05-23 07:58:22	<--	^Zer0^ (~toaster@170.199.140.177) has quit (Ping timeout: 265 seconds)
2020-05-23 07:58:35	<--	cryzed (~cryzed@185.253.97.6) has quit (Read error: Connection reset by peer)
2020-05-23 07:58:48	<--	recursive_curse (~miller@S0106f81d0f6109e3.wp.shawcable.net) has quit (Ping timeout: 272 seconds)
2020-05-23 07:58:48	<--	z3r0fox (~z3r0fox@184.75.214.163) has quit (Ping timeout: 272 seconds)
2020-05-23 07:58:50	Brad73	how does python handle huge files? Read/compile the entire file even if you only need one function from it?
2020-05-23 07:58:50	--	dskullz is now known as dskull
2020-05-23 07:59:02	-->	bjb (~bjb@sourcerer.ca) has joined #python
2020-05-23 07:59:06	Brad73	python meaning cpython/pypy
2020-05-23 07:59:13	ronin_anubis	_habnabit, so for threading module I can't mimic as_completed(), and in thread pool, I can't set the thread name. Sure, what other ways to report that context?
2020-05-23 07:59:14	SnoopJeDi	Brad73, yep
2020-05-23 07:59:29	<--	Nightwing52 (~Thunderbi@71-221-252-191.cdrr.qwest.net) has quit (Quit: Later!)
2020-05-23 07:59:33	<--	bomb-on (~bomb-on@139-142-17-89.fiber.hringdu.is) has quit (Quit: SO LONG, SUCKERS!)
2020-05-23 07:59:49	FunkyBob	Brad73: huge course files are considerd a code smell
2020-05-23 07:59:52	FunkyBob	source files ,even
2020-05-23 08:00:14	<--	ralof_ (~ralof@x4d07081b.dyn.telefonica.de) has quit (Ping timeout: 256 seconds)
2020-05-23 08:00:17	<--	plastico (~plastico@2001:8a0:de6b:1a00:4883:3805:f4f1:6b81) has quit (Quit: WeeChat 2.8)
2020-05-23 08:00:17	<--	puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) has quit (Read error: Connection reset by peer)
2020-05-23 08:00:18	<--	fstd (~fstd@unaffiliated/fisted) has quit (Ping timeout: 265 seconds)
2020-05-23 08:00:18	--	fstd_ is now known as fstd
2020-05-23 08:00:22	Brad73	let's just say huge files are the least of my worries :)
2020-05-23 08:00:26	-->	fuho (~fuho@ool-4575ae42.dyn.optonline.net) has joined #python
2020-05-23 08:00:35	-->	blallo (~Blallo@104.167.103.80) has joined #python
2020-05-23 08:01:00	-->	UpvoteClub (~UpvoteClu@125-237-192-191-fibre.sparkbb.co.nz) has joined #python
2020-05-23 08:02:07	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2020-05-23 08:02:16	<--	ralof (~ralof@x4d070b47.dyn.telefonica.de) has quit (Ping timeout: 260 seconds)
2020-05-23 08:02:30	_habnabit	ronin_anubis, usually i use eliot for establishing these contexts and then any sort of logging or error reporting will include that
2020-05-23 08:02:35	-->	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has joined #python
2020-05-23 08:03:00	-->	fmcs (~fmcs@ec2-35-176-207-141.eu-west-2.compute.amazonaws.com) has joined #python
2020-05-23 08:04:10	<--	gil1701 (~Thunderbi@148.103.118.4) has quit (Ping timeout: 265 seconds)
2020-05-23 08:04:10	ronin_anubis	_habnabit, thanks! will check it out!
2020-05-23 08:05:47	<--	markcerv (~markcerv@c-24-5-22-21.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2020-05-23 08:05:54	<--	Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) has quit (Ping timeout: 256 seconds)
2020-05-23 08:05:58	<--	gdarko (~sparky@77.29.52.139) has quit (Ping timeout: 256 seconds)
2020-05-23 08:07:49	<--	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has quit (Ping timeout: 256 seconds)
2020-05-23 08:08:22	<--	wildtrees (wildtrees@gateway/vpn/protonvpn/wildtrees) has quit (Quit: Leaving)
2020-05-23 08:09:05	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2020-05-23 08:09:25	<--	jalalsfs (~jalalsfs@unaffiliated/jalalsfs) has quit (Remote host closed the connection)
2020-05-23 08:09:34	<--	blallo (~Blallo@104.167.103.80) has quit (Ping timeout: 272 seconds)
2020-05-23 08:09:58	<--	bjb (~bjb@sourcerer.ca) has quit (Ping timeout: 265 seconds)
2020-05-23 08:11:25	-->	bjb (~bjb@sourcerer.ca) has joined #python
2020-05-23 08:12:30	-->	swa_work (~swa_work@dhcp-108-168-64-102.cable.user.start.ca) has joined #python
2020-05-23 08:12:55	<--	_alguien_ (~MA2G1@62.117.236.175.dyn.user.ono.com) has quit (Quit: Leaving)
2020-05-23 08:12:57	<--	CDuv (~CDuv@82-65-30-70.subs.proxad.net) has quit (Quit: Leaving)
2020-05-23 08:13:20	-->	blallo (~Blallo@104.167.103.80) has joined #python
2020-05-23 08:13:50	<--	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has quit (Ping timeout: 265 seconds)
2020-05-23 08:14:50	<--	Catatronic (~corrupt@unaffiliated/catatronic) has quit (Ping timeout: 258 seconds)
2020-05-23 08:15:55	<--	fmcs (~fmcs@ec2-35-176-207-141.eu-west-2.compute.amazonaws.com) has quit (Quit: Bye)
2020-05-23 08:17:15	-->	fmcs (~fmcs@ec2-35-176-207-141.eu-west-2.compute.amazonaws.com) has joined #python
2020-05-23 08:17:54	<--	artistsvoid (~artistsvo@unaffiliated/artistsvoid) has quit (Ping timeout: 258 seconds)
2020-05-23 08:18:28	<--	truthr (~truthr@unaffiliated/truthr) has quit (Quit: ##politics-uncensored   https://www.youtube.com/watch?v=VXOFHr6tGMQ)
2020-05-23 08:18:32	-->	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2020-05-23 08:19:41	<--	selimcan (~selimcan@89.232.118.200) has quit (Ping timeout: 260 seconds)
2020-05-23 08:20:15	-->	Death916_ (~Death916@unaffiliated/death916) has joined #python
2020-05-23 08:20:28	<--	ronin_anubis (~chrx@23-116-232-232.lightspeed.sntcca.sbcglobal.net) has quit (Quit: Leaving)
2020-05-23 08:21:11	-->	FNetSec (~FNetSec@ec2-35-176-207-141.eu-west-2.compute.amazonaws.com) has joined #python
2020-05-23 08:21:54	<--	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has quit (Read error: Connection reset by peer)
2020-05-23 08:22:53	<--	cnsvc_ (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 240 seconds)
2020-05-23 08:22:57	-->	Catatronic (~corrupt@unaffiliated/catatronic) has joined #python
2020-05-23 08:23:24	<--	aesthe (Aesthe@gateway/vpn/privateinternetaccess/aesthe) has quit (Ping timeout: 240 seconds)
2020-05-23 08:24:42	-->	tiin57 (~tiin57@ec2-3-94-63-186.compute-1.amazonaws.com) has joined #python
2020-05-23 08:25:14	<--	oncall-pokemon (uid134758@gateway/web/irccloud.com/x-sjhuxtzxyqwfffac) has quit (Quit: Connection closed for inactivity)
2020-05-23 08:27:02	-->	rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) has joined #python
2020-05-23 08:29:29	<--	palasso (~palasso@unaffiliated/palasso) has quit (Ping timeout: 272 seconds)
2020-05-23 08:30:06	-->	slackcals (~slackcals@unaffiliated/slackcals) has joined #python
2020-05-23 08:31:22	-->	phasetwo (~phasetwo@c-67-168-62-122.hsd1.wa.comcast.net) has joined #python
2020-05-23 08:31:42	-->	roadie (~user@2a02:8108:ec0:1427:a5b8:b8f0:f0ee:1b1e) has joined #python
2020-05-23 08:31:53	-->	selimcan (~selimcan@178.162.208.155) has joined #python
2020-05-23 17:57:22	--	irc: disconnected from server
