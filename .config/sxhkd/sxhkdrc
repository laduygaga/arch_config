#
# wm independent hotkeys
#

# terminal emulator
alt + Return
	urxvt

# program launcher
super + d
	dmenu_run

# make sxhkd reload its configuration files:
alt + shift + c
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
alt +shift + {e,r}
	bspc {quit,wm -r}

# close and kill
alt + shift + q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
alt + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
alt + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
alt + {f,shift + f,shift+space,t}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
alt + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
alt + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
alt + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
alt + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
alt + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
alt + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
alt + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
alt +  ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super +shift + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {h,j,k,l}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# ncmpcpp/mpc
alt + F10 
    mpc toggle
alt + F11
    mpc next
alt + F9
    mpc prev
# qutebrowser
super + q
    qutebrowser
# ibus
super + i
    ibus-daemon -d --xim
super + shift + i
    ibus exit
# pavucontrol
super + p
    pavucontrol
# Pulse Audio controls
XF86AudioRaiseVolume 
    pactl set-sink-volume 0 +5%
XF86AudioLowerVolume
    pactl set-sink-volume 0 -5%
XF86AudioMute 
    pactl set-sink-mute 0 toggle
# Screeen shoot with scrot
Print 
    scrot ~/Pictures/ScreenShots/%b%d:%H%M%S.png
# ncmpcpp
super + n
    bspc desktop --focus ^8 && urxvt -e ncmpcpp
# zathura
super + z
    zathura
# bspc desktop --focus ^9 && 
# goldendict
super + g
    goldendict
# bspc desktop --focus ^3 && 
# ranger
super + r
    urxvt -e ranger
# toggle touchpad
alt + F8
    touchpad_toggle.sh
# i3lock
XF86ScreenSaver
    i3lock -i /home/duy/Pictures/gnu_linux.png
# scratchpad
alt + shift + minus
	id=$(bspc query -N -n "focused");\
	if [ -n "$id" ];then \
		xprop -id $id -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
		bspc node -t "floating";\
		xdotool windowunmap $id;\
	fi

alt + minus
	i=$(bspc query -N -n "focused.floating");\
	if [ -n "$i" ];then \
		xprop -id $i -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
		xdotool windowunmap $i;\
	else;\
		i=$(for w in $(xwininfo -root -children | grep -e "^\s*0x[0-9a-f]\+" -o);do \
			t=$(xprop -id $w _SCRATCH | grep ' = \(.*\)');\
			if [ -n "$t" ];then \
				echo $t $w;\
			fi;\
		done|sort -n|head -n1|cut -d" " -f 5);\
		if [ -n "$i" ];then \
			xprop -id $i -remove _SCRATCH;\
			bspc rule -a \* state=floating center=on --one-shot;\
			xdotool windowmap $i;\
			bspc node -f $i;\
		fi;\
	fi
# restart polybar
alt + shift + b
    polybar -r example > /dev/null 2>&1
